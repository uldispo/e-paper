ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"AB1805.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/AB1805.c"
  18              		.section	.text.SPI1_SendByte,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	SPI1_SendByte:
  25              	.LFB623:
   1:Core/Src/AB1805.c **** #include "AB1805.h"
   2:Core/Src/AB1805.c **** #include "printf.h"
   3:Core/Src/AB1805.c **** #include "stm32u0xx_ll_spi.h"
   4:Core/Src/AB1805.c **** #include "main.h"
   5:Core/Src/AB1805.c **** 
   6:Core/Src/AB1805.c **** // inline static uint8_t SPI1_SendByte(uint8_t data);
   7:Core/Src/AB1805.c **** // inline static uint8_t SPI1_Readbyte(uint8_t reg_addr);
   8:Core/Src/AB1805.c **** 
   9:Core/Src/AB1805.c **** void spi_select_slave(bool select) // 1 = high, 0 = low
  10:Core/Src/AB1805.c **** {
  11:Core/Src/AB1805.c ****   if (select)
  12:Core/Src/AB1805.c ****   {
  13:Core/Src/AB1805.c ****     RTC_H();
  14:Core/Src/AB1805.c ****   }
  15:Core/Src/AB1805.c ****   else
  16:Core/Src/AB1805.c ****   {
  17:Core/Src/AB1805.c ****     RTC_L();
  18:Core/Src/AB1805.c ****   }
  19:Core/Src/AB1805.c **** }
  20:Core/Src/AB1805.c **** 
  21:Core/Src/AB1805.c **** uint8_t get_rtc_data(const uint8_t rtc_register, const uint8_t register_mask)
  22:Core/Src/AB1805.c **** {
  23:Core/Src/AB1805.c ****   return (read_rtc_register(rtc_register) & register_mask);
  24:Core/Src/AB1805.c **** }
  25:Core/Src/AB1805.c **** 
  26:Core/Src/AB1805.c **** uint8_t get_hundredths(void)
  27:Core/Src/AB1805.c **** {
  28:Core/Src/AB1805.c ****   return get_rtc_data(HUNDRETH_REGISTER, 0xFF);
  29:Core/Src/AB1805.c **** }
  30:Core/Src/AB1805.c **** 
  31:Core/Src/AB1805.c **** uint8_t get_second(void)
  32:Core/Src/AB1805.c **** {
  33:Core/Src/AB1805.c ****   return get_rtc_data(SECOND_REGISTER, SECOND_MASK);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 2


  34:Core/Src/AB1805.c **** }
  35:Core/Src/AB1805.c **** 
  36:Core/Src/AB1805.c **** uint8_t get_minute(void)
  37:Core/Src/AB1805.c **** {
  38:Core/Src/AB1805.c ****   return get_rtc_data(MINUTE_REGISTER, MINUTE_MASK);
  39:Core/Src/AB1805.c **** }
  40:Core/Src/AB1805.c **** 
  41:Core/Src/AB1805.c **** uint8_t get_hour(void)
  42:Core/Src/AB1805.c **** {
  43:Core/Src/AB1805.c ****   return get_rtc_data(HOUR_REGISTER, HOUR_24_MASK);
  44:Core/Src/AB1805.c **** }
  45:Core/Src/AB1805.c **** 
  46:Core/Src/AB1805.c **** uint8_t get_weekday(void)
  47:Core/Src/AB1805.c **** {
  48:Core/Src/AB1805.c ****   return get_rtc_data(WEEKDAY_REGISTER, DAY_MASK);
  49:Core/Src/AB1805.c **** }
  50:Core/Src/AB1805.c **** 
  51:Core/Src/AB1805.c **** uint8_t get_date(void)
  52:Core/Src/AB1805.c **** {
  53:Core/Src/AB1805.c ****   return get_rtc_data(DATE_REGISTER, DATE_MASK);
  54:Core/Src/AB1805.c **** }
  55:Core/Src/AB1805.c **** 
  56:Core/Src/AB1805.c **** uint8_t get_month(void)
  57:Core/Src/AB1805.c **** {
  58:Core/Src/AB1805.c ****   return get_rtc_data(MONTH_REGISTER, MONTH_MASK);
  59:Core/Src/AB1805.c **** }
  60:Core/Src/AB1805.c **** 
  61:Core/Src/AB1805.c **** uint8_t get_year(void)
  62:Core/Src/AB1805.c **** {
  63:Core/Src/AB1805.c ****   return get_rtc_data(YEAR_REGISTER, YEAR_MASK);
  64:Core/Src/AB1805.c **** }
  65:Core/Src/AB1805.c **** 
  66:Core/Src/AB1805.c **** void get_datetime(void)
  67:Core/Src/AB1805.c **** {
  68:Core/Src/AB1805.c ****   // rtc_check_valid();
  69:Core/Src/AB1805.c ****   //_hundredths = get_hundredths();
  70:Core/Src/AB1805.c ****   _second = get_second();
  71:Core/Src/AB1805.c ****   _minute = get_minute();
  72:Core/Src/AB1805.c ****   _hour = get_hour();
  73:Core/Src/AB1805.c ****   _weekday = get_weekday();
  74:Core/Src/AB1805.c ****   _date = get_date();
  75:Core/Src/AB1805.c ****   _month = get_month();
  76:Core/Src/AB1805.c ****   _year = get_year();
  77:Core/Src/AB1805.c **** }
  78:Core/Src/AB1805.c **** 
  79:Core/Src/AB1805.c **** uint8_t get_second_alarm(void)
  80:Core/Src/AB1805.c **** {
  81:Core/Src/AB1805.c ****   _alarm_second = get_rtc_data(SECOND_ALARM_REGISTER, SECOND_ALARM_MASK);
  82:Core/Src/AB1805.c ****   return _alarm_second;
  83:Core/Src/AB1805.c **** }
  84:Core/Src/AB1805.c **** 
  85:Core/Src/AB1805.c **** uint8_t get_minute_alarm(void)
  86:Core/Src/AB1805.c **** {
  87:Core/Src/AB1805.c ****   _alarm_minute = get_rtc_data(MINUTE_ALARM_REGISTER, MINUTE_ALARM_MASK);
  88:Core/Src/AB1805.c ****   return _alarm_minute;
  89:Core/Src/AB1805.c **** }
  90:Core/Src/AB1805.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 3


  91:Core/Src/AB1805.c **** uint8_t get_hour_alarm(void)
  92:Core/Src/AB1805.c **** {
  93:Core/Src/AB1805.c ****   _alarm_hour = get_rtc_data(HOUR_ALARM_REGISTER, HOUR_24_ALARM_MASK);
  94:Core/Src/AB1805.c ****   return _alarm_hour;
  95:Core/Src/AB1805.c **** }
  96:Core/Src/AB1805.c **** 
  97:Core/Src/AB1805.c **** uint8_t get_weekday_alarm(void)
  98:Core/Src/AB1805.c **** {
  99:Core/Src/AB1805.c ****   _alarm_weekday = get_rtc_data(WEEKDAY_ALARM_REGISTER, WEEKDAY_ALARM_MASK);
 100:Core/Src/AB1805.c ****   return _alarm_weekday;
 101:Core/Src/AB1805.c **** }
 102:Core/Src/AB1805.c **** 
 103:Core/Src/AB1805.c **** uint8_t get_date_alarm(void)
 104:Core/Src/AB1805.c **** {
 105:Core/Src/AB1805.c ****   _alarm_date = get_rtc_data(DATE_ALARM_REGISTER, DATE_ALARM_MASK);
 106:Core/Src/AB1805.c ****   return _alarm_date;
 107:Core/Src/AB1805.c **** }
 108:Core/Src/AB1805.c **** 
 109:Core/Src/AB1805.c **** uint8_t get_month_alarm(void)
 110:Core/Src/AB1805.c **** {
 111:Core/Src/AB1805.c ****   _alarm_month = get_rtc_data(MONTH_ALARM_REGISTER, MONTH_ALARM_MASK);
 112:Core/Src/AB1805.c ****   return _alarm_month;
 113:Core/Src/AB1805.c **** }
 114:Core/Src/AB1805.c **** 
 115:Core/Src/AB1805.c **** void set_second(const uint8_t value)
 116:Core/Src/AB1805.c **** {
 117:Core/Src/AB1805.c ****   _second = value % MAX_SECOND;
 118:Core/Src/AB1805.c ****   write_rtc_register(SECOND_REGISTER, _second);
 119:Core/Src/AB1805.c **** }
 120:Core/Src/AB1805.c **** 
 121:Core/Src/AB1805.c **** void set_minute(const uint8_t value)
 122:Core/Src/AB1805.c **** {
 123:Core/Src/AB1805.c ****   _minute = value % MAX_MINUTE;
 124:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_REGISTER, _minute);
 125:Core/Src/AB1805.c **** }
 126:Core/Src/AB1805.c **** 
 127:Core/Src/AB1805.c **** void set_hour(const uint8_t value)
 128:Core/Src/AB1805.c **** {
 129:Core/Src/AB1805.c ****   _hour = value % MAX_HOURS;
 130:Core/Src/AB1805.c ****   write_rtc_register(HOUR_REGISTER, _hour);
 131:Core/Src/AB1805.c **** }
 132:Core/Src/AB1805.c **** 
 133:Core/Src/AB1805.c **** void set_weekday(const uint8_t value)
 134:Core/Src/AB1805.c **** {
 135:Core/Src/AB1805.c ****   _weekday = value % MAX_DAY;
 136:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_REGISTER, _weekday);
 137:Core/Src/AB1805.c **** }
 138:Core/Src/AB1805.c **** 
 139:Core/Src/AB1805.c **** void set_date(const uint8_t value)
 140:Core/Src/AB1805.c **** {
 141:Core/Src/AB1805.c ****   _date = value % MAX_DATE;
 142:Core/Src/AB1805.c ****   write_rtc_register(DATE_REGISTER, _date);
 143:Core/Src/AB1805.c **** }
 144:Core/Src/AB1805.c **** 
 145:Core/Src/AB1805.c **** void set_month(const uint8_t value)
 146:Core/Src/AB1805.c **** {
 147:Core/Src/AB1805.c ****   _month = value % MAX_MONTH;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 4


 148:Core/Src/AB1805.c ****   write_rtc_register(MONTH_REGISTER, _month);
 149:Core/Src/AB1805.c **** }
 150:Core/Src/AB1805.c **** 
 151:Core/Src/AB1805.c **** void set_year(const uint8_t value)
 152:Core/Src/AB1805.c **** {
 153:Core/Src/AB1805.c ****   _year = value % MAX_YEAR;
 154:Core/Src/AB1805.c ****   write_rtc_register(YEAR_REGISTER, value);
 155:Core/Src/AB1805.c **** }
 156:Core/Src/AB1805.c **** 
 157:Core/Src/AB1805.c **** void set_datetime(uint8_t year, uint8_t month, uint8_t date, uint8_t weekday, uint8_t hour, uint8_t
 158:Core/Src/AB1805.c **** {
 159:Core/Src/AB1805.c ****   set_year(year);
 160:Core/Src/AB1805.c ****   set_month(month);
 161:Core/Src/AB1805.c ****   set_date(date);
 162:Core/Src/AB1805.c ****   set_weekday(weekday);
 163:Core/Src/AB1805.c ****   set_hour(hour);
 164:Core/Src/AB1805.c ****   set_minute(minutes);
 165:Core/Src/AB1805.c ****   set_second(seconds);
 166:Core/Src/AB1805.c **** }
 167:Core/Src/AB1805.c **** 
 168:Core/Src/AB1805.c **** void set_datetime_alarm_month(uint8_t month, uint8_t date, uint8_t hour, uint8_t minutes, uint8_t s
 169:Core/Src/AB1805.c **** {
 170:Core/Src/AB1805.c ****   set_month_alarm(month);
 171:Core/Src/AB1805.c ****   set_date_alarm(date);
 172:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 173:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 174:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 175:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_YEAR);
 176:Core/Src/AB1805.c **** }
 177:Core/Src/AB1805.c **** 
 178:Core/Src/AB1805.c **** void set_datetime_alarm_date(uint8_t date, uint8_t hour, uint8_t minutes, uint8_t seconds)
 179:Core/Src/AB1805.c **** {
 180:Core/Src/AB1805.c ****   set_date_alarm(date);
 181:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 182:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 183:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 184:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_MONTH);
 185:Core/Src/AB1805.c **** }
 186:Core/Src/AB1805.c **** 
 187:Core/Src/AB1805.c **** void set_week_alarm(uint8_t weekday, uint8_t hour, uint8_t minutes, uint8_t seconds)
 188:Core/Src/AB1805.c **** {
 189:Core/Src/AB1805.c ****   set_weekday_alarm(weekday);
 190:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 191:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 192:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 193:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_WEEK);
 194:Core/Src/AB1805.c **** }
 195:Core/Src/AB1805.c **** 
 196:Core/Src/AB1805.c **** void set_datetime_alarm_hour(uint8_t hour, uint8_t minutes, uint8_t seconds)
 197:Core/Src/AB1805.c **** {
 198:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 199:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 200:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 201:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_DAY);
 202:Core/Src/AB1805.c **** }
 203:Core/Src/AB1805.c **** 
 204:Core/Src/AB1805.c **** void set_datetime_alarm_minutes(uint8_t minutes, uint8_t seconds)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 5


 205:Core/Src/AB1805.c **** {
 206:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 207:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 208:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_HOUR);
 209:Core/Src/AB1805.c **** }
 210:Core/Src/AB1805.c **** 
 211:Core/Src/AB1805.c **** void set_datetime_alarm_seconds(uint8_t seconds)
 212:Core/Src/AB1805.c **** {
 213:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 214:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_MINUTE);
 215:Core/Src/AB1805.c **** }
 216:Core/Src/AB1805.c **** 
 217:Core/Src/AB1805.c **** void set_once_second_alarm(uint8_t hundredths)
 218:Core/Src/AB1805.c **** {
 219:Core/Src/AB1805.c ****   // set_second_alarm(seconds);
 220:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_SECOND);
 221:Core/Src/AB1805.c **** }
 222:Core/Src/AB1805.c **** 
 223:Core/Src/AB1805.c **** bool set_second_alarm(uint8_t value)
 224:Core/Src/AB1805.c **** {
 225:Core/Src/AB1805.c ****   _alarm_second = value % MAX_SECOND;
 226:Core/Src/AB1805.c ****   write_rtc_register(SECOND_ALARM_REGISTER, _alarm_second);
 227:Core/Src/AB1805.c ****   _alarm_second = get_second_alarm();
 228:Core/Src/AB1805.c ****   return (value == _alarm_second);
 229:Core/Src/AB1805.c **** }
 230:Core/Src/AB1805.c **** 
 231:Core/Src/AB1805.c **** bool set_minute_alarm(uint8_t value)
 232:Core/Src/AB1805.c **** {
 233:Core/Src/AB1805.c ****   _alarm_minute = value % MAX_MINUTE;
 234:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_ALARM_REGISTER, _alarm_minute);
 235:Core/Src/AB1805.c ****   _alarm_minute = get_minute_alarm();
 236:Core/Src/AB1805.c ****   return (value == _alarm_minute);
 237:Core/Src/AB1805.c **** }
 238:Core/Src/AB1805.c **** 
 239:Core/Src/AB1805.c **** bool set_hour_alarm(uint8_t value)
 240:Core/Src/AB1805.c **** {
 241:Core/Src/AB1805.c ****   _alarm_hour = value % MAX_HOURS;
 242:Core/Src/AB1805.c ****   write_rtc_register(HOUR_ALARM_REGISTER, _alarm_hour);
 243:Core/Src/AB1805.c ****   _alarm_hour = get_hour_alarm();
 244:Core/Src/AB1805.c ****   return (value == _alarm_hour);
 245:Core/Src/AB1805.c **** }
 246:Core/Src/AB1805.c **** 
 247:Core/Src/AB1805.c **** bool set_weekday_alarm(uint8_t value)
 248:Core/Src/AB1805.c **** {
 249:Core/Src/AB1805.c ****   _alarm_weekday = value % MAX_DAY;
 250:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_ALARM_REGISTER, _alarm_weekday);
 251:Core/Src/AB1805.c ****   _alarm_weekday = get_weekday_alarm();
 252:Core/Src/AB1805.c ****   return (value == _alarm_weekday);
 253:Core/Src/AB1805.c **** }
 254:Core/Src/AB1805.c **** 
 255:Core/Src/AB1805.c **** bool set_date_alarm(uint8_t value)
 256:Core/Src/AB1805.c **** {
 257:Core/Src/AB1805.c ****   _alarm_date = value % MAX_DATE;
 258:Core/Src/AB1805.c ****   write_rtc_register(DATE_ALARM_REGISTER, _alarm_date);
 259:Core/Src/AB1805.c ****   _alarm_date = get_date_alarm();
 260:Core/Src/AB1805.c ****   return (value == _alarm_date);
 261:Core/Src/AB1805.c **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 6


 262:Core/Src/AB1805.c **** 
 263:Core/Src/AB1805.c **** bool set_month_alarm(uint8_t value)
 264:Core/Src/AB1805.c **** {
 265:Core/Src/AB1805.c ****   _alarm_month = value % MAX_MONTH;
 266:Core/Src/AB1805.c ****   write_rtc_register(MONTH_ALARM_REGISTER, _alarm_month);
 267:Core/Src/AB1805.c ****   _alarm_month = get_month_alarm();
 268:Core/Src/AB1805.c ****   return (value == _alarm_month);
 269:Core/Src/AB1805.c **** }
 270:Core/Src/AB1805.c **** 
 271:Core/Src/AB1805.c **** // String get_date_string(void)
 272:Core/Src/AB1805.c **** // {
 273:Core/Src/AB1805.c **** 
 274:Core/Src/AB1805.c **** //   String date_string;
 275:Core/Src/AB1805.c **** 
 276:Core/Src/AB1805.c **** //   _date = get_date();
 277:Core/Src/AB1805.c **** //   date_string += ((_date & 0xF0) >> 4);
 278:Core/Src/AB1805.c **** //   date_string += (_date & 0x0F);
 279:Core/Src/AB1805.c **** 
 280:Core/Src/AB1805.c **** //   date_string += '/';
 281:Core/Src/AB1805.c **** 
 282:Core/Src/AB1805.c **** //   _month = get_month();
 283:Core/Src/AB1805.c **** //   date_string += ((_month & 0xF0) >> 4);
 284:Core/Src/AB1805.c **** //   date_string += (_month & 0x0F);
 285:Core/Src/AB1805.c **** 
 286:Core/Src/AB1805.c **** //   date_string += '/';
 287:Core/Src/AB1805.c **** 
 288:Core/Src/AB1805.c **** //   _year = get_year();
 289:Core/Src/AB1805.c **** //   date_string += ((_year & 0xF0) >> 4);
 290:Core/Src/AB1805.c **** //   date_string += (_year & 0x0F);
 291:Core/Src/AB1805.c **** 
 292:Core/Src/AB1805.c **** //   date_string += ' ';
 293:Core/Src/AB1805.c **** 
 294:Core/Src/AB1805.c **** //   _hour = get_hour();
 295:Core/Src/AB1805.c **** //   date_string += ((_hour & 0xF0) >> 4);
 296:Core/Src/AB1805.c **** //   date_string += (_hour & 0x0F);
 297:Core/Src/AB1805.c **** 
 298:Core/Src/AB1805.c **** //   date_string += ':';
 299:Core/Src/AB1805.c **** 
 300:Core/Src/AB1805.c **** //   _minute = get_minute();
 301:Core/Src/AB1805.c **** //   date_string += ((_minute & 0xF0) >> 4);
 302:Core/Src/AB1805.c **** //   date_string += (_minute & 0x0F);
 303:Core/Src/AB1805.c **** 
 304:Core/Src/AB1805.c **** //   date_string += ':';
 305:Core/Src/AB1805.c **** 
 306:Core/Src/AB1805.c **** //   _second = get_second();
 307:Core/Src/AB1805.c **** //   date_string += ((_second & 0xF0) >> 4);
 308:Core/Src/AB1805.c **** //   date_string += (_second & 0x0F);
 309:Core/Src/AB1805.c **** 
 310:Core/Src/AB1805.c **** //   return date_string;
 311:Core/Src/AB1805.c **** // }
 312:Core/Src/AB1805.c **** 
 313:Core/Src/AB1805.c **** char *get_date_time(void)
 314:Core/Src/AB1805.c **** {
 315:Core/Src/AB1805.c ****   char *currPos;
 316:Core/Src/AB1805.c ****   currPos = data_time_string;
 317:Core/Src/AB1805.c ****   *currPos = 0;
 318:Core/Src/AB1805.c ****   get_datetime();
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 7


 319:Core/Src/AB1805.c **** 
 320:Core/Src/AB1805.c ****   *currPos = ((_date & 0xF0) >> 4) + 0x30;
 321:Core/Src/AB1805.c ****   currPos++;
 322:Core/Src/AB1805.c ****   *currPos = (_date & 0x0F) + 0x30;
 323:Core/Src/AB1805.c ****   currPos++;
 324:Core/Src/AB1805.c **** 
 325:Core/Src/AB1805.c ****   *currPos = '/';
 326:Core/Src/AB1805.c ****   currPos++;
 327:Core/Src/AB1805.c **** 
 328:Core/Src/AB1805.c ****   *currPos = ((_month & 0xF0) >> 4) + 0x30;
 329:Core/Src/AB1805.c ****   currPos++;
 330:Core/Src/AB1805.c ****   *currPos = (_month & 0x0F) + 0x30;
 331:Core/Src/AB1805.c ****   currPos++;
 332:Core/Src/AB1805.c **** 
 333:Core/Src/AB1805.c ****   *currPos = '/';
 334:Core/Src/AB1805.c ****   currPos++;
 335:Core/Src/AB1805.c **** 
 336:Core/Src/AB1805.c ****   *currPos = ((_year & 0xF0) >> 4) + 0x30;
 337:Core/Src/AB1805.c ****   currPos++;
 338:Core/Src/AB1805.c ****   *currPos = (_year & 0x0F) + 0x30;
 339:Core/Src/AB1805.c ****   currPos++;
 340:Core/Src/AB1805.c **** 
 341:Core/Src/AB1805.c ****   *currPos = ' ';
 342:Core/Src/AB1805.c ****   currPos++;
 343:Core/Src/AB1805.c **** 
 344:Core/Src/AB1805.c ****   *currPos = ((_hour & 0xF0) >> 4) + 0x30;
 345:Core/Src/AB1805.c ****   currPos++;
 346:Core/Src/AB1805.c ****   *currPos = (_hour & 0x0F) + 0x30;
 347:Core/Src/AB1805.c ****   currPos++;
 348:Core/Src/AB1805.c **** 
 349:Core/Src/AB1805.c ****   *currPos = ':';
 350:Core/Src/AB1805.c ****   currPos++;
 351:Core/Src/AB1805.c **** 
 352:Core/Src/AB1805.c ****   *currPos = ((_minute & 0xF0) >> 4) + 0x30;
 353:Core/Src/AB1805.c ****   currPos++;
 354:Core/Src/AB1805.c ****   *currPos = (_minute & 0x0F) + 0x30;
 355:Core/Src/AB1805.c ****   currPos++;
 356:Core/Src/AB1805.c **** 
 357:Core/Src/AB1805.c ****   *currPos = ':';
 358:Core/Src/AB1805.c ****   currPos++;
 359:Core/Src/AB1805.c **** 
 360:Core/Src/AB1805.c ****   *currPos = ((_second & 0xF0) >> 4) + 0x30;
 361:Core/Src/AB1805.c ****   currPos++;
 362:Core/Src/AB1805.c ****   *currPos = (_second & 0x0F) + 0x30;
 363:Core/Src/AB1805.c ****   currPos++;
 364:Core/Src/AB1805.c **** 
 365:Core/Src/AB1805.c ****   *currPos = ' ';
 366:Core/Src/AB1805.c ****   currPos++;
 367:Core/Src/AB1805.c **** 
 368:Core/Src/AB1805.c ****   *currPos = ((_hundredth & 0xF0) >> 4) + 0x30;
 369:Core/Src/AB1805.c ****   currPos++;
 370:Core/Src/AB1805.c ****   *currPos = (_hundredth & 0x0F) + 0x30;
 371:Core/Src/AB1805.c ****   currPos++;
 372:Core/Src/AB1805.c **** 
 373:Core/Src/AB1805.c ****   return data_time_string;
 374:Core/Src/AB1805.c **** }
 375:Core/Src/AB1805.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 8


 376:Core/Src/AB1805.c **** uint8_t dec_hex(uint8_t tens, uint8_t digits)
 377:Core/Src/AB1805.c **** {
 378:Core/Src/AB1805.c ****   uint8_t ret;
 379:Core/Src/AB1805.c ****   ret = (tens << 4) + digits;
 380:Core/Src/AB1805.c ****   return ret;
 381:Core/Src/AB1805.c **** }
 382:Core/Src/AB1805.c **** 
 383:Core/Src/AB1805.c **** uint8_t hex_dec(uint8_t hex)
 384:Core/Src/AB1805.c **** {
 385:Core/Src/AB1805.c ****   uint8_t ret;
 386:Core/Src/AB1805.c ****   ret = ((hex >> 4) & 0xF * 10) + (hex & 0xF);
 387:Core/Src/AB1805.c ****   return ret;
 388:Core/Src/AB1805.c **** }
 389:Core/Src/AB1805.c **** 
 390:Core/Src/AB1805.c **** // status
 391:Core/Src/AB1805.c **** uint8_t get_status(void)
 392:Core/Src/AB1805.c **** {
 393:Core/Src/AB1805.c ****   _status = get_rtc_data(STATU_REGISTER, STATUS_READ_ALL_MASK);
 394:Core/Src/AB1805.c ****   return _status;
 395:Core/Src/AB1805.c **** }
 396:Core/Src/AB1805.c **** 
 397:Core/Src/AB1805.c **** uint8_t get_CB_status(void)
 398:Core/Src/AB1805.c **** {
 399:Core/Src/AB1805.c ****   get_status();
 400:Core/Src/AB1805.c ****   return (_status & (STATUS_CB_MASK > 7));
 401:Core/Src/AB1805.c **** };
 402:Core/Src/AB1805.c **** 
 403:Core/Src/AB1805.c **** uint8_t get_BAT_status(void)
 404:Core/Src/AB1805.c **** {
 405:Core/Src/AB1805.c ****   get_status();
 406:Core/Src/AB1805.c ****   return (_status & (STATUS_BAT_MASK > 6));
 407:Core/Src/AB1805.c **** };
 408:Core/Src/AB1805.c **** 
 409:Core/Src/AB1805.c **** uint8_t get_WDT_status(void)
 410:Core/Src/AB1805.c **** {
 411:Core/Src/AB1805.c ****   get_status();
 412:Core/Src/AB1805.c ****   return (_status & (STATUS_WDT_MASK > 5));
 413:Core/Src/AB1805.c **** };
 414:Core/Src/AB1805.c **** 
 415:Core/Src/AB1805.c **** uint8_t get_BL_status(void)
 416:Core/Src/AB1805.c **** {
 417:Core/Src/AB1805.c ****   get_status();
 418:Core/Src/AB1805.c ****   return (_status & (STATUS_BL_MASK > 4));
 419:Core/Src/AB1805.c **** };
 420:Core/Src/AB1805.c **** 
 421:Core/Src/AB1805.c **** uint8_t get_TIM_status(void)
 422:Core/Src/AB1805.c **** {
 423:Core/Src/AB1805.c ****   get_status();
 424:Core/Src/AB1805.c ****   return (_status & (STATUS_TIM_MASK > 3));
 425:Core/Src/AB1805.c **** };
 426:Core/Src/AB1805.c **** 
 427:Core/Src/AB1805.c **** uint8_t get_ALM_status(void)
 428:Core/Src/AB1805.c **** {
 429:Core/Src/AB1805.c ****   get_status();
 430:Core/Src/AB1805.c ****   return (_status & (STATUS_ALM_MASK > 2));
 431:Core/Src/AB1805.c **** };
 432:Core/Src/AB1805.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 9


 433:Core/Src/AB1805.c **** uint8_t get_EX2_status(void)
 434:Core/Src/AB1805.c **** {
 435:Core/Src/AB1805.c ****   get_status();
 436:Core/Src/AB1805.c ****   return (_status & (STATUS_EX2_MASK > 1));
 437:Core/Src/AB1805.c **** };
 438:Core/Src/AB1805.c **** 
 439:Core/Src/AB1805.c **** uint8_t get_EX1_status(void)
 440:Core/Src/AB1805.c **** {
 441:Core/Src/AB1805.c ****   get_status();
 442:Core/Src/AB1805.c ****   return (_status & (STATUS_EX1_MASK));
 443:Core/Src/AB1805.c **** };
 444:Core/Src/AB1805.c **** 
 445:Core/Src/AB1805.c **** uint8_t clean_CB_status(void)
 446:Core/Src/AB1805.c **** {
 447:Core/Src/AB1805.c ****   uint8_t c1;
 448:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 449:Core/Src/AB1805.c ****   c1 &= ~STATUS_CB_MASK;
 450:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 451:Core/Src/AB1805.c **** }
 452:Core/Src/AB1805.c **** 
 453:Core/Src/AB1805.c **** uint8_t clean_BAT_status(void)
 454:Core/Src/AB1805.c **** {
 455:Core/Src/AB1805.c ****   uint8_t c1;
 456:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 457:Core/Src/AB1805.c ****   c1 &= ~STATUS_BAT_MASK;
 458:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 459:Core/Src/AB1805.c **** }
 460:Core/Src/AB1805.c **** 
 461:Core/Src/AB1805.c **** uint8_t clean_WDT_status(void)
 462:Core/Src/AB1805.c **** {
 463:Core/Src/AB1805.c ****   uint8_t c1;
 464:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 465:Core/Src/AB1805.c ****   c1 &= ~STATUS_WDT_MASK;
 466:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 467:Core/Src/AB1805.c **** }
 468:Core/Src/AB1805.c **** 
 469:Core/Src/AB1805.c **** uint8_t clean_BL_status(void)
 470:Core/Src/AB1805.c **** {
 471:Core/Src/AB1805.c ****   uint8_t c1;
 472:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 473:Core/Src/AB1805.c ****   c1 &= ~STATUS_BL_MASK;
 474:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 475:Core/Src/AB1805.c **** }
 476:Core/Src/AB1805.c **** 
 477:Core/Src/AB1805.c **** uint8_t clean_TIM_status(void)
 478:Core/Src/AB1805.c **** {
 479:Core/Src/AB1805.c ****   uint8_t c1;
 480:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 481:Core/Src/AB1805.c ****   c1 &= ~STATUS_TIM_MASK;
 482:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 483:Core/Src/AB1805.c **** }
 484:Core/Src/AB1805.c **** 
 485:Core/Src/AB1805.c **** uint8_t clean_ALM_status(void)
 486:Core/Src/AB1805.c **** {
 487:Core/Src/AB1805.c ****   uint8_t c1;
 488:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 489:Core/Src/AB1805.c ****   c1 &= ~STATUS_ALM_MASK;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 10


 490:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 491:Core/Src/AB1805.c **** }
 492:Core/Src/AB1805.c **** 
 493:Core/Src/AB1805.c **** uint8_t clean_EX2_status(void)
 494:Core/Src/AB1805.c **** {
 495:Core/Src/AB1805.c ****   uint8_t c1;
 496:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 497:Core/Src/AB1805.c ****   c1 &= ~STATUS_EX2_MASK;
 498:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 499:Core/Src/AB1805.c **** }
 500:Core/Src/AB1805.c **** 
 501:Core/Src/AB1805.c **** uint8_t clean_EX1_status(void)
 502:Core/Src/AB1805.c **** {
 503:Core/Src/AB1805.c ****   uint8_t c1;
 504:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 505:Core/Src/AB1805.c ****   c1 &= ~STATUS_EX1_MASK;
 506:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 507:Core/Src/AB1805.c **** }
 508:Core/Src/AB1805.c **** 
 509:Core/Src/AB1805.c **** // set func
 510:Core/Src/AB1805.c **** uint8_t set_control1(uint8_t value)
 511:Core/Src/AB1805.c **** {
 512:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, value);
 513:Core/Src/AB1805.c ****   _control1 = read_rtc_register(CONTROL1_REGISTER);
 514:Core/Src/AB1805.c ****   return _control1;
 515:Core/Src/AB1805.c **** }
 516:Core/Src/AB1805.c **** 
 517:Core/Src/AB1805.c **** uint8_t set_1224(uint8_t value)
 518:Core/Src/AB1805.c **** {
 519:Core/Src/AB1805.c ****   uint8_t c1;
 520:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 521:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_1224_MASK;
 522:Core/Src/AB1805.c ****   if (value)
 523:Core/Src/AB1805.c ****   {
 524:Core/Src/AB1805.c ****     c1 |= CONTROL1_1224_MASK;
 525:Core/Src/AB1805.c ****   }
 526:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, c1);
 527:Core/Src/AB1805.c **** }
 528:Core/Src/AB1805.c **** 
 529:Core/Src/AB1805.c **** uint8_t set_RSP(uint8_t value)
 530:Core/Src/AB1805.c **** {
 531:Core/Src/AB1805.c ****   uint8_t c1;
 532:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 533:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_RSP_MASK;
 534:Core/Src/AB1805.c ****   if (value)
 535:Core/Src/AB1805.c ****   {
 536:Core/Src/AB1805.c ****     c1 |= CONTROL1_RSP_MASK;
 537:Core/Src/AB1805.c ****   }
 538:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, c1);
 539:Core/Src/AB1805.c **** }
 540:Core/Src/AB1805.c **** 
 541:Core/Src/AB1805.c **** uint8_t set_ARST(uint8_t value)
 542:Core/Src/AB1805.c **** {
 543:Core/Src/AB1805.c ****   uint8_t c1;
 544:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 545:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_ARST_MASK;
 546:Core/Src/AB1805.c ****   if (value)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 11


 547:Core/Src/AB1805.c ****   {
 548:Core/Src/AB1805.c ****     c1 |= CONTROL1_ARST_MASK;
 549:Core/Src/AB1805.c ****   }
 550:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, c1);
 551:Core/Src/AB1805.c **** }
 552:Core/Src/AB1805.c **** 
 553:Core/Src/AB1805.c **** uint8_t set_PWR2(uint8_t value)
 554:Core/Src/AB1805.c **** {
 555:Core/Src/AB1805.c ****   uint8_t c1;
 556:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 557:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_PWR2_MASK;
 558:Core/Src/AB1805.c ****   if (value)
 559:Core/Src/AB1805.c ****   {
 560:Core/Src/AB1805.c ****     c1 |= CONTROL1_PWR2_MASK;
 561:Core/Src/AB1805.c ****   }
 562:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, c1);
 563:Core/Src/AB1805.c **** }
 564:Core/Src/AB1805.c **** 
 565:Core/Src/AB1805.c **** uint8_t set_WRTC(uint8_t value)
 566:Core/Src/AB1805.c **** {
 567:Core/Src/AB1805.c ****   uint8_t c1;
 568:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 569:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_WRTC_MASK;
 570:Core/Src/AB1805.c ****   if (value)
 571:Core/Src/AB1805.c ****   {
 572:Core/Src/AB1805.c ****     c1 |= CONTROL1_WRTC_MASK;
 573:Core/Src/AB1805.c ****   }
 574:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, c1);
 575:Core/Src/AB1805.c **** }
 576:Core/Src/AB1805.c **** 
 577:Core/Src/AB1805.c **** // interrupt
 578:Core/Src/AB1805.c **** uint8_t get_interrupt(void)
 579:Core/Src/AB1805.c **** {
 580:Core/Src/AB1805.c ****   _interrupt = read_rtc_register(INT_MASK_REGISTER);
 581:Core/Src/AB1805.c ****   return _interrupt;
 582:Core/Src/AB1805.c **** }
 583:Core/Src/AB1805.c **** 
 584:Core/Src/AB1805.c **** uint8_t get_BLIE_interrupt(void)
 585:Core/Src/AB1805.c **** {
 586:Core/Src/AB1805.c ****   get_status();
 587:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_BL_MASK > 4));
 588:Core/Src/AB1805.c **** };
 589:Core/Src/AB1805.c **** 
 590:Core/Src/AB1805.c **** uint8_t get_TIE_interrupt(void)
 591:Core/Src/AB1805.c **** {
 592:Core/Src/AB1805.c ****   get_status();
 593:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_TIM_MASK > 3));
 594:Core/Src/AB1805.c **** };
 595:Core/Src/AB1805.c **** 
 596:Core/Src/AB1805.c **** uint8_t get_AIE_interrupt(void)
 597:Core/Src/AB1805.c **** {
 598:Core/Src/AB1805.c ****   get_status();
 599:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_ALM_MASK > 2));
 600:Core/Src/AB1805.c **** };
 601:Core/Src/AB1805.c **** 
 602:Core/Src/AB1805.c **** uint8_t get_EX2E_interrupt(void)
 603:Core/Src/AB1805.c **** {
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 12


 604:Core/Src/AB1805.c ****   get_status();
 605:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_EX2_MASK > 1));
 606:Core/Src/AB1805.c **** };
 607:Core/Src/AB1805.c **** 
 608:Core/Src/AB1805.c **** uint8_t get_EX1E_interrupt(void)
 609:Core/Src/AB1805.c **** {
 610:Core/Src/AB1805.c ****   get_status();
 611:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_EX1_MASK));
 612:Core/Src/AB1805.c **** };
 613:Core/Src/AB1805.c **** 
 614:Core/Src/AB1805.c **** uint8_t set_interrupt(uint8_t value)
 615:Core/Src/AB1805.c **** {
 616:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, value);
 617:Core/Src/AB1805.c ****   _interrupt = read_rtc_register(INT_MASK_REGISTER);
 618:Core/Src/AB1805.c ****   return _interrupt;
 619:Core/Src/AB1805.c **** }
 620:Core/Src/AB1805.c **** 
 621:Core/Src/AB1805.c **** uint8_t set_BLIE_interrupt(uint8_t value)
 622:Core/Src/AB1805.c **** {
 623:Core/Src/AB1805.c ****   uint8_t c1;
 624:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 625:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_BLIE_MASK;
 626:Core/Src/AB1805.c ****   if (value)
 627:Core/Src/AB1805.c ****   {
 628:Core/Src/AB1805.c ****     c1 |= INTERRUPT_BLIE_MASK;
 629:Core/Src/AB1805.c ****   }
 630:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, c1);
 631:Core/Src/AB1805.c **** }
 632:Core/Src/AB1805.c **** 
 633:Core/Src/AB1805.c **** uint8_t set_TIE_interrupt(uint8_t value)
 634:Core/Src/AB1805.c **** {
 635:Core/Src/AB1805.c ****   uint8_t c1;
 636:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 637:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_TIE_MASK;
 638:Core/Src/AB1805.c ****   if (value)
 639:Core/Src/AB1805.c ****   {
 640:Core/Src/AB1805.c ****     c1 |= INTERRUPT_TIE_MASK;
 641:Core/Src/AB1805.c ****   }
 642:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, c1);
 643:Core/Src/AB1805.c **** }
 644:Core/Src/AB1805.c **** 
 645:Core/Src/AB1805.c **** uint8_t set_AIE_interrupt(uint8_t value)
 646:Core/Src/AB1805.c **** {
 647:Core/Src/AB1805.c ****   uint8_t c1;
 648:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 649:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_AIE_MASK;
 650:Core/Src/AB1805.c ****   if (value)
 651:Core/Src/AB1805.c ****   {
 652:Core/Src/AB1805.c ****     c1 |= INTERRUPT_AIE_MASK;
 653:Core/Src/AB1805.c ****   }
 654:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, c1);
 655:Core/Src/AB1805.c **** }
 656:Core/Src/AB1805.c **** 
 657:Core/Src/AB1805.c **** uint8_t set_EX1E_interrupt(uint8_t value)
 658:Core/Src/AB1805.c **** {
 659:Core/Src/AB1805.c ****   uint8_t c1;
 660:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 13


 661:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX1E_MASK;
 662:Core/Src/AB1805.c ****   if (value)
 663:Core/Src/AB1805.c ****   {
 664:Core/Src/AB1805.c ****     c1 |= INTERRUPT_EX1E_MASK;
 665:Core/Src/AB1805.c ****   }
 666:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, c1);
 667:Core/Src/AB1805.c **** }
 668:Core/Src/AB1805.c **** 
 669:Core/Src/AB1805.c **** uint8_t set_EX2E_interrupt(uint8_t value)
 670:Core/Src/AB1805.c **** {
 671:Core/Src/AB1805.c ****   uint8_t c1;
 672:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 673:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX2E_MASK;
 674:Core/Src/AB1805.c ****   if (value)
 675:Core/Src/AB1805.c ****   {
 676:Core/Src/AB1805.c ****     c1 |= INTERRUPT_EX2E_MASK;
 677:Core/Src/AB1805.c ****   }
 678:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, c1);
 679:Core/Src/AB1805.c **** }
 680:Core/Src/AB1805.c **** 
 681:Core/Src/AB1805.c **** // control2
 682:Core/Src/AB1805.c **** uint8_t get_control2(void)
 683:Core/Src/AB1805.c **** {
 684:Core/Src/AB1805.c ****   _control2 = read_rtc_register(CONTROL2_REGISTER);
 685:Core/Src/AB1805.c ****   return _control2;
 686:Core/Src/AB1805.c **** }
 687:Core/Src/AB1805.c **** 
 688:Core/Src/AB1805.c **** uint8_t get_RS1E_control2(void)
 689:Core/Src/AB1805.c **** {
 690:Core/Src/AB1805.c ****   get_control2();
 691:Core/Src/AB1805.c ****   return (_control2 & (CONTROL2_RS1E_MASK > 5));
 692:Core/Src/AB1805.c **** };
 693:Core/Src/AB1805.c **** 
 694:Core/Src/AB1805.c **** uint8_t get_OUT2S_control2(void)
 695:Core/Src/AB1805.c **** {
 696:Core/Src/AB1805.c ****   get_control2();
 697:Core/Src/AB1805.c ****   return (_control2 & (CONTROL2_OUT2S_MASK > 2));
 698:Core/Src/AB1805.c **** };
 699:Core/Src/AB1805.c **** 
 700:Core/Src/AB1805.c **** uint8_t get_OUT1S_control2(void)
 701:Core/Src/AB1805.c **** {
 702:Core/Src/AB1805.c ****   get_control2();
 703:Core/Src/AB1805.c ****   return (_control2 & (CONTROL2_OUT1S_MASK));
 704:Core/Src/AB1805.c **** };
 705:Core/Src/AB1805.c **** 
 706:Core/Src/AB1805.c **** uint8_t set_control2(uint8_t value)
 707:Core/Src/AB1805.c **** {
 708:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, value);
 709:Core/Src/AB1805.c ****   _control2 = read_rtc_register(CONTROL2_REGISTER);
 710:Core/Src/AB1805.c ****   return _control2;
 711:Core/Src/AB1805.c **** }
 712:Core/Src/AB1805.c **** 
 713:Core/Src/AB1805.c **** uint8_t set_RS1E_control2(uint8_t value)
 714:Core/Src/AB1805.c **** {
 715:Core/Src/AB1805.c ****   uint8_t c1;
 716:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL2_REGISTER);
 717:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_RS1E_MASK;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 14


 718:Core/Src/AB1805.c ****   if (value)
 719:Core/Src/AB1805.c ****   {
 720:Core/Src/AB1805.c ****     c1 |= CONTROL2_RS1E_MASK;
 721:Core/Src/AB1805.c ****   }
 722:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 723:Core/Src/AB1805.c ****   return c1;
 724:Core/Src/AB1805.c **** }
 725:Core/Src/AB1805.c **** 
 726:Core/Src/AB1805.c **** uint8_t set_OUT2S_control2(uint8_t value)
 727:Core/Src/AB1805.c **** {
 728:Core/Src/AB1805.c ****   uint8_t c1;
 729:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL2_REGISTER);
 730:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT2S_MASK;
 731:Core/Src/AB1805.c ****   c1 |= (value << 2) & CONTROL2_OUT2S_MASK;
 732:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 733:Core/Src/AB1805.c ****   return c1;
 734:Core/Src/AB1805.c **** }
 735:Core/Src/AB1805.c **** 
 736:Core/Src/AB1805.c **** uint8_t set_OUT1S_control2(uint8_t value)
 737:Core/Src/AB1805.c **** {
 738:Core/Src/AB1805.c ****   uint8_t c1;
 739:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL2_REGISTER);
 740:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT1S_MASK;
 741:Core/Src/AB1805.c ****   c1 |= (value)&CONTROL2_OUT1S_MASK;
 742:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 743:Core/Src/AB1805.c ****   return c1;
 744:Core/Src/AB1805.c **** }
 745:Core/Src/AB1805.c **** 
 746:Core/Src/AB1805.c **** // sleep mode
 747:Core/Src/AB1805.c **** uint8_t get_sleep(void)
 748:Core/Src/AB1805.c **** {
 749:Core/Src/AB1805.c ****   _sleep_mode = read_rtc_register(SLEEP_CONTROL_REGISTER);
 750:Core/Src/AB1805.c ****   return _sleep_mode;
 751:Core/Src/AB1805.c **** }
 752:Core/Src/AB1805.c **** 
 753:Core/Src/AB1805.c **** uint8_t get_SLP_sleep(void)
 754:Core/Src/AB1805.c **** {
 755:Core/Src/AB1805.c ****   get_sleep();
 756:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLP_MASK > 7));
 757:Core/Src/AB1805.c **** };
 758:Core/Src/AB1805.c **** 
 759:Core/Src/AB1805.c **** uint8_t get_SLRES_sleep(void)
 760:Core/Src/AB1805.c **** {
 761:Core/Src/AB1805.c ****   get_sleep();
 762:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLRES_MASK > 6));
 763:Core/Src/AB1805.c **** };
 764:Core/Src/AB1805.c **** 
 765:Core/Src/AB1805.c **** uint8_t get_EX2P_sleep(void)
 766:Core/Src/AB1805.c **** {
 767:Core/Src/AB1805.c ****   get_sleep();
 768:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_EX2P_MASK > 5));
 769:Core/Src/AB1805.c **** };
 770:Core/Src/AB1805.c **** 
 771:Core/Src/AB1805.c **** uint8_t get_EX1P_sleep(void)
 772:Core/Src/AB1805.c **** {
 773:Core/Src/AB1805.c ****   get_sleep();
 774:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_EX1P_MASK > 4));
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 15


 775:Core/Src/AB1805.c **** };
 776:Core/Src/AB1805.c **** 
 777:Core/Src/AB1805.c **** uint8_t get_SLST_sleep(void)
 778:Core/Src/AB1805.c **** {
 779:Core/Src/AB1805.c ****   get_sleep();
 780:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLST_MASK > 3));
 781:Core/Src/AB1805.c **** };
 782:Core/Src/AB1805.c **** 
 783:Core/Src/AB1805.c **** uint8_t get_SLTO_sleep(void)
 784:Core/Src/AB1805.c **** {
 785:Core/Src/AB1805.c ****   get_sleep();
 786:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLTO_MASK));
 787:Core/Src/AB1805.c **** };
 788:Core/Src/AB1805.c **** 
 789:Core/Src/AB1805.c **** uint8_t set_sleep(uint8_t value)
 790:Core/Src/AB1805.c **** {
 791:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, value);
 792:Core/Src/AB1805.c ****   _sleep_mode = read_rtc_register(SLEEP_CONTROL_REGISTER);
 793:Core/Src/AB1805.c ****   return _sleep_mode;
 794:Core/Src/AB1805.c **** }
 795:Core/Src/AB1805.c **** 
 796:Core/Src/AB1805.c **** uint8_t set_SLP_sleep(uint8_t value)
 797:Core/Src/AB1805.c **** {
 798:Core/Src/AB1805.c ****   uint8_t c1;
 799:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 800:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLP_MASK;
 801:Core/Src/AB1805.c ****   if (value)
 802:Core/Src/AB1805.c ****   {
 803:Core/Src/AB1805.c ****     c1 |= SLEEP_CONTROL_SLP_MASK;
 804:Core/Src/AB1805.c ****   }
 805:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 806:Core/Src/AB1805.c ****   return c1;
 807:Core/Src/AB1805.c **** }
 808:Core/Src/AB1805.c **** 
 809:Core/Src/AB1805.c **** uint8_t set_SLRES_sleep(uint8_t value)
 810:Core/Src/AB1805.c **** {
 811:Core/Src/AB1805.c ****   uint8_t c1;
 812:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 813:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLRES_MASK;
 814:Core/Src/AB1805.c ****   if (value)
 815:Core/Src/AB1805.c ****   {
 816:Core/Src/AB1805.c ****     c1 |= SLEEP_CONTROL_SLRES_MASK;
 817:Core/Src/AB1805.c ****   }
 818:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 819:Core/Src/AB1805.c ****   return c1;
 820:Core/Src/AB1805.c **** }
 821:Core/Src/AB1805.c **** 
 822:Core/Src/AB1805.c **** uint8_t set_EX2P_sleep(uint8_t value)
 823:Core/Src/AB1805.c **** {
 824:Core/Src/AB1805.c ****   uint8_t c1;
 825:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 826:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX2P_MASK;
 827:Core/Src/AB1805.c ****   if (value)
 828:Core/Src/AB1805.c ****   {
 829:Core/Src/AB1805.c ****     c1 |= SLEEP_CONTROL_EX2P_MASK;
 830:Core/Src/AB1805.c ****   }
 831:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 16


 832:Core/Src/AB1805.c ****   return c1;
 833:Core/Src/AB1805.c **** }
 834:Core/Src/AB1805.c **** 
 835:Core/Src/AB1805.c **** uint8_t set_EX1P_sleep(uint8_t value)
 836:Core/Src/AB1805.c **** {
 837:Core/Src/AB1805.c ****   uint8_t c1;
 838:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 839:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX1P_MASK;
 840:Core/Src/AB1805.c ****   if (value)
 841:Core/Src/AB1805.c ****   {
 842:Core/Src/AB1805.c ****     c1 |= SLEEP_CONTROL_EX1P_MASK;
 843:Core/Src/AB1805.c ****   }
 844:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 845:Core/Src/AB1805.c ****   return c1;
 846:Core/Src/AB1805.c **** }
 847:Core/Src/AB1805.c **** 
 848:Core/Src/AB1805.c **** uint8_t clean_SLST_sleep(void)
 849:Core/Src/AB1805.c **** {
 850:Core/Src/AB1805.c ****   uint8_t c1;
 851:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 852:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLST_MASK;
 853:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 854:Core/Src/AB1805.c ****   return c1;
 855:Core/Src/AB1805.c **** }
 856:Core/Src/AB1805.c **** 
 857:Core/Src/AB1805.c **** uint8_t set_SLTO_sleep(uint8_t value)
 858:Core/Src/AB1805.c **** {
 859:Core/Src/AB1805.c ****   uint8_t c1;
 860:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 861:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLTO_MASK;
 862:Core/Src/AB1805.c ****   c1 |= value;
 863:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 864:Core/Src/AB1805.c ****   return c1;
 865:Core/Src/AB1805.c **** }
 866:Core/Src/AB1805.c **** 
 867:Core/Src/AB1805.c **** // countdown control
 868:Core/Src/AB1805.c **** uint8_t get_time_control(void)
 869:Core/Src/AB1805.c **** {
 870:Core/Src/AB1805.c ****   _timer_control_mode = read_rtc_register(TIMER_CONTROL_REGISTER);
 871:Core/Src/AB1805.c ****   return _timer_control_mode;
 872:Core/Src/AB1805.c **** }
 873:Core/Src/AB1805.c **** 
 874:Core/Src/AB1805.c **** uint8_t get_TE_time_control(void)
 875:Core/Src/AB1805.c **** {
 876:Core/Src/AB1805.c ****   get_time_control();
 877:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TE_MASK > 7));
 878:Core/Src/AB1805.c **** };
 879:Core/Src/AB1805.c **** 
 880:Core/Src/AB1805.c **** uint8_t get_TM_time_control(void)
 881:Core/Src/AB1805.c **** {
 882:Core/Src/AB1805.c ****   get_time_control();
 883:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TM_MASK > 6));
 884:Core/Src/AB1805.c **** };
 885:Core/Src/AB1805.c **** 
 886:Core/Src/AB1805.c **** uint8_t get_TRPT_time_control(void)
 887:Core/Src/AB1805.c **** {
 888:Core/Src/AB1805.c ****   get_time_control();
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 17


 889:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TRPT_MASK > 5));
 890:Core/Src/AB1805.c **** };
 891:Core/Src/AB1805.c **** 
 892:Core/Src/AB1805.c **** uint8_t get_RPT_time_control(void)
 893:Core/Src/AB1805.c **** {
 894:Core/Src/AB1805.c ****   get_time_control();
 895:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_RPT_MASK > 2));
 896:Core/Src/AB1805.c **** };
 897:Core/Src/AB1805.c **** 
 898:Core/Src/AB1805.c **** uint8_t get_TFS_time_control(void)
 899:Core/Src/AB1805.c **** {
 900:Core/Src/AB1805.c ****   get_time_control();
 901:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TFS_MASK));
 902:Core/Src/AB1805.c **** };
 903:Core/Src/AB1805.c **** 
 904:Core/Src/AB1805.c **** uint8_t set_time_control(uint8_t value)
 905:Core/Src/AB1805.c **** {
 906:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, value);
 907:Core/Src/AB1805.c ****   _timer_control_mode = read_rtc_register(TIMER_CONTROL_REGISTER);
 908:Core/Src/AB1805.c ****   return _timer_control_mode;
 909:Core/Src/AB1805.c **** }
 910:Core/Src/AB1805.c **** 
 911:Core/Src/AB1805.c **** uint8_t set_TE_time_control(uint8_t value)
 912:Core/Src/AB1805.c **** {
 913:Core/Src/AB1805.c ****   uint8_t c1;
 914:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 915:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TE_MASK;
 916:Core/Src/AB1805.c ****   if (value)
 917:Core/Src/AB1805.c ****   {
 918:Core/Src/AB1805.c ****     c1 |= TIMER_CONTROL_TE_MASK;
 919:Core/Src/AB1805.c ****   }
 920:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 921:Core/Src/AB1805.c ****   return c1;
 922:Core/Src/AB1805.c **** }
 923:Core/Src/AB1805.c **** 
 924:Core/Src/AB1805.c **** uint8_t set_TM_time_control(uint8_t value)
 925:Core/Src/AB1805.c **** {
 926:Core/Src/AB1805.c ****   uint8_t c1;
 927:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 928:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TM_MASK;
 929:Core/Src/AB1805.c ****   if (value)
 930:Core/Src/AB1805.c ****   {
 931:Core/Src/AB1805.c ****     c1 |= TIMER_CONTROL_TM_MASK;
 932:Core/Src/AB1805.c ****   }
 933:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 934:Core/Src/AB1805.c ****   return c1;
 935:Core/Src/AB1805.c **** }
 936:Core/Src/AB1805.c **** 
 937:Core/Src/AB1805.c **** uint8_t set_TRPT_time_control(uint8_t value)
 938:Core/Src/AB1805.c **** {
 939:Core/Src/AB1805.c ****   uint8_t c1;
 940:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 941:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TRPT_MASK;
 942:Core/Src/AB1805.c ****   if (value)
 943:Core/Src/AB1805.c ****   {
 944:Core/Src/AB1805.c ****     c1 |= TIMER_CONTROL_TRPT_MASK;
 945:Core/Src/AB1805.c ****   }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 18


 946:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 947:Core/Src/AB1805.c ****   return c1;
 948:Core/Src/AB1805.c **** }
 949:Core/Src/AB1805.c **** 
 950:Core/Src/AB1805.c **** uint8_t set_RPT_time_control(uint8_t value)
 951:Core/Src/AB1805.c **** {
 952:Core/Src/AB1805.c ****   uint8_t c1;
 953:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 954:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_RPT_MASK;
 955:Core/Src/AB1805.c ****   c1 |= (value << 2) & TIMER_CONTROL_RPT_MASK;
 956:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 957:Core/Src/AB1805.c ****   return c1;
 958:Core/Src/AB1805.c **** }
 959:Core/Src/AB1805.c **** 
 960:Core/Src/AB1805.c **** uint8_t set_TFS_time_control(uint8_t value)
 961:Core/Src/AB1805.c **** {
 962:Core/Src/AB1805.c ****   uint8_t c1;
 963:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 964:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TFS_MASK;
 965:Core/Src/AB1805.c ****   c1 |= value;
 966:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 967:Core/Src/AB1805.c ****   return c1;
 968:Core/Src/AB1805.c **** }
 969:Core/Src/AB1805.c **** 
 970:Core/Src/AB1805.c **** // outcontrol registers
 971:Core/Src/AB1805.c **** uint8_t get_outcontrol(void)
 972:Core/Src/AB1805.c **** {
 973:Core/Src/AB1805.c ****   _outcontrol = read_rtc_register(OCTRL_REGISTER);
 974:Core/Src/AB1805.c ****   return _outcontrol;
 975:Core/Src/AB1805.c **** }
 976:Core/Src/AB1805.c **** 
 977:Core/Src/AB1805.c **** uint8_t get_outcontrol_mask(uint8_t mask)
 978:Core/Src/AB1805.c **** {
 979:Core/Src/AB1805.c ****   uint8_t ret;
 980:Core/Src/AB1805.c ****   ret = get_outcontrol() & mask;
 981:Core/Src/AB1805.c ****   switch (mask)
 982:Core/Src/AB1805.c ****   {
 983:Core/Src/AB1805.c ****   case OCTRL_WDBM_MASK:
 984:Core/Src/AB1805.c ****     ret = ret >> 7;
 985:Core/Src/AB1805.c ****     break;
 986:Core/Src/AB1805.c ****   case OCTRL_EXBM_MASK:
 987:Core/Src/AB1805.c ****     ret = ret >> 6;
 988:Core/Src/AB1805.c ****     break;
 989:Core/Src/AB1805.c ****   case OCTRL_WDDS_MASK:
 990:Core/Src/AB1805.c ****     ret = ret >> 5;
 991:Core/Src/AB1805.c ****     break;
 992:Core/Src/AB1805.c ****   case OCTRL_EXDS_MASK:
 993:Core/Src/AB1805.c ****     ret = ret >> 4;
 994:Core/Src/AB1805.c ****     break;
 995:Core/Src/AB1805.c ****   case OCTRL_RSEN_MASK:
 996:Core/Src/AB1805.c ****     ret = ret >> 3;
 997:Core/Src/AB1805.c ****     break;
 998:Core/Src/AB1805.c ****   case OCTRL_O4EN_MASK:
 999:Core/Src/AB1805.c ****     ret = ret >> 2;
1000:Core/Src/AB1805.c ****     break;
1001:Core/Src/AB1805.c ****   case OCTRL_O3EN_MASK:
1002:Core/Src/AB1805.c ****     ret = ret >> 1;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 19


1003:Core/Src/AB1805.c ****     break;
1004:Core/Src/AB1805.c ****   case OCTRL_O1EN_MASK:
1005:Core/Src/AB1805.c ****     ret = ret;
1006:Core/Src/AB1805.c ****     break;
1007:Core/Src/AB1805.c ****   default:
1008:Core/Src/AB1805.c ****     ret = _outcontrol;
1009:Core/Src/AB1805.c ****   }
1010:Core/Src/AB1805.c ****   return ret;
1011:Core/Src/AB1805.c **** }
1012:Core/Src/AB1805.c **** 
1013:Core/Src/AB1805.c **** uint8_t set_outcontrol_value(uint8_t value)
1014:Core/Src/AB1805.c **** {
1015:Core/Src/AB1805.c ****   write_rtc_register(OCTRL_REGISTER, value);
1016:Core/Src/AB1805.c ****   _outcontrol = read_rtc_register(OCTRL_REGISTER);
1017:Core/Src/AB1805.c ****   return _outcontrol;
1018:Core/Src/AB1805.c **** }
1019:Core/Src/AB1805.c **** 
1020:Core/Src/AB1805.c **** uint8_t set_outcontrol_value_mask(uint8_t value, uint8_t mask)
1021:Core/Src/AB1805.c **** {
1022:Core/Src/AB1805.c ****   uint8_t c1;
1023:Core/Src/AB1805.c ****   c1 = get_outcontrol();
1024:Core/Src/AB1805.c ****   switch (mask)
1025:Core/Src/AB1805.c ****   {
1026:Core/Src/AB1805.c ****   case OCTRL_WDBM_MASK:
1027:Core/Src/AB1805.c ****     c1 &= ~OCTRL_WDBM_MASK;
1028:Core/Src/AB1805.c ****     c1 |= (value << 7) & OCTRL_WDBM_MASK;
1029:Core/Src/AB1805.c ****     break;
1030:Core/Src/AB1805.c ****   case OCTRL_EXBM_MASK:
1031:Core/Src/AB1805.c ****     c1 &= ~OCTRL_EXBM_MASK;
1032:Core/Src/AB1805.c ****     c1 |= (value << 6) & OCTRL_EXBM_MASK;
1033:Core/Src/AB1805.c ****     break;
1034:Core/Src/AB1805.c ****   case OCTRL_WDDS_MASK:
1035:Core/Src/AB1805.c ****     c1 &= ~OCTRL_WDDS_MASK;
1036:Core/Src/AB1805.c ****     c1 |= (value << 5) & OCTRL_WDDS_MASK;
1037:Core/Src/AB1805.c ****     break;
1038:Core/Src/AB1805.c ****   case OCTRL_EXDS_MASK:
1039:Core/Src/AB1805.c ****     c1 &= ~OCTRL_EXDS_MASK;
1040:Core/Src/AB1805.c ****     c1 |= (value << 4) & OCTRL_EXDS_MASK;
1041:Core/Src/AB1805.c ****     break;
1042:Core/Src/AB1805.c ****   case OCTRL_RSEN_MASK:
1043:Core/Src/AB1805.c ****     c1 &= ~OCTRL_RSEN_MASK;
1044:Core/Src/AB1805.c ****     c1 |= (value << 3) & OCTRL_RSEN_MASK;
1045:Core/Src/AB1805.c ****     break;
1046:Core/Src/AB1805.c ****   case OCTRL_O4EN_MASK:
1047:Core/Src/AB1805.c ****     c1 &= ~OCTRL_O4EN_MASK;
1048:Core/Src/AB1805.c ****     c1 |= (value << 2) & OCTRL_O4EN_MASK;
1049:Core/Src/AB1805.c ****     break;
1050:Core/Src/AB1805.c ****   case OCTRL_O3EN_MASK:
1051:Core/Src/AB1805.c ****     c1 &= ~OCTRL_O3EN_MASK;
1052:Core/Src/AB1805.c ****     c1 |= (value << 1) & OCTRL_O3EN_MASK;
1053:Core/Src/AB1805.c ****     break;
1054:Core/Src/AB1805.c ****   case OCTRL_O1EN_MASK:
1055:Core/Src/AB1805.c ****     c1 &= ~OCTRL_O1EN_MASK;
1056:Core/Src/AB1805.c ****     c1 |= (value)&OCTRL_O1EN_MASK;
1057:Core/Src/AB1805.c ****     break;
1058:Core/Src/AB1805.c ****   case CCTRL_SLEEP_MODE_MASK:
1059:Core/Src/AB1805.c ****     // special mode for sleep mode, to Avoiding Unexpected Leakage Paths
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 20


1060:Core/Src/AB1805.c ****     c1 &= ~CCTRL_SLEEP_MODE_MASK;
1061:Core/Src/AB1805.c ****     c1 |= (value)&CCTRL_SLEEP_MODE_MASK;
1062:Core/Src/AB1805.c ****   default:
1063:Core/Src/AB1805.c ****     c1 = value;
1064:Core/Src/AB1805.c ****   }
1065:Core/Src/AB1805.c ****   return set_outcontrol_value(c1);
1066:Core/Src/AB1805.c **** }
1067:Core/Src/AB1805.c **** 
1068:Core/Src/AB1805.c **** // OSC control registers
1069:Core/Src/AB1805.c **** uint8_t get_osc_control(void)
1070:Core/Src/AB1805.c **** {
1071:Core/Src/AB1805.c ****   _osc_control = read_rtc_register(OSC_CONTROL_REGISTER);
1072:Core/Src/AB1805.c ****   return _osc_control;
1073:Core/Src/AB1805.c **** }
1074:Core/Src/AB1805.c **** 
1075:Core/Src/AB1805.c **** uint8_t get_osc_control_mask(uint8_t mask)
1076:Core/Src/AB1805.c **** {
1077:Core/Src/AB1805.c ****   uint8_t ret;
1078:Core/Src/AB1805.c ****   ret = get_osc_control() & mask;
1079:Core/Src/AB1805.c ****   switch (mask)
1080:Core/Src/AB1805.c ****   {
1081:Core/Src/AB1805.c ****   case OSC_CONTROL_OSEL_MASK:
1082:Core/Src/AB1805.c ****     ret = ret >> 7;
1083:Core/Src/AB1805.c ****     break;
1084:Core/Src/AB1805.c ****   case OSC_CONTROL_ACAL_MASK:
1085:Core/Src/AB1805.c ****     ret = ret >> 5;
1086:Core/Src/AB1805.c ****     break;
1087:Core/Src/AB1805.c ****   case OSC_CONTROL_AOS_MASK:
1088:Core/Src/AB1805.c ****     ret = ret >> 4;
1089:Core/Src/AB1805.c ****     break;
1090:Core/Src/AB1805.c ****   case OSC_CONTROL_FOS_MASK:
1091:Core/Src/AB1805.c ****     ret = ret >> 3;
1092:Core/Src/AB1805.c ****     break;
1093:Core/Src/AB1805.c ****   case OSC_CONTROL_PWGT_MASK:
1094:Core/Src/AB1805.c ****     ret = ret >> 2;
1095:Core/Src/AB1805.c ****     break;
1096:Core/Src/AB1805.c ****   case OSC_CONTROL_OFIE_MASK:
1097:Core/Src/AB1805.c ****     ret = ret >> 1;
1098:Core/Src/AB1805.c ****     break;
1099:Core/Src/AB1805.c ****   case OSC_CONTROL_ACIE_MASK:
1100:Core/Src/AB1805.c ****     ret = ret;
1101:Core/Src/AB1805.c ****     break;
1102:Core/Src/AB1805.c ****   default:
1103:Core/Src/AB1805.c ****     ret = _osc_control;
1104:Core/Src/AB1805.c ****   }
1105:Core/Src/AB1805.c ****   return ret;
1106:Core/Src/AB1805.c **** }
1107:Core/Src/AB1805.c **** 
1108:Core/Src/AB1805.c **** uint8_t set_osc_control_value(uint8_t value)
1109:Core/Src/AB1805.c **** {
1110:Core/Src/AB1805.c ****   write_rtc_register(OSC_CONTROL_REGISTER, value);
1111:Core/Src/AB1805.c ****   _osc_control = read_rtc_register(OSC_CONTROL_REGISTER);
1112:Core/Src/AB1805.c ****   return _osc_control;
1113:Core/Src/AB1805.c **** }
1114:Core/Src/AB1805.c **** 
1115:Core/Src/AB1805.c **** uint8_t set_osc_control_value_mask(uint8_t value, uint8_t mask)
1116:Core/Src/AB1805.c **** {
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 21


1117:Core/Src/AB1805.c ****   uint8_t c1;
1118:Core/Src/AB1805.c ****   c1 = get_osc_control();
1119:Core/Src/AB1805.c ****   switch (mask)
1120:Core/Src/AB1805.c ****   {
1121:Core/Src/AB1805.c ****   case OSC_CONTROL_OSEL_MASK:
1122:Core/Src/AB1805.c ****     c1 &= ~OSC_CONTROL_OSEL_MASK;
1123:Core/Src/AB1805.c ****     c1 |= (value << 7) & OSC_CONTROL_OSEL_MASK;
1124:Core/Src/AB1805.c ****     break;
1125:Core/Src/AB1805.c ****   case OSC_CONTROL_ACAL_MASK:
1126:Core/Src/AB1805.c ****     c1 &= ~OSC_CONTROL_ACAL_MASK;
1127:Core/Src/AB1805.c ****     c1 |= (value << 5) & OSC_CONTROL_ACAL_MASK;
1128:Core/Src/AB1805.c ****     break;
1129:Core/Src/AB1805.c ****   case OSC_CONTROL_AOS_MASK:
1130:Core/Src/AB1805.c ****     c1 &= ~OSC_CONTROL_AOS_MASK;
1131:Core/Src/AB1805.c ****     c1 |= (value << 4) & OSC_CONTROL_AOS_MASK;
1132:Core/Src/AB1805.c ****     break;
1133:Core/Src/AB1805.c ****   case OSC_CONTROL_FOS_MASK:
1134:Core/Src/AB1805.c ****     c1 &= ~OSC_CONTROL_FOS_MASK;
1135:Core/Src/AB1805.c ****     c1 |= (value << 3) & OSC_CONTROL_FOS_MASK;
1136:Core/Src/AB1805.c ****     break;
1137:Core/Src/AB1805.c ****   case OSC_CONTROL_PWGT_MASK:
1138:Core/Src/AB1805.c ****     c1 &= ~OSC_CONTROL_PWGT_MASK;
1139:Core/Src/AB1805.c ****     c1 |= (value << 2) & OSC_CONTROL_PWGT_MASK;
1140:Core/Src/AB1805.c ****     break;
1141:Core/Src/AB1805.c ****   case OSC_CONTROL_OFIE_MASK:
1142:Core/Src/AB1805.c ****     c1 &= ~OSC_CONTROL_OFIE_MASK;
1143:Core/Src/AB1805.c ****     c1 |= (value << 1) & OSC_CONTROL_OFIE_MASK;
1144:Core/Src/AB1805.c ****     break;
1145:Core/Src/AB1805.c ****   case OSC_CONTROL_ACIE_MASK:
1146:Core/Src/AB1805.c ****     c1 &= ~OSC_CONTROL_ACIE_MASK;
1147:Core/Src/AB1805.c ****     c1 |= (value)&OSC_CONTROL_ACIE_MASK;
1148:Core/Src/AB1805.c ****     break;
1149:Core/Src/AB1805.c ****   default:
1150:Core/Src/AB1805.c ****     c1 = value;
1151:Core/Src/AB1805.c ****   }
1152:Core/Src/AB1805.c ****   return set_osc_control_value(c1);
1153:Core/Src/AB1805.c **** }
1154:Core/Src/AB1805.c **** 
1155:Core/Src/AB1805.c **** // WDT register
1156:Core/Src/AB1805.c **** uint8_t get_WDT_register(void)
1157:Core/Src/AB1805.c **** {
1158:Core/Src/AB1805.c ****   _wdt_register = read_rtc_register(WDT_REGISTER);
1159:Core/Src/AB1805.c ****   return _wdt_register;
1160:Core/Src/AB1805.c **** }
1161:Core/Src/AB1805.c **** 
1162:Core/Src/AB1805.c **** uint8_t get_WDT_register_mask(uint8_t mask)
1163:Core/Src/AB1805.c **** {
1164:Core/Src/AB1805.c ****   uint8_t ret;
1165:Core/Src/AB1805.c ****   ret = get_WDT_register() & mask;
1166:Core/Src/AB1805.c ****   switch (mask)
1167:Core/Src/AB1805.c ****   {
1168:Core/Src/AB1805.c ****   case WDT_REGISTER_WDS_MASK:
1169:Core/Src/AB1805.c ****     ret = ret >> 7;
1170:Core/Src/AB1805.c ****     break;
1171:Core/Src/AB1805.c ****   case WDT_REGISTER_BMB_MASK:
1172:Core/Src/AB1805.c ****     ret = ret >> 2;
1173:Core/Src/AB1805.c ****     break;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 22


1174:Core/Src/AB1805.c ****   case WDT_REGISTER_WRB_MASK:
1175:Core/Src/AB1805.c ****     ret = ret;
1176:Core/Src/AB1805.c ****     break;
1177:Core/Src/AB1805.c ****   default:
1178:Core/Src/AB1805.c ****     ret = _wdt_register;
1179:Core/Src/AB1805.c ****   }
1180:Core/Src/AB1805.c ****   return ret;
1181:Core/Src/AB1805.c **** }
1182:Core/Src/AB1805.c **** 
1183:Core/Src/AB1805.c **** uint8_t set_value(uint8_t value)
1184:Core/Src/AB1805.c **** {
1185:Core/Src/AB1805.c ****   write_rtc_register(WDT_REGISTER, value);
1186:Core/Src/AB1805.c ****   _wdt_register = read_rtc_register(WDT_REGISTER);
1187:Core/Src/AB1805.c ****   return _wdt_register;
1188:Core/Src/AB1805.c **** }
1189:Core/Src/AB1805.c **** 
1190:Core/Src/AB1805.c **** uint8_t set_WDT_register_mask(uint8_t value, uint8_t mask)
1191:Core/Src/AB1805.c **** {
1192:Core/Src/AB1805.c ****   uint8_t c1;
1193:Core/Src/AB1805.c ****   c1 = get_WDT_register();
1194:Core/Src/AB1805.c ****   switch (mask)
1195:Core/Src/AB1805.c ****   {
1196:Core/Src/AB1805.c ****   case WDT_REGISTER_WDS_MASK:
1197:Core/Src/AB1805.c ****     c1 &= ~WDT_REGISTER_WDS_MASK;
1198:Core/Src/AB1805.c ****     c1 |= (value << 7) & WDT_REGISTER_WDS_MASK;
1199:Core/Src/AB1805.c ****     break;
1200:Core/Src/AB1805.c ****   case WDT_REGISTER_BMB_MASK:
1201:Core/Src/AB1805.c ****     c1 &= ~WDT_REGISTER_BMB_MASK;
1202:Core/Src/AB1805.c ****     c1 |= (value << 2) & WDT_REGISTER_BMB_MASK;
1203:Core/Src/AB1805.c ****     break;
1204:Core/Src/AB1805.c ****   case WDT_REGISTER_WRB_MASK:
1205:Core/Src/AB1805.c ****     c1 &= ~WDT_REGISTER_WRB_MASK;
1206:Core/Src/AB1805.c ****     c1 |= (value)&WDT_REGISTER_WRB_MASK;
1207:Core/Src/AB1805.c ****     break;
1208:Core/Src/AB1805.c ****   default:
1209:Core/Src/AB1805.c ****     c1 = value;
1210:Core/Src/AB1805.c ****   }
1211:Core/Src/AB1805.c ****   return set_WDT_register_value(c1);
1212:Core/Src/AB1805.c **** }
1213:Core/Src/AB1805.c **** 
1214:Core/Src/AB1805.c **** // void enter_sleep_mode_PWR(void)
1215:Core/Src/AB1805.c **** // {
1216:Core/Src/AB1805.c **** //   enter_sleep_mode_PWR_value(SLEEP_CONTROL_SLTO_MAX_VALUE);
1217:Core/Src/AB1805.c **** // }
1218:Core/Src/AB1805.c **** 
1219:Core/Src/AB1805.c **** void enter_sleep_mode_PWR_value(uint8_t value)
1220:Core/Src/AB1805.c **** {
1221:Core/Src/AB1805.c ****   if (get_SLST_sleep())
1222:Core/Src/AB1805.c ****   { // clean previous sleep
1223:Core/Src/AB1805.c ****     clean_SLST_sleep();
1224:Core/Src/AB1805.c ****   }
1225:Core/Src/AB1805.c ****   // set OUT2S sleep mode
1226:Core/Src/AB1805.c ****   // the OUT2S field must be set to a value of 6 to select the SLEEP output.
1227:Core/Src/AB1805.c ****   set_OUT2S_control2(CONTROL2_SLEEP_MODE);
1228:Core/Src/AB1805.c **** 
1229:Core/Src/AB1805.c ****   // Avoiding Unexpected Leakage Paths
1230:Core/Src/AB1805.c ****   // clearing the RSEN,O1EN,O4EN,O3EN,EXDS,WDDS bits in output control register
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 23


1231:Core/Src/AB1805.c ****   set_outcontrol_value_mask(0, CCTRL_SLEEP_MODE_MASK);
1232:Core/Src/AB1805.c **** 
1233:Core/Src/AB1805.c ****   // The I2C or SPI interface pins are disabled in Sleep Mode by setting the PWGT bit in the Oscill
1234:Core/Src/AB1805.c ****   set_osc_control_value_mask(0, OSC_CONTROL_PWGT_MASK);
1235:Core/Src/AB1805.c **** 
1236:Core/Src/AB1805.c ****   // The number of 7.8 ms periods after SLP is set until the Power Control SM goes into the SLEEP s
1237:Core/Src/AB1805.c ****   set_SLTO_sleep(value);
1238:Core/Src/AB1805.c **** 
1239:Core/Src/AB1805.c ****   // set sleep mode
1240:Core/Src/AB1805.c ****   set_SLP_sleep(1);
1241:Core/Src/AB1805.c **** }
1242:Core/Src/AB1805.c **** 
1243:Core/Src/AB1805.c **** /** Parameter:
1244:Core/Src/AB1805.c ****  *  timeout - minimum timeout period in 7.8 ms periods (0 to 7)
1245:Core/Src/AB1805.c ****  *  mode - sleep mode (nRST modes not available in AM08xx)
1246:Core/Src/AB1805.c ****  *      0 => nRST is pulled low in sleep mode
1247:Core/Src/AB1805.c ****  *      1 => PSW/nIRQ2 is pulled high on a sleep
1248:Core/Src/AB1805.c ****  *      2 => nRST pulled low and PSW/nIRQ2 pulled high on sleep
1249:Core/Src/AB1805.c ****  *  error ?returned value of the attempted sleep command
1250:Core/Src/AB1805.c ****  *      0 => sleep request accepted, sleep mode will be initiated in timeout seconds
1251:Core/Src/AB1805.c ****  *      1 => illegal input values
1252:Core/Src/AB1805.c ****  *      2 => sleep request declined, interrupt is currently pending
1253:Core/Src/AB1805.c ****  *      3 => sleep request declined, no sleep trigger interrupt enabled
1254:Core/Src/AB1805.c ****  **/
1255:Core/Src/AB1805.c **** uint8_t enter_sleep_mode(uint8_t timeout, uint8_t mode)
1256:Core/Src/AB1805.c **** {
1257:Core/Src/AB1805.c ****   uint8_t ret = 0;
1258:Core/Src/AB1805.c ****   uint8_t slres = 0;
1259:Core/Src/AB1805.c ****   char temp = 0;
1260:Core/Src/AB1805.c **** 
1261:Core/Src/AB1805.c **** #ifdef DEBUG_SIO
1262:Core/Src/AB1805.c ****   temp = get_SLST_sleep(); // Get SLST bit (temp & 0x08)
1263:Core/Src/AB1805.c **** 
1264:Core/Src/AB1805.c ****   if ((temp) == 0)
1265:Core/Src/AB1805.c ****   {
1266:Core/Src/AB1805.c ****     DBGPRINT("\r\nPrevious Sleep Failed");
1267:Core/Src/AB1805.c ****   }
1268:Core/Src/AB1805.c ****   else
1269:Core/Src/AB1805.c ****   {
1270:Core/Src/AB1805.c ****     DBGPRINT("\r\nPrevious Sleep Successful");
1271:Core/Src/AB1805.c ****   }
1272:Core/Src/AB1805.c ****   clean_SLST_sleep(); // Clear SLST
1273:Core/Src/AB1805.c **** 
1274:Core/Src/AB1805.c ****   temp = get_SLST_sleep(); // Get SLST bit (temp & 0x08)
1275:Core/Src/AB1805.c **** 
1276:Core/Src/AB1805.c ****   if ((temp) == 0)
1277:Core/Src/AB1805.c ****   {
1278:Core/Src/AB1805.c ****     DBGPRINT("\r\nClear Succ");
1279:Core/Src/AB1805.c ****   }
1280:Core/Src/AB1805.c ****   else
1281:Core/Src/AB1805.c ****   {
1282:Core/Src/AB1805.c ****     DBGPRINT("\r\nClear Fail");
1283:Core/Src/AB1805.c ****   }
1284:Core/Src/AB1805.c ****   clean_SLST_sleep(); // Clear SLST
1285:Core/Src/AB1805.c **** #endif
1286:Core/Src/AB1805.c **** 
1287:Core/Src/AB1805.c ****   if (mode > 0)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 24


1288:Core/Src/AB1805.c ****   {
1289:Core/Src/AB1805.c ****     /* Sleep to PSW/nIRQ2 */
1290:Core/Src/AB1805.c ****     temp = get_OUT2S_control2(); // Read OUT2S
1291:Core/Src/AB1805.c ****     temp = (temp & 0xE3) | 0x18; // MUST NOT WRITE OUT2S WITH 000
1292:Core/Src/AB1805.c ****     set_OUT2S_control2(temp);    // Write value to OUT2S
1293:Core/Src/AB1805.c ****     slres = 0;
1294:Core/Src/AB1805.c ****   }
1295:Core/Src/AB1805.c **** 
1296:Core/Src/AB1805.c ****   temp = timeout | (slres << 6) | 0x80; // Assemble SLEEP register value
1297:Core/Src/AB1805.c ****   set_sleep(temp);                      // Write to the register
1298:Core/Src/AB1805.c **** 
1299:Core/Src/AB1805.c **** #ifdef DEBUG_SIO
1300:Core/Src/AB1805.c ****   /* Determine if SLEEP was accepted */
1301:Core/Src/AB1805.c ****   temp = get_SLP_sleep(); // Get SLP bit (temp & 0x80)
1302:Core/Src/AB1805.c **** 
1303:Core/Src/AB1805.c ****   if ((temp) == 0)
1304:Core/Src/AB1805.c ****   {
1305:Core/Src/AB1805.c ****     char reg_wdi_value = 0;
1306:Core/Src/AB1805.c ****     /* SLEEP did not happen - determine why and return reason. */
1307:Core/Src/AB1805.c ****     temp = get_interrupt(); // Get status register interrupt enables
1308:Core/Src/AB1805.c ****     reg_wdi_value = get_WDT_register();
1309:Core/Src/AB1805.c ****     if (((temp & 0x0F) == 0) & (((reg_wdi_value & 0x7C) == 0) || ((reg_wdi_value & 0x80) == 0x80)))
1310:Core/Src/AB1805.c ****     {
1311:Core/Src/AB1805.c ****       ret = 3;
1312:Core/Src/AB1805.c ****       DBGPRINT("\r\nNo trigger interrupts enabled");
1313:Core/Src/AB1805.c ****     }
1314:Core/Src/AB1805.c ****     else
1315:Core/Src/AB1805.c ****     {
1316:Core/Src/AB1805.c ****       ret = 2;
1317:Core/Src/AB1805.c ****       DBGPRINT("\r\nInterrupt pending");
1318:Core/Src/AB1805.c ****     }
1319:Core/Src/AB1805.c ****   }
1320:Core/Src/AB1805.c ****   else
1321:Core/Src/AB1805.c ****   {
1322:Core/Src/AB1805.c ****     ret = 0;
1323:Core/Src/AB1805.c ****     DBGPRINT("\r\nSLEEP request successful");
1324:Core/Src/AB1805.c ****   }
1325:Core/Src/AB1805.c **** #endif
1326:Core/Src/AB1805.c ****   return ret;
1327:Core/Src/AB1805.c **** }
1328:Core/Src/AB1805.c **** 
1329:Core/Src/AB1805.c **** // *********************************__________ MY_____________**********************
1330:Core/Src/AB1805.c **** inline static uint8_t SPI1_SendByte(uint8_t data)
1331:Core/Src/AB1805.c **** {
  26              		.loc 1 1331 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32              		.loc 1 1331 1 is_stmt 0 view .LVU1
  33 0000 01E0     		b	.L3
  34              	.LVL1:
  35              	.L2:
1332:Core/Src/AB1805.c ****   while (LL_SPI_IsActiveFlag_TXE(SPI1) == RESET)
  36              		.loc 1 1332 40 view .LVU2
  37 0002 002B     		cmp	r3, #0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 25


  38 0004 08D1     		bne	.L6
  39              	.L3:
  40              		.loc 1 1332 40 is_stmt 1 discriminator 1 view .LVU3
  41              	.LVL2:
  42              	.LBB10:
  43              	.LBI10:
  44              		.file 2 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h"
   1:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
   2:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   ******************************************************************************
   3:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @file    stm32u0xx_ll_spi.h
   4:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @author  MCD Application Team
   5:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief   Header file of SPI LL module.
   6:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   ******************************************************************************
   7:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @attention
   8:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *
   9:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * Copyright (c) 2023 STMicroelectronics.
  10:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * All rights reserved.
  11:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *
  12:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * in the root directory of this software component.
  14:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *
  16:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   ******************************************************************************
  17:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  18:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  19:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #ifndef STM32U0xx_LL_SPI_H
  21:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define STM32U0xx_LL_SPI_H
  22:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  23:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #ifdef __cplusplus
  24:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** extern "C" {
  25:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #endif
  26:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  27:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #include "stm32u0xx.h"
  29:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  30:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @addtogroup STM32U0xx_LL_Driver
  31:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
  32:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  33:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  34:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #if defined (SPI1) || defined (SPI2) || defined (SPI3)
  35:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  36:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL SPI
  37:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
  38:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  39:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  40:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Private macros ------------------------------------------------------------*/
  43:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  44:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Exported types ------------------------------------------------------------*/
  45:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #if defined(USE_FULL_LL_DRIVER)
  46:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_ES_INIT SPI Exported Init structure
  47:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
  48:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  49:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  50:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 26


  51:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  SPI Init structures definition
  52:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  53:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** typedef struct
  54:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
  55:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t TransferDirection;       /*!< Specifies the SPI unidirectional or bidirectional data mod
  56:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_TRANSFER_M
  57:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  58:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  59:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  60:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t Mode;                    /*!< Specifies the SPI mode (Master/Slave).
  61:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_MODE.
  62:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  63:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  64:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  65:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t DataWidth;               /*!< Specifies the SPI data width.
  66:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_DATAWIDTH.
  67:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  68:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  69:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  70:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t ClockPolarity;           /*!< Specifies the serial clock steady state.
  71:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_POLARITY.
  72:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  73:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  74:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  75:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t ClockPhase;              /*!< Specifies the clock active edge for the bit capture.
  76:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_PHASE.
  77:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  78:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  79:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  80:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t NSS;                     /*!< Specifies whether the NSS signal is managed by hardware (N
  81:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_NSS_MODE.
  82:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  83:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  84:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  85:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t BaudRate;                /*!< Specifies the BaudRate prescaler value which will be used 
  86:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_BAUDRATEPR
  87:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          @note The communication clock is derived from the master c
  88:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  89:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  90:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  91:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t BitOrder;                /*!< Specifies whether data transfers start from MSB or LSB bit
  92:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_BIT_ORDER.
  93:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  94:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  95:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  96:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t CRCCalculation;          /*!< Specifies if the CRC calculation is enabled or not.
  97:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_CRC_CALCUL
  98:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  99:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 100:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 101:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t CRCPoly;                 /*!< Specifies the polynomial used for the CRC calculation.
 102:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter must be a number between Min_Data = 0x00 an
 103:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 104:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 105:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 106:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** } LL_SPI_InitTypeDef;
 107:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 27


 108:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 109:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 110:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 111:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #endif /* USE_FULL_LL_DRIVER */
 112:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 113:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Exported constants --------------------------------------------------------*/
 114:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Constants SPI Exported Constants
 115:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 116:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 117:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 118:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_GET_FLAG Get Flags Defines
 119:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief    Flags defines which can be used with LL_SPI_ReadReg function
 120:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 121:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 122:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_RXNE                     SPI_SR_RXNE               /*!< Rx buffer not empty flag 
 123:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_TXE                      SPI_SR_TXE                /*!< Tx buffer empty flag     
 124:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_BSY                      SPI_SR_BSY                /*!< Busy flag                
 125:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_CRCERR                   SPI_SR_CRCERR             /*!< CRC error flag           
 126:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_MODF                     SPI_SR_MODF               /*!< Mode fault flag          
 127:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_OVR                      SPI_SR_OVR                /*!< Overrun flag             
 128:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_FRE                      SPI_SR_FRE                /*!< TI mode frame format erro
 129:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 130:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 131:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 132:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 133:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_IT IT Defines
 134:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief    IT defines which can be used with LL_SPI_ReadReg and  LL_SPI_WriteReg functions
 135:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 136:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 137:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CR2_RXNEIE                  SPI_CR2_RXNEIE            /*!< Rx buffer not empty inter
 138:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CR2_TXEIE                   SPI_CR2_TXEIE             /*!< Tx buffer empty interrupt
 139:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CR2_ERRIE                   SPI_CR2_ERRIE             /*!< Error interrupt enable   
 140:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 141:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 142:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 143:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 144:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_MODE Operation Mode
 145:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 146:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 147:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_MODE_MASTER                 (SPI_CR1_MSTR | SPI_CR1_SSI)    /*!< Master configuratio
 148:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_MODE_SLAVE                  0x00000000U                     /*!< Slave configuration
 149:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 150:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 151:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 152:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 153:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_PROTOCOL Serial Protocol
 154:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 155:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 156:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_PROTOCOL_MOTOROLA           0x00000000U               /*!< Motorola mode. Used as de
 157:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_PROTOCOL_TI                 (SPI_CR2_FRF)             /*!< TI mode                  
 158:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 159:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 160:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 161:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 162:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_PHASE Clock Phase
 163:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 164:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 28


 165:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_PHASE_1EDGE                 0x00000000U               /*!< First clock transition is
 166:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_PHASE_2EDGE                 (SPI_CR1_CPHA)            /*!< Second clock transition i
 167:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 168:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 169:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 170:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 171:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_POLARITY Clock Polarity
 172:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 173:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 174:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_POLARITY_LOW                0x00000000U               /*!< Clock to 0 when idle */
 175:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_POLARITY_HIGH               (SPI_CR1_CPOL)            /*!< Clock to 1 when idle */
 176:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 177:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 178:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 179:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 180:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_BAUDRATEPRESCALER Baud Rate Prescaler
 181:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 182:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 183:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV2      0x00000000U                                    /*!< Baud
 184:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV4      (SPI_CR1_BR_0)                                 /*!< Baud
 185:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV8      (SPI_CR1_BR_1)                                 /*!< Baud
 186:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV16     (SPI_CR1_BR_1 | SPI_CR1_BR_0)                  /*!< Baud
 187:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV32     (SPI_CR1_BR_2)                                 /*!< Baud
 188:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV64     (SPI_CR1_BR_2 | SPI_CR1_BR_0)                  /*!< Baud
 189:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV128    (SPI_CR1_BR_2 | SPI_CR1_BR_1)                  /*!< Baud
 190:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV256    (SPI_CR1_BR_2 | SPI_CR1_BR_1 | SPI_CR1_BR_0)   /*!< Baud
 191:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 192:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 193:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 194:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 195:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_BIT_ORDER Transmission Bit Order
 196:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 197:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 198:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_LSB_FIRST                   (SPI_CR1_LSBFIRST)        /*!< Data is transmitted/recei
 199:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_MSB_FIRST                   0x00000000U               /*!< Data is transmitted/recei
 200:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 201:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 202:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 203:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 204:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_TRANSFER_MODE Transfer Mode
 205:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 206:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 207:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_FULL_DUPLEX                 0x00000000U                          /*!< Full-Duplex mo
 208:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SIMPLEX_RX                  (SPI_CR1_RXONLY)                     /*!< Simplex Rx mod
 209:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_HALF_DUPLEX_RX              (SPI_CR1_BIDIMODE)                   /*!< Half-Duplex Rx
 210:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_HALF_DUPLEX_TX              (SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE)  /*!< Half-Duplex Tx
 211:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 212:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 213:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 214:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 215:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_NSS_MODE Slave Select Pin Mode
 216:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 217:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 218:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_NSS_SOFT                    (SPI_CR1_SSM)                     /*!< NSS managed inter
 219:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_NSS_HARD_INPUT              0x00000000U                       /*!< NSS pin used in I
 220:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_NSS_HARD_OUTPUT             (((uint32_t)SPI_CR2_SSOE << 16U)) /*!< NSS pin used in O
 221:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 29


 222:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 223:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 224:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 225:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_DATAWIDTH Datawidth
 226:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 227:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 228:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_4BIT              (SPI_CR2_DS_0 | SPI_CR2_DS_1)                           
 229:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_5BIT              (SPI_CR2_DS_2)                                          
 230:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_6BIT              (SPI_CR2_DS_2 | SPI_CR2_DS_0)                           
 231:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_7BIT              (SPI_CR2_DS_2 | SPI_CR2_DS_1)                           
 232:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_8BIT              (SPI_CR2_DS_2 | SPI_CR2_DS_1 | SPI_CR2_DS_0)            
 233:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_9BIT              (SPI_CR2_DS_3)                                          
 234:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_10BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_0)                           
 235:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_11BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_1)                           
 236:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_12BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_1 | SPI_CR2_DS_0)            
 237:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_13BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2)                           
 238:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_14BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2 | SPI_CR2_DS_0)            
 239:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_15BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2 | SPI_CR2_DS_1)            
 240:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_16BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2 | SPI_CR2_DS_1 | SPI_CR2_DS
 241:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 242:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 243:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 244:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #if defined(USE_FULL_LL_DRIVER)
 245:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 246:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_CRC_CALCULATION CRC Calculation
 247:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 248:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 249:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CRCCALCULATION_DISABLE      0x00000000U               /*!< CRC calculation disabled 
 250:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CRCCALCULATION_ENABLE       (SPI_CR1_CRCEN)           /*!< CRC calculation enabled  
 251:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 252:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 253:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 254:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #endif /* USE_FULL_LL_DRIVER */
 255:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_CRC_LENGTH CRC Length
 257:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 258:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 259:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CRC_8BIT                    0x00000000U               /*!<  8-bit CRC length */
 260:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CRC_16BIT                   (SPI_CR1_CRCL)            /*!< 16-bit CRC length */
 261:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 262:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 263:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 264:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 265:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_RX_FIFO_TH RX FIFO Threshold
 266:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 267:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 268:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_TH_HALF             0x00000000U               /*!< RXNE event is generated i
 269:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_TH_QUARTER          (SPI_CR2_FRXTH)           /*!< RXNE event is generated i
 270:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 271:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 272:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 273:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 274:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_RX_FIFO RX FIFO Level
 275:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 276:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 277:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_EMPTY               0x00000000U                       /*!< FIFO reception em
 278:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_QUARTER_FULL        (SPI_SR_FRLVL_0)                  /*!< FIFO reception 1/
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 30


 279:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_HALF_FULL           (SPI_SR_FRLVL_1)                  /*!< FIFO reception 1/
 280:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_FULL                (SPI_SR_FRLVL_1 | SPI_SR_FRLVL_0) /*!< FIFO reception fu
 281:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 282:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 283:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 284:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 285:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_TX_FIFO TX FIFO Level
 286:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 287:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 288:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_EMPTY               0x00000000U                       /*!< FIFO transmission
 289:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_QUARTER_FULL        (SPI_SR_FTLVL_0)                  /*!< FIFO transmission
 290:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_HALF_FULL           (SPI_SR_FTLVL_1)                  /*!< FIFO transmission
 291:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_FULL                (SPI_SR_FTLVL_1 | SPI_SR_FTLVL_0) /*!< FIFO transmission
 292:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 293:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 294:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 295:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 296:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_DMA_PARITY DMA Parity
 297:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 298:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 299:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DMA_PARITY_EVEN             0x00000000U   /*!< Select DMA parity Even */
 300:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DMA_PARITY_ODD              0x00000001U   /*!< Select DMA parity Odd  */
 301:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 302:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 303:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 304:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 305:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 306:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 307:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 308:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 309:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 310:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Exported macro ------------------------------------------------------------*/
 311:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Macros SPI Exported Macros
 312:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 313:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 314:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 315:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EM_WRITE_READ Common Write and read registers Macros
 316:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 317:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 318:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 319:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 320:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Write a value in SPI register
 321:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __INSTANCE__ SPI Instance
 322:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __REG__ Register to be written
 323:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __VALUE__ Value to be written in the register
 324:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 325:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 326:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 327:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 328:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 329:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Read a value in SPI register
 330:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __INSTANCE__ SPI Instance
 331:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __REG__ Register to be read
 332:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Register value
 333:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 334:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 31


 336:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 337:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 338:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 339:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 340:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 341:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 342:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 343:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Exported functions --------------------------------------------------------*/
 344:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Functions SPI Exported Functions
 345:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 346:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 347:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 348:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_Configuration Configuration
 349:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 350:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 351:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 352:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 353:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable SPI peripheral
 354:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_Enable
 355:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 356:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 357:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 358:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_Enable(SPI_TypeDef *SPIx)
 359:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 360:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_SPE);
 361:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 362:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 363:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 364:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable SPI peripheral
 365:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   When disabling the SPI, follow the procedure described in the Reference Manual.
 366:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_Disable
 367:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 368:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 369:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 370:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_Disable(SPI_TypeDef *SPIx)
 371:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 372:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_SPE);
 373:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 374:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 375:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 376:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if SPI peripheral is enabled
 377:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_IsEnabled
 378:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 379:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 380:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 381:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabled(SPI_TypeDef *SPIx)
 382:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 383:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR1, SPI_CR1_SPE) == (SPI_CR1_SPE)) ? 1UL : 0UL);
 384:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 385:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 386:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 387:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set SPI operation mode to Master or Slave
 388:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 389:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          MSTR          LL_SPI_SetMode\n
 390:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          SSI           LL_SPI_SetMode
 391:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 392:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Mode This parameter can be one of the following values:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 32


 393:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_MASTER
 394:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_SLAVE
 395:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 396:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 397:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetMode(SPI_TypeDef *SPIx, uint32_t Mode)
 398:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 399:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_MSTR | SPI_CR1_SSI, Mode);
 400:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 401:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 402:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 403:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get SPI operation mode (Master or Slave)
 404:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          MSTR          LL_SPI_GetMode\n
 405:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          SSI           LL_SPI_GetMode
 406:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 407:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 408:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_MASTER
 409:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_SLAVE
 410:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 411:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetMode(SPI_TypeDef *SPIx)
 412:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 413:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_MSTR | SPI_CR1_SSI));
 414:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 415:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 416:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 417:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set serial protocol used
 418:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 419:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          FRF           LL_SPI_SetStandard
 420:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 421:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Standard This parameter can be one of the following values:
 422:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_MOTOROLA
 423:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_TI
 424:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 425:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 426:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetStandard(SPI_TypeDef *SPIx, uint32_t Standard)
 427:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 428:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_FRF, Standard);
 429:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 430:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 431:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 432:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get serial protocol used
 433:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          FRF           LL_SPI_GetStandard
 434:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 435:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 436:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_MOTOROLA
 437:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_TI
 438:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 439:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetStandard(SPI_TypeDef *SPIx)
 440:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 441:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_FRF));
 442:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 443:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 444:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 445:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set clock phase
 446:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 447:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         This bit is not used in SPI TI mode.
 448:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CPHA          LL_SPI_SetClockPhase
 449:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 33


 450:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  ClockPhase This parameter can be one of the following values:
 451:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_1EDGE
 452:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_2EDGE
 453:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 454:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 455:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetClockPhase(SPI_TypeDef *SPIx, uint32_t ClockPhase)
 456:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 457:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CPHA, ClockPhase);
 458:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 459:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 460:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 461:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get clock phase
 462:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CPHA          LL_SPI_GetClockPhase
 463:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 464:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 465:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_1EDGE
 466:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_2EDGE
 467:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 468:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetClockPhase(SPI_TypeDef *SPIx)
 469:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 470:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CPHA));
 471:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 472:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 473:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 474:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set clock polarity
 475:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 476:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         This bit is not used in SPI TI mode.
 477:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CPOL          LL_SPI_SetClockPolarity
 478:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 479:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 480:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_LOW
 481:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_HIGH
 482:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 483:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 484:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetClockPolarity(SPI_TypeDef *SPIx, uint32_t ClockPolarity)
 485:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 486:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CPOL, ClockPolarity);
 487:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 488:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 489:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 490:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get clock polarity
 491:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CPOL          LL_SPI_GetClockPolarity
 492:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 493:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 494:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_LOW
 495:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_HIGH
 496:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 497:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetClockPolarity(SPI_TypeDef *SPIx)
 498:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 499:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CPOL));
 500:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 501:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 502:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 503:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set baud rate prescaler
 504:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   These bits should not be changed when communication is ongoing. SPI BaudRate = fPCLK/Pr
 505:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          BR            LL_SPI_SetBaudRatePrescaler
 506:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 34


 507:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  BaudRate This parameter can be one of the following values:
 508:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV2
 509:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV4
 510:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV8
 511:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV16
 512:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV32
 513:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV64
 514:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV128
 515:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV256
 516:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 517:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 518:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetBaudRatePrescaler(SPI_TypeDef *SPIx, uint32_t BaudRate)
 519:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 520:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_BR, BaudRate);
 521:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 522:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 523:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 524:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get baud rate prescaler
 525:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          BR            LL_SPI_GetBaudRatePrescaler
 526:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 527:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 528:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV2
 529:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV4
 530:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV8
 531:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV16
 532:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV32
 533:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV64
 534:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV128
 535:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV256
 536:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 537:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetBaudRatePrescaler(SPI_TypeDef *SPIx)
 538:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 539:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_BR));
 540:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 541:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 542:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 543:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set transfer bit order
 544:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 545:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          LSBFIRST      LL_SPI_SetTransferBitOrder
 546:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 547:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  BitOrder This parameter can be one of the following values:
 548:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_LSB_FIRST
 549:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MSB_FIRST
 550:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 551:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 552:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetTransferBitOrder(SPI_TypeDef *SPIx, uint32_t BitOrder)
 553:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 554:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_LSBFIRST, BitOrder);
 555:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 556:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 557:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 558:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get transfer bit order
 559:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          LSBFIRST      LL_SPI_GetTransferBitOrder
 560:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 561:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 562:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_LSB_FIRST
 563:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MSB_FIRST
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 35


 564:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 565:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTransferBitOrder(SPI_TypeDef *SPIx)
 566:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 567:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_LSBFIRST));
 568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 569:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 570:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 571:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set transfer direction mode
 572:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   For Half-Duplex mode, Rx Direction is set by default.
 573:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         In master mode, the MOSI pin is used and in slave mode, the MISO pin is used for Half-D
 574:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          RXONLY        LL_SPI_SetTransferDirection\n
 575:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          BIDIMODE      LL_SPI_SetTransferDirection\n
 576:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          BIDIOE        LL_SPI_SetTransferDirection
 577:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 578:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  TransferDirection This parameter can be one of the following values:
 579:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_FULL_DUPLEX
 580:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_SIMPLEX_RX
 581:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_RX
 582:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_TX
 583:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 584:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 585:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetTransferDirection(SPI_TypeDef *SPIx, uint32_t TransferDirection)
 586:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 587:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_RXONLY | SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE, TransferDirection);
 588:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 589:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 590:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 591:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get transfer direction mode
 592:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          RXONLY        LL_SPI_GetTransferDirection\n
 593:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          BIDIMODE      LL_SPI_GetTransferDirection\n
 594:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          BIDIOE        LL_SPI_GetTransferDirection
 595:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 596:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 597:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_FULL_DUPLEX
 598:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_SIMPLEX_RX
 599:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_RX
 600:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_TX
 601:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 602:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTransferDirection(SPI_TypeDef *SPIx)
 603:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 604:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_RXONLY | SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE));
 605:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 606:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 607:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 608:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set frame data width
 609:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          DS            LL_SPI_SetDataWidth
 610:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 611:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  DataWidth This parameter can be one of the following values:
 612:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_4BIT
 613:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_5BIT
 614:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_6BIT
 615:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_7BIT
 616:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_8BIT
 617:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_9BIT
 618:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_10BIT
 619:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_11BIT
 620:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_12BIT
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 36


 621:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_13BIT
 622:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_14BIT
 623:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_15BIT
 624:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_16BIT
 625:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 626:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 627:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetDataWidth(SPI_TypeDef *SPIx, uint32_t DataWidth)
 628:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 629:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_DS, DataWidth);
 630:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 631:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 632:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 633:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get frame data width
 634:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          DS            LL_SPI_GetDataWidth
 635:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 636:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 637:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_4BIT
 638:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_5BIT
 639:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_6BIT
 640:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_7BIT
 641:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_8BIT
 642:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_9BIT
 643:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_10BIT
 644:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_11BIT
 645:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_12BIT
 646:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_13BIT
 647:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_14BIT
 648:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_15BIT
 649:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_16BIT
 650:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 651:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetDataWidth(SPI_TypeDef *SPIx)
 652:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 653:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_DS));
 654:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 655:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 656:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 657:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set threshold of RXFIFO that triggers an RXNE event
 658:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          FRXTH         LL_SPI_SetRxFIFOThreshold
 659:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 660:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Threshold This parameter can be one of the following values:
 661:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_HALF
 662:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_QUARTER
 663:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 664:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 665:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetRxFIFOThreshold(SPI_TypeDef *SPIx, uint32_t Threshold)
 666:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 667:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_FRXTH, Threshold);
 668:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 669:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 670:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 671:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get threshold of RXFIFO that triggers an RXNE event
 672:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          FRXTH         LL_SPI_GetRxFIFOThreshold
 673:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 674:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 675:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_HALF
 676:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_QUARTER
 677:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 37


 678:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetRxFIFOThreshold(SPI_TypeDef *SPIx)
 679:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 680:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_FRXTH));
 681:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 682:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 683:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 684:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 685:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 686:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 687:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_CRC_Management CRC Management
 688:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 689:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 690:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 691:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 692:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable CRC
 693:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 694:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_EnableCRC
 695:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 696:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 697:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 698:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableCRC(SPI_TypeDef *SPIx)
 699:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 700:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_CRCEN);
 701:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 702:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 703:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 704:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable CRC
 705:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 706:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_DisableCRC
 707:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 708:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 709:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 710:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableCRC(SPI_TypeDef *SPIx)
 711:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 712:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_CRCEN);
 713:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 714:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 715:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 716:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if CRC is enabled
 717:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 718:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_IsEnabledCRC
 719:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 720:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 721:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 722:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledCRC(SPI_TypeDef *SPIx)
 723:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 724:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR1, SPI_CR1_CRCEN) == (SPI_CR1_CRCEN)) ? 1UL : 0UL);
 725:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 726:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 727:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 728:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set CRC Length
 729:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 730:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCL          LL_SPI_SetCRCWidth
 731:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 732:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  CRCLength This parameter can be one of the following values:
 733:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_8BIT
 734:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_16BIT
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 38


 735:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 736:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 737:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCWidth(SPI_TypeDef *SPIx, uint32_t CRCLength)
 738:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 739:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CRCL, CRCLength);
 740:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 741:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 742:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 743:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get CRC Length
 744:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCL          LL_SPI_GetCRCWidth
 745:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 746:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 747:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_8BIT
 748:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_16BIT
 749:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 750:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetCRCWidth(SPI_TypeDef *SPIx)
 751:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 752:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CRCL));
 753:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 754:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 755:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 756:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set CRCNext to transfer CRC on the line
 757:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit has to be written as soon as the last data is written in the SPIx_DR register.
 758:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCNEXT       LL_SPI_SetCRCNext
 759:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 760:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 761:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 762:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCNext(SPI_TypeDef *SPIx)
 763:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 764:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_CRCNEXT);
 765:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 766:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 767:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 768:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set polynomial for CRC calculation
 769:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CRCPR        CRCPOLY       LL_SPI_SetCRCPolynomial
 770:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 771:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  CRCPoly This parameter must be a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 772:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 773:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 774:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCPolynomial(SPI_TypeDef *SPIx, uint32_t CRCPoly)
 775:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 776:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   WRITE_REG(SPIx->CRCPR, (uint16_t)CRCPoly);
 777:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 778:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 779:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 780:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get polynomial for CRC calculation
 781:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CRCPR        CRCPOLY       LL_SPI_GetCRCPolynomial
 782:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 783:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 784:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 785:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetCRCPolynomial(SPI_TypeDef *SPIx)
 786:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 787:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->CRCPR));
 788:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 789:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 790:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 791:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get Rx CRC
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 39


 792:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll RXCRCR       RXCRC         LL_SPI_GetRxCRC
 793:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 794:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 795:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 796:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetRxCRC(SPI_TypeDef *SPIx)
 797:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 798:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->RXCRCR));
 799:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 800:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 801:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 802:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get Tx CRC
 803:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll TXCRCR       TXCRC         LL_SPI_GetTxCRC
 804:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 805:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 806:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 807:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTxCRC(SPI_TypeDef *SPIx)
 808:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 809:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->TXCRCR));
 810:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 811:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 812:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 813:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 814:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 815:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 816:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_NSS_Management Slave Select Pin Management
 817:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 818:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 819:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 820:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 821:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set NSS mode
 822:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   LL_SPI_NSS_SOFT Mode is not used in SPI TI mode.
 823:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SSM           LL_SPI_SetNSSMode\n
 824:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          SSOE          LL_SPI_SetNSSMode
 825:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 826:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  NSS This parameter can be one of the following values:
 827:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_SOFT
 828:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_INPUT
 829:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_OUTPUT
 830:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 831:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 832:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetNSSMode(SPI_TypeDef *SPIx, uint32_t NSS)
 833:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 834:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_SSM,  NSS);
 835:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_SSOE, ((uint32_t)(NSS >> 16U)));
 836:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 837:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 838:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 839:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get NSS mode
 840:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SSM           LL_SPI_GetNSSMode\n
 841:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          SSOE          LL_SPI_GetNSSMode
 842:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 843:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 844:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_SOFT
 845:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_INPUT
 846:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_OUTPUT
 847:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 848:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetNSSMode(SPI_TypeDef *SPIx)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 40


 849:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 850:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t Ssm  = (READ_BIT(SPIx->CR1, SPI_CR1_SSM));
 851:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t Ssoe = (READ_BIT(SPIx->CR2,  SPI_CR2_SSOE) << 16U);
 852:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (Ssm | Ssoe);
 853:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 854:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 855:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 856:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable NSS pulse management
 857:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 858:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          NSSP          LL_SPI_EnableNSSPulseMgt
 859:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 860:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 861:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 862:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableNSSPulseMgt(SPI_TypeDef *SPIx)
 863:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 864:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_NSSP);
 865:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 866:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 867:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 868:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable NSS pulse management
 869:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 870:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          NSSP          LL_SPI_DisableNSSPulseMgt
 871:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 872:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 873:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 874:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableNSSPulseMgt(SPI_TypeDef *SPIx)
 875:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 876:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_NSSP);
 877:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 878:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 879:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 880:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if NSS pulse is enabled
 881:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 882:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          NSSP          LL_SPI_IsEnabledNSSPulse
 883:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 884:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 885:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 886:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledNSSPulse(SPI_TypeDef *SPIx)
 887:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 888:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_NSSP) == (SPI_CR2_NSSP)) ? 1UL : 0UL);
 889:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 890:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 891:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 892:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 893:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 894:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 895:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_FLAG_Management FLAG Management
 896:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 897:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 898:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 899:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 900:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if Rx buffer is not empty
 901:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           RXNE          LL_SPI_IsActiveFlag_RXNE
 902:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 903:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 904:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 905:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_RXNE(SPI_TypeDef *SPIx)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 41


 906:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_RXNE) == (SPI_SR_RXNE)) ? 1UL : 0UL);
 908:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 909:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 910:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 911:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if Tx buffer is empty
 912:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           TXE           LL_SPI_IsActiveFlag_TXE
 913:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 914:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 915:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 916:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_TXE(SPI_TypeDef *SPIx)
  45              		.loc 2 916 26 discriminator 1 view .LVU4
  46              	.LBB11:
 917:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 918:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_TXE) == (SPI_SR_TXE)) ? 1UL : 0UL);
  47              		.loc 2 918 3 discriminator 1 view .LVU5
  48              		.loc 2 918 12 is_stmt 0 discriminator 1 view .LVU6
  49 0006 0D4B     		ldr	r3, .L8
  50 0008 9A68     		ldr	r2, [r3, #8]
  51 000a 0221     		movs	r1, #2
  52 000c 0B00     		movs	r3, r1
  53 000e 1340     		ands	r3, r2
  54              		.loc 2 918 66 discriminator 1 view .LVU7
  55 0010 1142     		tst	r1, r2
  56 0012 F6D0     		beq	.L2
  57              		.loc 2 918 66 view .LVU8
  58 0014 0123     		movs	r3, #1
  59 0016 F4E7     		b	.L2
  60              	.LVL3:
  61              	.L6:
  62              		.loc 2 918 66 view .LVU9
  63              	.LBE11:
  64              	.LBE10:
1333:Core/Src/AB1805.c ****     ;
1334:Core/Src/AB1805.c ****   LL_SPI_TransmitData8(SPI1, data);
  65              		.loc 1 1334 3 is_stmt 1 view .LVU10
  66              	.LBB12:
  67              	.LBI12:
 919:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 920:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 921:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 922:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get CRC error flag
 923:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           CRCERR        LL_SPI_IsActiveFlag_CRCERR
 924:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 925:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 926:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 927:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_CRCERR(SPI_TypeDef *SPIx)
 928:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 929:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_CRCERR) == (SPI_SR_CRCERR)) ? 1UL : 0UL);
 930:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 931:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 932:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 933:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get mode fault error flag
 934:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           MODF          LL_SPI_IsActiveFlag_MODF
 935:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 936:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 937:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 42


 938:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_MODF(SPI_TypeDef *SPIx)
 939:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 940:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_MODF) == (SPI_SR_MODF)) ? 1UL : 0UL);
 941:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 942:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 943:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 944:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get overrun error flag
 945:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           OVR           LL_SPI_IsActiveFlag_OVR
 946:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 947:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 948:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 949:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_OVR(SPI_TypeDef *SPIx)
 950:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 951:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_OVR) == (SPI_SR_OVR)) ? 1UL : 0UL);
 952:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 953:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 954:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 955:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get busy flag
 956:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   The BSY flag is cleared under any one of the following conditions:
 957:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * -When the SPI is correctly disabled
 958:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * -When a fault is detected in Master mode (MODF bit set to 1)
 959:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * -In Master mode, when it finishes a data transmission and no new data is ready to be
 960:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * sent
 961:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * -In Slave mode, when the BSY flag is set to '0' for at least one SPI clock cycle between
 962:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * each data transfer.
 963:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           BSY           LL_SPI_IsActiveFlag_BSY
 964:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 965:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 966:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 967:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_BSY(SPI_TypeDef *SPIx)
 968:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 969:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_BSY) == (SPI_SR_BSY)) ? 1UL : 0UL);
 970:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 971:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 972:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 973:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get frame format error flag
 974:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           FRE           LL_SPI_IsActiveFlag_FRE
 975:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 976:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 977:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 978:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_FRE(SPI_TypeDef *SPIx)
 979:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 980:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_FRE) == (SPI_SR_FRE)) ? 1UL : 0UL);
 981:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 982:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 983:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 984:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get FIFO reception Level
 985:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           FRLVL         LL_SPI_GetRxFIFOLevel
 986:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 987:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 988:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_EMPTY
 989:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_QUARTER_FULL
 990:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_HALF_FULL
 991:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_FULL
 992:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 993:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetRxFIFOLevel(SPI_TypeDef *SPIx)
 994:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 43


 995:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->SR, SPI_SR_FRLVL));
 996:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 997:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 998:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 999:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get FIFO Transmission Level
1000:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           FTLVL         LL_SPI_GetTxFIFOLevel
1001:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1002:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
1003:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_TX_FIFO_EMPTY
1004:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_TX_FIFO_QUARTER_FULL
1005:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_TX_FIFO_HALF_FULL
1006:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_TX_FIFO_FULL
1007:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1008:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTxFIFOLevel(SPI_TypeDef *SPIx)
1009:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1010:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->SR, SPI_SR_FTLVL));
1011:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1012:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1013:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1014:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Clear CRC error flag
1015:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           CRCERR        LL_SPI_ClearFlag_CRCERR
1016:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1017:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1018:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1019:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_CRCERR(SPI_TypeDef *SPIx)
1020:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1021:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->SR, SPI_SR_CRCERR);
1022:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1023:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1024:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1025:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Clear mode fault error flag
1026:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   Clearing this flag is done by a read access to the SPIx_SR
1027:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         register followed by a write access to the SPIx_CR1 register
1028:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           MODF          LL_SPI_ClearFlag_MODF
1029:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1030:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1031:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1032:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_MODF(SPI_TypeDef *SPIx)
1033:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1034:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   __IO uint32_t tmpreg_sr;
1035:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   tmpreg_sr = SPIx->SR;
1036:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   (void) tmpreg_sr;
1037:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_SPE);
1038:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1039:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1040:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1041:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Clear overrun error flag
1042:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   Clearing this flag is done by a read access to the SPIx_DR
1043:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         register followed by a read access to the SPIx_SR register
1044:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           OVR           LL_SPI_ClearFlag_OVR
1045:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1046:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1047:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1048:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_OVR(SPI_TypeDef *SPIx)
1049:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1050:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   __IO uint32_t tmpreg;
1051:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   tmpreg = SPIx->DR;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 44


1052:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   (void) tmpreg;
1053:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   tmpreg = SPIx->SR;
1054:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   (void) tmpreg;
1055:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1056:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1057:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1058:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Clear frame format error flag
1059:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   Clearing this flag is done by reading SPIx_SR register
1060:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           FRE           LL_SPI_ClearFlag_FRE
1061:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1062:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1063:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1064:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_FRE(SPI_TypeDef *SPIx)
1065:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1066:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   __IO uint32_t tmpreg;
1067:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   tmpreg = SPIx->SR;
1068:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   (void) tmpreg;
1069:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1070:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1071:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1072:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
1073:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1074:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1075:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_IT_Management Interrupt Management
1076:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
1077:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1078:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1079:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1080:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable error interrupt
1081:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit controls the generation of an interrupt when an error condition occurs (CRCERR
1082:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_EnableIT_ERR
1083:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1084:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1085:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1086:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_ERR(SPI_TypeDef *SPIx)
1087:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1088:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_ERRIE);
1089:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1090:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1091:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1092:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable Rx buffer not empty interrupt
1093:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_EnableIT_RXNE
1094:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1095:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1096:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1097:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_RXNE(SPI_TypeDef *SPIx)
1098:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1099:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_RXNEIE);
1100:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1101:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1102:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1103:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable Tx buffer empty interrupt
1104:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_EnableIT_TXE
1105:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1106:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1107:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1108:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_TXE(SPI_TypeDef *SPIx)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 45


1109:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1110:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_TXEIE);
1111:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1112:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1113:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1114:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable error interrupt
1115:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit controls the generation of an interrupt when an error condition occurs (CRCERR
1116:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_DisableIT_ERR
1117:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1118:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1119:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1120:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_ERR(SPI_TypeDef *SPIx)
1121:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1122:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_ERRIE);
1123:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1124:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1125:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1126:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable Rx buffer not empty interrupt
1127:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_DisableIT_RXNE
1128:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1129:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1130:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1131:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_RXNE(SPI_TypeDef *SPIx)
1132:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1133:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_RXNEIE);
1134:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1135:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1136:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1137:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable Tx buffer empty interrupt
1138:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_DisableIT_TXE
1139:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1140:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1141:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1142:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_TXE(SPI_TypeDef *SPIx)
1143:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1144:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_TXEIE);
1145:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1146:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1147:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1148:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if error interrupt is enabled
1149:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_IsEnabledIT_ERR
1150:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1151:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1152:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1153:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_ERR(SPI_TypeDef *SPIx)
1154:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1155:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_ERRIE) == (SPI_CR2_ERRIE)) ? 1UL : 0UL);
1156:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1157:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1158:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1159:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if Rx buffer not empty interrupt is enabled
1160:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_IsEnabledIT_RXNE
1161:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1162:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1163:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1164:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_RXNE(SPI_TypeDef *SPIx)
1165:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 46


1166:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_RXNEIE) == (SPI_CR2_RXNEIE)) ? 1UL : 0UL);
1167:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1168:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1169:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1170:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if Tx buffer empty interrupt
1171:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_IsEnabledIT_TXE
1172:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1173:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1174:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1175:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_TXE(SPI_TypeDef *SPIx)
1176:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1177:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_TXEIE) == (SPI_CR2_TXEIE)) ? 1UL : 0UL);
1178:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1179:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1180:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1181:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
1182:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1183:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1184:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_DMA_Management DMA Management
1185:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
1186:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1187:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1188:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1189:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable DMA Rx
1190:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_EnableDMAReq_RX
1191:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1192:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1193:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1194:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableDMAReq_RX(SPI_TypeDef *SPIx)
1195:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1196:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_RXDMAEN);
1197:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1198:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1199:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1200:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable DMA Rx
1201:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_DisableDMAReq_RX
1202:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1203:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1204:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1205:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableDMAReq_RX(SPI_TypeDef *SPIx)
1206:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1207:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_RXDMAEN);
1208:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1209:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1210:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1211:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if DMA Rx is enabled
1212:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_IsEnabledDMAReq_RX
1213:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1214:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1215:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1216:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledDMAReq_RX(SPI_TypeDef *SPIx)
1217:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1218:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_RXDMAEN) == (SPI_CR2_RXDMAEN)) ? 1UL : 0UL);
1219:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1220:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1221:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1222:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable DMA Tx
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 47


1223:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_EnableDMAReq_TX
1224:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1225:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1226:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1227:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableDMAReq_TX(SPI_TypeDef *SPIx)
1228:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1229:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_TXDMAEN);
1230:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1231:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1232:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1233:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable DMA Tx
1234:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_DisableDMAReq_TX
1235:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1236:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1237:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1238:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableDMAReq_TX(SPI_TypeDef *SPIx)
1239:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1240:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_TXDMAEN);
1241:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1242:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1243:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1244:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if DMA Tx is enabled
1245:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_IsEnabledDMAReq_TX
1246:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1247:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1248:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1249:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledDMAReq_TX(SPI_TypeDef *SPIx)
1250:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1251:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_TXDMAEN) == (SPI_CR2_TXDMAEN)) ? 1UL : 0UL);
1252:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1253:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1254:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1255:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set parity of  Last DMA reception
1256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          LDMARX        LL_SPI_SetDMAParity_RX
1257:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1258:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Parity This parameter can be one of the following values:
1259:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_ODD
1260:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_EVEN
1261:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1262:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1263:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetDMAParity_RX(SPI_TypeDef *SPIx, uint32_t Parity)
1264:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1265:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_LDMARX, (Parity << SPI_CR2_LDMARX_Pos));
1266:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1267:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1268:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1269:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get parity configuration for  Last DMA reception
1270:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          LDMARX        LL_SPI_GetDMAParity_RX
1271:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1272:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
1273:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_ODD
1274:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_EVEN
1275:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1276:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetDMAParity_RX(SPI_TypeDef *SPIx)
1277:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1278:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_LDMARX) >> SPI_CR2_LDMARX_Pos);
1279:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 48


1280:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1281:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1282:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set parity of  Last DMA transmission
1283:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          LDMATX        LL_SPI_SetDMAParity_TX
1284:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1285:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Parity This parameter can be one of the following values:
1286:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_ODD
1287:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_EVEN
1288:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1289:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1290:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetDMAParity_TX(SPI_TypeDef *SPIx, uint32_t Parity)
1291:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1292:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_LDMATX, (Parity << SPI_CR2_LDMATX_Pos));
1293:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1294:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1295:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1296:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get parity configuration for Last DMA transmission
1297:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          LDMATX        LL_SPI_GetDMAParity_TX
1298:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1299:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
1300:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_ODD
1301:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_EVEN
1302:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1303:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetDMAParity_TX(SPI_TypeDef *SPIx)
1304:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1305:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_LDMATX) >> SPI_CR2_LDMATX_Pos);
1306:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1307:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1308:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1309:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get the data register address used for DMA transfer
1310:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_DMA_GetRegAddr
1311:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1312:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Address of data register
1313:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1314:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_DMA_GetRegAddr(SPI_TypeDef *SPIx)
1315:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1316:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t) &(SPIx->DR);
1317:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1318:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1319:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1320:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
1321:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1322:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1323:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_DATA_Management DATA Management
1324:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
1325:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1326:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1327:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1328:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Read 8-Bits in the data register
1329:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_ReceiveData8
1330:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1331:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval RxData Value between Min_Data=0x00 and Max_Data=0xFF
1332:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1333:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint8_t LL_SPI_ReceiveData8(SPI_TypeDef *SPIx)
1334:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (*((__IO uint8_t *)&SPIx->DR));
1336:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 49


1337:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1338:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1339:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Read 16-Bits in the data register
1340:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_ReceiveData16
1341:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1342:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval RxData Value between Min_Data=0x00 and Max_Data=0xFFFF
1343:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1344:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint16_t LL_SPI_ReceiveData16(SPI_TypeDef *SPIx)
1345:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1346:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint16_t)(READ_REG(SPIx->DR));
1347:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1348:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1349:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1350:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Write 8-Bits in the data register
1351:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_TransmitData8
1352:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1353:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  TxData Value between Min_Data=0x00 and Max_Data=0xFF
1354:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1355:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1356:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_TransmitData8(SPI_TypeDef *SPIx, uint8_t TxData)
  68              		.loc 2 1356 22 view .LVU11
  69              	.LBB13:
1357:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1358:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #if defined (__GNUC__)
1359:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   __IO uint8_t *spidr = ((__IO uint8_t *)&SPIx->DR);
  70              		.loc 2 1359 3 view .LVU12
1360:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *spidr = TxData;
  71              		.loc 2 1360 3 view .LVU13
  72              		.loc 2 1360 10 is_stmt 0 view .LVU14
  73 0018 084A     		ldr	r2, .L8
  74 001a 1073     		strb	r0, [r2, #12]
1361:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #else
1362:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *((__IO uint8_t *)&SPIx->DR) = TxData;
1363:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #endif /* __GNUC__ */
1364:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
  75              		.loc 2 1364 1 view .LVU15
  76 001c 01E0     		b	.L5
  77              	.LVL4:
  78              	.L4:
  79              		.loc 2 1364 1 view .LVU16
  80              	.LBE13:
  81              	.LBE12:
1335:Core/Src/AB1805.c **** 
1336:Core/Src/AB1805.c ****   while (LL_SPI_IsActiveFlag_RXNE(SPI1) == RESET)
  82              		.loc 1 1336 41 view .LVU17
  83 001e 0028     		cmp	r0, #0
  84 0020 08D1     		bne	.L7
  85              	.L5:
  86              		.loc 1 1336 41 is_stmt 1 discriminator 1 view .LVU18
  87              	.LVL5:
  88              	.LBB14:
  89              	.LBI14:
 905:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
  90              		.loc 2 905 26 discriminator 1 view .LVU19
  91              	.LBB15:
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
  92              		.loc 2 907 3 discriminator 1 view .LVU20
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 50


 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
  93              		.loc 2 907 12 is_stmt 0 discriminator 1 view .LVU21
  94 0022 064A     		ldr	r2, .L8
  95              	.LVL6:
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
  96              		.loc 2 907 12 discriminator 1 view .LVU22
  97 0024 9268     		ldr	r2, [r2, #8]
  98              	.LVL7:
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
  99              		.loc 2 907 12 discriminator 1 view .LVU23
 100 0026 0121     		movs	r1, #1
 101 0028 0800     		movs	r0, r1
 102 002a 1040     		ands	r0, r2
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 103              		.loc 2 907 68 discriminator 1 view .LVU24
 104 002c 1142     		tst	r1, r2
 105 002e F6D0     		beq	.L4
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 106              		.loc 2 907 68 view .LVU25
 107 0030 1800     		movs	r0, r3
 108 0032 F4E7     		b	.L4
 109              	.LVL8:
 110              	.L7:
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 111              		.loc 2 907 68 view .LVU26
 112              	.LBE15:
 113              	.LBE14:
1337:Core/Src/AB1805.c ****     ;
1338:Core/Src/AB1805.c ****   return LL_SPI_ReceiveData8(SPI1);
 114              		.loc 1 1338 3 is_stmt 1 view .LVU27
 115              	.LBB16:
 116              	.LBI16:
1333:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 117              		.loc 2 1333 25 view .LVU28
 118              	.LBB17:
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 119              		.loc 2 1335 3 view .LVU29
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 120              		.loc 2 1335 11 is_stmt 0 view .LVU30
 121 0034 014B     		ldr	r3, .L8
 122              	.LVL9:
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 123              		.loc 2 1335 11 view .LVU31
 124 0036 187B     		ldrb	r0, [r3, #12]
 125 0038 C0B2     		uxtb	r0, r0
 126              	.LVL10:
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 127              		.loc 2 1335 11 view .LVU32
 128              	.LBE17:
 129              	.LBE16:
1339:Core/Src/AB1805.c **** }
 130              		.loc 1 1339 1 view .LVU33
 131              		@ sp needed
 132 003a 7047     		bx	lr
 133              	.L9:
 134              		.align	2
 135              	.L8:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 51


 136 003c 00300140 		.word	1073819648
 137              		.cfi_endproc
 138              	.LFE623:
 140              		.section	.text.read_rtc_register,"ax",%progbits
 141              		.align	1
 142              		.syntax unified
 143              		.code	16
 144              		.thumb_func
 146              	read_rtc_register:
 147              	.LVL11:
 148              	.LFB624:
1340:Core/Src/AB1805.c **** 
1341:Core/Src/AB1805.c **** inline static uint8_t read_rtc_register(uint8_t reg_addr)
1342:Core/Src/AB1805.c **** {
 149              		.loc 1 1342 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		.loc 1 1342 1 is_stmt 0 view .LVU35
 154 0000 10B5     		push	{r4, lr}
 155              	.LCFI0:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 4, -8
 158              		.cfi_offset 14, -4
1343:Core/Src/AB1805.c ****   uint8_t val;
 159              		.loc 1 1343 3 is_stmt 1 view .LVU36
1344:Core/Src/AB1805.c **** 
1345:Core/Src/AB1805.c ****   CSB_L();
 160              		.loc 1 1345 3 view .LVU37
 161 0002 A024     		movs	r4, #160
 162 0004 E405     		lsls	r4, r4, #23
 163 0006 8023     		movs	r3, #128
 164 0008 DB04     		lsls	r3, r3, #19
 165 000a A361     		str	r3, [r4, #24]
1346:Core/Src/AB1805.c ****   SPI1_SendByte(reg_addr);
 166              		.loc 1 1346 3 view .LVU38
 167 000c FFF7FEFF 		bl	SPI1_SendByte
 168              	.LVL12:
1347:Core/Src/AB1805.c ****   val = SPI1_SendByte(0x00); // Send DUMMY to read data
 169              		.loc 1 1347 3 view .LVU39
 170              		.loc 1 1347 9 is_stmt 0 view .LVU40
 171 0010 0020     		movs	r0, #0
 172 0012 FFF7FEFF 		bl	SPI1_SendByte
 173              	.LVL13:
1348:Core/Src/AB1805.c ****   CSB_H();
 174              		.loc 1 1348 3 is_stmt 1 view .LVU41
 175 0016 8023     		movs	r3, #128
 176 0018 DB00     		lsls	r3, r3, #3
 177 001a A361     		str	r3, [r4, #24]
1349:Core/Src/AB1805.c **** 
1350:Core/Src/AB1805.c ****   return val;
 178              		.loc 1 1350 3 view .LVU42
1351:Core/Src/AB1805.c **** }
 179              		.loc 1 1351 1 is_stmt 0 view .LVU43
 180              		@ sp needed
 181 001c 10BD     		pop	{r4, pc}
 182              		.cfi_endproc
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 52


 183              	.LFE624:
 185              		.section	.text.spi_select_slave,"ax",%progbits
 186              		.align	1
 187              		.global	spi_select_slave
 188              		.syntax unified
 189              		.code	16
 190              		.thumb_func
 192              	spi_select_slave:
 193              	.LVL14:
 194              	.LFB499:
  10:Core/Src/AB1805.c ****   if (select)
 195              		.loc 1 10 1 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
  11:Core/Src/AB1805.c ****   {
 200              		.loc 1 11 3 view .LVU45
  11:Core/Src/AB1805.c ****   {
 201              		.loc 1 11 6 is_stmt 0 view .LVU46
 202 0000 0028     		cmp	r0, #0
 203 0002 04D0     		beq	.L12
  13:Core/Src/AB1805.c ****   }
 204              		.loc 1 13 5 is_stmt 1 view .LVU47
 205 0004 044B     		ldr	r3, .L14
 206 0006 8022     		movs	r2, #128
 207 0008 D201     		lsls	r2, r2, #7
 208 000a 9A61     		str	r2, [r3, #24]
 209              	.L11:
  19:Core/Src/AB1805.c **** 
 210              		.loc 1 19 1 is_stmt 0 view .LVU48
 211              		@ sp needed
 212 000c 7047     		bx	lr
 213              	.L12:
  17:Core/Src/AB1805.c ****   }
 214              		.loc 1 17 5 is_stmt 1 view .LVU49
 215 000e 024B     		ldr	r3, .L14
 216 0010 8022     		movs	r2, #128
 217 0012 D205     		lsls	r2, r2, #23
 218 0014 9A61     		str	r2, [r3, #24]
  19:Core/Src/AB1805.c **** 
 219              		.loc 1 19 1 is_stmt 0 view .LVU50
 220 0016 F9E7     		b	.L11
 221              	.L15:
 222              		.align	2
 223              	.L14:
 224 0018 00040050 		.word	1342178304
 225              		.cfi_endproc
 226              	.LFE499:
 228              		.section	.text.write_rtc_register,"ax",%progbits
 229              		.align	1
 230              		.syntax unified
 231              		.code	16
 232              		.thumb_func
 234              	write_rtc_register:
 235              	.LVL15:
 236              	.LFB625:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 53


1352:Core/Src/AB1805.c **** 
1353:Core/Src/AB1805.c **** // bool read(uint8_t offset, uint8_t *buf, uint8_t length)
1354:Core/Src/AB1805.c **** // {
1355:Core/Src/AB1805.c **** //   uint8_t address = AB1815_SPI_READ(offset);
1356:Core/Src/AB1805.c **** 
1357:Core/Src/AB1805.c **** //   spi_select_slave(0);
1358:Core/Src/AB1805.c **** 
1359:Core/Src/AB1805.c **** //   unsigned int i = 0;
1360:Core/Src/AB1805.c **** //   if (!((SPI1)->CR1 & SPI_CR1_SPE))
1361:Core/Src/AB1805.c **** //   {
1362:Core/Src/AB1805.c **** //     SPI1->CR1 |= SPI_CR1_SPE;
1363:Core/Src/AB1805.c **** //   }
1364:Core/Src/AB1805.c **** 
1365:Core/Src/AB1805.c **** //   SPI1_SendByte(address);
1366:Core/Src/AB1805.c **** //   while (i < length)
1367:Core/Src/AB1805.c **** //   {
1368:Core/Src/AB1805.c **** //     buf[i++] = SPI1_SendByte(0x00); // Send DUMMY to read data
1369:Core/Src/AB1805.c **** //   }
1370:Core/Src/AB1805.c **** 
1371:Core/Src/AB1805.c **** //   spi_select_slave(1);
1372:Core/Src/AB1805.c **** //   return ab1815_status_e_OK;
1373:Core/Src/AB1805.c **** // };
1374:Core/Src/AB1805.c **** 
1375:Core/Src/AB1805.c **** uint8_t write_rtc_register(uint8_t offset, uint8_t buf)
1376:Core/Src/AB1805.c **** {
 237              		.loc 1 1376 1 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		.loc 1 1376 1 is_stmt 0 view .LVU52
 242 0000 70B5     		push	{r4, r5, r6, lr}
 243              	.LCFI1:
 244              		.cfi_def_cfa_offset 16
 245              		.cfi_offset 4, -16
 246              		.cfi_offset 5, -12
 247              		.cfi_offset 6, -8
 248              		.cfi_offset 14, -4
 249 0002 0C00     		movs	r4, r1
1377:Core/Src/AB1805.c ****   uint8_t address = AB1815_SPI_WRITE(offset);
 250              		.loc 1 1377 3 is_stmt 1 view .LVU53
 251              		.loc 1 1377 21 is_stmt 0 view .LVU54
 252 0004 FFF7FEFF 		bl	AB1815_SPI_WRITE
 253              	.LVL16:
 254              		.loc 1 1377 11 view .LVU55
 255 0008 C5B2     		uxtb	r5, r0
 256              	.LVL17:
1378:Core/Src/AB1805.c ****   spi_select_slave(0);
 257              		.loc 1 1378 3 is_stmt 1 view .LVU56
 258 000a 0020     		movs	r0, #0
 259 000c FFF7FEFF 		bl	spi_select_slave
 260              	.LVL18:
1379:Core/Src/AB1805.c **** 
1380:Core/Src/AB1805.c ****   uint8_t i = 0;
 261              		.loc 1 1380 3 view .LVU57
1381:Core/Src/AB1805.c ****   if (!((SPI1)->CR1 & SPI_CR1_SPE))
 262              		.loc 1 1381 3 view .LVU58
 263              		.loc 1 1381 15 is_stmt 0 view .LVU59
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 54


 264 0010 0C4B     		ldr	r3, .L19
 265 0012 1B68     		ldr	r3, [r3]
 266              		.loc 1 1381 6 view .LVU60
 267 0014 5B06     		lsls	r3, r3, #25
 268 0016 04D4     		bmi	.L17
1382:Core/Src/AB1805.c ****   {
1383:Core/Src/AB1805.c ****     SPI1->CR1 |= SPI_CR1_SPE;
 269              		.loc 1 1383 5 is_stmt 1 view .LVU61
 270              		.loc 1 1383 9 is_stmt 0 view .LVU62
 271 0018 0A4A     		ldr	r2, .L19
 272 001a 1368     		ldr	r3, [r2]
 273              		.loc 1 1383 15 view .LVU63
 274 001c 4021     		movs	r1, #64
 275 001e 0B43     		orrs	r3, r1
 276 0020 1360     		str	r3, [r2]
 277              	.L17:
1384:Core/Src/AB1805.c ****   }
1385:Core/Src/AB1805.c ****   CSB_L();
 278              		.loc 1 1385 3 is_stmt 1 view .LVU64
 279 0022 A023     		movs	r3, #160
 280 0024 DB05     		lsls	r3, r3, #23
 281 0026 8022     		movs	r2, #128
 282 0028 D204     		lsls	r2, r2, #19
 283 002a 9A61     		str	r2, [r3, #24]
1386:Core/Src/AB1805.c ****   SPI1_SendByte(address);
 284              		.loc 1 1386 3 view .LVU65
 285 002c 2800     		movs	r0, r5
 286 002e FFF7FEFF 		bl	SPI1_SendByte
 287              	.LVL19:
1387:Core/Src/AB1805.c ****   SPI1_SendByte(buf); // Send Data to write
 288              		.loc 1 1387 3 view .LVU66
 289 0032 2000     		movs	r0, r4
 290 0034 FFF7FEFF 		bl	SPI1_SendByte
 291              	.LVL20:
1388:Core/Src/AB1805.c **** 
1389:Core/Src/AB1805.c ****   spi_select_slave(1); // set 1
 292              		.loc 1 1389 3 view .LVU67
 293 0038 0120     		movs	r0, #1
 294 003a FFF7FEFF 		bl	spi_select_slave
 295              	.LVL21:
1390:Core/Src/AB1805.c ****   return 1;
 296              		.loc 1 1390 3 view .LVU68
1391:Core/Src/AB1805.c **** };
 297              		.loc 1 1391 1 is_stmt 0 view .LVU69
 298 003e 0120     		movs	r0, #1
 299              		@ sp needed
 300              	.LVL22:
 301              		.loc 1 1391 1 view .LVU70
 302 0040 70BD     		pop	{r4, r5, r6, pc}
 303              	.L20:
 304 0042 C046     		.align	2
 305              	.L19:
 306 0044 00300140 		.word	1073819648
 307              		.cfi_endproc
 308              	.LFE625:
 310              		.section	.text.get_rtc_data,"ax",%progbits
 311              		.align	1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 55


 312              		.global	get_rtc_data
 313              		.syntax unified
 314              		.code	16
 315              		.thumb_func
 317              	get_rtc_data:
 318              	.LVL23:
 319              	.LFB500:
  22:Core/Src/AB1805.c ****   return (read_rtc_register(rtc_register) & register_mask);
 320              		.loc 1 22 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
  22:Core/Src/AB1805.c ****   return (read_rtc_register(rtc_register) & register_mask);
 324              		.loc 1 22 1 is_stmt 0 view .LVU72
 325 0000 10B5     		push	{r4, lr}
 326              	.LCFI2:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 4, -8
 329              		.cfi_offset 14, -4
 330 0002 0C00     		movs	r4, r1
  23:Core/Src/AB1805.c **** }
 331              		.loc 1 23 3 is_stmt 1 view .LVU73
  23:Core/Src/AB1805.c **** }
 332              		.loc 1 23 11 is_stmt 0 view .LVU74
 333 0004 FFF7FEFF 		bl	read_rtc_register
 334              	.LVL24:
  23:Core/Src/AB1805.c **** }
 335              		.loc 1 23 43 view .LVU75
 336 0008 2040     		ands	r0, r4
  24:Core/Src/AB1805.c **** 
 337              		.loc 1 24 1 view .LVU76
 338              		@ sp needed
 339 000a 10BD     		pop	{r4, pc}
 340              		.cfi_endproc
 341              	.LFE500:
 343              		.section	.text.get_hundredths,"ax",%progbits
 344              		.align	1
 345              		.global	get_hundredths
 346              		.syntax unified
 347              		.code	16
 348              		.thumb_func
 350              	get_hundredths:
 351              	.LFB501:
  27:Core/Src/AB1805.c ****   return get_rtc_data(HUNDRETH_REGISTER, 0xFF);
 352              		.loc 1 27 1 is_stmt 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356 0000 10B5     		push	{r4, lr}
 357              	.LCFI3:
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 4, -8
 360              		.cfi_offset 14, -4
  28:Core/Src/AB1805.c **** }
 361              		.loc 1 28 3 view .LVU78
  28:Core/Src/AB1805.c **** }
 362              		.loc 1 28 10 is_stmt 0 view .LVU79
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 56


 363 0002 FF21     		movs	r1, #255
 364 0004 0020     		movs	r0, #0
 365 0006 FFF7FEFF 		bl	get_rtc_data
 366              	.LVL25:
  29:Core/Src/AB1805.c **** 
 367              		.loc 1 29 1 view .LVU80
 368              		@ sp needed
 369 000a 10BD     		pop	{r4, pc}
 370              		.cfi_endproc
 371              	.LFE501:
 373              		.section	.text.get_second,"ax",%progbits
 374              		.align	1
 375              		.global	get_second
 376              		.syntax unified
 377              		.code	16
 378              		.thumb_func
 380              	get_second:
 381              	.LFB502:
  32:Core/Src/AB1805.c ****   return get_rtc_data(SECOND_REGISTER, SECOND_MASK);
 382              		.loc 1 32 1 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386 0000 10B5     		push	{r4, lr}
 387              	.LCFI4:
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 4, -8
 390              		.cfi_offset 14, -4
  33:Core/Src/AB1805.c **** }
 391              		.loc 1 33 3 view .LVU82
  33:Core/Src/AB1805.c **** }
 392              		.loc 1 33 10 is_stmt 0 view .LVU83
 393 0002 7F21     		movs	r1, #127
 394 0004 0120     		movs	r0, #1
 395 0006 FFF7FEFF 		bl	get_rtc_data
 396              	.LVL26:
  34:Core/Src/AB1805.c **** 
 397              		.loc 1 34 1 view .LVU84
 398              		@ sp needed
 399 000a 10BD     		pop	{r4, pc}
 400              		.cfi_endproc
 401              	.LFE502:
 403              		.section	.text.get_minute,"ax",%progbits
 404              		.align	1
 405              		.global	get_minute
 406              		.syntax unified
 407              		.code	16
 408              		.thumb_func
 410              	get_minute:
 411              	.LFB503:
  37:Core/Src/AB1805.c ****   return get_rtc_data(MINUTE_REGISTER, MINUTE_MASK);
 412              		.loc 1 37 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 10B5     		push	{r4, lr}
 417              	.LCFI5:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 57


 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 4, -8
 420              		.cfi_offset 14, -4
  38:Core/Src/AB1805.c **** }
 421              		.loc 1 38 3 view .LVU86
  38:Core/Src/AB1805.c **** }
 422              		.loc 1 38 10 is_stmt 0 view .LVU87
 423 0002 7F21     		movs	r1, #127
 424 0004 0220     		movs	r0, #2
 425 0006 FFF7FEFF 		bl	get_rtc_data
 426              	.LVL27:
  39:Core/Src/AB1805.c **** 
 427              		.loc 1 39 1 view .LVU88
 428              		@ sp needed
 429 000a 10BD     		pop	{r4, pc}
 430              		.cfi_endproc
 431              	.LFE503:
 433              		.section	.text.get_hour,"ax",%progbits
 434              		.align	1
 435              		.global	get_hour
 436              		.syntax unified
 437              		.code	16
 438              		.thumb_func
 440              	get_hour:
 441              	.LFB504:
  42:Core/Src/AB1805.c ****   return get_rtc_data(HOUR_REGISTER, HOUR_24_MASK);
 442              		.loc 1 42 1 is_stmt 1 view -0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446 0000 10B5     		push	{r4, lr}
 447              	.LCFI6:
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 4, -8
 450              		.cfi_offset 14, -4
  43:Core/Src/AB1805.c **** }
 451              		.loc 1 43 3 view .LVU90
  43:Core/Src/AB1805.c **** }
 452              		.loc 1 43 10 is_stmt 0 view .LVU91
 453 0002 3F21     		movs	r1, #63
 454 0004 0320     		movs	r0, #3
 455 0006 FFF7FEFF 		bl	get_rtc_data
 456              	.LVL28:
  44:Core/Src/AB1805.c **** 
 457              		.loc 1 44 1 view .LVU92
 458              		@ sp needed
 459 000a 10BD     		pop	{r4, pc}
 460              		.cfi_endproc
 461              	.LFE504:
 463              		.section	.text.get_weekday,"ax",%progbits
 464              		.align	1
 465              		.global	get_weekday
 466              		.syntax unified
 467              		.code	16
 468              		.thumb_func
 470              	get_weekday:
 471              	.LFB505:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 58


  47:Core/Src/AB1805.c ****   return get_rtc_data(WEEKDAY_REGISTER, DAY_MASK);
 472              		.loc 1 47 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476 0000 10B5     		push	{r4, lr}
 477              	.LCFI7:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 4, -8
 480              		.cfi_offset 14, -4
  48:Core/Src/AB1805.c **** }
 481              		.loc 1 48 3 view .LVU94
  48:Core/Src/AB1805.c **** }
 482              		.loc 1 48 10 is_stmt 0 view .LVU95
 483 0002 0721     		movs	r1, #7
 484 0004 0720     		movs	r0, #7
 485 0006 FFF7FEFF 		bl	get_rtc_data
 486              	.LVL29:
  49:Core/Src/AB1805.c **** 
 487              		.loc 1 49 1 view .LVU96
 488              		@ sp needed
 489 000a 10BD     		pop	{r4, pc}
 490              		.cfi_endproc
 491              	.LFE505:
 493              		.section	.text.get_date,"ax",%progbits
 494              		.align	1
 495              		.global	get_date
 496              		.syntax unified
 497              		.code	16
 498              		.thumb_func
 500              	get_date:
 501              	.LFB506:
  52:Core/Src/AB1805.c ****   return get_rtc_data(DATE_REGISTER, DATE_MASK);
 502              		.loc 1 52 1 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506 0000 10B5     		push	{r4, lr}
 507              	.LCFI8:
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 4, -8
 510              		.cfi_offset 14, -4
  53:Core/Src/AB1805.c **** }
 511              		.loc 1 53 3 view .LVU98
  53:Core/Src/AB1805.c **** }
 512              		.loc 1 53 10 is_stmt 0 view .LVU99
 513 0002 3F21     		movs	r1, #63
 514 0004 0420     		movs	r0, #4
 515 0006 FFF7FEFF 		bl	get_rtc_data
 516              	.LVL30:
  54:Core/Src/AB1805.c **** 
 517              		.loc 1 54 1 view .LVU100
 518              		@ sp needed
 519 000a 10BD     		pop	{r4, pc}
 520              		.cfi_endproc
 521              	.LFE506:
 523              		.section	.text.get_month,"ax",%progbits
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 59


 524              		.align	1
 525              		.global	get_month
 526              		.syntax unified
 527              		.code	16
 528              		.thumb_func
 530              	get_month:
 531              	.LFB507:
  57:Core/Src/AB1805.c ****   return get_rtc_data(MONTH_REGISTER, MONTH_MASK);
 532              		.loc 1 57 1 is_stmt 1 view -0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536 0000 10B5     		push	{r4, lr}
 537              	.LCFI9:
 538              		.cfi_def_cfa_offset 8
 539              		.cfi_offset 4, -8
 540              		.cfi_offset 14, -4
  58:Core/Src/AB1805.c **** }
 541              		.loc 1 58 3 view .LVU102
  58:Core/Src/AB1805.c **** }
 542              		.loc 1 58 10 is_stmt 0 view .LVU103
 543 0002 1F21     		movs	r1, #31
 544 0004 0520     		movs	r0, #5
 545 0006 FFF7FEFF 		bl	get_rtc_data
 546              	.LVL31:
  59:Core/Src/AB1805.c **** 
 547              		.loc 1 59 1 view .LVU104
 548              		@ sp needed
 549 000a 10BD     		pop	{r4, pc}
 550              		.cfi_endproc
 551              	.LFE507:
 553              		.section	.text.get_year,"ax",%progbits
 554              		.align	1
 555              		.global	get_year
 556              		.syntax unified
 557              		.code	16
 558              		.thumb_func
 560              	get_year:
 561              	.LFB508:
  62:Core/Src/AB1805.c ****   return get_rtc_data(YEAR_REGISTER, YEAR_MASK);
 562              		.loc 1 62 1 is_stmt 1 view -0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566 0000 10B5     		push	{r4, lr}
 567              	.LCFI10:
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 4, -8
 570              		.cfi_offset 14, -4
  63:Core/Src/AB1805.c **** }
 571              		.loc 1 63 3 view .LVU106
  63:Core/Src/AB1805.c **** }
 572              		.loc 1 63 10 is_stmt 0 view .LVU107
 573 0002 FF21     		movs	r1, #255
 574 0004 0620     		movs	r0, #6
 575 0006 FFF7FEFF 		bl	get_rtc_data
 576              	.LVL32:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 60


  64:Core/Src/AB1805.c **** 
 577              		.loc 1 64 1 view .LVU108
 578              		@ sp needed
 579 000a 10BD     		pop	{r4, pc}
 580              		.cfi_endproc
 581              	.LFE508:
 583              		.section	.text.get_datetime,"ax",%progbits
 584              		.align	1
 585              		.global	get_datetime
 586              		.syntax unified
 587              		.code	16
 588              		.thumb_func
 590              	get_datetime:
 591              	.LFB509:
  67:Core/Src/AB1805.c ****   // rtc_check_valid();
 592              		.loc 1 67 1 is_stmt 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596 0000 10B5     		push	{r4, lr}
 597              	.LCFI11:
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 4, -8
 600              		.cfi_offset 14, -4
  70:Core/Src/AB1805.c ****   _minute = get_minute();
 601              		.loc 1 70 3 view .LVU110
  70:Core/Src/AB1805.c ****   _minute = get_minute();
 602              		.loc 1 70 13 is_stmt 0 view .LVU111
 603 0002 FFF7FEFF 		bl	get_second
 604              	.LVL33:
  70:Core/Src/AB1805.c ****   _minute = get_minute();
 605              		.loc 1 70 11 view .LVU112
 606 0006 0D4B     		ldr	r3, .L31
 607 0008 1870     		strb	r0, [r3]
  71:Core/Src/AB1805.c ****   _hour = get_hour();
 608              		.loc 1 71 3 is_stmt 1 view .LVU113
  71:Core/Src/AB1805.c ****   _hour = get_hour();
 609              		.loc 1 71 13 is_stmt 0 view .LVU114
 610 000a FFF7FEFF 		bl	get_minute
 611              	.LVL34:
  71:Core/Src/AB1805.c ****   _hour = get_hour();
 612              		.loc 1 71 11 view .LVU115
 613 000e 0C4B     		ldr	r3, .L31+4
 614 0010 1870     		strb	r0, [r3]
  72:Core/Src/AB1805.c ****   _weekday = get_weekday();
 615              		.loc 1 72 3 is_stmt 1 view .LVU116
  72:Core/Src/AB1805.c ****   _weekday = get_weekday();
 616              		.loc 1 72 11 is_stmt 0 view .LVU117
 617 0012 FFF7FEFF 		bl	get_hour
 618              	.LVL35:
  72:Core/Src/AB1805.c ****   _weekday = get_weekday();
 619              		.loc 1 72 9 view .LVU118
 620 0016 0B4B     		ldr	r3, .L31+8
 621 0018 1870     		strb	r0, [r3]
  73:Core/Src/AB1805.c ****   _date = get_date();
 622              		.loc 1 73 3 is_stmt 1 view .LVU119
  73:Core/Src/AB1805.c ****   _date = get_date();
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 61


 623              		.loc 1 73 14 is_stmt 0 view .LVU120
 624 001a FFF7FEFF 		bl	get_weekday
 625              	.LVL36:
  73:Core/Src/AB1805.c ****   _date = get_date();
 626              		.loc 1 73 12 view .LVU121
 627 001e 0A4B     		ldr	r3, .L31+12
 628 0020 1870     		strb	r0, [r3]
  74:Core/Src/AB1805.c ****   _month = get_month();
 629              		.loc 1 74 3 is_stmt 1 view .LVU122
  74:Core/Src/AB1805.c ****   _month = get_month();
 630              		.loc 1 74 11 is_stmt 0 view .LVU123
 631 0022 FFF7FEFF 		bl	get_date
 632              	.LVL37:
  74:Core/Src/AB1805.c ****   _month = get_month();
 633              		.loc 1 74 9 view .LVU124
 634 0026 094B     		ldr	r3, .L31+16
 635 0028 1870     		strb	r0, [r3]
  75:Core/Src/AB1805.c ****   _year = get_year();
 636              		.loc 1 75 3 is_stmt 1 view .LVU125
  75:Core/Src/AB1805.c ****   _year = get_year();
 637              		.loc 1 75 12 is_stmt 0 view .LVU126
 638 002a FFF7FEFF 		bl	get_month
 639              	.LVL38:
  75:Core/Src/AB1805.c ****   _year = get_year();
 640              		.loc 1 75 10 view .LVU127
 641 002e 084B     		ldr	r3, .L31+20
 642 0030 1870     		strb	r0, [r3]
  76:Core/Src/AB1805.c **** }
 643              		.loc 1 76 3 is_stmt 1 view .LVU128
  76:Core/Src/AB1805.c **** }
 644              		.loc 1 76 11 is_stmt 0 view .LVU129
 645 0032 FFF7FEFF 		bl	get_year
 646              	.LVL39:
  76:Core/Src/AB1805.c **** }
 647              		.loc 1 76 9 view .LVU130
 648 0036 074B     		ldr	r3, .L31+24
 649 0038 1870     		strb	r0, [r3]
  77:Core/Src/AB1805.c **** 
 650              		.loc 1 77 1 view .LVU131
 651              		@ sp needed
 652 003a 10BD     		pop	{r4, pc}
 653              	.L32:
 654              		.align	2
 655              	.L31:
 656 003c 00000000 		.word	_second
 657 0040 00000000 		.word	_minute
 658 0044 00000000 		.word	_hour
 659 0048 00000000 		.word	_weekday
 660 004c 00000000 		.word	_date
 661 0050 00000000 		.word	_month
 662 0054 00000000 		.word	_year
 663              		.cfi_endproc
 664              	.LFE509:
 666              		.section	.text.get_second_alarm,"ax",%progbits
 667              		.align	1
 668              		.global	get_second_alarm
 669              		.syntax unified
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 62


 670              		.code	16
 671              		.thumb_func
 673              	get_second_alarm:
 674              	.LFB510:
  80:Core/Src/AB1805.c ****   _alarm_second = get_rtc_data(SECOND_ALARM_REGISTER, SECOND_ALARM_MASK);
 675              		.loc 1 80 1 is_stmt 1 view -0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679 0000 10B5     		push	{r4, lr}
 680              	.LCFI12:
 681              		.cfi_def_cfa_offset 8
 682              		.cfi_offset 4, -8
 683              		.cfi_offset 14, -4
  81:Core/Src/AB1805.c ****   return _alarm_second;
 684              		.loc 1 81 3 view .LVU133
  81:Core/Src/AB1805.c ****   return _alarm_second;
 685              		.loc 1 81 19 is_stmt 0 view .LVU134
 686 0002 7F21     		movs	r1, #127
 687 0004 0920     		movs	r0, #9
 688 0006 FFF7FEFF 		bl	get_rtc_data
 689              	.LVL40:
  81:Core/Src/AB1805.c ****   return _alarm_second;
 690              		.loc 1 81 17 view .LVU135
 691 000a 024B     		ldr	r3, .L34
 692 000c 1870     		strb	r0, [r3]
  82:Core/Src/AB1805.c **** }
 693              		.loc 1 82 3 is_stmt 1 view .LVU136
  82:Core/Src/AB1805.c **** }
 694              		.loc 1 82 10 is_stmt 0 view .LVU137
 695 000e 1878     		ldrb	r0, [r3]
 696 0010 C0B2     		uxtb	r0, r0
  83:Core/Src/AB1805.c **** 
 697              		.loc 1 83 1 view .LVU138
 698              		@ sp needed
 699 0012 10BD     		pop	{r4, pc}
 700              	.L35:
 701              		.align	2
 702              	.L34:
 703 0014 00000000 		.word	_alarm_second
 704              		.cfi_endproc
 705              	.LFE510:
 707              		.section	.text.get_minute_alarm,"ax",%progbits
 708              		.align	1
 709              		.global	get_minute_alarm
 710              		.syntax unified
 711              		.code	16
 712              		.thumb_func
 714              	get_minute_alarm:
 715              	.LFB511:
  86:Core/Src/AB1805.c ****   _alarm_minute = get_rtc_data(MINUTE_ALARM_REGISTER, MINUTE_ALARM_MASK);
 716              		.loc 1 86 1 is_stmt 1 view -0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720 0000 10B5     		push	{r4, lr}
 721              	.LCFI13:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 63


 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 4, -8
 724              		.cfi_offset 14, -4
  87:Core/Src/AB1805.c ****   return _alarm_minute;
 725              		.loc 1 87 3 view .LVU140
  87:Core/Src/AB1805.c ****   return _alarm_minute;
 726              		.loc 1 87 19 is_stmt 0 view .LVU141
 727 0002 7F21     		movs	r1, #127
 728 0004 0A20     		movs	r0, #10
 729 0006 FFF7FEFF 		bl	get_rtc_data
 730              	.LVL41:
  87:Core/Src/AB1805.c ****   return _alarm_minute;
 731              		.loc 1 87 17 view .LVU142
 732 000a 024B     		ldr	r3, .L37
 733 000c 1870     		strb	r0, [r3]
  88:Core/Src/AB1805.c **** }
 734              		.loc 1 88 3 is_stmt 1 view .LVU143
  88:Core/Src/AB1805.c **** }
 735              		.loc 1 88 10 is_stmt 0 view .LVU144
 736 000e 1878     		ldrb	r0, [r3]
 737 0010 C0B2     		uxtb	r0, r0
  89:Core/Src/AB1805.c **** 
 738              		.loc 1 89 1 view .LVU145
 739              		@ sp needed
 740 0012 10BD     		pop	{r4, pc}
 741              	.L38:
 742              		.align	2
 743              	.L37:
 744 0014 00000000 		.word	_alarm_minute
 745              		.cfi_endproc
 746              	.LFE511:
 748              		.section	.text.get_hour_alarm,"ax",%progbits
 749              		.align	1
 750              		.global	get_hour_alarm
 751              		.syntax unified
 752              		.code	16
 753              		.thumb_func
 755              	get_hour_alarm:
 756              	.LFB512:
  92:Core/Src/AB1805.c ****   _alarm_hour = get_rtc_data(HOUR_ALARM_REGISTER, HOUR_24_ALARM_MASK);
 757              		.loc 1 92 1 is_stmt 1 view -0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761 0000 10B5     		push	{r4, lr}
 762              	.LCFI14:
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 4, -8
 765              		.cfi_offset 14, -4
  93:Core/Src/AB1805.c ****   return _alarm_hour;
 766              		.loc 1 93 3 view .LVU147
  93:Core/Src/AB1805.c ****   return _alarm_hour;
 767              		.loc 1 93 17 is_stmt 0 view .LVU148
 768 0002 3F21     		movs	r1, #63
 769 0004 0B20     		movs	r0, #11
 770 0006 FFF7FEFF 		bl	get_rtc_data
 771              	.LVL42:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 64


  93:Core/Src/AB1805.c ****   return _alarm_hour;
 772              		.loc 1 93 15 view .LVU149
 773 000a 024B     		ldr	r3, .L40
 774 000c 1870     		strb	r0, [r3]
  94:Core/Src/AB1805.c **** }
 775              		.loc 1 94 3 is_stmt 1 view .LVU150
  94:Core/Src/AB1805.c **** }
 776              		.loc 1 94 10 is_stmt 0 view .LVU151
 777 000e 1878     		ldrb	r0, [r3]
 778 0010 C0B2     		uxtb	r0, r0
  95:Core/Src/AB1805.c **** 
 779              		.loc 1 95 1 view .LVU152
 780              		@ sp needed
 781 0012 10BD     		pop	{r4, pc}
 782              	.L41:
 783              		.align	2
 784              	.L40:
 785 0014 00000000 		.word	_alarm_hour
 786              		.cfi_endproc
 787              	.LFE512:
 789              		.section	.text.get_weekday_alarm,"ax",%progbits
 790              		.align	1
 791              		.global	get_weekday_alarm
 792              		.syntax unified
 793              		.code	16
 794              		.thumb_func
 796              	get_weekday_alarm:
 797              	.LFB513:
  98:Core/Src/AB1805.c ****   _alarm_weekday = get_rtc_data(WEEKDAY_ALARM_REGISTER, WEEKDAY_ALARM_MASK);
 798              		.loc 1 98 1 is_stmt 1 view -0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802 0000 10B5     		push	{r4, lr}
 803              	.LCFI15:
 804              		.cfi_def_cfa_offset 8
 805              		.cfi_offset 4, -8
 806              		.cfi_offset 14, -4
  99:Core/Src/AB1805.c ****   return _alarm_weekday;
 807              		.loc 1 99 3 view .LVU154
  99:Core/Src/AB1805.c ****   return _alarm_weekday;
 808              		.loc 1 99 20 is_stmt 0 view .LVU155
 809 0002 0721     		movs	r1, #7
 810 0004 0E20     		movs	r0, #14
 811 0006 FFF7FEFF 		bl	get_rtc_data
 812              	.LVL43:
  99:Core/Src/AB1805.c ****   return _alarm_weekday;
 813              		.loc 1 99 18 view .LVU156
 814 000a 024B     		ldr	r3, .L43
 815 000c 1870     		strb	r0, [r3]
 100:Core/Src/AB1805.c **** }
 816              		.loc 1 100 3 is_stmt 1 view .LVU157
 100:Core/Src/AB1805.c **** }
 817              		.loc 1 100 10 is_stmt 0 view .LVU158
 818 000e 1878     		ldrb	r0, [r3]
 819 0010 C0B2     		uxtb	r0, r0
 101:Core/Src/AB1805.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 65


 820              		.loc 1 101 1 view .LVU159
 821              		@ sp needed
 822 0012 10BD     		pop	{r4, pc}
 823              	.L44:
 824              		.align	2
 825              	.L43:
 826 0014 00000000 		.word	_alarm_weekday
 827              		.cfi_endproc
 828              	.LFE513:
 830              		.section	.text.get_date_alarm,"ax",%progbits
 831              		.align	1
 832              		.global	get_date_alarm
 833              		.syntax unified
 834              		.code	16
 835              		.thumb_func
 837              	get_date_alarm:
 838              	.LFB514:
 104:Core/Src/AB1805.c ****   _alarm_date = get_rtc_data(DATE_ALARM_REGISTER, DATE_ALARM_MASK);
 839              		.loc 1 104 1 is_stmt 1 view -0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843 0000 10B5     		push	{r4, lr}
 844              	.LCFI16:
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 4, -8
 847              		.cfi_offset 14, -4
 105:Core/Src/AB1805.c ****   return _alarm_date;
 848              		.loc 1 105 3 view .LVU161
 105:Core/Src/AB1805.c ****   return _alarm_date;
 849              		.loc 1 105 17 is_stmt 0 view .LVU162
 850 0002 3F21     		movs	r1, #63
 851 0004 0C20     		movs	r0, #12
 852 0006 FFF7FEFF 		bl	get_rtc_data
 853              	.LVL44:
 105:Core/Src/AB1805.c ****   return _alarm_date;
 854              		.loc 1 105 15 view .LVU163
 855 000a 024B     		ldr	r3, .L46
 856 000c 1870     		strb	r0, [r3]
 106:Core/Src/AB1805.c **** }
 857              		.loc 1 106 3 is_stmt 1 view .LVU164
 106:Core/Src/AB1805.c **** }
 858              		.loc 1 106 10 is_stmt 0 view .LVU165
 859 000e 1878     		ldrb	r0, [r3]
 860 0010 C0B2     		uxtb	r0, r0
 107:Core/Src/AB1805.c **** 
 861              		.loc 1 107 1 view .LVU166
 862              		@ sp needed
 863 0012 10BD     		pop	{r4, pc}
 864              	.L47:
 865              		.align	2
 866              	.L46:
 867 0014 00000000 		.word	_alarm_date
 868              		.cfi_endproc
 869              	.LFE514:
 871              		.section	.text.get_month_alarm,"ax",%progbits
 872              		.align	1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 66


 873              		.global	get_month_alarm
 874              		.syntax unified
 875              		.code	16
 876              		.thumb_func
 878              	get_month_alarm:
 879              	.LFB515:
 110:Core/Src/AB1805.c ****   _alarm_month = get_rtc_data(MONTH_ALARM_REGISTER, MONTH_ALARM_MASK);
 880              		.loc 1 110 1 is_stmt 1 view -0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884 0000 10B5     		push	{r4, lr}
 885              	.LCFI17:
 886              		.cfi_def_cfa_offset 8
 887              		.cfi_offset 4, -8
 888              		.cfi_offset 14, -4
 111:Core/Src/AB1805.c ****   return _alarm_month;
 889              		.loc 1 111 3 view .LVU168
 111:Core/Src/AB1805.c ****   return _alarm_month;
 890              		.loc 1 111 18 is_stmt 0 view .LVU169
 891 0002 1F21     		movs	r1, #31
 892 0004 0D20     		movs	r0, #13
 893 0006 FFF7FEFF 		bl	get_rtc_data
 894              	.LVL45:
 111:Core/Src/AB1805.c ****   return _alarm_month;
 895              		.loc 1 111 16 view .LVU170
 896 000a 024B     		ldr	r3, .L49
 897 000c 1870     		strb	r0, [r3]
 112:Core/Src/AB1805.c **** }
 898              		.loc 1 112 3 is_stmt 1 view .LVU171
 112:Core/Src/AB1805.c **** }
 899              		.loc 1 112 10 is_stmt 0 view .LVU172
 900 000e 1878     		ldrb	r0, [r3]
 901 0010 C0B2     		uxtb	r0, r0
 113:Core/Src/AB1805.c **** 
 902              		.loc 1 113 1 view .LVU173
 903              		@ sp needed
 904 0012 10BD     		pop	{r4, pc}
 905              	.L50:
 906              		.align	2
 907              	.L49:
 908 0014 00000000 		.word	_alarm_month
 909              		.cfi_endproc
 910              	.LFE515:
 912              		.global	__aeabi_uidivmod
 913              		.section	.text.set_second,"ax",%progbits
 914              		.align	1
 915              		.global	set_second
 916              		.syntax unified
 917              		.code	16
 918              		.thumb_func
 920              	set_second:
 921              	.LVL46:
 922              	.LFB516:
 116:Core/Src/AB1805.c ****   _second = value % MAX_SECOND;
 923              		.loc 1 116 1 is_stmt 1 view -0
 924              		.cfi_startproc
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 67


 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 116:Core/Src/AB1805.c ****   _second = value % MAX_SECOND;
 927              		.loc 1 116 1 is_stmt 0 view .LVU175
 928 0000 10B5     		push	{r4, lr}
 929              	.LCFI18:
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 4, -8
 932              		.cfi_offset 14, -4
 117:Core/Src/AB1805.c ****   write_rtc_register(SECOND_REGISTER, _second);
 933              		.loc 1 117 3 is_stmt 1 view .LVU176
 117:Core/Src/AB1805.c ****   write_rtc_register(SECOND_REGISTER, _second);
 934              		.loc 1 117 11 is_stmt 0 view .LVU177
 935 0002 6021     		movs	r1, #96
 936 0004 FFF7FEFF 		bl	__aeabi_uidivmod
 937              	.LVL47:
 117:Core/Src/AB1805.c ****   write_rtc_register(SECOND_REGISTER, _second);
 938              		.loc 1 117 11 view .LVU178
 939 0008 C9B2     		uxtb	r1, r1
 940 000a 044B     		ldr	r3, .L52
 941 000c 1970     		strb	r1, [r3]
 118:Core/Src/AB1805.c **** }
 942              		.loc 1 118 3 is_stmt 1 view .LVU179
 943 000e 1978     		ldrb	r1, [r3]
 944 0010 C9B2     		uxtb	r1, r1
 945 0012 0120     		movs	r0, #1
 946 0014 FFF7FEFF 		bl	write_rtc_register
 947              	.LVL48:
 119:Core/Src/AB1805.c **** 
 948              		.loc 1 119 1 is_stmt 0 view .LVU180
 949              		@ sp needed
 950 0018 10BD     		pop	{r4, pc}
 951              	.L53:
 952 001a C046     		.align	2
 953              	.L52:
 954 001c 00000000 		.word	_second
 955              		.cfi_endproc
 956              	.LFE516:
 958              		.section	.text.set_minute,"ax",%progbits
 959              		.align	1
 960              		.global	set_minute
 961              		.syntax unified
 962              		.code	16
 963              		.thumb_func
 965              	set_minute:
 966              	.LVL49:
 967              	.LFB517:
 122:Core/Src/AB1805.c ****   _minute = value % MAX_MINUTE;
 968              		.loc 1 122 1 is_stmt 1 view -0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 122:Core/Src/AB1805.c ****   _minute = value % MAX_MINUTE;
 972              		.loc 1 122 1 is_stmt 0 view .LVU182
 973 0000 10B5     		push	{r4, lr}
 974              	.LCFI19:
 975              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 68


 976              		.cfi_offset 4, -8
 977              		.cfi_offset 14, -4
 123:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_REGISTER, _minute);
 978              		.loc 1 123 3 is_stmt 1 view .LVU183
 123:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_REGISTER, _minute);
 979              		.loc 1 123 11 is_stmt 0 view .LVU184
 980 0002 6021     		movs	r1, #96
 981 0004 FFF7FEFF 		bl	__aeabi_uidivmod
 982              	.LVL50:
 123:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_REGISTER, _minute);
 983              		.loc 1 123 11 view .LVU185
 984 0008 C9B2     		uxtb	r1, r1
 985 000a 044B     		ldr	r3, .L55
 986 000c 1970     		strb	r1, [r3]
 124:Core/Src/AB1805.c **** }
 987              		.loc 1 124 3 is_stmt 1 view .LVU186
 988 000e 1978     		ldrb	r1, [r3]
 989 0010 C9B2     		uxtb	r1, r1
 990 0012 0220     		movs	r0, #2
 991 0014 FFF7FEFF 		bl	write_rtc_register
 992              	.LVL51:
 125:Core/Src/AB1805.c **** 
 993              		.loc 1 125 1 is_stmt 0 view .LVU187
 994              		@ sp needed
 995 0018 10BD     		pop	{r4, pc}
 996              	.L56:
 997 001a C046     		.align	2
 998              	.L55:
 999 001c 00000000 		.word	_minute
 1000              		.cfi_endproc
 1001              	.LFE517:
 1003              		.section	.text.set_hour,"ax",%progbits
 1004              		.align	1
 1005              		.global	set_hour
 1006              		.syntax unified
 1007              		.code	16
 1008              		.thumb_func
 1010              	set_hour:
 1011              	.LVL52:
 1012              	.LFB518:
 128:Core/Src/AB1805.c ****   _hour = value % MAX_HOURS;
 1013              		.loc 1 128 1 is_stmt 1 view -0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 0
 1016              		@ frame_needed = 0, uses_anonymous_args = 0
 128:Core/Src/AB1805.c ****   _hour = value % MAX_HOURS;
 1017              		.loc 1 128 1 is_stmt 0 view .LVU189
 1018 0000 10B5     		push	{r4, lr}
 1019              	.LCFI20:
 1020              		.cfi_def_cfa_offset 8
 1021              		.cfi_offset 4, -8
 1022              		.cfi_offset 14, -4
 129:Core/Src/AB1805.c ****   write_rtc_register(HOUR_REGISTER, _hour);
 1023              		.loc 1 129 3 is_stmt 1 view .LVU190
 129:Core/Src/AB1805.c ****   write_rtc_register(HOUR_REGISTER, _hour);
 1024              		.loc 1 129 9 is_stmt 0 view .LVU191
 1025 0002 2421     		movs	r1, #36
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 69


 1026 0004 FFF7FEFF 		bl	__aeabi_uidivmod
 1027              	.LVL53:
 129:Core/Src/AB1805.c ****   write_rtc_register(HOUR_REGISTER, _hour);
 1028              		.loc 1 129 9 view .LVU192
 1029 0008 C9B2     		uxtb	r1, r1
 1030 000a 044B     		ldr	r3, .L58
 1031 000c 1970     		strb	r1, [r3]
 130:Core/Src/AB1805.c **** }
 1032              		.loc 1 130 3 is_stmt 1 view .LVU193
 1033 000e 1978     		ldrb	r1, [r3]
 1034 0010 C9B2     		uxtb	r1, r1
 1035 0012 0320     		movs	r0, #3
 1036 0014 FFF7FEFF 		bl	write_rtc_register
 1037              	.LVL54:
 131:Core/Src/AB1805.c **** 
 1038              		.loc 1 131 1 is_stmt 0 view .LVU194
 1039              		@ sp needed
 1040 0018 10BD     		pop	{r4, pc}
 1041              	.L59:
 1042 001a C046     		.align	2
 1043              	.L58:
 1044 001c 00000000 		.word	_hour
 1045              		.cfi_endproc
 1046              	.LFE518:
 1048              		.section	.text.set_weekday,"ax",%progbits
 1049              		.align	1
 1050              		.global	set_weekday
 1051              		.syntax unified
 1052              		.code	16
 1053              		.thumb_func
 1055              	set_weekday:
 1056              	.LVL55:
 1057              	.LFB519:
 134:Core/Src/AB1805.c ****   _weekday = value % MAX_DAY;
 1058              		.loc 1 134 1 is_stmt 1 view -0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 134:Core/Src/AB1805.c ****   _weekday = value % MAX_DAY;
 1062              		.loc 1 134 1 is_stmt 0 view .LVU196
 1063 0000 10B5     		push	{r4, lr}
 1064              	.LCFI21:
 1065              		.cfi_def_cfa_offset 8
 1066              		.cfi_offset 4, -8
 1067              		.cfi_offset 14, -4
 135:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_REGISTER, _weekday);
 1068              		.loc 1 135 3 is_stmt 1 view .LVU197
 135:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_REGISTER, _weekday);
 1069              		.loc 1 135 20 is_stmt 0 view .LVU198
 1070 0002 0723     		movs	r3, #7
 1071 0004 0340     		ands	r3, r0
 135:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_REGISTER, _weekday);
 1072              		.loc 1 135 12 view .LVU199
 1073 0006 044A     		ldr	r2, .L61
 1074 0008 1370     		strb	r3, [r2]
 136:Core/Src/AB1805.c **** }
 1075              		.loc 1 136 3 is_stmt 1 view .LVU200
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 70


 1076 000a 1178     		ldrb	r1, [r2]
 1077 000c C9B2     		uxtb	r1, r1
 1078 000e 0720     		movs	r0, #7
 1079              	.LVL56:
 136:Core/Src/AB1805.c **** }
 1080              		.loc 1 136 3 is_stmt 0 view .LVU201
 1081 0010 FFF7FEFF 		bl	write_rtc_register
 1082              	.LVL57:
 137:Core/Src/AB1805.c **** 
 1083              		.loc 1 137 1 view .LVU202
 1084              		@ sp needed
 1085 0014 10BD     		pop	{r4, pc}
 1086              	.L62:
 1087 0016 C046     		.align	2
 1088              	.L61:
 1089 0018 00000000 		.word	_weekday
 1090              		.cfi_endproc
 1091              	.LFE519:
 1093              		.section	.text.set_date,"ax",%progbits
 1094              		.align	1
 1095              		.global	set_date
 1096              		.syntax unified
 1097              		.code	16
 1098              		.thumb_func
 1100              	set_date:
 1101              	.LVL58:
 1102              	.LFB520:
 140:Core/Src/AB1805.c ****   _date = value % MAX_DATE;
 1103              		.loc 1 140 1 is_stmt 1 view -0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 0
 1106              		@ frame_needed = 0, uses_anonymous_args = 0
 140:Core/Src/AB1805.c ****   _date = value % MAX_DATE;
 1107              		.loc 1 140 1 is_stmt 0 view .LVU204
 1108 0000 10B5     		push	{r4, lr}
 1109              	.LCFI22:
 1110              		.cfi_def_cfa_offset 8
 1111              		.cfi_offset 4, -8
 1112              		.cfi_offset 14, -4
 141:Core/Src/AB1805.c ****   write_rtc_register(DATE_REGISTER, _date);
 1113              		.loc 1 141 3 is_stmt 1 view .LVU205
 141:Core/Src/AB1805.c ****   write_rtc_register(DATE_REGISTER, _date);
 1114              		.loc 1 141 9 is_stmt 0 view .LVU206
 1115 0002 3221     		movs	r1, #50
 1116 0004 FFF7FEFF 		bl	__aeabi_uidivmod
 1117              	.LVL59:
 141:Core/Src/AB1805.c ****   write_rtc_register(DATE_REGISTER, _date);
 1118              		.loc 1 141 9 view .LVU207
 1119 0008 C9B2     		uxtb	r1, r1
 1120 000a 044B     		ldr	r3, .L64
 1121 000c 1970     		strb	r1, [r3]
 142:Core/Src/AB1805.c **** }
 1122              		.loc 1 142 3 is_stmt 1 view .LVU208
 1123 000e 1978     		ldrb	r1, [r3]
 1124 0010 C9B2     		uxtb	r1, r1
 1125 0012 0420     		movs	r0, #4
 1126 0014 FFF7FEFF 		bl	write_rtc_register
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 71


 1127              	.LVL60:
 143:Core/Src/AB1805.c **** 
 1128              		.loc 1 143 1 is_stmt 0 view .LVU209
 1129              		@ sp needed
 1130 0018 10BD     		pop	{r4, pc}
 1131              	.L65:
 1132 001a C046     		.align	2
 1133              	.L64:
 1134 001c 00000000 		.word	_date
 1135              		.cfi_endproc
 1136              	.LFE520:
 1138              		.section	.text.set_month,"ax",%progbits
 1139              		.align	1
 1140              		.global	set_month
 1141              		.syntax unified
 1142              		.code	16
 1143              		.thumb_func
 1145              	set_month:
 1146              	.LVL61:
 1147              	.LFB521:
 146:Core/Src/AB1805.c ****   _month = value % MAX_MONTH;
 1148              		.loc 1 146 1 is_stmt 1 view -0
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 0
 1151              		@ frame_needed = 0, uses_anonymous_args = 0
 146:Core/Src/AB1805.c ****   _month = value % MAX_MONTH;
 1152              		.loc 1 146 1 is_stmt 0 view .LVU211
 1153 0000 10B5     		push	{r4, lr}
 1154              	.LCFI23:
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 4, -8
 1157              		.cfi_offset 14, -4
 147:Core/Src/AB1805.c ****   write_rtc_register(MONTH_REGISTER, _month);
 1158              		.loc 1 147 3 is_stmt 1 view .LVU212
 147:Core/Src/AB1805.c ****   write_rtc_register(MONTH_REGISTER, _month);
 1159              		.loc 1 147 10 is_stmt 0 view .LVU213
 1160 0002 1321     		movs	r1, #19
 1161 0004 FFF7FEFF 		bl	__aeabi_uidivmod
 1162              	.LVL62:
 147:Core/Src/AB1805.c ****   write_rtc_register(MONTH_REGISTER, _month);
 1163              		.loc 1 147 10 view .LVU214
 1164 0008 C9B2     		uxtb	r1, r1
 1165 000a 044B     		ldr	r3, .L67
 1166 000c 1970     		strb	r1, [r3]
 148:Core/Src/AB1805.c **** }
 1167              		.loc 1 148 3 is_stmt 1 view .LVU215
 1168 000e 1978     		ldrb	r1, [r3]
 1169 0010 C9B2     		uxtb	r1, r1
 1170 0012 0520     		movs	r0, #5
 1171 0014 FFF7FEFF 		bl	write_rtc_register
 1172              	.LVL63:
 149:Core/Src/AB1805.c **** 
 1173              		.loc 1 149 1 is_stmt 0 view .LVU216
 1174              		@ sp needed
 1175 0018 10BD     		pop	{r4, pc}
 1176              	.L68:
 1177 001a C046     		.align	2
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 72


 1178              	.L67:
 1179 001c 00000000 		.word	_month
 1180              		.cfi_endproc
 1181              	.LFE521:
 1183              		.section	.text.set_year,"ax",%progbits
 1184              		.align	1
 1185              		.global	set_year
 1186              		.syntax unified
 1187              		.code	16
 1188              		.thumb_func
 1190              	set_year:
 1191              	.LVL64:
 1192              	.LFB522:
 152:Core/Src/AB1805.c ****   _year = value % MAX_YEAR;
 1193              		.loc 1 152 1 is_stmt 1 view -0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 0
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
 152:Core/Src/AB1805.c ****   _year = value % MAX_YEAR;
 1197              		.loc 1 152 1 is_stmt 0 view .LVU218
 1198 0000 10B5     		push	{r4, lr}
 1199              	.LCFI24:
 1200              		.cfi_def_cfa_offset 8
 1201              		.cfi_offset 4, -8
 1202              		.cfi_offset 14, -4
 1203 0002 0100     		movs	r1, r0
 153:Core/Src/AB1805.c ****   write_rtc_register(YEAR_REGISTER, value);
 1204              		.loc 1 153 3 is_stmt 1 view .LVU219
 153:Core/Src/AB1805.c ****   write_rtc_register(YEAR_REGISTER, value);
 1205              		.loc 1 153 9 is_stmt 0 view .LVU220
 1206 0004 024B     		ldr	r3, .L70
 1207 0006 1870     		strb	r0, [r3]
 154:Core/Src/AB1805.c **** }
 1208              		.loc 1 154 3 is_stmt 1 view .LVU221
 1209 0008 0620     		movs	r0, #6
 1210              	.LVL65:
 154:Core/Src/AB1805.c **** }
 1211              		.loc 1 154 3 is_stmt 0 view .LVU222
 1212 000a FFF7FEFF 		bl	write_rtc_register
 1213              	.LVL66:
 155:Core/Src/AB1805.c **** 
 1214              		.loc 1 155 1 view .LVU223
 1215              		@ sp needed
 1216 000e 10BD     		pop	{r4, pc}
 1217              	.L71:
 1218              		.align	2
 1219              	.L70:
 1220 0010 00000000 		.word	_year
 1221              		.cfi_endproc
 1222              	.LFE522:
 1224              		.section	.text.set_datetime,"ax",%progbits
 1225              		.align	1
 1226              		.global	set_datetime
 1227              		.syntax unified
 1228              		.code	16
 1229              		.thumb_func
 1231              	set_datetime:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 73


 1232              	.LVL67:
 1233              	.LFB523:
 158:Core/Src/AB1805.c ****   set_year(year);
 1234              		.loc 1 158 1 is_stmt 1 view -0
 1235              		.cfi_startproc
 1236              		@ args = 12, pretend = 0, frame = 0
 1237              		@ frame_needed = 0, uses_anonymous_args = 0
 158:Core/Src/AB1805.c ****   set_year(year);
 1238              		.loc 1 158 1 is_stmt 0 view .LVU225
 1239 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1240              	.LCFI25:
 1241              		.cfi_def_cfa_offset 24
 1242              		.cfi_offset 3, -24
 1243              		.cfi_offset 4, -20
 1244              		.cfi_offset 5, -16
 1245              		.cfi_offset 6, -12
 1246              		.cfi_offset 7, -8
 1247              		.cfi_offset 14, -4
 1248 0002 CE46     		mov	lr, r9
 1249 0004 4746     		mov	r7, r8
 1250 0006 80B5     		push	{r7, lr}
 1251              	.LCFI26:
 1252              		.cfi_def_cfa_offset 32
 1253              		.cfi_offset 8, -32
 1254              		.cfi_offset 9, -28
 1255 0008 0E00     		movs	r6, r1
 1256 000a 1500     		movs	r5, r2
 1257 000c 1C00     		movs	r4, r3
 1258 000e 08AB     		add	r3, sp, #32
 1259              	.LVL68:
 158:Core/Src/AB1805.c ****   set_year(year);
 1260              		.loc 1 158 1 view .LVU226
 1261 0010 1B78     		ldrb	r3, [r3]
 1262              	.LVL69:
 158:Core/Src/AB1805.c ****   set_year(year);
 1263              		.loc 1 158 1 view .LVU227
 1264 0012 9946     		mov	r9, r3
 1265 0014 09AB     		add	r3, sp, #36
 1266              	.LVL70:
 158:Core/Src/AB1805.c ****   set_year(year);
 1267              		.loc 1 158 1 view .LVU228
 1268 0016 1B78     		ldrb	r3, [r3]
 1269              	.LVL71:
 158:Core/Src/AB1805.c ****   set_year(year);
 1270              		.loc 1 158 1 view .LVU229
 1271 0018 9846     		mov	r8, r3
 1272 001a 0AAB     		add	r3, sp, #40
 1273              	.LVL72:
 158:Core/Src/AB1805.c ****   set_year(year);
 1274              		.loc 1 158 1 view .LVU230
 1275 001c 1F78     		ldrb	r7, [r3]
 159:Core/Src/AB1805.c ****   set_month(month);
 1276              		.loc 1 159 3 is_stmt 1 view .LVU231
 1277 001e FFF7FEFF 		bl	set_year
 1278              	.LVL73:
 160:Core/Src/AB1805.c ****   set_date(date);
 1279              		.loc 1 160 3 view .LVU232
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 74


 1280 0022 3000     		movs	r0, r6
 1281 0024 FFF7FEFF 		bl	set_month
 1282              	.LVL74:
 161:Core/Src/AB1805.c ****   set_weekday(weekday);
 1283              		.loc 1 161 3 view .LVU233
 1284 0028 2800     		movs	r0, r5
 1285 002a FFF7FEFF 		bl	set_date
 1286              	.LVL75:
 162:Core/Src/AB1805.c ****   set_hour(hour);
 1287              		.loc 1 162 3 view .LVU234
 1288 002e 2000     		movs	r0, r4
 1289 0030 FFF7FEFF 		bl	set_weekday
 1290              	.LVL76:
 163:Core/Src/AB1805.c ****   set_minute(minutes);
 1291              		.loc 1 163 3 view .LVU235
 1292 0034 4846     		mov	r0, r9
 1293 0036 FFF7FEFF 		bl	set_hour
 1294              	.LVL77:
 164:Core/Src/AB1805.c ****   set_second(seconds);
 1295              		.loc 1 164 3 view .LVU236
 1296 003a 4046     		mov	r0, r8
 1297 003c FFF7FEFF 		bl	set_minute
 1298              	.LVL78:
 165:Core/Src/AB1805.c **** }
 1299              		.loc 1 165 3 view .LVU237
 1300 0040 3800     		movs	r0, r7
 1301 0042 FFF7FEFF 		bl	set_second
 1302              	.LVL79:
 166:Core/Src/AB1805.c **** 
 1303              		.loc 1 166 1 is_stmt 0 view .LVU238
 1304              		@ sp needed
 1305 0046 C0BC     		pop	{r6, r7}
 1306 0048 B946     		mov	r9, r7
 1307 004a B046     		mov	r8, r6
 1308 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1309              		.cfi_endproc
 1310              	.LFE523:
 1312              		.section	.text.set_second_alarm,"ax",%progbits
 1313              		.align	1
 1314              		.global	set_second_alarm
 1315              		.syntax unified
 1316              		.code	16
 1317              		.thumb_func
 1319              	set_second_alarm:
 1320              	.LVL80:
 1321              	.LFB531:
 224:Core/Src/AB1805.c ****   _alarm_second = value % MAX_SECOND;
 1322              		.loc 1 224 1 is_stmt 1 view -0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 0
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 224:Core/Src/AB1805.c ****   _alarm_second = value % MAX_SECOND;
 1326              		.loc 1 224 1 is_stmt 0 view .LVU240
 1327 0000 70B5     		push	{r4, r5, r6, lr}
 1328              	.LCFI27:
 1329              		.cfi_def_cfa_offset 16
 1330              		.cfi_offset 4, -16
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 75


 1331              		.cfi_offset 5, -12
 1332              		.cfi_offset 6, -8
 1333              		.cfi_offset 14, -4
 1334 0002 0400     		movs	r4, r0
 225:Core/Src/AB1805.c ****   write_rtc_register(SECOND_ALARM_REGISTER, _alarm_second);
 1335              		.loc 1 225 3 is_stmt 1 view .LVU241
 225:Core/Src/AB1805.c ****   write_rtc_register(SECOND_ALARM_REGISTER, _alarm_second);
 1336              		.loc 1 225 17 is_stmt 0 view .LVU242
 1337 0004 6021     		movs	r1, #96
 1338 0006 FFF7FEFF 		bl	__aeabi_uidivmod
 1339              	.LVL81:
 225:Core/Src/AB1805.c ****   write_rtc_register(SECOND_ALARM_REGISTER, _alarm_second);
 1340              		.loc 1 225 17 view .LVU243
 1341 000a C9B2     		uxtb	r1, r1
 1342 000c 074D     		ldr	r5, .L74
 1343 000e 2970     		strb	r1, [r5]
 226:Core/Src/AB1805.c ****   _alarm_second = get_second_alarm();
 1344              		.loc 1 226 3 is_stmt 1 view .LVU244
 1345 0010 2978     		ldrb	r1, [r5]
 1346 0012 C9B2     		uxtb	r1, r1
 1347 0014 0920     		movs	r0, #9
 1348 0016 FFF7FEFF 		bl	write_rtc_register
 1349              	.LVL82:
 227:Core/Src/AB1805.c ****   return (value == _alarm_second);
 1350              		.loc 1 227 3 view .LVU245
 227:Core/Src/AB1805.c ****   return (value == _alarm_second);
 1351              		.loc 1 227 19 is_stmt 0 view .LVU246
 1352 001a FFF7FEFF 		bl	get_second_alarm
 1353              	.LVL83:
 227:Core/Src/AB1805.c ****   return (value == _alarm_second);
 1354              		.loc 1 227 17 view .LVU247
 1355 001e 2870     		strb	r0, [r5]
 228:Core/Src/AB1805.c **** }
 1356              		.loc 1 228 3 is_stmt 1 view .LVU248
 228:Core/Src/AB1805.c **** }
 1357              		.loc 1 228 17 is_stmt 0 view .LVU249
 1358 0020 2878     		ldrb	r0, [r5]
 1359 0022 001B     		subs	r0, r0, r4
 1360 0024 4342     		rsbs	r3, r0, #0
 1361 0026 5841     		adcs	r0, r0, r3
 1362 0028 C0B2     		uxtb	r0, r0
 229:Core/Src/AB1805.c **** 
 1363              		.loc 1 229 1 view .LVU250
 1364              		@ sp needed
 1365 002a 70BD     		pop	{r4, r5, r6, pc}
 1366              	.L75:
 1367              		.align	2
 1368              	.L74:
 1369 002c 00000000 		.word	_alarm_second
 1370              		.cfi_endproc
 1371              	.LFE531:
 1373              		.section	.text.set_minute_alarm,"ax",%progbits
 1374              		.align	1
 1375              		.global	set_minute_alarm
 1376              		.syntax unified
 1377              		.code	16
 1378              		.thumb_func
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 76


 1380              	set_minute_alarm:
 1381              	.LVL84:
 1382              	.LFB532:
 232:Core/Src/AB1805.c ****   _alarm_minute = value % MAX_MINUTE;
 1383              		.loc 1 232 1 is_stmt 1 view -0
 1384              		.cfi_startproc
 1385              		@ args = 0, pretend = 0, frame = 0
 1386              		@ frame_needed = 0, uses_anonymous_args = 0
 232:Core/Src/AB1805.c ****   _alarm_minute = value % MAX_MINUTE;
 1387              		.loc 1 232 1 is_stmt 0 view .LVU252
 1388 0000 70B5     		push	{r4, r5, r6, lr}
 1389              	.LCFI28:
 1390              		.cfi_def_cfa_offset 16
 1391              		.cfi_offset 4, -16
 1392              		.cfi_offset 5, -12
 1393              		.cfi_offset 6, -8
 1394              		.cfi_offset 14, -4
 1395 0002 0400     		movs	r4, r0
 233:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_ALARM_REGISTER, _alarm_minute);
 1396              		.loc 1 233 3 is_stmt 1 view .LVU253
 233:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_ALARM_REGISTER, _alarm_minute);
 1397              		.loc 1 233 17 is_stmt 0 view .LVU254
 1398 0004 6021     		movs	r1, #96
 1399 0006 FFF7FEFF 		bl	__aeabi_uidivmod
 1400              	.LVL85:
 233:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_ALARM_REGISTER, _alarm_minute);
 1401              		.loc 1 233 17 view .LVU255
 1402 000a C9B2     		uxtb	r1, r1
 1403 000c 074D     		ldr	r5, .L77
 1404 000e 2970     		strb	r1, [r5]
 234:Core/Src/AB1805.c ****   _alarm_minute = get_minute_alarm();
 1405              		.loc 1 234 3 is_stmt 1 view .LVU256
 1406 0010 2978     		ldrb	r1, [r5]
 1407 0012 C9B2     		uxtb	r1, r1
 1408 0014 0A20     		movs	r0, #10
 1409 0016 FFF7FEFF 		bl	write_rtc_register
 1410              	.LVL86:
 235:Core/Src/AB1805.c ****   return (value == _alarm_minute);
 1411              		.loc 1 235 3 view .LVU257
 235:Core/Src/AB1805.c ****   return (value == _alarm_minute);
 1412              		.loc 1 235 19 is_stmt 0 view .LVU258
 1413 001a FFF7FEFF 		bl	get_minute_alarm
 1414              	.LVL87:
 235:Core/Src/AB1805.c ****   return (value == _alarm_minute);
 1415              		.loc 1 235 17 view .LVU259
 1416 001e 2870     		strb	r0, [r5]
 236:Core/Src/AB1805.c **** }
 1417              		.loc 1 236 3 is_stmt 1 view .LVU260
 236:Core/Src/AB1805.c **** }
 1418              		.loc 1 236 17 is_stmt 0 view .LVU261
 1419 0020 2878     		ldrb	r0, [r5]
 1420 0022 001B     		subs	r0, r0, r4
 1421 0024 4342     		rsbs	r3, r0, #0
 1422 0026 5841     		adcs	r0, r0, r3
 1423 0028 C0B2     		uxtb	r0, r0
 237:Core/Src/AB1805.c **** 
 1424              		.loc 1 237 1 view .LVU262
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 77


 1425              		@ sp needed
 1426 002a 70BD     		pop	{r4, r5, r6, pc}
 1427              	.L78:
 1428              		.align	2
 1429              	.L77:
 1430 002c 00000000 		.word	_alarm_minute
 1431              		.cfi_endproc
 1432              	.LFE532:
 1434              		.section	.text.set_hour_alarm,"ax",%progbits
 1435              		.align	1
 1436              		.global	set_hour_alarm
 1437              		.syntax unified
 1438              		.code	16
 1439              		.thumb_func
 1441              	set_hour_alarm:
 1442              	.LVL88:
 1443              	.LFB533:
 240:Core/Src/AB1805.c ****   _alarm_hour = value % MAX_HOURS;
 1444              		.loc 1 240 1 is_stmt 1 view -0
 1445              		.cfi_startproc
 1446              		@ args = 0, pretend = 0, frame = 0
 1447              		@ frame_needed = 0, uses_anonymous_args = 0
 240:Core/Src/AB1805.c ****   _alarm_hour = value % MAX_HOURS;
 1448              		.loc 1 240 1 is_stmt 0 view .LVU264
 1449 0000 70B5     		push	{r4, r5, r6, lr}
 1450              	.LCFI29:
 1451              		.cfi_def_cfa_offset 16
 1452              		.cfi_offset 4, -16
 1453              		.cfi_offset 5, -12
 1454              		.cfi_offset 6, -8
 1455              		.cfi_offset 14, -4
 1456 0002 0400     		movs	r4, r0
 241:Core/Src/AB1805.c ****   write_rtc_register(HOUR_ALARM_REGISTER, _alarm_hour);
 1457              		.loc 1 241 3 is_stmt 1 view .LVU265
 241:Core/Src/AB1805.c ****   write_rtc_register(HOUR_ALARM_REGISTER, _alarm_hour);
 1458              		.loc 1 241 15 is_stmt 0 view .LVU266
 1459 0004 2421     		movs	r1, #36
 1460 0006 FFF7FEFF 		bl	__aeabi_uidivmod
 1461              	.LVL89:
 241:Core/Src/AB1805.c ****   write_rtc_register(HOUR_ALARM_REGISTER, _alarm_hour);
 1462              		.loc 1 241 15 view .LVU267
 1463 000a C9B2     		uxtb	r1, r1
 1464 000c 074D     		ldr	r5, .L80
 1465 000e 2970     		strb	r1, [r5]
 242:Core/Src/AB1805.c ****   _alarm_hour = get_hour_alarm();
 1466              		.loc 1 242 3 is_stmt 1 view .LVU268
 1467 0010 2978     		ldrb	r1, [r5]
 1468 0012 C9B2     		uxtb	r1, r1
 1469 0014 0B20     		movs	r0, #11
 1470 0016 FFF7FEFF 		bl	write_rtc_register
 1471              	.LVL90:
 243:Core/Src/AB1805.c ****   return (value == _alarm_hour);
 1472              		.loc 1 243 3 view .LVU269
 243:Core/Src/AB1805.c ****   return (value == _alarm_hour);
 1473              		.loc 1 243 17 is_stmt 0 view .LVU270
 1474 001a FFF7FEFF 		bl	get_hour_alarm
 1475              	.LVL91:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 78


 243:Core/Src/AB1805.c ****   return (value == _alarm_hour);
 1476              		.loc 1 243 15 view .LVU271
 1477 001e 2870     		strb	r0, [r5]
 244:Core/Src/AB1805.c **** }
 1478              		.loc 1 244 3 is_stmt 1 view .LVU272
 244:Core/Src/AB1805.c **** }
 1479              		.loc 1 244 17 is_stmt 0 view .LVU273
 1480 0020 2878     		ldrb	r0, [r5]
 1481 0022 001B     		subs	r0, r0, r4
 1482 0024 4342     		rsbs	r3, r0, #0
 1483 0026 5841     		adcs	r0, r0, r3
 1484 0028 C0B2     		uxtb	r0, r0
 245:Core/Src/AB1805.c **** 
 1485              		.loc 1 245 1 view .LVU274
 1486              		@ sp needed
 1487 002a 70BD     		pop	{r4, r5, r6, pc}
 1488              	.L81:
 1489              		.align	2
 1490              	.L80:
 1491 002c 00000000 		.word	_alarm_hour
 1492              		.cfi_endproc
 1493              	.LFE533:
 1495              		.section	.text.set_weekday_alarm,"ax",%progbits
 1496              		.align	1
 1497              		.global	set_weekday_alarm
 1498              		.syntax unified
 1499              		.code	16
 1500              		.thumb_func
 1502              	set_weekday_alarm:
 1503              	.LVL92:
 1504              	.LFB534:
 248:Core/Src/AB1805.c ****   _alarm_weekday = value % MAX_DAY;
 1505              		.loc 1 248 1 is_stmt 1 view -0
 1506              		.cfi_startproc
 1507              		@ args = 0, pretend = 0, frame = 0
 1508              		@ frame_needed = 0, uses_anonymous_args = 0
 248:Core/Src/AB1805.c ****   _alarm_weekday = value % MAX_DAY;
 1509              		.loc 1 248 1 is_stmt 0 view .LVU276
 1510 0000 70B5     		push	{r4, r5, r6, lr}
 1511              	.LCFI30:
 1512              		.cfi_def_cfa_offset 16
 1513              		.cfi_offset 4, -16
 1514              		.cfi_offset 5, -12
 1515              		.cfi_offset 6, -8
 1516              		.cfi_offset 14, -4
 1517 0002 0400     		movs	r4, r0
 249:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_ALARM_REGISTER, _alarm_weekday);
 1518              		.loc 1 249 3 is_stmt 1 view .LVU277
 249:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_ALARM_REGISTER, _alarm_weekday);
 1519              		.loc 1 249 26 is_stmt 0 view .LVU278
 1520 0004 0723     		movs	r3, #7
 1521 0006 0340     		ands	r3, r0
 249:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_ALARM_REGISTER, _alarm_weekday);
 1522              		.loc 1 249 18 view .LVU279
 1523 0008 074D     		ldr	r5, .L83
 1524 000a 2B70     		strb	r3, [r5]
 250:Core/Src/AB1805.c ****   _alarm_weekday = get_weekday_alarm();
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 79


 1525              		.loc 1 250 3 is_stmt 1 view .LVU280
 1526 000c 2978     		ldrb	r1, [r5]
 1527 000e C9B2     		uxtb	r1, r1
 1528 0010 0E20     		movs	r0, #14
 1529              	.LVL93:
 250:Core/Src/AB1805.c ****   _alarm_weekday = get_weekday_alarm();
 1530              		.loc 1 250 3 is_stmt 0 view .LVU281
 1531 0012 FFF7FEFF 		bl	write_rtc_register
 1532              	.LVL94:
 251:Core/Src/AB1805.c ****   return (value == _alarm_weekday);
 1533              		.loc 1 251 3 is_stmt 1 view .LVU282
 251:Core/Src/AB1805.c ****   return (value == _alarm_weekday);
 1534              		.loc 1 251 20 is_stmt 0 view .LVU283
 1535 0016 FFF7FEFF 		bl	get_weekday_alarm
 1536              	.LVL95:
 251:Core/Src/AB1805.c ****   return (value == _alarm_weekday);
 1537              		.loc 1 251 18 view .LVU284
 1538 001a 2870     		strb	r0, [r5]
 252:Core/Src/AB1805.c **** }
 1539              		.loc 1 252 3 is_stmt 1 view .LVU285
 252:Core/Src/AB1805.c **** }
 1540              		.loc 1 252 17 is_stmt 0 view .LVU286
 1541 001c 2878     		ldrb	r0, [r5]
 1542 001e 001B     		subs	r0, r0, r4
 1543 0020 4342     		rsbs	r3, r0, #0
 1544 0022 5841     		adcs	r0, r0, r3
 1545 0024 C0B2     		uxtb	r0, r0
 253:Core/Src/AB1805.c **** 
 1546              		.loc 1 253 1 view .LVU287
 1547              		@ sp needed
 1548 0026 70BD     		pop	{r4, r5, r6, pc}
 1549              	.L84:
 1550              		.align	2
 1551              	.L83:
 1552 0028 00000000 		.word	_alarm_weekday
 1553              		.cfi_endproc
 1554              	.LFE534:
 1556              		.section	.text.set_date_alarm,"ax",%progbits
 1557              		.align	1
 1558              		.global	set_date_alarm
 1559              		.syntax unified
 1560              		.code	16
 1561              		.thumb_func
 1563              	set_date_alarm:
 1564              	.LVL96:
 1565              	.LFB535:
 256:Core/Src/AB1805.c ****   _alarm_date = value % MAX_DATE;
 1566              		.loc 1 256 1 is_stmt 1 view -0
 1567              		.cfi_startproc
 1568              		@ args = 0, pretend = 0, frame = 0
 1569              		@ frame_needed = 0, uses_anonymous_args = 0
 256:Core/Src/AB1805.c ****   _alarm_date = value % MAX_DATE;
 1570              		.loc 1 256 1 is_stmt 0 view .LVU289
 1571 0000 70B5     		push	{r4, r5, r6, lr}
 1572              	.LCFI31:
 1573              		.cfi_def_cfa_offset 16
 1574              		.cfi_offset 4, -16
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 80


 1575              		.cfi_offset 5, -12
 1576              		.cfi_offset 6, -8
 1577              		.cfi_offset 14, -4
 1578 0002 0400     		movs	r4, r0
 257:Core/Src/AB1805.c ****   write_rtc_register(DATE_ALARM_REGISTER, _alarm_date);
 1579              		.loc 1 257 3 is_stmt 1 view .LVU290
 257:Core/Src/AB1805.c ****   write_rtc_register(DATE_ALARM_REGISTER, _alarm_date);
 1580              		.loc 1 257 15 is_stmt 0 view .LVU291
 1581 0004 3221     		movs	r1, #50
 1582 0006 FFF7FEFF 		bl	__aeabi_uidivmod
 1583              	.LVL97:
 257:Core/Src/AB1805.c ****   write_rtc_register(DATE_ALARM_REGISTER, _alarm_date);
 1584              		.loc 1 257 15 view .LVU292
 1585 000a C9B2     		uxtb	r1, r1
 1586 000c 074D     		ldr	r5, .L86
 1587 000e 2970     		strb	r1, [r5]
 258:Core/Src/AB1805.c ****   _alarm_date = get_date_alarm();
 1588              		.loc 1 258 3 is_stmt 1 view .LVU293
 1589 0010 2978     		ldrb	r1, [r5]
 1590 0012 C9B2     		uxtb	r1, r1
 1591 0014 0C20     		movs	r0, #12
 1592 0016 FFF7FEFF 		bl	write_rtc_register
 1593              	.LVL98:
 259:Core/Src/AB1805.c ****   return (value == _alarm_date);
 1594              		.loc 1 259 3 view .LVU294
 259:Core/Src/AB1805.c ****   return (value == _alarm_date);
 1595              		.loc 1 259 17 is_stmt 0 view .LVU295
 1596 001a FFF7FEFF 		bl	get_date_alarm
 1597              	.LVL99:
 259:Core/Src/AB1805.c ****   return (value == _alarm_date);
 1598              		.loc 1 259 15 view .LVU296
 1599 001e 2870     		strb	r0, [r5]
 260:Core/Src/AB1805.c **** }
 1600              		.loc 1 260 3 is_stmt 1 view .LVU297
 260:Core/Src/AB1805.c **** }
 1601              		.loc 1 260 17 is_stmt 0 view .LVU298
 1602 0020 2878     		ldrb	r0, [r5]
 1603 0022 001B     		subs	r0, r0, r4
 1604 0024 4342     		rsbs	r3, r0, #0
 1605 0026 5841     		adcs	r0, r0, r3
 1606 0028 C0B2     		uxtb	r0, r0
 261:Core/Src/AB1805.c **** 
 1607              		.loc 1 261 1 view .LVU299
 1608              		@ sp needed
 1609 002a 70BD     		pop	{r4, r5, r6, pc}
 1610              	.L87:
 1611              		.align	2
 1612              	.L86:
 1613 002c 00000000 		.word	_alarm_date
 1614              		.cfi_endproc
 1615              	.LFE535:
 1617              		.section	.text.set_month_alarm,"ax",%progbits
 1618              		.align	1
 1619              		.global	set_month_alarm
 1620              		.syntax unified
 1621              		.code	16
 1622              		.thumb_func
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 81


 1624              	set_month_alarm:
 1625              	.LVL100:
 1626              	.LFB536:
 264:Core/Src/AB1805.c ****   _alarm_month = value % MAX_MONTH;
 1627              		.loc 1 264 1 is_stmt 1 view -0
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 0
 1630              		@ frame_needed = 0, uses_anonymous_args = 0
 264:Core/Src/AB1805.c ****   _alarm_month = value % MAX_MONTH;
 1631              		.loc 1 264 1 is_stmt 0 view .LVU301
 1632 0000 70B5     		push	{r4, r5, r6, lr}
 1633              	.LCFI32:
 1634              		.cfi_def_cfa_offset 16
 1635              		.cfi_offset 4, -16
 1636              		.cfi_offset 5, -12
 1637              		.cfi_offset 6, -8
 1638              		.cfi_offset 14, -4
 1639 0002 0400     		movs	r4, r0
 265:Core/Src/AB1805.c ****   write_rtc_register(MONTH_ALARM_REGISTER, _alarm_month);
 1640              		.loc 1 265 3 is_stmt 1 view .LVU302
 265:Core/Src/AB1805.c ****   write_rtc_register(MONTH_ALARM_REGISTER, _alarm_month);
 1641              		.loc 1 265 16 is_stmt 0 view .LVU303
 1642 0004 1321     		movs	r1, #19
 1643 0006 FFF7FEFF 		bl	__aeabi_uidivmod
 1644              	.LVL101:
 265:Core/Src/AB1805.c ****   write_rtc_register(MONTH_ALARM_REGISTER, _alarm_month);
 1645              		.loc 1 265 16 view .LVU304
 1646 000a C9B2     		uxtb	r1, r1
 1647 000c 074D     		ldr	r5, .L89
 1648 000e 2970     		strb	r1, [r5]
 266:Core/Src/AB1805.c ****   _alarm_month = get_month_alarm();
 1649              		.loc 1 266 3 is_stmt 1 view .LVU305
 1650 0010 2978     		ldrb	r1, [r5]
 1651 0012 C9B2     		uxtb	r1, r1
 1652 0014 0D20     		movs	r0, #13
 1653 0016 FFF7FEFF 		bl	write_rtc_register
 1654              	.LVL102:
 267:Core/Src/AB1805.c ****   return (value == _alarm_month);
 1655              		.loc 1 267 3 view .LVU306
 267:Core/Src/AB1805.c ****   return (value == _alarm_month);
 1656              		.loc 1 267 18 is_stmt 0 view .LVU307
 1657 001a FFF7FEFF 		bl	get_month_alarm
 1658              	.LVL103:
 267:Core/Src/AB1805.c ****   return (value == _alarm_month);
 1659              		.loc 1 267 16 view .LVU308
 1660 001e 2870     		strb	r0, [r5]
 268:Core/Src/AB1805.c **** }
 1661              		.loc 1 268 3 is_stmt 1 view .LVU309
 268:Core/Src/AB1805.c **** }
 1662              		.loc 1 268 17 is_stmt 0 view .LVU310
 1663 0020 2878     		ldrb	r0, [r5]
 1664 0022 001B     		subs	r0, r0, r4
 1665 0024 4342     		rsbs	r3, r0, #0
 1666 0026 5841     		adcs	r0, r0, r3
 1667 0028 C0B2     		uxtb	r0, r0
 269:Core/Src/AB1805.c **** 
 1668              		.loc 1 269 1 view .LVU311
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 82


 1669              		@ sp needed
 1670 002a 70BD     		pop	{r4, r5, r6, pc}
 1671              	.L90:
 1672              		.align	2
 1673              	.L89:
 1674 002c 00000000 		.word	_alarm_month
 1675              		.cfi_endproc
 1676              	.LFE536:
 1678              		.section	.text.get_date_time,"ax",%progbits
 1679              		.align	1
 1680              		.global	get_date_time
 1681              		.syntax unified
 1682              		.code	16
 1683              		.thumb_func
 1685              	get_date_time:
 1686              	.LFB537:
 314:Core/Src/AB1805.c ****   char *currPos;
 1687              		.loc 1 314 1 is_stmt 1 view -0
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 0
 1690              		@ frame_needed = 0, uses_anonymous_args = 0
 1691 0000 70B5     		push	{r4, r5, r6, lr}
 1692              	.LCFI33:
 1693              		.cfi_def_cfa_offset 16
 1694              		.cfi_offset 4, -16
 1695              		.cfi_offset 5, -12
 1696              		.cfi_offset 6, -8
 1697              		.cfi_offset 14, -4
 315:Core/Src/AB1805.c ****   currPos = data_time_string;
 1698              		.loc 1 315 3 view .LVU313
 316:Core/Src/AB1805.c ****   *currPos = 0;
 1699              		.loc 1 316 3 view .LVU314
 1700              	.LVL104:
 317:Core/Src/AB1805.c ****   get_datetime();
 1701              		.loc 1 317 3 view .LVU315
 317:Core/Src/AB1805.c ****   get_datetime();
 1702              		.loc 1 317 12 is_stmt 0 view .LVU316
 1703 0002 2B4C     		ldr	r4, .L92
 1704 0004 0023     		movs	r3, #0
 1705 0006 2370     		strb	r3, [r4]
 318:Core/Src/AB1805.c **** 
 1706              		.loc 1 318 3 is_stmt 1 view .LVU317
 1707 0008 FFF7FEFF 		bl	get_datetime
 1708              	.LVL105:
 320:Core/Src/AB1805.c ****   currPos++;
 1709              		.loc 1 320 3 view .LVU318
 320:Core/Src/AB1805.c ****   currPos++;
 1710              		.loc 1 320 30 is_stmt 0 view .LVU319
 1711 000c 2949     		ldr	r1, .L92+4
 1712 000e 0A78     		ldrb	r2, [r1]
 1713 0010 1209     		lsrs	r2, r2, #4
 1714 0012 0F23     		movs	r3, #15
 1715 0014 1A40     		ands	r2, r3
 320:Core/Src/AB1805.c ****   currPos++;
 1716              		.loc 1 320 36 view .LVU320
 1717 0016 3032     		adds	r2, r2, #48
 320:Core/Src/AB1805.c ****   currPos++;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 83


 1718              		.loc 1 320 12 view .LVU321
 1719 0018 2270     		strb	r2, [r4]
 321:Core/Src/AB1805.c ****   *currPos = (_date & 0x0F) + 0x30;
 1720              		.loc 1 321 3 is_stmt 1 view .LVU322
 1721              	.LVL106:
 322:Core/Src/AB1805.c ****   currPos++;
 1722              		.loc 1 322 3 view .LVU323
 322:Core/Src/AB1805.c ****   currPos++;
 1723              		.loc 1 322 21 is_stmt 0 view .LVU324
 1724 001a 0A78     		ldrb	r2, [r1]
 1725 001c 1A40     		ands	r2, r3
 322:Core/Src/AB1805.c ****   currPos++;
 1726              		.loc 1 322 29 view .LVU325
 1727 001e 3032     		adds	r2, r2, #48
 322:Core/Src/AB1805.c ****   currPos++;
 1728              		.loc 1 322 12 view .LVU326
 1729 0020 6270     		strb	r2, [r4, #1]
 323:Core/Src/AB1805.c **** 
 1730              		.loc 1 323 3 is_stmt 1 view .LVU327
 1731              	.LVL107:
 325:Core/Src/AB1805.c ****   currPos++;
 1732              		.loc 1 325 3 view .LVU328
 325:Core/Src/AB1805.c ****   currPos++;
 1733              		.loc 1 325 12 is_stmt 0 view .LVU329
 1734 0022 2F21     		movs	r1, #47
 1735 0024 A170     		strb	r1, [r4, #2]
 326:Core/Src/AB1805.c **** 
 1736              		.loc 1 326 3 is_stmt 1 view .LVU330
 1737              	.LVL108:
 328:Core/Src/AB1805.c ****   currPos++;
 1738              		.loc 1 328 3 view .LVU331
 328:Core/Src/AB1805.c ****   currPos++;
 1739              		.loc 1 328 31 is_stmt 0 view .LVU332
 1740 0026 2448     		ldr	r0, .L92+8
 1741 0028 0278     		ldrb	r2, [r0]
 1742 002a 1209     		lsrs	r2, r2, #4
 1743 002c 1A40     		ands	r2, r3
 328:Core/Src/AB1805.c ****   currPos++;
 1744              		.loc 1 328 37 view .LVU333
 1745 002e 3032     		adds	r2, r2, #48
 328:Core/Src/AB1805.c ****   currPos++;
 1746              		.loc 1 328 12 view .LVU334
 1747 0030 E270     		strb	r2, [r4, #3]
 329:Core/Src/AB1805.c ****   *currPos = (_month & 0x0F) + 0x30;
 1748              		.loc 1 329 3 is_stmt 1 view .LVU335
 1749              	.LVL109:
 330:Core/Src/AB1805.c ****   currPos++;
 1750              		.loc 1 330 3 view .LVU336
 330:Core/Src/AB1805.c ****   currPos++;
 1751              		.loc 1 330 22 is_stmt 0 view .LVU337
 1752 0032 0278     		ldrb	r2, [r0]
 1753 0034 1A40     		ands	r2, r3
 330:Core/Src/AB1805.c ****   currPos++;
 1754              		.loc 1 330 30 view .LVU338
 1755 0036 3032     		adds	r2, r2, #48
 330:Core/Src/AB1805.c ****   currPos++;
 1756              		.loc 1 330 12 view .LVU339
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 84


 1757 0038 2271     		strb	r2, [r4, #4]
 331:Core/Src/AB1805.c **** 
 1758              		.loc 1 331 3 is_stmt 1 view .LVU340
 1759              	.LVL110:
 333:Core/Src/AB1805.c ****   currPos++;
 1760              		.loc 1 333 3 view .LVU341
 333:Core/Src/AB1805.c ****   currPos++;
 1761              		.loc 1 333 12 is_stmt 0 view .LVU342
 1762 003a 6171     		strb	r1, [r4, #5]
 334:Core/Src/AB1805.c **** 
 1763              		.loc 1 334 3 is_stmt 1 view .LVU343
 1764              	.LVL111:
 336:Core/Src/AB1805.c ****   currPos++;
 1765              		.loc 1 336 3 view .LVU344
 336:Core/Src/AB1805.c ****   currPos++;
 1766              		.loc 1 336 30 is_stmt 0 view .LVU345
 1767 003c 1F49     		ldr	r1, .L92+12
 1768 003e 0A78     		ldrb	r2, [r1]
 1769 0040 1209     		lsrs	r2, r2, #4
 1770 0042 1A40     		ands	r2, r3
 336:Core/Src/AB1805.c ****   currPos++;
 1771              		.loc 1 336 36 view .LVU346
 1772 0044 3032     		adds	r2, r2, #48
 336:Core/Src/AB1805.c ****   currPos++;
 1773              		.loc 1 336 12 view .LVU347
 1774 0046 A271     		strb	r2, [r4, #6]
 337:Core/Src/AB1805.c ****   *currPos = (_year & 0x0F) + 0x30;
 1775              		.loc 1 337 3 is_stmt 1 view .LVU348
 1776              	.LVL112:
 338:Core/Src/AB1805.c ****   currPos++;
 1777              		.loc 1 338 3 view .LVU349
 338:Core/Src/AB1805.c ****   currPos++;
 1778              		.loc 1 338 21 is_stmt 0 view .LVU350
 1779 0048 0A78     		ldrb	r2, [r1]
 1780 004a 1A40     		ands	r2, r3
 338:Core/Src/AB1805.c ****   currPos++;
 1781              		.loc 1 338 29 view .LVU351
 1782 004c 3032     		adds	r2, r2, #48
 338:Core/Src/AB1805.c ****   currPos++;
 1783              		.loc 1 338 12 view .LVU352
 1784 004e E271     		strb	r2, [r4, #7]
 339:Core/Src/AB1805.c **** 
 1785              		.loc 1 339 3 is_stmt 1 view .LVU353
 1786              	.LVL113:
 341:Core/Src/AB1805.c ****   currPos++;
 1787              		.loc 1 341 3 view .LVU354
 341:Core/Src/AB1805.c ****   currPos++;
 1788              		.loc 1 341 12 is_stmt 0 view .LVU355
 1789 0050 2021     		movs	r1, #32
 1790 0052 2172     		strb	r1, [r4, #8]
 342:Core/Src/AB1805.c **** 
 1791              		.loc 1 342 3 is_stmt 1 view .LVU356
 1792              	.LVL114:
 344:Core/Src/AB1805.c ****   currPos++;
 1793              		.loc 1 344 3 view .LVU357
 344:Core/Src/AB1805.c ****   currPos++;
 1794              		.loc 1 344 30 is_stmt 0 view .LVU358
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 85


 1795 0054 1A48     		ldr	r0, .L92+16
 1796 0056 0278     		ldrb	r2, [r0]
 1797 0058 1209     		lsrs	r2, r2, #4
 1798 005a 1A40     		ands	r2, r3
 344:Core/Src/AB1805.c ****   currPos++;
 1799              		.loc 1 344 36 view .LVU359
 1800 005c 3032     		adds	r2, r2, #48
 344:Core/Src/AB1805.c ****   currPos++;
 1801              		.loc 1 344 12 view .LVU360
 1802 005e 6272     		strb	r2, [r4, #9]
 345:Core/Src/AB1805.c ****   *currPos = (_hour & 0x0F) + 0x30;
 1803              		.loc 1 345 3 is_stmt 1 view .LVU361
 1804              	.LVL115:
 346:Core/Src/AB1805.c ****   currPos++;
 1805              		.loc 1 346 3 view .LVU362
 346:Core/Src/AB1805.c ****   currPos++;
 1806              		.loc 1 346 21 is_stmt 0 view .LVU363
 1807 0060 0278     		ldrb	r2, [r0]
 1808 0062 1A40     		ands	r2, r3
 346:Core/Src/AB1805.c ****   currPos++;
 1809              		.loc 1 346 29 view .LVU364
 1810 0064 3032     		adds	r2, r2, #48
 346:Core/Src/AB1805.c ****   currPos++;
 1811              		.loc 1 346 12 view .LVU365
 1812 0066 A272     		strb	r2, [r4, #10]
 347:Core/Src/AB1805.c **** 
 1813              		.loc 1 347 3 is_stmt 1 view .LVU366
 1814              	.LVL116:
 349:Core/Src/AB1805.c ****   currPos++;
 1815              		.loc 1 349 3 view .LVU367
 349:Core/Src/AB1805.c ****   currPos++;
 1816              		.loc 1 349 12 is_stmt 0 view .LVU368
 1817 0068 3A20     		movs	r0, #58
 1818 006a E072     		strb	r0, [r4, #11]
 350:Core/Src/AB1805.c **** 
 1819              		.loc 1 350 3 is_stmt 1 view .LVU369
 1820              	.LVL117:
 352:Core/Src/AB1805.c ****   currPos++;
 1821              		.loc 1 352 3 view .LVU370
 352:Core/Src/AB1805.c ****   currPos++;
 1822              		.loc 1 352 32 is_stmt 0 view .LVU371
 1823 006c 154D     		ldr	r5, .L92+20
 1824 006e 2A78     		ldrb	r2, [r5]
 1825 0070 1209     		lsrs	r2, r2, #4
 1826 0072 1A40     		ands	r2, r3
 352:Core/Src/AB1805.c ****   currPos++;
 1827              		.loc 1 352 38 view .LVU372
 1828 0074 3032     		adds	r2, r2, #48
 352:Core/Src/AB1805.c ****   currPos++;
 1829              		.loc 1 352 12 view .LVU373
 1830 0076 2273     		strb	r2, [r4, #12]
 353:Core/Src/AB1805.c ****   *currPos = (_minute & 0x0F) + 0x30;
 1831              		.loc 1 353 3 is_stmt 1 view .LVU374
 1832              	.LVL118:
 354:Core/Src/AB1805.c ****   currPos++;
 1833              		.loc 1 354 3 view .LVU375
 354:Core/Src/AB1805.c ****   currPos++;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 86


 1834              		.loc 1 354 23 is_stmt 0 view .LVU376
 1835 0078 2A78     		ldrb	r2, [r5]
 1836 007a 1A40     		ands	r2, r3
 354:Core/Src/AB1805.c ****   currPos++;
 1837              		.loc 1 354 31 view .LVU377
 1838 007c 3032     		adds	r2, r2, #48
 354:Core/Src/AB1805.c ****   currPos++;
 1839              		.loc 1 354 12 view .LVU378
 1840 007e 6273     		strb	r2, [r4, #13]
 355:Core/Src/AB1805.c **** 
 1841              		.loc 1 355 3 is_stmt 1 view .LVU379
 1842              	.LVL119:
 357:Core/Src/AB1805.c ****   currPos++;
 1843              		.loc 1 357 3 view .LVU380
 357:Core/Src/AB1805.c ****   currPos++;
 1844              		.loc 1 357 12 is_stmt 0 view .LVU381
 1845 0080 A073     		strb	r0, [r4, #14]
 358:Core/Src/AB1805.c **** 
 1846              		.loc 1 358 3 is_stmt 1 view .LVU382
 1847              	.LVL120:
 360:Core/Src/AB1805.c ****   currPos++;
 1848              		.loc 1 360 3 view .LVU383
 360:Core/Src/AB1805.c ****   currPos++;
 1849              		.loc 1 360 32 is_stmt 0 view .LVU384
 1850 0082 1148     		ldr	r0, .L92+24
 1851 0084 0278     		ldrb	r2, [r0]
 1852 0086 1209     		lsrs	r2, r2, #4
 1853 0088 1A40     		ands	r2, r3
 360:Core/Src/AB1805.c ****   currPos++;
 1854              		.loc 1 360 38 view .LVU385
 1855 008a 3032     		adds	r2, r2, #48
 360:Core/Src/AB1805.c ****   currPos++;
 1856              		.loc 1 360 12 view .LVU386
 1857 008c E273     		strb	r2, [r4, #15]
 361:Core/Src/AB1805.c ****   *currPos = (_second & 0x0F) + 0x30;
 1858              		.loc 1 361 3 is_stmt 1 view .LVU387
 1859              	.LVL121:
 362:Core/Src/AB1805.c ****   currPos++;
 1860              		.loc 1 362 3 view .LVU388
 362:Core/Src/AB1805.c ****   currPos++;
 1861              		.loc 1 362 23 is_stmt 0 view .LVU389
 1862 008e 0278     		ldrb	r2, [r0]
 1863 0090 1A40     		ands	r2, r3
 362:Core/Src/AB1805.c ****   currPos++;
 1864              		.loc 1 362 31 view .LVU390
 1865 0092 3032     		adds	r2, r2, #48
 362:Core/Src/AB1805.c ****   currPos++;
 1866              		.loc 1 362 12 view .LVU391
 1867 0094 2274     		strb	r2, [r4, #16]
 363:Core/Src/AB1805.c **** 
 1868              		.loc 1 363 3 is_stmt 1 view .LVU392
 1869              	.LVL122:
 365:Core/Src/AB1805.c ****   currPos++;
 1870              		.loc 1 365 3 view .LVU393
 365:Core/Src/AB1805.c ****   currPos++;
 1871              		.loc 1 365 12 is_stmt 0 view .LVU394
 1872 0096 6174     		strb	r1, [r4, #17]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 87


 366:Core/Src/AB1805.c **** 
 1873              		.loc 1 366 3 is_stmt 1 view .LVU395
 1874              	.LVL123:
 368:Core/Src/AB1805.c ****   currPos++;
 1875              		.loc 1 368 3 view .LVU396
 368:Core/Src/AB1805.c ****   currPos++;
 1876              		.loc 1 368 35 is_stmt 0 view .LVU397
 1877 0098 0C49     		ldr	r1, .L92+28
 1878 009a 0A78     		ldrb	r2, [r1]
 1879 009c 1209     		lsrs	r2, r2, #4
 1880 009e 1A40     		ands	r2, r3
 368:Core/Src/AB1805.c ****   currPos++;
 1881              		.loc 1 368 41 view .LVU398
 1882 00a0 3032     		adds	r2, r2, #48
 368:Core/Src/AB1805.c ****   currPos++;
 1883              		.loc 1 368 12 view .LVU399
 1884 00a2 A274     		strb	r2, [r4, #18]
 369:Core/Src/AB1805.c ****   *currPos = (_hundredth & 0x0F) + 0x30;
 1885              		.loc 1 369 3 is_stmt 1 view .LVU400
 1886              	.LVL124:
 370:Core/Src/AB1805.c ****   currPos++;
 1887              		.loc 1 370 3 view .LVU401
 370:Core/Src/AB1805.c ****   currPos++;
 1888              		.loc 1 370 26 is_stmt 0 view .LVU402
 1889 00a4 0A78     		ldrb	r2, [r1]
 1890 00a6 1340     		ands	r3, r2
 370:Core/Src/AB1805.c ****   currPos++;
 1891              		.loc 1 370 34 view .LVU403
 1892 00a8 3033     		adds	r3, r3, #48
 370:Core/Src/AB1805.c ****   currPos++;
 1893              		.loc 1 370 12 view .LVU404
 1894 00aa E374     		strb	r3, [r4, #19]
 371:Core/Src/AB1805.c **** 
 1895              		.loc 1 371 3 is_stmt 1 view .LVU405
 1896              	.LVL125:
 373:Core/Src/AB1805.c **** }
 1897              		.loc 1 373 3 view .LVU406
 374:Core/Src/AB1805.c **** 
 1898              		.loc 1 374 1 is_stmt 0 view .LVU407
 1899 00ac 2000     		movs	r0, r4
 1900              		@ sp needed
 1901 00ae 70BD     		pop	{r4, r5, r6, pc}
 1902              	.L93:
 1903              		.align	2
 1904              	.L92:
 1905 00b0 00000000 		.word	data_time_string
 1906 00b4 00000000 		.word	_date
 1907 00b8 00000000 		.word	_month
 1908 00bc 00000000 		.word	_year
 1909 00c0 00000000 		.word	_hour
 1910 00c4 00000000 		.word	_minute
 1911 00c8 00000000 		.word	_second
 1912 00cc 00000000 		.word	_hundredth
 1913              		.cfi_endproc
 1914              	.LFE537:
 1916              		.section	.text.dec_hex,"ax",%progbits
 1917              		.align	1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 88


 1918              		.global	dec_hex
 1919              		.syntax unified
 1920              		.code	16
 1921              		.thumb_func
 1923              	dec_hex:
 1924              	.LVL126:
 1925              	.LFB538:
 377:Core/Src/AB1805.c ****   uint8_t ret;
 1926              		.loc 1 377 1 is_stmt 1 view -0
 1927              		.cfi_startproc
 1928              		@ args = 0, pretend = 0, frame = 0
 1929              		@ frame_needed = 0, uses_anonymous_args = 0
 1930              		@ link register save eliminated.
 378:Core/Src/AB1805.c ****   ret = (tens << 4) + digits;
 1931              		.loc 1 378 3 view .LVU409
 379:Core/Src/AB1805.c ****   return ret;
 1932              		.loc 1 379 3 view .LVU410
 379:Core/Src/AB1805.c ****   return ret;
 1933              		.loc 1 379 15 is_stmt 0 view .LVU411
 1934 0000 0001     		lsls	r0, r0, #4
 1935              	.LVL127:
 379:Core/Src/AB1805.c ****   return ret;
 1936              		.loc 1 379 15 view .LVU412
 1937 0002 C0B2     		uxtb	r0, r0
 379:Core/Src/AB1805.c ****   return ret;
 1938              		.loc 1 379 7 view .LVU413
 1939 0004 4018     		adds	r0, r0, r1
 1940 0006 C0B2     		uxtb	r0, r0
 1941              	.LVL128:
 380:Core/Src/AB1805.c **** }
 1942              		.loc 1 380 3 is_stmt 1 view .LVU414
 381:Core/Src/AB1805.c **** 
 1943              		.loc 1 381 1 is_stmt 0 view .LVU415
 1944              		@ sp needed
 1945 0008 7047     		bx	lr
 1946              		.cfi_endproc
 1947              	.LFE538:
 1949              		.section	.text.hex_dec,"ax",%progbits
 1950              		.align	1
 1951              		.global	hex_dec
 1952              		.syntax unified
 1953              		.code	16
 1954              		.thumb_func
 1956              	hex_dec:
 1957              	.LVL129:
 1958              	.LFB539:
 384:Core/Src/AB1805.c ****   uint8_t ret;
 1959              		.loc 1 384 1 is_stmt 1 view -0
 1960              		.cfi_startproc
 1961              		@ args = 0, pretend = 0, frame = 0
 1962              		@ frame_needed = 0, uses_anonymous_args = 0
 1963              		@ link register save eliminated.
 384:Core/Src/AB1805.c ****   uint8_t ret;
 1964              		.loc 1 384 1 is_stmt 0 view .LVU417
 1965 0000 0200     		movs	r2, r0
 385:Core/Src/AB1805.c ****   ret = ((hex >> 4) & 0xF * 10) + (hex & 0xF);
 1966              		.loc 1 385 3 is_stmt 1 view .LVU418
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 89


 386:Core/Src/AB1805.c ****   return ret;
 1967              		.loc 1 386 3 view .LVU419
 386:Core/Src/AB1805.c ****   return ret;
 1968              		.loc 1 386 21 is_stmt 0 view .LVU420
 1969 0002 0009     		lsrs	r0, r0, #4
 1970              	.LVL130:
 386:Core/Src/AB1805.c ****   return ret;
 1971              		.loc 1 386 21 view .LVU421
 1972 0004 6923     		movs	r3, #105
 1973 0006 9843     		bics	r0, r3
 386:Core/Src/AB1805.c ****   return ret;
 1974              		.loc 1 386 40 view .LVU422
 1975 0008 0F21     		movs	r1, #15
 1976 000a 0A40     		ands	r2, r1
 386:Core/Src/AB1805.c ****   return ret;
 1977              		.loc 1 386 7 view .LVU423
 1978 000c 8018     		adds	r0, r0, r2
 1979              	.LVL131:
 387:Core/Src/AB1805.c **** }
 1980              		.loc 1 387 3 is_stmt 1 view .LVU424
 388:Core/Src/AB1805.c **** 
 1981              		.loc 1 388 1 is_stmt 0 view .LVU425
 1982              		@ sp needed
 1983 000e 7047     		bx	lr
 1984              		.cfi_endproc
 1985              	.LFE539:
 1987              		.section	.text.get_status,"ax",%progbits
 1988              		.align	1
 1989              		.global	get_status
 1990              		.syntax unified
 1991              		.code	16
 1992              		.thumb_func
 1994              	get_status:
 1995              	.LFB540:
 392:Core/Src/AB1805.c ****   _status = get_rtc_data(STATU_REGISTER, STATUS_READ_ALL_MASK);
 1996              		.loc 1 392 1 is_stmt 1 view -0
 1997              		.cfi_startproc
 1998              		@ args = 0, pretend = 0, frame = 0
 1999              		@ frame_needed = 0, uses_anonymous_args = 0
 2000 0000 10B5     		push	{r4, lr}
 2001              	.LCFI34:
 2002              		.cfi_def_cfa_offset 8
 2003              		.cfi_offset 4, -8
 2004              		.cfi_offset 14, -4
 393:Core/Src/AB1805.c ****   return _status;
 2005              		.loc 1 393 3 view .LVU427
 393:Core/Src/AB1805.c ****   return _status;
 2006              		.loc 1 393 13 is_stmt 0 view .LVU428
 2007 0002 FF21     		movs	r1, #255
 2008 0004 0F20     		movs	r0, #15
 2009 0006 FFF7FEFF 		bl	get_rtc_data
 2010              	.LVL132:
 393:Core/Src/AB1805.c ****   return _status;
 2011              		.loc 1 393 11 view .LVU429
 2012 000a 014B     		ldr	r3, .L97
 2013 000c 1870     		strb	r0, [r3]
 394:Core/Src/AB1805.c **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 90


 2014              		.loc 1 394 3 is_stmt 1 view .LVU430
 395:Core/Src/AB1805.c **** 
 2015              		.loc 1 395 1 is_stmt 0 view .LVU431
 2016              		@ sp needed
 2017 000e 10BD     		pop	{r4, pc}
 2018              	.L98:
 2019              		.align	2
 2020              	.L97:
 2021 0010 00000000 		.word	_status
 2022              		.cfi_endproc
 2023              	.LFE540:
 2025              		.section	.text.get_CB_status,"ax",%progbits
 2026              		.align	1
 2027              		.global	get_CB_status
 2028              		.syntax unified
 2029              		.code	16
 2030              		.thumb_func
 2032              	get_CB_status:
 2033              	.LFB541:
 398:Core/Src/AB1805.c ****   get_status();
 2034              		.loc 1 398 1 is_stmt 1 view -0
 2035              		.cfi_startproc
 2036              		@ args = 0, pretend = 0, frame = 0
 2037              		@ frame_needed = 0, uses_anonymous_args = 0
 2038 0000 10B5     		push	{r4, lr}
 2039              	.LCFI35:
 2040              		.cfi_def_cfa_offset 8
 2041              		.cfi_offset 4, -8
 2042              		.cfi_offset 14, -4
 399:Core/Src/AB1805.c ****   return (_status & (STATUS_CB_MASK > 7));
 2043              		.loc 1 399 3 view .LVU433
 2044 0002 FFF7FEFF 		bl	get_status
 2045              	.LVL133:
 400:Core/Src/AB1805.c **** };
 2046              		.loc 1 400 3 view .LVU434
 400:Core/Src/AB1805.c **** };
 2047              		.loc 1 400 19 is_stmt 0 view .LVU435
 2048 0006 024B     		ldr	r3, .L100
 2049 0008 1B78     		ldrb	r3, [r3]
 2050 000a 0120     		movs	r0, #1
 2051 000c 1840     		ands	r0, r3
 401:Core/Src/AB1805.c **** 
 2052              		.loc 1 401 1 view .LVU436
 2053              		@ sp needed
 2054 000e 10BD     		pop	{r4, pc}
 2055              	.L101:
 2056              		.align	2
 2057              	.L100:
 2058 0010 00000000 		.word	_status
 2059              		.cfi_endproc
 2060              	.LFE541:
 2062              		.section	.text.get_BAT_status,"ax",%progbits
 2063              		.align	1
 2064              		.global	get_BAT_status
 2065              		.syntax unified
 2066              		.code	16
 2067              		.thumb_func
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 91


 2069              	get_BAT_status:
 2070              	.LFB542:
 404:Core/Src/AB1805.c ****   get_status();
 2071              		.loc 1 404 1 is_stmt 1 view -0
 2072              		.cfi_startproc
 2073              		@ args = 0, pretend = 0, frame = 0
 2074              		@ frame_needed = 0, uses_anonymous_args = 0
 2075 0000 10B5     		push	{r4, lr}
 2076              	.LCFI36:
 2077              		.cfi_def_cfa_offset 8
 2078              		.cfi_offset 4, -8
 2079              		.cfi_offset 14, -4
 405:Core/Src/AB1805.c ****   return (_status & (STATUS_BAT_MASK > 6));
 2080              		.loc 1 405 3 view .LVU438
 2081 0002 FFF7FEFF 		bl	get_status
 2082              	.LVL134:
 406:Core/Src/AB1805.c **** };
 2083              		.loc 1 406 3 view .LVU439
 406:Core/Src/AB1805.c **** };
 2084              		.loc 1 406 19 is_stmt 0 view .LVU440
 2085 0006 024B     		ldr	r3, .L103
 2086 0008 1B78     		ldrb	r3, [r3]
 2087 000a 0120     		movs	r0, #1
 2088 000c 1840     		ands	r0, r3
 407:Core/Src/AB1805.c **** 
 2089              		.loc 1 407 1 view .LVU441
 2090              		@ sp needed
 2091 000e 10BD     		pop	{r4, pc}
 2092              	.L104:
 2093              		.align	2
 2094              	.L103:
 2095 0010 00000000 		.word	_status
 2096              		.cfi_endproc
 2097              	.LFE542:
 2099              		.section	.text.get_WDT_status,"ax",%progbits
 2100              		.align	1
 2101              		.global	get_WDT_status
 2102              		.syntax unified
 2103              		.code	16
 2104              		.thumb_func
 2106              	get_WDT_status:
 2107              	.LFB543:
 410:Core/Src/AB1805.c ****   get_status();
 2108              		.loc 1 410 1 is_stmt 1 view -0
 2109              		.cfi_startproc
 2110              		@ args = 0, pretend = 0, frame = 0
 2111              		@ frame_needed = 0, uses_anonymous_args = 0
 2112 0000 10B5     		push	{r4, lr}
 2113              	.LCFI37:
 2114              		.cfi_def_cfa_offset 8
 2115              		.cfi_offset 4, -8
 2116              		.cfi_offset 14, -4
 411:Core/Src/AB1805.c ****   return (_status & (STATUS_WDT_MASK > 5));
 2117              		.loc 1 411 3 view .LVU443
 2118 0002 FFF7FEFF 		bl	get_status
 2119              	.LVL135:
 412:Core/Src/AB1805.c **** };
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 92


 2120              		.loc 1 412 3 view .LVU444
 412:Core/Src/AB1805.c **** };
 2121              		.loc 1 412 19 is_stmt 0 view .LVU445
 2122 0006 024B     		ldr	r3, .L106
 2123 0008 1B78     		ldrb	r3, [r3]
 2124 000a 0120     		movs	r0, #1
 2125 000c 1840     		ands	r0, r3
 413:Core/Src/AB1805.c **** 
 2126              		.loc 1 413 1 view .LVU446
 2127              		@ sp needed
 2128 000e 10BD     		pop	{r4, pc}
 2129              	.L107:
 2130              		.align	2
 2131              	.L106:
 2132 0010 00000000 		.word	_status
 2133              		.cfi_endproc
 2134              	.LFE543:
 2136              		.section	.text.get_BL_status,"ax",%progbits
 2137              		.align	1
 2138              		.global	get_BL_status
 2139              		.syntax unified
 2140              		.code	16
 2141              		.thumb_func
 2143              	get_BL_status:
 2144              	.LFB544:
 416:Core/Src/AB1805.c ****   get_status();
 2145              		.loc 1 416 1 is_stmt 1 view -0
 2146              		.cfi_startproc
 2147              		@ args = 0, pretend = 0, frame = 0
 2148              		@ frame_needed = 0, uses_anonymous_args = 0
 2149 0000 10B5     		push	{r4, lr}
 2150              	.LCFI38:
 2151              		.cfi_def_cfa_offset 8
 2152              		.cfi_offset 4, -8
 2153              		.cfi_offset 14, -4
 417:Core/Src/AB1805.c ****   return (_status & (STATUS_BL_MASK > 4));
 2154              		.loc 1 417 3 view .LVU448
 2155 0002 FFF7FEFF 		bl	get_status
 2156              	.LVL136:
 418:Core/Src/AB1805.c **** };
 2157              		.loc 1 418 3 view .LVU449
 418:Core/Src/AB1805.c **** };
 2158              		.loc 1 418 19 is_stmt 0 view .LVU450
 2159 0006 024B     		ldr	r3, .L109
 2160 0008 1B78     		ldrb	r3, [r3]
 2161 000a 0120     		movs	r0, #1
 2162 000c 1840     		ands	r0, r3
 419:Core/Src/AB1805.c **** 
 2163              		.loc 1 419 1 view .LVU451
 2164              		@ sp needed
 2165 000e 10BD     		pop	{r4, pc}
 2166              	.L110:
 2167              		.align	2
 2168              	.L109:
 2169 0010 00000000 		.word	_status
 2170              		.cfi_endproc
 2171              	.LFE544:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 93


 2173              		.section	.text.get_TIM_status,"ax",%progbits
 2174              		.align	1
 2175              		.global	get_TIM_status
 2176              		.syntax unified
 2177              		.code	16
 2178              		.thumb_func
 2180              	get_TIM_status:
 2181              	.LFB545:
 422:Core/Src/AB1805.c ****   get_status();
 2182              		.loc 1 422 1 is_stmt 1 view -0
 2183              		.cfi_startproc
 2184              		@ args = 0, pretend = 0, frame = 0
 2185              		@ frame_needed = 0, uses_anonymous_args = 0
 2186 0000 10B5     		push	{r4, lr}
 2187              	.LCFI39:
 2188              		.cfi_def_cfa_offset 8
 2189              		.cfi_offset 4, -8
 2190              		.cfi_offset 14, -4
 423:Core/Src/AB1805.c ****   return (_status & (STATUS_TIM_MASK > 3));
 2191              		.loc 1 423 3 view .LVU453
 2192 0002 FFF7FEFF 		bl	get_status
 2193              	.LVL137:
 424:Core/Src/AB1805.c **** };
 2194              		.loc 1 424 3 view .LVU454
 424:Core/Src/AB1805.c **** };
 2195              		.loc 1 424 19 is_stmt 0 view .LVU455
 2196 0006 024B     		ldr	r3, .L112
 2197 0008 1B78     		ldrb	r3, [r3]
 2198 000a 0120     		movs	r0, #1
 2199 000c 1840     		ands	r0, r3
 425:Core/Src/AB1805.c **** 
 2200              		.loc 1 425 1 view .LVU456
 2201              		@ sp needed
 2202 000e 10BD     		pop	{r4, pc}
 2203              	.L113:
 2204              		.align	2
 2205              	.L112:
 2206 0010 00000000 		.word	_status
 2207              		.cfi_endproc
 2208              	.LFE545:
 2210              		.section	.text.get_ALM_status,"ax",%progbits
 2211              		.align	1
 2212              		.global	get_ALM_status
 2213              		.syntax unified
 2214              		.code	16
 2215              		.thumb_func
 2217              	get_ALM_status:
 2218              	.LFB546:
 428:Core/Src/AB1805.c ****   get_status();
 2219              		.loc 1 428 1 is_stmt 1 view -0
 2220              		.cfi_startproc
 2221              		@ args = 0, pretend = 0, frame = 0
 2222              		@ frame_needed = 0, uses_anonymous_args = 0
 2223 0000 10B5     		push	{r4, lr}
 2224              	.LCFI40:
 2225              		.cfi_def_cfa_offset 8
 2226              		.cfi_offset 4, -8
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 94


 2227              		.cfi_offset 14, -4
 429:Core/Src/AB1805.c ****   return (_status & (STATUS_ALM_MASK > 2));
 2228              		.loc 1 429 3 view .LVU458
 2229 0002 FFF7FEFF 		bl	get_status
 2230              	.LVL138:
 430:Core/Src/AB1805.c **** };
 2231              		.loc 1 430 3 view .LVU459
 430:Core/Src/AB1805.c **** };
 2232              		.loc 1 430 19 is_stmt 0 view .LVU460
 2233 0006 024B     		ldr	r3, .L115
 2234 0008 1B78     		ldrb	r3, [r3]
 2235 000a 0120     		movs	r0, #1
 2236 000c 1840     		ands	r0, r3
 431:Core/Src/AB1805.c **** 
 2237              		.loc 1 431 1 view .LVU461
 2238              		@ sp needed
 2239 000e 10BD     		pop	{r4, pc}
 2240              	.L116:
 2241              		.align	2
 2242              	.L115:
 2243 0010 00000000 		.word	_status
 2244              		.cfi_endproc
 2245              	.LFE546:
 2247              		.section	.text.get_EX2_status,"ax",%progbits
 2248              		.align	1
 2249              		.global	get_EX2_status
 2250              		.syntax unified
 2251              		.code	16
 2252              		.thumb_func
 2254              	get_EX2_status:
 2255              	.LFB547:
 434:Core/Src/AB1805.c ****   get_status();
 2256              		.loc 1 434 1 is_stmt 1 view -0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 0
 2259              		@ frame_needed = 0, uses_anonymous_args = 0
 2260 0000 10B5     		push	{r4, lr}
 2261              	.LCFI41:
 2262              		.cfi_def_cfa_offset 8
 2263              		.cfi_offset 4, -8
 2264              		.cfi_offset 14, -4
 435:Core/Src/AB1805.c ****   return (_status & (STATUS_EX2_MASK > 1));
 2265              		.loc 1 435 3 view .LVU463
 2266 0002 FFF7FEFF 		bl	get_status
 2267              	.LVL139:
 436:Core/Src/AB1805.c **** };
 2268              		.loc 1 436 3 view .LVU464
 436:Core/Src/AB1805.c **** };
 2269              		.loc 1 436 19 is_stmt 0 view .LVU465
 2270 0006 024B     		ldr	r3, .L118
 2271 0008 1B78     		ldrb	r3, [r3]
 2272 000a 0120     		movs	r0, #1
 2273 000c 1840     		ands	r0, r3
 437:Core/Src/AB1805.c **** 
 2274              		.loc 1 437 1 view .LVU466
 2275              		@ sp needed
 2276 000e 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 95


 2277              	.L119:
 2278              		.align	2
 2279              	.L118:
 2280 0010 00000000 		.word	_status
 2281              		.cfi_endproc
 2282              	.LFE547:
 2284              		.section	.text.get_EX1_status,"ax",%progbits
 2285              		.align	1
 2286              		.global	get_EX1_status
 2287              		.syntax unified
 2288              		.code	16
 2289              		.thumb_func
 2291              	get_EX1_status:
 2292              	.LFB548:
 440:Core/Src/AB1805.c ****   get_status();
 2293              		.loc 1 440 1 is_stmt 1 view -0
 2294              		.cfi_startproc
 2295              		@ args = 0, pretend = 0, frame = 0
 2296              		@ frame_needed = 0, uses_anonymous_args = 0
 2297 0000 10B5     		push	{r4, lr}
 2298              	.LCFI42:
 2299              		.cfi_def_cfa_offset 8
 2300              		.cfi_offset 4, -8
 2301              		.cfi_offset 14, -4
 441:Core/Src/AB1805.c ****   return (_status & (STATUS_EX1_MASK));
 2302              		.loc 1 441 3 view .LVU468
 2303 0002 FFF7FEFF 		bl	get_status
 2304              	.LVL140:
 442:Core/Src/AB1805.c **** };
 2305              		.loc 1 442 3 view .LVU469
 442:Core/Src/AB1805.c **** };
 2306              		.loc 1 442 19 is_stmt 0 view .LVU470
 2307 0006 024B     		ldr	r3, .L121
 2308 0008 1B78     		ldrb	r3, [r3]
 2309 000a 0120     		movs	r0, #1
 2310 000c 1840     		ands	r0, r3
 443:Core/Src/AB1805.c **** 
 2311              		.loc 1 443 1 view .LVU471
 2312              		@ sp needed
 2313 000e 10BD     		pop	{r4, pc}
 2314              	.L122:
 2315              		.align	2
 2316              	.L121:
 2317 0010 00000000 		.word	_status
 2318              		.cfi_endproc
 2319              	.LFE548:
 2321              		.section	.text.clean_CB_status,"ax",%progbits
 2322              		.align	1
 2323              		.global	clean_CB_status
 2324              		.syntax unified
 2325              		.code	16
 2326              		.thumb_func
 2328              	clean_CB_status:
 2329              	.LFB549:
 446:Core/Src/AB1805.c ****   uint8_t c1;
 2330              		.loc 1 446 1 is_stmt 1 view -0
 2331              		.cfi_startproc
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 96


 2332              		@ args = 0, pretend = 0, frame = 0
 2333              		@ frame_needed = 0, uses_anonymous_args = 0
 2334 0000 10B5     		push	{r4, lr}
 2335              	.LCFI43:
 2336              		.cfi_def_cfa_offset 8
 2337              		.cfi_offset 4, -8
 2338              		.cfi_offset 14, -4
 447:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2339              		.loc 1 447 3 view .LVU473
 448:Core/Src/AB1805.c ****   c1 &= ~STATUS_CB_MASK;
 2340              		.loc 1 448 3 view .LVU474
 448:Core/Src/AB1805.c ****   c1 &= ~STATUS_CB_MASK;
 2341              		.loc 1 448 8 is_stmt 0 view .LVU475
 2342 0002 0F20     		movs	r0, #15
 2343 0004 FFF7FEFF 		bl	read_rtc_register
 2344              	.LVL141:
 449:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2345              		.loc 1 449 3 is_stmt 1 view .LVU476
 449:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2346              		.loc 1 449 6 is_stmt 0 view .LVU477
 2347 0008 7F21     		movs	r1, #127
 2348 000a 0140     		ands	r1, r0
 2349              	.LVL142:
 450:Core/Src/AB1805.c **** }
 2350              		.loc 1 450 3 is_stmt 1 view .LVU478
 2351 000c 0F20     		movs	r0, #15
 2352 000e FFF7FEFF 		bl	write_rtc_register
 2353              	.LVL143:
 451:Core/Src/AB1805.c **** 
 2354              		.loc 1 451 1 is_stmt 0 view .LVU479
 2355              		@ sp needed
 2356 0012 10BD     		pop	{r4, pc}
 2357              		.cfi_endproc
 2358              	.LFE549:
 2360              		.section	.text.clean_BAT_status,"ax",%progbits
 2361              		.align	1
 2362              		.global	clean_BAT_status
 2363              		.syntax unified
 2364              		.code	16
 2365              		.thumb_func
 2367              	clean_BAT_status:
 2368              	.LFB550:
 454:Core/Src/AB1805.c ****   uint8_t c1;
 2369              		.loc 1 454 1 is_stmt 1 view -0
 2370              		.cfi_startproc
 2371              		@ args = 0, pretend = 0, frame = 0
 2372              		@ frame_needed = 0, uses_anonymous_args = 0
 2373 0000 10B5     		push	{r4, lr}
 2374              	.LCFI44:
 2375              		.cfi_def_cfa_offset 8
 2376              		.cfi_offset 4, -8
 2377              		.cfi_offset 14, -4
 455:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2378              		.loc 1 455 3 view .LVU481
 456:Core/Src/AB1805.c ****   c1 &= ~STATUS_BAT_MASK;
 2379              		.loc 1 456 3 view .LVU482
 456:Core/Src/AB1805.c ****   c1 &= ~STATUS_BAT_MASK;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 97


 2380              		.loc 1 456 8 is_stmt 0 view .LVU483
 2381 0002 0F20     		movs	r0, #15
 2382 0004 FFF7FEFF 		bl	read_rtc_register
 2383              	.LVL144:
 457:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2384              		.loc 1 457 3 is_stmt 1 view .LVU484
 457:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2385              		.loc 1 457 6 is_stmt 0 view .LVU485
 2386 0008 4023     		movs	r3, #64
 2387 000a 9843     		bics	r0, r3
 2388              	.LVL145:
 457:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2389              		.loc 1 457 6 view .LVU486
 2390 000c C1B2     		uxtb	r1, r0
 2391              	.LVL146:
 458:Core/Src/AB1805.c **** }
 2392              		.loc 1 458 3 is_stmt 1 view .LVU487
 2393 000e 0F20     		movs	r0, #15
 2394 0010 FFF7FEFF 		bl	write_rtc_register
 2395              	.LVL147:
 459:Core/Src/AB1805.c **** 
 2396              		.loc 1 459 1 is_stmt 0 view .LVU488
 2397              		@ sp needed
 2398 0014 10BD     		pop	{r4, pc}
 2399              		.cfi_endproc
 2400              	.LFE550:
 2402              		.section	.text.clean_WDT_status,"ax",%progbits
 2403              		.align	1
 2404              		.global	clean_WDT_status
 2405              		.syntax unified
 2406              		.code	16
 2407              		.thumb_func
 2409              	clean_WDT_status:
 2410              	.LFB551:
 462:Core/Src/AB1805.c ****   uint8_t c1;
 2411              		.loc 1 462 1 is_stmt 1 view -0
 2412              		.cfi_startproc
 2413              		@ args = 0, pretend = 0, frame = 0
 2414              		@ frame_needed = 0, uses_anonymous_args = 0
 2415 0000 10B5     		push	{r4, lr}
 2416              	.LCFI45:
 2417              		.cfi_def_cfa_offset 8
 2418              		.cfi_offset 4, -8
 2419              		.cfi_offset 14, -4
 463:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2420              		.loc 1 463 3 view .LVU490
 464:Core/Src/AB1805.c ****   c1 &= ~STATUS_WDT_MASK;
 2421              		.loc 1 464 3 view .LVU491
 464:Core/Src/AB1805.c ****   c1 &= ~STATUS_WDT_MASK;
 2422              		.loc 1 464 8 is_stmt 0 view .LVU492
 2423 0002 0F20     		movs	r0, #15
 2424 0004 FFF7FEFF 		bl	read_rtc_register
 2425              	.LVL148:
 465:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2426              		.loc 1 465 3 is_stmt 1 view .LVU493
 465:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2427              		.loc 1 465 6 is_stmt 0 view .LVU494
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 98


 2428 0008 2023     		movs	r3, #32
 2429 000a 9843     		bics	r0, r3
 2430              	.LVL149:
 465:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2431              		.loc 1 465 6 view .LVU495
 2432 000c C1B2     		uxtb	r1, r0
 2433              	.LVL150:
 466:Core/Src/AB1805.c **** }
 2434              		.loc 1 466 3 is_stmt 1 view .LVU496
 2435 000e 0F20     		movs	r0, #15
 2436 0010 FFF7FEFF 		bl	write_rtc_register
 2437              	.LVL151:
 467:Core/Src/AB1805.c **** 
 2438              		.loc 1 467 1 is_stmt 0 view .LVU497
 2439              		@ sp needed
 2440 0014 10BD     		pop	{r4, pc}
 2441              		.cfi_endproc
 2442              	.LFE551:
 2444              		.section	.text.clean_BL_status,"ax",%progbits
 2445              		.align	1
 2446              		.global	clean_BL_status
 2447              		.syntax unified
 2448              		.code	16
 2449              		.thumb_func
 2451              	clean_BL_status:
 2452              	.LFB552:
 470:Core/Src/AB1805.c ****   uint8_t c1;
 2453              		.loc 1 470 1 is_stmt 1 view -0
 2454              		.cfi_startproc
 2455              		@ args = 0, pretend = 0, frame = 0
 2456              		@ frame_needed = 0, uses_anonymous_args = 0
 2457 0000 10B5     		push	{r4, lr}
 2458              	.LCFI46:
 2459              		.cfi_def_cfa_offset 8
 2460              		.cfi_offset 4, -8
 2461              		.cfi_offset 14, -4
 471:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2462              		.loc 1 471 3 view .LVU499
 472:Core/Src/AB1805.c ****   c1 &= ~STATUS_BL_MASK;
 2463              		.loc 1 472 3 view .LVU500
 472:Core/Src/AB1805.c ****   c1 &= ~STATUS_BL_MASK;
 2464              		.loc 1 472 8 is_stmt 0 view .LVU501
 2465 0002 0F20     		movs	r0, #15
 2466 0004 FFF7FEFF 		bl	read_rtc_register
 2467              	.LVL152:
 473:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2468              		.loc 1 473 3 is_stmt 1 view .LVU502
 473:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2469              		.loc 1 473 6 is_stmt 0 view .LVU503
 2470 0008 1023     		movs	r3, #16
 2471 000a 9843     		bics	r0, r3
 2472              	.LVL153:
 473:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2473              		.loc 1 473 6 view .LVU504
 2474 000c C1B2     		uxtb	r1, r0
 2475              	.LVL154:
 474:Core/Src/AB1805.c **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 99


 2476              		.loc 1 474 3 is_stmt 1 view .LVU505
 2477 000e 0F20     		movs	r0, #15
 2478 0010 FFF7FEFF 		bl	write_rtc_register
 2479              	.LVL155:
 475:Core/Src/AB1805.c **** 
 2480              		.loc 1 475 1 is_stmt 0 view .LVU506
 2481              		@ sp needed
 2482 0014 10BD     		pop	{r4, pc}
 2483              		.cfi_endproc
 2484              	.LFE552:
 2486              		.section	.text.clean_TIM_status,"ax",%progbits
 2487              		.align	1
 2488              		.global	clean_TIM_status
 2489              		.syntax unified
 2490              		.code	16
 2491              		.thumb_func
 2493              	clean_TIM_status:
 2494              	.LFB553:
 478:Core/Src/AB1805.c ****   uint8_t c1;
 2495              		.loc 1 478 1 is_stmt 1 view -0
 2496              		.cfi_startproc
 2497              		@ args = 0, pretend = 0, frame = 0
 2498              		@ frame_needed = 0, uses_anonymous_args = 0
 2499 0000 10B5     		push	{r4, lr}
 2500              	.LCFI47:
 2501              		.cfi_def_cfa_offset 8
 2502              		.cfi_offset 4, -8
 2503              		.cfi_offset 14, -4
 479:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2504              		.loc 1 479 3 view .LVU508
 480:Core/Src/AB1805.c ****   c1 &= ~STATUS_TIM_MASK;
 2505              		.loc 1 480 3 view .LVU509
 480:Core/Src/AB1805.c ****   c1 &= ~STATUS_TIM_MASK;
 2506              		.loc 1 480 8 is_stmt 0 view .LVU510
 2507 0002 0F20     		movs	r0, #15
 2508 0004 FFF7FEFF 		bl	read_rtc_register
 2509              	.LVL156:
 481:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2510              		.loc 1 481 3 is_stmt 1 view .LVU511
 481:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2511              		.loc 1 481 6 is_stmt 0 view .LVU512
 2512 0008 0823     		movs	r3, #8
 2513 000a 9843     		bics	r0, r3
 2514              	.LVL157:
 481:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2515              		.loc 1 481 6 view .LVU513
 2516 000c C1B2     		uxtb	r1, r0
 2517              	.LVL158:
 482:Core/Src/AB1805.c **** }
 2518              		.loc 1 482 3 is_stmt 1 view .LVU514
 2519 000e 0F20     		movs	r0, #15
 2520 0010 FFF7FEFF 		bl	write_rtc_register
 2521              	.LVL159:
 483:Core/Src/AB1805.c **** 
 2522              		.loc 1 483 1 is_stmt 0 view .LVU515
 2523              		@ sp needed
 2524 0014 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 100


 2525              		.cfi_endproc
 2526              	.LFE553:
 2528              		.section	.text.clean_ALM_status,"ax",%progbits
 2529              		.align	1
 2530              		.global	clean_ALM_status
 2531              		.syntax unified
 2532              		.code	16
 2533              		.thumb_func
 2535              	clean_ALM_status:
 2536              	.LFB554:
 486:Core/Src/AB1805.c ****   uint8_t c1;
 2537              		.loc 1 486 1 is_stmt 1 view -0
 2538              		.cfi_startproc
 2539              		@ args = 0, pretend = 0, frame = 0
 2540              		@ frame_needed = 0, uses_anonymous_args = 0
 2541 0000 10B5     		push	{r4, lr}
 2542              	.LCFI48:
 2543              		.cfi_def_cfa_offset 8
 2544              		.cfi_offset 4, -8
 2545              		.cfi_offset 14, -4
 487:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2546              		.loc 1 487 3 view .LVU517
 488:Core/Src/AB1805.c ****   c1 &= ~STATUS_ALM_MASK;
 2547              		.loc 1 488 3 view .LVU518
 488:Core/Src/AB1805.c ****   c1 &= ~STATUS_ALM_MASK;
 2548              		.loc 1 488 8 is_stmt 0 view .LVU519
 2549 0002 0F20     		movs	r0, #15
 2550 0004 FFF7FEFF 		bl	read_rtc_register
 2551              	.LVL160:
 489:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2552              		.loc 1 489 3 is_stmt 1 view .LVU520
 489:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2553              		.loc 1 489 6 is_stmt 0 view .LVU521
 2554 0008 0423     		movs	r3, #4
 2555 000a 9843     		bics	r0, r3
 2556              	.LVL161:
 489:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2557              		.loc 1 489 6 view .LVU522
 2558 000c C1B2     		uxtb	r1, r0
 2559              	.LVL162:
 490:Core/Src/AB1805.c **** }
 2560              		.loc 1 490 3 is_stmt 1 view .LVU523
 2561 000e 0F20     		movs	r0, #15
 2562 0010 FFF7FEFF 		bl	write_rtc_register
 2563              	.LVL163:
 491:Core/Src/AB1805.c **** 
 2564              		.loc 1 491 1 is_stmt 0 view .LVU524
 2565              		@ sp needed
 2566 0014 10BD     		pop	{r4, pc}
 2567              		.cfi_endproc
 2568              	.LFE554:
 2570              		.section	.text.clean_EX2_status,"ax",%progbits
 2571              		.align	1
 2572              		.global	clean_EX2_status
 2573              		.syntax unified
 2574              		.code	16
 2575              		.thumb_func
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 101


 2577              	clean_EX2_status:
 2578              	.LFB555:
 494:Core/Src/AB1805.c ****   uint8_t c1;
 2579              		.loc 1 494 1 is_stmt 1 view -0
 2580              		.cfi_startproc
 2581              		@ args = 0, pretend = 0, frame = 0
 2582              		@ frame_needed = 0, uses_anonymous_args = 0
 2583 0000 10B5     		push	{r4, lr}
 2584              	.LCFI49:
 2585              		.cfi_def_cfa_offset 8
 2586              		.cfi_offset 4, -8
 2587              		.cfi_offset 14, -4
 495:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2588              		.loc 1 495 3 view .LVU526
 496:Core/Src/AB1805.c ****   c1 &= ~STATUS_EX2_MASK;
 2589              		.loc 1 496 3 view .LVU527
 496:Core/Src/AB1805.c ****   c1 &= ~STATUS_EX2_MASK;
 2590              		.loc 1 496 8 is_stmt 0 view .LVU528
 2591 0002 0F20     		movs	r0, #15
 2592 0004 FFF7FEFF 		bl	read_rtc_register
 2593              	.LVL164:
 497:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2594              		.loc 1 497 3 is_stmt 1 view .LVU529
 497:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2595              		.loc 1 497 6 is_stmt 0 view .LVU530
 2596 0008 0223     		movs	r3, #2
 2597 000a 9843     		bics	r0, r3
 2598              	.LVL165:
 497:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2599              		.loc 1 497 6 view .LVU531
 2600 000c C1B2     		uxtb	r1, r0
 2601              	.LVL166:
 498:Core/Src/AB1805.c **** }
 2602              		.loc 1 498 3 is_stmt 1 view .LVU532
 2603 000e 0F20     		movs	r0, #15
 2604 0010 FFF7FEFF 		bl	write_rtc_register
 2605              	.LVL167:
 499:Core/Src/AB1805.c **** 
 2606              		.loc 1 499 1 is_stmt 0 view .LVU533
 2607              		@ sp needed
 2608 0014 10BD     		pop	{r4, pc}
 2609              		.cfi_endproc
 2610              	.LFE555:
 2612              		.section	.text.clean_EX1_status,"ax",%progbits
 2613              		.align	1
 2614              		.global	clean_EX1_status
 2615              		.syntax unified
 2616              		.code	16
 2617              		.thumb_func
 2619              	clean_EX1_status:
 2620              	.LFB556:
 502:Core/Src/AB1805.c ****   uint8_t c1;
 2621              		.loc 1 502 1 is_stmt 1 view -0
 2622              		.cfi_startproc
 2623              		@ args = 0, pretend = 0, frame = 0
 2624              		@ frame_needed = 0, uses_anonymous_args = 0
 2625 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 102


 2626              	.LCFI50:
 2627              		.cfi_def_cfa_offset 8
 2628              		.cfi_offset 4, -8
 2629              		.cfi_offset 14, -4
 503:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2630              		.loc 1 503 3 view .LVU535
 504:Core/Src/AB1805.c ****   c1 &= ~STATUS_EX1_MASK;
 2631              		.loc 1 504 3 view .LVU536
 504:Core/Src/AB1805.c ****   c1 &= ~STATUS_EX1_MASK;
 2632              		.loc 1 504 8 is_stmt 0 view .LVU537
 2633 0002 0F20     		movs	r0, #15
 2634 0004 FFF7FEFF 		bl	read_rtc_register
 2635              	.LVL168:
 505:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2636              		.loc 1 505 3 is_stmt 1 view .LVU538
 505:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2637              		.loc 1 505 6 is_stmt 0 view .LVU539
 2638 0008 0123     		movs	r3, #1
 2639 000a 9843     		bics	r0, r3
 2640              	.LVL169:
 505:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2641              		.loc 1 505 6 view .LVU540
 2642 000c C1B2     		uxtb	r1, r0
 2643              	.LVL170:
 506:Core/Src/AB1805.c **** }
 2644              		.loc 1 506 3 is_stmt 1 view .LVU541
 2645 000e 0F20     		movs	r0, #15
 2646 0010 FFF7FEFF 		bl	write_rtc_register
 2647              	.LVL171:
 507:Core/Src/AB1805.c **** 
 2648              		.loc 1 507 1 is_stmt 0 view .LVU542
 2649              		@ sp needed
 2650 0014 10BD     		pop	{r4, pc}
 2651              		.cfi_endproc
 2652              	.LFE556:
 2654              		.section	.text.set_control1,"ax",%progbits
 2655              		.align	1
 2656              		.global	set_control1
 2657              		.syntax unified
 2658              		.code	16
 2659              		.thumb_func
 2661              	set_control1:
 2662              	.LVL172:
 2663              	.LFB557:
 511:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, value);
 2664              		.loc 1 511 1 is_stmt 1 view -0
 2665              		.cfi_startproc
 2666              		@ args = 0, pretend = 0, frame = 0
 2667              		@ frame_needed = 0, uses_anonymous_args = 0
 511:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, value);
 2668              		.loc 1 511 1 is_stmt 0 view .LVU544
 2669 0000 10B5     		push	{r4, lr}
 2670              	.LCFI51:
 2671              		.cfi_def_cfa_offset 8
 2672              		.cfi_offset 4, -8
 2673              		.cfi_offset 14, -4
 2674 0002 0100     		movs	r1, r0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 103


 512:Core/Src/AB1805.c ****   _control1 = read_rtc_register(CONTROL1_REGISTER);
 2675              		.loc 1 512 3 is_stmt 1 view .LVU545
 2676 0004 1020     		movs	r0, #16
 2677              	.LVL173:
 512:Core/Src/AB1805.c ****   _control1 = read_rtc_register(CONTROL1_REGISTER);
 2678              		.loc 1 512 3 is_stmt 0 view .LVU546
 2679 0006 FFF7FEFF 		bl	write_rtc_register
 2680              	.LVL174:
 513:Core/Src/AB1805.c ****   return _control1;
 2681              		.loc 1 513 3 is_stmt 1 view .LVU547
 513:Core/Src/AB1805.c ****   return _control1;
 2682              		.loc 1 513 15 is_stmt 0 view .LVU548
 2683 000a 1020     		movs	r0, #16
 2684 000c FFF7FEFF 		bl	read_rtc_register
 2685              	.LVL175:
 513:Core/Src/AB1805.c ****   return _control1;
 2686              		.loc 1 513 13 view .LVU549
 2687 0010 014B     		ldr	r3, .L132
 2688 0012 1870     		strb	r0, [r3]
 514:Core/Src/AB1805.c **** }
 2689              		.loc 1 514 3 is_stmt 1 view .LVU550
 515:Core/Src/AB1805.c **** 
 2690              		.loc 1 515 1 is_stmt 0 view .LVU551
 2691              		@ sp needed
 2692 0014 10BD     		pop	{r4, pc}
 2693              	.L133:
 2694 0016 C046     		.align	2
 2695              	.L132:
 2696 0018 00000000 		.word	_control1
 2697              		.cfi_endproc
 2698              	.LFE557:
 2700              		.section	.text.set_1224,"ax",%progbits
 2701              		.align	1
 2702              		.global	set_1224
 2703              		.syntax unified
 2704              		.code	16
 2705              		.thumb_func
 2707              	set_1224:
 2708              	.LVL176:
 2709              	.LFB558:
 518:Core/Src/AB1805.c ****   uint8_t c1;
 2710              		.loc 1 518 1 is_stmt 1 view -0
 2711              		.cfi_startproc
 2712              		@ args = 0, pretend = 0, frame = 0
 2713              		@ frame_needed = 0, uses_anonymous_args = 0
 518:Core/Src/AB1805.c ****   uint8_t c1;
 2714              		.loc 1 518 1 is_stmt 0 view .LVU553
 2715 0000 10B5     		push	{r4, lr}
 2716              	.LCFI52:
 2717              		.cfi_def_cfa_offset 8
 2718              		.cfi_offset 4, -8
 2719              		.cfi_offset 14, -4
 2720 0002 0400     		movs	r4, r0
 519:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 2721              		.loc 1 519 3 is_stmt 1 view .LVU554
 520:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_1224_MASK;
 2722              		.loc 1 520 3 view .LVU555
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 104


 520:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_1224_MASK;
 2723              		.loc 1 520 8 is_stmt 0 view .LVU556
 2724 0004 1020     		movs	r0, #16
 2725              	.LVL177:
 520:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_1224_MASK;
 2726              		.loc 1 520 8 view .LVU557
 2727 0006 FFF7FEFF 		bl	read_rtc_register
 2728              	.LVL178:
 521:Core/Src/AB1805.c ****   if (value)
 2729              		.loc 1 521 3 is_stmt 1 view .LVU558
 521:Core/Src/AB1805.c ****   if (value)
 2730              		.loc 1 521 6 is_stmt 0 view .LVU559
 2731 000a 4023     		movs	r3, #64
 2732 000c 9843     		bics	r0, r3
 2733              	.LVL179:
 521:Core/Src/AB1805.c ****   if (value)
 2734              		.loc 1 521 6 view .LVU560
 2735 000e C1B2     		uxtb	r1, r0
 2736              	.LVL180:
 522:Core/Src/AB1805.c ****   {
 2737              		.loc 1 522 3 is_stmt 1 view .LVU561
 522:Core/Src/AB1805.c ****   {
 2738              		.loc 1 522 6 is_stmt 0 view .LVU562
 2739 0010 002C     		cmp	r4, #0
 2740 0012 01D0     		beq	.L135
 524:Core/Src/AB1805.c ****   }
 2741              		.loc 1 524 5 is_stmt 1 view .LVU563
 524:Core/Src/AB1805.c ****   }
 2742              		.loc 1 524 8 is_stmt 0 view .LVU564
 2743 0014 1943     		orrs	r1, r3
 2744              	.LVL181:
 524:Core/Src/AB1805.c ****   }
 2745              		.loc 1 524 8 view .LVU565
 2746 0016 C9B2     		uxtb	r1, r1
 2747              	.LVL182:
 2748              	.L135:
 526:Core/Src/AB1805.c **** }
 2749              		.loc 1 526 3 is_stmt 1 view .LVU566
 2750 0018 1020     		movs	r0, #16
 2751 001a FFF7FEFF 		bl	write_rtc_register
 2752              	.LVL183:
 527:Core/Src/AB1805.c **** 
 2753              		.loc 1 527 1 is_stmt 0 view .LVU567
 2754              		@ sp needed
 2755 001e 10BD     		pop	{r4, pc}
 2756              		.cfi_endproc
 2757              	.LFE558:
 2759              		.section	.text.set_RSP,"ax",%progbits
 2760              		.align	1
 2761              		.global	set_RSP
 2762              		.syntax unified
 2763              		.code	16
 2764              		.thumb_func
 2766              	set_RSP:
 2767              	.LVL184:
 2768              	.LFB559:
 530:Core/Src/AB1805.c ****   uint8_t c1;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 105


 2769              		.loc 1 530 1 is_stmt 1 view -0
 2770              		.cfi_startproc
 2771              		@ args = 0, pretend = 0, frame = 0
 2772              		@ frame_needed = 0, uses_anonymous_args = 0
 530:Core/Src/AB1805.c ****   uint8_t c1;
 2773              		.loc 1 530 1 is_stmt 0 view .LVU569
 2774 0000 10B5     		push	{r4, lr}
 2775              	.LCFI53:
 2776              		.cfi_def_cfa_offset 8
 2777              		.cfi_offset 4, -8
 2778              		.cfi_offset 14, -4
 2779 0002 0400     		movs	r4, r0
 531:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 2780              		.loc 1 531 3 is_stmt 1 view .LVU570
 532:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_RSP_MASK;
 2781              		.loc 1 532 3 view .LVU571
 532:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_RSP_MASK;
 2782              		.loc 1 532 8 is_stmt 0 view .LVU572
 2783 0004 1020     		movs	r0, #16
 2784              	.LVL185:
 532:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_RSP_MASK;
 2785              		.loc 1 532 8 view .LVU573
 2786 0006 FFF7FEFF 		bl	read_rtc_register
 2787              	.LVL186:
 533:Core/Src/AB1805.c ****   if (value)
 2788              		.loc 1 533 3 is_stmt 1 view .LVU574
 533:Core/Src/AB1805.c ****   if (value)
 2789              		.loc 1 533 6 is_stmt 0 view .LVU575
 2790 000a 0823     		movs	r3, #8
 2791 000c 9843     		bics	r0, r3
 2792              	.LVL187:
 533:Core/Src/AB1805.c ****   if (value)
 2793              		.loc 1 533 6 view .LVU576
 2794 000e C1B2     		uxtb	r1, r0
 2795              	.LVL188:
 534:Core/Src/AB1805.c ****   {
 2796              		.loc 1 534 3 is_stmt 1 view .LVU577
 534:Core/Src/AB1805.c ****   {
 2797              		.loc 1 534 6 is_stmt 0 view .LVU578
 2798 0010 002C     		cmp	r4, #0
 2799 0012 01D0     		beq	.L137
 536:Core/Src/AB1805.c ****   }
 2800              		.loc 1 536 5 is_stmt 1 view .LVU579
 536:Core/Src/AB1805.c ****   }
 2801              		.loc 1 536 8 is_stmt 0 view .LVU580
 2802 0014 1943     		orrs	r1, r3
 2803              	.LVL189:
 536:Core/Src/AB1805.c ****   }
 2804              		.loc 1 536 8 view .LVU581
 2805 0016 C9B2     		uxtb	r1, r1
 2806              	.LVL190:
 2807              	.L137:
 538:Core/Src/AB1805.c **** }
 2808              		.loc 1 538 3 is_stmt 1 view .LVU582
 2809 0018 1020     		movs	r0, #16
 2810 001a FFF7FEFF 		bl	write_rtc_register
 2811              	.LVL191:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 106


 539:Core/Src/AB1805.c **** 
 2812              		.loc 1 539 1 is_stmt 0 view .LVU583
 2813              		@ sp needed
 2814 001e 10BD     		pop	{r4, pc}
 2815              		.cfi_endproc
 2816              	.LFE559:
 2818              		.section	.text.set_ARST,"ax",%progbits
 2819              		.align	1
 2820              		.global	set_ARST
 2821              		.syntax unified
 2822              		.code	16
 2823              		.thumb_func
 2825              	set_ARST:
 2826              	.LVL192:
 2827              	.LFB560:
 542:Core/Src/AB1805.c ****   uint8_t c1;
 2828              		.loc 1 542 1 is_stmt 1 view -0
 2829              		.cfi_startproc
 2830              		@ args = 0, pretend = 0, frame = 0
 2831              		@ frame_needed = 0, uses_anonymous_args = 0
 542:Core/Src/AB1805.c ****   uint8_t c1;
 2832              		.loc 1 542 1 is_stmt 0 view .LVU585
 2833 0000 10B5     		push	{r4, lr}
 2834              	.LCFI54:
 2835              		.cfi_def_cfa_offset 8
 2836              		.cfi_offset 4, -8
 2837              		.cfi_offset 14, -4
 2838 0002 0400     		movs	r4, r0
 543:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 2839              		.loc 1 543 3 is_stmt 1 view .LVU586
 544:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_ARST_MASK;
 2840              		.loc 1 544 3 view .LVU587
 544:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_ARST_MASK;
 2841              		.loc 1 544 8 is_stmt 0 view .LVU588
 2842 0004 1020     		movs	r0, #16
 2843              	.LVL193:
 544:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_ARST_MASK;
 2844              		.loc 1 544 8 view .LVU589
 2845 0006 FFF7FEFF 		bl	read_rtc_register
 2846              	.LVL194:
 545:Core/Src/AB1805.c ****   if (value)
 2847              		.loc 1 545 3 is_stmt 1 view .LVU590
 545:Core/Src/AB1805.c ****   if (value)
 2848              		.loc 1 545 6 is_stmt 0 view .LVU591
 2849 000a 0423     		movs	r3, #4
 2850 000c 9843     		bics	r0, r3
 2851              	.LVL195:
 545:Core/Src/AB1805.c ****   if (value)
 2852              		.loc 1 545 6 view .LVU592
 2853 000e C1B2     		uxtb	r1, r0
 2854              	.LVL196:
 546:Core/Src/AB1805.c ****   {
 2855              		.loc 1 546 3 is_stmt 1 view .LVU593
 546:Core/Src/AB1805.c ****   {
 2856              		.loc 1 546 6 is_stmt 0 view .LVU594
 2857 0010 002C     		cmp	r4, #0
 2858 0012 01D0     		beq	.L139
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 107


 548:Core/Src/AB1805.c ****   }
 2859              		.loc 1 548 5 is_stmt 1 view .LVU595
 548:Core/Src/AB1805.c ****   }
 2860              		.loc 1 548 8 is_stmt 0 view .LVU596
 2861 0014 1943     		orrs	r1, r3
 2862              	.LVL197:
 548:Core/Src/AB1805.c ****   }
 2863              		.loc 1 548 8 view .LVU597
 2864 0016 C9B2     		uxtb	r1, r1
 2865              	.LVL198:
 2866              	.L139:
 550:Core/Src/AB1805.c **** }
 2867              		.loc 1 550 3 is_stmt 1 view .LVU598
 2868 0018 1020     		movs	r0, #16
 2869 001a FFF7FEFF 		bl	write_rtc_register
 2870              	.LVL199:
 551:Core/Src/AB1805.c **** 
 2871              		.loc 1 551 1 is_stmt 0 view .LVU599
 2872              		@ sp needed
 2873 001e 10BD     		pop	{r4, pc}
 2874              		.cfi_endproc
 2875              	.LFE560:
 2877              		.section	.text.set_PWR2,"ax",%progbits
 2878              		.align	1
 2879              		.global	set_PWR2
 2880              		.syntax unified
 2881              		.code	16
 2882              		.thumb_func
 2884              	set_PWR2:
 2885              	.LVL200:
 2886              	.LFB561:
 554:Core/Src/AB1805.c ****   uint8_t c1;
 2887              		.loc 1 554 1 is_stmt 1 view -0
 2888              		.cfi_startproc
 2889              		@ args = 0, pretend = 0, frame = 0
 2890              		@ frame_needed = 0, uses_anonymous_args = 0
 554:Core/Src/AB1805.c ****   uint8_t c1;
 2891              		.loc 1 554 1 is_stmt 0 view .LVU601
 2892 0000 10B5     		push	{r4, lr}
 2893              	.LCFI55:
 2894              		.cfi_def_cfa_offset 8
 2895              		.cfi_offset 4, -8
 2896              		.cfi_offset 14, -4
 2897 0002 0400     		movs	r4, r0
 555:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 2898              		.loc 1 555 3 is_stmt 1 view .LVU602
 556:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_PWR2_MASK;
 2899              		.loc 1 556 3 view .LVU603
 556:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_PWR2_MASK;
 2900              		.loc 1 556 8 is_stmt 0 view .LVU604
 2901 0004 1020     		movs	r0, #16
 2902              	.LVL201:
 556:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_PWR2_MASK;
 2903              		.loc 1 556 8 view .LVU605
 2904 0006 FFF7FEFF 		bl	read_rtc_register
 2905              	.LVL202:
 557:Core/Src/AB1805.c ****   if (value)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 108


 2906              		.loc 1 557 3 is_stmt 1 view .LVU606
 557:Core/Src/AB1805.c ****   if (value)
 2907              		.loc 1 557 6 is_stmt 0 view .LVU607
 2908 000a 0223     		movs	r3, #2
 2909 000c 9843     		bics	r0, r3
 2910              	.LVL203:
 557:Core/Src/AB1805.c ****   if (value)
 2911              		.loc 1 557 6 view .LVU608
 2912 000e C1B2     		uxtb	r1, r0
 2913              	.LVL204:
 558:Core/Src/AB1805.c ****   {
 2914              		.loc 1 558 3 is_stmt 1 view .LVU609
 558:Core/Src/AB1805.c ****   {
 2915              		.loc 1 558 6 is_stmt 0 view .LVU610
 2916 0010 002C     		cmp	r4, #0
 2917 0012 01D0     		beq	.L141
 560:Core/Src/AB1805.c ****   }
 2918              		.loc 1 560 5 is_stmt 1 view .LVU611
 560:Core/Src/AB1805.c ****   }
 2919              		.loc 1 560 8 is_stmt 0 view .LVU612
 2920 0014 1943     		orrs	r1, r3
 2921              	.LVL205:
 560:Core/Src/AB1805.c ****   }
 2922              		.loc 1 560 8 view .LVU613
 2923 0016 C9B2     		uxtb	r1, r1
 2924              	.LVL206:
 2925              	.L141:
 562:Core/Src/AB1805.c **** }
 2926              		.loc 1 562 3 is_stmt 1 view .LVU614
 2927 0018 1020     		movs	r0, #16
 2928 001a FFF7FEFF 		bl	write_rtc_register
 2929              	.LVL207:
 563:Core/Src/AB1805.c **** 
 2930              		.loc 1 563 1 is_stmt 0 view .LVU615
 2931              		@ sp needed
 2932 001e 10BD     		pop	{r4, pc}
 2933              		.cfi_endproc
 2934              	.LFE561:
 2936              		.section	.text.set_WRTC,"ax",%progbits
 2937              		.align	1
 2938              		.global	set_WRTC
 2939              		.syntax unified
 2940              		.code	16
 2941              		.thumb_func
 2943              	set_WRTC:
 2944              	.LVL208:
 2945              	.LFB562:
 566:Core/Src/AB1805.c ****   uint8_t c1;
 2946              		.loc 1 566 1 is_stmt 1 view -0
 2947              		.cfi_startproc
 2948              		@ args = 0, pretend = 0, frame = 0
 2949              		@ frame_needed = 0, uses_anonymous_args = 0
 566:Core/Src/AB1805.c ****   uint8_t c1;
 2950              		.loc 1 566 1 is_stmt 0 view .LVU617
 2951 0000 10B5     		push	{r4, lr}
 2952              	.LCFI56:
 2953              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 109


 2954              		.cfi_offset 4, -8
 2955              		.cfi_offset 14, -4
 2956 0002 0400     		movs	r4, r0
 567:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 2957              		.loc 1 567 3 is_stmt 1 view .LVU618
 568:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_WRTC_MASK;
 2958              		.loc 1 568 3 view .LVU619
 568:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_WRTC_MASK;
 2959              		.loc 1 568 8 is_stmt 0 view .LVU620
 2960 0004 1020     		movs	r0, #16
 2961              	.LVL209:
 568:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_WRTC_MASK;
 2962              		.loc 1 568 8 view .LVU621
 2963 0006 FFF7FEFF 		bl	read_rtc_register
 2964              	.LVL210:
 569:Core/Src/AB1805.c ****   if (value)
 2965              		.loc 1 569 3 is_stmt 1 view .LVU622
 569:Core/Src/AB1805.c ****   if (value)
 2966              		.loc 1 569 6 is_stmt 0 view .LVU623
 2967 000a 0123     		movs	r3, #1
 2968 000c 9843     		bics	r0, r3
 2969              	.LVL211:
 569:Core/Src/AB1805.c ****   if (value)
 2970              		.loc 1 569 6 view .LVU624
 2971 000e C1B2     		uxtb	r1, r0
 2972              	.LVL212:
 570:Core/Src/AB1805.c ****   {
 2973              		.loc 1 570 3 is_stmt 1 view .LVU625
 570:Core/Src/AB1805.c ****   {
 2974              		.loc 1 570 6 is_stmt 0 view .LVU626
 2975 0010 002C     		cmp	r4, #0
 2976 0012 01D0     		beq	.L143
 572:Core/Src/AB1805.c ****   }
 2977              		.loc 1 572 5 is_stmt 1 view .LVU627
 572:Core/Src/AB1805.c ****   }
 2978              		.loc 1 572 8 is_stmt 0 view .LVU628
 2979 0014 1943     		orrs	r1, r3
 2980              	.LVL213:
 572:Core/Src/AB1805.c ****   }
 2981              		.loc 1 572 8 view .LVU629
 2982 0016 C9B2     		uxtb	r1, r1
 2983              	.LVL214:
 2984              	.L143:
 574:Core/Src/AB1805.c **** }
 2985              		.loc 1 574 3 is_stmt 1 view .LVU630
 2986 0018 1020     		movs	r0, #16
 2987 001a FFF7FEFF 		bl	write_rtc_register
 2988              	.LVL215:
 575:Core/Src/AB1805.c **** 
 2989              		.loc 1 575 1 is_stmt 0 view .LVU631
 2990              		@ sp needed
 2991 001e 10BD     		pop	{r4, pc}
 2992              		.cfi_endproc
 2993              	.LFE562:
 2995              		.section	.text.get_interrupt,"ax",%progbits
 2996              		.align	1
 2997              		.global	get_interrupt
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 110


 2998              		.syntax unified
 2999              		.code	16
 3000              		.thumb_func
 3002              	get_interrupt:
 3003              	.LFB563:
 579:Core/Src/AB1805.c ****   _interrupt = read_rtc_register(INT_MASK_REGISTER);
 3004              		.loc 1 579 1 is_stmt 1 view -0
 3005              		.cfi_startproc
 3006              		@ args = 0, pretend = 0, frame = 0
 3007              		@ frame_needed = 0, uses_anonymous_args = 0
 3008 0000 10B5     		push	{r4, lr}
 3009              	.LCFI57:
 3010              		.cfi_def_cfa_offset 8
 3011              		.cfi_offset 4, -8
 3012              		.cfi_offset 14, -4
 580:Core/Src/AB1805.c ****   return _interrupt;
 3013              		.loc 1 580 3 view .LVU633
 580:Core/Src/AB1805.c ****   return _interrupt;
 3014              		.loc 1 580 16 is_stmt 0 view .LVU634
 3015 0002 1220     		movs	r0, #18
 3016 0004 FFF7FEFF 		bl	read_rtc_register
 3017              	.LVL216:
 580:Core/Src/AB1805.c ****   return _interrupt;
 3018              		.loc 1 580 14 view .LVU635
 3019 0008 014B     		ldr	r3, .L145
 3020 000a 1870     		strb	r0, [r3]
 581:Core/Src/AB1805.c **** }
 3021              		.loc 1 581 3 is_stmt 1 view .LVU636
 582:Core/Src/AB1805.c **** 
 3022              		.loc 1 582 1 is_stmt 0 view .LVU637
 3023              		@ sp needed
 3024 000c 10BD     		pop	{r4, pc}
 3025              	.L146:
 3026 000e C046     		.align	2
 3027              	.L145:
 3028 0010 00000000 		.word	_interrupt
 3029              		.cfi_endproc
 3030              	.LFE563:
 3032              		.section	.text.get_BLIE_interrupt,"ax",%progbits
 3033              		.align	1
 3034              		.global	get_BLIE_interrupt
 3035              		.syntax unified
 3036              		.code	16
 3037              		.thumb_func
 3039              	get_BLIE_interrupt:
 3040              	.LFB564:
 585:Core/Src/AB1805.c ****   get_status();
 3041              		.loc 1 585 1 is_stmt 1 view -0
 3042              		.cfi_startproc
 3043              		@ args = 0, pretend = 0, frame = 0
 3044              		@ frame_needed = 0, uses_anonymous_args = 0
 3045 0000 10B5     		push	{r4, lr}
 3046              	.LCFI58:
 3047              		.cfi_def_cfa_offset 8
 3048              		.cfi_offset 4, -8
 3049              		.cfi_offset 14, -4
 586:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_BL_MASK > 4));
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 111


 3050              		.loc 1 586 3 view .LVU639
 3051 0002 FFF7FEFF 		bl	get_status
 3052              	.LVL217:
 587:Core/Src/AB1805.c **** };
 3053              		.loc 1 587 3 view .LVU640
 587:Core/Src/AB1805.c **** };
 3054              		.loc 1 587 22 is_stmt 0 view .LVU641
 3055 0006 024B     		ldr	r3, .L148
 3056 0008 1B78     		ldrb	r3, [r3]
 3057 000a 0120     		movs	r0, #1
 3058 000c 1840     		ands	r0, r3
 588:Core/Src/AB1805.c **** 
 3059              		.loc 1 588 1 view .LVU642
 3060              		@ sp needed
 3061 000e 10BD     		pop	{r4, pc}
 3062              	.L149:
 3063              		.align	2
 3064              	.L148:
 3065 0010 00000000 		.word	_interrupt
 3066              		.cfi_endproc
 3067              	.LFE564:
 3069              		.section	.text.get_TIE_interrupt,"ax",%progbits
 3070              		.align	1
 3071              		.global	get_TIE_interrupt
 3072              		.syntax unified
 3073              		.code	16
 3074              		.thumb_func
 3076              	get_TIE_interrupt:
 3077              	.LFB565:
 591:Core/Src/AB1805.c ****   get_status();
 3078              		.loc 1 591 1 is_stmt 1 view -0
 3079              		.cfi_startproc
 3080              		@ args = 0, pretend = 0, frame = 0
 3081              		@ frame_needed = 0, uses_anonymous_args = 0
 3082 0000 10B5     		push	{r4, lr}
 3083              	.LCFI59:
 3084              		.cfi_def_cfa_offset 8
 3085              		.cfi_offset 4, -8
 3086              		.cfi_offset 14, -4
 592:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_TIM_MASK > 3));
 3087              		.loc 1 592 3 view .LVU644
 3088 0002 FFF7FEFF 		bl	get_status
 3089              	.LVL218:
 593:Core/Src/AB1805.c **** };
 3090              		.loc 1 593 3 view .LVU645
 593:Core/Src/AB1805.c **** };
 3091              		.loc 1 593 22 is_stmt 0 view .LVU646
 3092 0006 024B     		ldr	r3, .L151
 3093 0008 1B78     		ldrb	r3, [r3]
 3094 000a 0120     		movs	r0, #1
 3095 000c 1840     		ands	r0, r3
 594:Core/Src/AB1805.c **** 
 3096              		.loc 1 594 1 view .LVU647
 3097              		@ sp needed
 3098 000e 10BD     		pop	{r4, pc}
 3099              	.L152:
 3100              		.align	2
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 112


 3101              	.L151:
 3102 0010 00000000 		.word	_interrupt
 3103              		.cfi_endproc
 3104              	.LFE565:
 3106              		.section	.text.get_AIE_interrupt,"ax",%progbits
 3107              		.align	1
 3108              		.global	get_AIE_interrupt
 3109              		.syntax unified
 3110              		.code	16
 3111              		.thumb_func
 3113              	get_AIE_interrupt:
 3114              	.LFB566:
 597:Core/Src/AB1805.c ****   get_status();
 3115              		.loc 1 597 1 is_stmt 1 view -0
 3116              		.cfi_startproc
 3117              		@ args = 0, pretend = 0, frame = 0
 3118              		@ frame_needed = 0, uses_anonymous_args = 0
 3119 0000 10B5     		push	{r4, lr}
 3120              	.LCFI60:
 3121              		.cfi_def_cfa_offset 8
 3122              		.cfi_offset 4, -8
 3123              		.cfi_offset 14, -4
 598:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_ALM_MASK > 2));
 3124              		.loc 1 598 3 view .LVU649
 3125 0002 FFF7FEFF 		bl	get_status
 3126              	.LVL219:
 599:Core/Src/AB1805.c **** };
 3127              		.loc 1 599 3 view .LVU650
 599:Core/Src/AB1805.c **** };
 3128              		.loc 1 599 22 is_stmt 0 view .LVU651
 3129 0006 024B     		ldr	r3, .L154
 3130 0008 1B78     		ldrb	r3, [r3]
 3131 000a 0120     		movs	r0, #1
 3132 000c 1840     		ands	r0, r3
 600:Core/Src/AB1805.c **** 
 3133              		.loc 1 600 1 view .LVU652
 3134              		@ sp needed
 3135 000e 10BD     		pop	{r4, pc}
 3136              	.L155:
 3137              		.align	2
 3138              	.L154:
 3139 0010 00000000 		.word	_interrupt
 3140              		.cfi_endproc
 3141              	.LFE566:
 3143              		.section	.text.get_EX2E_interrupt,"ax",%progbits
 3144              		.align	1
 3145              		.global	get_EX2E_interrupt
 3146              		.syntax unified
 3147              		.code	16
 3148              		.thumb_func
 3150              	get_EX2E_interrupt:
 3151              	.LFB567:
 603:Core/Src/AB1805.c ****   get_status();
 3152              		.loc 1 603 1 is_stmt 1 view -0
 3153              		.cfi_startproc
 3154              		@ args = 0, pretend = 0, frame = 0
 3155              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 113


 3156 0000 10B5     		push	{r4, lr}
 3157              	.LCFI61:
 3158              		.cfi_def_cfa_offset 8
 3159              		.cfi_offset 4, -8
 3160              		.cfi_offset 14, -4
 604:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_EX2_MASK > 1));
 3161              		.loc 1 604 3 view .LVU654
 3162 0002 FFF7FEFF 		bl	get_status
 3163              	.LVL220:
 605:Core/Src/AB1805.c **** };
 3164              		.loc 1 605 3 view .LVU655
 605:Core/Src/AB1805.c **** };
 3165              		.loc 1 605 22 is_stmt 0 view .LVU656
 3166 0006 024B     		ldr	r3, .L157
 3167 0008 1B78     		ldrb	r3, [r3]
 3168 000a 0120     		movs	r0, #1
 3169 000c 1840     		ands	r0, r3
 606:Core/Src/AB1805.c **** 
 3170              		.loc 1 606 1 view .LVU657
 3171              		@ sp needed
 3172 000e 10BD     		pop	{r4, pc}
 3173              	.L158:
 3174              		.align	2
 3175              	.L157:
 3176 0010 00000000 		.word	_interrupt
 3177              		.cfi_endproc
 3178              	.LFE567:
 3180              		.section	.text.get_EX1E_interrupt,"ax",%progbits
 3181              		.align	1
 3182              		.global	get_EX1E_interrupt
 3183              		.syntax unified
 3184              		.code	16
 3185              		.thumb_func
 3187              	get_EX1E_interrupt:
 3188              	.LFB568:
 609:Core/Src/AB1805.c ****   get_status();
 3189              		.loc 1 609 1 is_stmt 1 view -0
 3190              		.cfi_startproc
 3191              		@ args = 0, pretend = 0, frame = 0
 3192              		@ frame_needed = 0, uses_anonymous_args = 0
 3193 0000 10B5     		push	{r4, lr}
 3194              	.LCFI62:
 3195              		.cfi_def_cfa_offset 8
 3196              		.cfi_offset 4, -8
 3197              		.cfi_offset 14, -4
 610:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_EX1_MASK));
 3198              		.loc 1 610 3 view .LVU659
 3199 0002 FFF7FEFF 		bl	get_status
 3200              	.LVL221:
 611:Core/Src/AB1805.c **** };
 3201              		.loc 1 611 3 view .LVU660
 611:Core/Src/AB1805.c **** };
 3202              		.loc 1 611 22 is_stmt 0 view .LVU661
 3203 0006 024B     		ldr	r3, .L160
 3204 0008 1B78     		ldrb	r3, [r3]
 3205 000a 0120     		movs	r0, #1
 3206 000c 1840     		ands	r0, r3
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 114


 612:Core/Src/AB1805.c **** 
 3207              		.loc 1 612 1 view .LVU662
 3208              		@ sp needed
 3209 000e 10BD     		pop	{r4, pc}
 3210              	.L161:
 3211              		.align	2
 3212              	.L160:
 3213 0010 00000000 		.word	_interrupt
 3214              		.cfi_endproc
 3215              	.LFE568:
 3217              		.section	.text.set_interrupt,"ax",%progbits
 3218              		.align	1
 3219              		.global	set_interrupt
 3220              		.syntax unified
 3221              		.code	16
 3222              		.thumb_func
 3224              	set_interrupt:
 3225              	.LVL222:
 3226              	.LFB569:
 615:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, value);
 3227              		.loc 1 615 1 is_stmt 1 view -0
 3228              		.cfi_startproc
 3229              		@ args = 0, pretend = 0, frame = 0
 3230              		@ frame_needed = 0, uses_anonymous_args = 0
 615:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, value);
 3231              		.loc 1 615 1 is_stmt 0 view .LVU664
 3232 0000 10B5     		push	{r4, lr}
 3233              	.LCFI63:
 3234              		.cfi_def_cfa_offset 8
 3235              		.cfi_offset 4, -8
 3236              		.cfi_offset 14, -4
 3237 0002 0100     		movs	r1, r0
 616:Core/Src/AB1805.c ****   _interrupt = read_rtc_register(INT_MASK_REGISTER);
 3238              		.loc 1 616 3 is_stmt 1 view .LVU665
 3239 0004 1220     		movs	r0, #18
 3240              	.LVL223:
 616:Core/Src/AB1805.c ****   _interrupt = read_rtc_register(INT_MASK_REGISTER);
 3241              		.loc 1 616 3 is_stmt 0 view .LVU666
 3242 0006 FFF7FEFF 		bl	write_rtc_register
 3243              	.LVL224:
 617:Core/Src/AB1805.c ****   return _interrupt;
 3244              		.loc 1 617 3 is_stmt 1 view .LVU667
 617:Core/Src/AB1805.c ****   return _interrupt;
 3245              		.loc 1 617 16 is_stmt 0 view .LVU668
 3246 000a 1220     		movs	r0, #18
 3247 000c FFF7FEFF 		bl	read_rtc_register
 3248              	.LVL225:
 617:Core/Src/AB1805.c ****   return _interrupt;
 3249              		.loc 1 617 14 view .LVU669
 3250 0010 014B     		ldr	r3, .L163
 3251 0012 1870     		strb	r0, [r3]
 618:Core/Src/AB1805.c **** }
 3252              		.loc 1 618 3 is_stmt 1 view .LVU670
 619:Core/Src/AB1805.c **** 
 3253              		.loc 1 619 1 is_stmt 0 view .LVU671
 3254              		@ sp needed
 3255 0014 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 115


 3256              	.L164:
 3257 0016 C046     		.align	2
 3258              	.L163:
 3259 0018 00000000 		.word	_interrupt
 3260              		.cfi_endproc
 3261              	.LFE569:
 3263              		.section	.text.set_BLIE_interrupt,"ax",%progbits
 3264              		.align	1
 3265              		.global	set_BLIE_interrupt
 3266              		.syntax unified
 3267              		.code	16
 3268              		.thumb_func
 3270              	set_BLIE_interrupt:
 3271              	.LVL226:
 3272              	.LFB570:
 622:Core/Src/AB1805.c ****   uint8_t c1;
 3273              		.loc 1 622 1 is_stmt 1 view -0
 3274              		.cfi_startproc
 3275              		@ args = 0, pretend = 0, frame = 0
 3276              		@ frame_needed = 0, uses_anonymous_args = 0
 622:Core/Src/AB1805.c ****   uint8_t c1;
 3277              		.loc 1 622 1 is_stmt 0 view .LVU673
 3278 0000 10B5     		push	{r4, lr}
 3279              	.LCFI64:
 3280              		.cfi_def_cfa_offset 8
 3281              		.cfi_offset 4, -8
 3282              		.cfi_offset 14, -4
 3283 0002 0400     		movs	r4, r0
 623:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 3284              		.loc 1 623 3 is_stmt 1 view .LVU674
 624:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_BLIE_MASK;
 3285              		.loc 1 624 3 view .LVU675
 624:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_BLIE_MASK;
 3286              		.loc 1 624 8 is_stmt 0 view .LVU676
 3287 0004 1220     		movs	r0, #18
 3288              	.LVL227:
 624:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_BLIE_MASK;
 3289              		.loc 1 624 8 view .LVU677
 3290 0006 FFF7FEFF 		bl	read_rtc_register
 3291              	.LVL228:
 625:Core/Src/AB1805.c ****   if (value)
 3292              		.loc 1 625 3 is_stmt 1 view .LVU678
 625:Core/Src/AB1805.c ****   if (value)
 3293              		.loc 1 625 6 is_stmt 0 view .LVU679
 3294 000a 1023     		movs	r3, #16
 3295 000c 9843     		bics	r0, r3
 3296              	.LVL229:
 625:Core/Src/AB1805.c ****   if (value)
 3297              		.loc 1 625 6 view .LVU680
 3298 000e C1B2     		uxtb	r1, r0
 3299              	.LVL230:
 626:Core/Src/AB1805.c ****   {
 3300              		.loc 1 626 3 is_stmt 1 view .LVU681
 626:Core/Src/AB1805.c ****   {
 3301              		.loc 1 626 6 is_stmt 0 view .LVU682
 3302 0010 002C     		cmp	r4, #0
 3303 0012 01D0     		beq	.L166
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 116


 628:Core/Src/AB1805.c ****   }
 3304              		.loc 1 628 5 is_stmt 1 view .LVU683
 628:Core/Src/AB1805.c ****   }
 3305              		.loc 1 628 8 is_stmt 0 view .LVU684
 3306 0014 1943     		orrs	r1, r3
 3307              	.LVL231:
 628:Core/Src/AB1805.c ****   }
 3308              		.loc 1 628 8 view .LVU685
 3309 0016 C9B2     		uxtb	r1, r1
 3310              	.LVL232:
 3311              	.L166:
 630:Core/Src/AB1805.c **** }
 3312              		.loc 1 630 3 is_stmt 1 view .LVU686
 3313 0018 1220     		movs	r0, #18
 3314 001a FFF7FEFF 		bl	write_rtc_register
 3315              	.LVL233:
 631:Core/Src/AB1805.c **** 
 3316              		.loc 1 631 1 is_stmt 0 view .LVU687
 3317              		@ sp needed
 3318 001e 10BD     		pop	{r4, pc}
 3319              		.cfi_endproc
 3320              	.LFE570:
 3322              		.section	.text.set_TIE_interrupt,"ax",%progbits
 3323              		.align	1
 3324              		.global	set_TIE_interrupt
 3325              		.syntax unified
 3326              		.code	16
 3327              		.thumb_func
 3329              	set_TIE_interrupt:
 3330              	.LVL234:
 3331              	.LFB571:
 634:Core/Src/AB1805.c ****   uint8_t c1;
 3332              		.loc 1 634 1 is_stmt 1 view -0
 3333              		.cfi_startproc
 3334              		@ args = 0, pretend = 0, frame = 0
 3335              		@ frame_needed = 0, uses_anonymous_args = 0
 634:Core/Src/AB1805.c ****   uint8_t c1;
 3336              		.loc 1 634 1 is_stmt 0 view .LVU689
 3337 0000 10B5     		push	{r4, lr}
 3338              	.LCFI65:
 3339              		.cfi_def_cfa_offset 8
 3340              		.cfi_offset 4, -8
 3341              		.cfi_offset 14, -4
 3342 0002 0400     		movs	r4, r0
 635:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 3343              		.loc 1 635 3 is_stmt 1 view .LVU690
 636:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_TIE_MASK;
 3344              		.loc 1 636 3 view .LVU691
 636:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_TIE_MASK;
 3345              		.loc 1 636 8 is_stmt 0 view .LVU692
 3346 0004 1220     		movs	r0, #18
 3347              	.LVL235:
 636:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_TIE_MASK;
 3348              		.loc 1 636 8 view .LVU693
 3349 0006 FFF7FEFF 		bl	read_rtc_register
 3350              	.LVL236:
 637:Core/Src/AB1805.c ****   if (value)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 117


 3351              		.loc 1 637 3 is_stmt 1 view .LVU694
 637:Core/Src/AB1805.c ****   if (value)
 3352              		.loc 1 637 6 is_stmt 0 view .LVU695
 3353 000a 0823     		movs	r3, #8
 3354 000c 9843     		bics	r0, r3
 3355              	.LVL237:
 637:Core/Src/AB1805.c ****   if (value)
 3356              		.loc 1 637 6 view .LVU696
 3357 000e C1B2     		uxtb	r1, r0
 3358              	.LVL238:
 638:Core/Src/AB1805.c ****   {
 3359              		.loc 1 638 3 is_stmt 1 view .LVU697
 638:Core/Src/AB1805.c ****   {
 3360              		.loc 1 638 6 is_stmt 0 view .LVU698
 3361 0010 002C     		cmp	r4, #0
 3362 0012 01D0     		beq	.L168
 640:Core/Src/AB1805.c ****   }
 3363              		.loc 1 640 5 is_stmt 1 view .LVU699
 640:Core/Src/AB1805.c ****   }
 3364              		.loc 1 640 8 is_stmt 0 view .LVU700
 3365 0014 1943     		orrs	r1, r3
 3366              	.LVL239:
 640:Core/Src/AB1805.c ****   }
 3367              		.loc 1 640 8 view .LVU701
 3368 0016 C9B2     		uxtb	r1, r1
 3369              	.LVL240:
 3370              	.L168:
 642:Core/Src/AB1805.c **** }
 3371              		.loc 1 642 3 is_stmt 1 view .LVU702
 3372 0018 1220     		movs	r0, #18
 3373 001a FFF7FEFF 		bl	write_rtc_register
 3374              	.LVL241:
 643:Core/Src/AB1805.c **** 
 3375              		.loc 1 643 1 is_stmt 0 view .LVU703
 3376              		@ sp needed
 3377 001e 10BD     		pop	{r4, pc}
 3378              		.cfi_endproc
 3379              	.LFE571:
 3381              		.section	.text.set_AIE_interrupt,"ax",%progbits
 3382              		.align	1
 3383              		.global	set_AIE_interrupt
 3384              		.syntax unified
 3385              		.code	16
 3386              		.thumb_func
 3388              	set_AIE_interrupt:
 3389              	.LVL242:
 3390              	.LFB572:
 646:Core/Src/AB1805.c ****   uint8_t c1;
 3391              		.loc 1 646 1 is_stmt 1 view -0
 3392              		.cfi_startproc
 3393              		@ args = 0, pretend = 0, frame = 0
 3394              		@ frame_needed = 0, uses_anonymous_args = 0
 646:Core/Src/AB1805.c ****   uint8_t c1;
 3395              		.loc 1 646 1 is_stmt 0 view .LVU705
 3396 0000 10B5     		push	{r4, lr}
 3397              	.LCFI66:
 3398              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 118


 3399              		.cfi_offset 4, -8
 3400              		.cfi_offset 14, -4
 3401 0002 0400     		movs	r4, r0
 647:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 3402              		.loc 1 647 3 is_stmt 1 view .LVU706
 648:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_AIE_MASK;
 3403              		.loc 1 648 3 view .LVU707
 648:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_AIE_MASK;
 3404              		.loc 1 648 8 is_stmt 0 view .LVU708
 3405 0004 1220     		movs	r0, #18
 3406              	.LVL243:
 648:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_AIE_MASK;
 3407              		.loc 1 648 8 view .LVU709
 3408 0006 FFF7FEFF 		bl	read_rtc_register
 3409              	.LVL244:
 649:Core/Src/AB1805.c ****   if (value)
 3410              		.loc 1 649 3 is_stmt 1 view .LVU710
 649:Core/Src/AB1805.c ****   if (value)
 3411              		.loc 1 649 6 is_stmt 0 view .LVU711
 3412 000a 0423     		movs	r3, #4
 3413 000c 9843     		bics	r0, r3
 3414              	.LVL245:
 649:Core/Src/AB1805.c ****   if (value)
 3415              		.loc 1 649 6 view .LVU712
 3416 000e C1B2     		uxtb	r1, r0
 3417              	.LVL246:
 650:Core/Src/AB1805.c ****   {
 3418              		.loc 1 650 3 is_stmt 1 view .LVU713
 650:Core/Src/AB1805.c ****   {
 3419              		.loc 1 650 6 is_stmt 0 view .LVU714
 3420 0010 002C     		cmp	r4, #0
 3421 0012 01D0     		beq	.L170
 652:Core/Src/AB1805.c ****   }
 3422              		.loc 1 652 5 is_stmt 1 view .LVU715
 652:Core/Src/AB1805.c ****   }
 3423              		.loc 1 652 8 is_stmt 0 view .LVU716
 3424 0014 1943     		orrs	r1, r3
 3425              	.LVL247:
 652:Core/Src/AB1805.c ****   }
 3426              		.loc 1 652 8 view .LVU717
 3427 0016 C9B2     		uxtb	r1, r1
 3428              	.LVL248:
 3429              	.L170:
 654:Core/Src/AB1805.c **** }
 3430              		.loc 1 654 3 is_stmt 1 view .LVU718
 3431 0018 1220     		movs	r0, #18
 3432 001a FFF7FEFF 		bl	write_rtc_register
 3433              	.LVL249:
 655:Core/Src/AB1805.c **** 
 3434              		.loc 1 655 1 is_stmt 0 view .LVU719
 3435              		@ sp needed
 3436 001e 10BD     		pop	{r4, pc}
 3437              		.cfi_endproc
 3438              	.LFE572:
 3440              		.section	.text.set_EX1E_interrupt,"ax",%progbits
 3441              		.align	1
 3442              		.global	set_EX1E_interrupt
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 119


 3443              		.syntax unified
 3444              		.code	16
 3445              		.thumb_func
 3447              	set_EX1E_interrupt:
 3448              	.LVL250:
 3449              	.LFB573:
 658:Core/Src/AB1805.c ****   uint8_t c1;
 3450              		.loc 1 658 1 is_stmt 1 view -0
 3451              		.cfi_startproc
 3452              		@ args = 0, pretend = 0, frame = 0
 3453              		@ frame_needed = 0, uses_anonymous_args = 0
 658:Core/Src/AB1805.c ****   uint8_t c1;
 3454              		.loc 1 658 1 is_stmt 0 view .LVU721
 3455 0000 10B5     		push	{r4, lr}
 3456              	.LCFI67:
 3457              		.cfi_def_cfa_offset 8
 3458              		.cfi_offset 4, -8
 3459              		.cfi_offset 14, -4
 3460 0002 0400     		movs	r4, r0
 659:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 3461              		.loc 1 659 3 is_stmt 1 view .LVU722
 660:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX1E_MASK;
 3462              		.loc 1 660 3 view .LVU723
 660:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX1E_MASK;
 3463              		.loc 1 660 8 is_stmt 0 view .LVU724
 3464 0004 1220     		movs	r0, #18
 3465              	.LVL251:
 660:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX1E_MASK;
 3466              		.loc 1 660 8 view .LVU725
 3467 0006 FFF7FEFF 		bl	read_rtc_register
 3468              	.LVL252:
 661:Core/Src/AB1805.c ****   if (value)
 3469              		.loc 1 661 3 is_stmt 1 view .LVU726
 661:Core/Src/AB1805.c ****   if (value)
 3470              		.loc 1 661 6 is_stmt 0 view .LVU727
 3471 000a 0123     		movs	r3, #1
 3472 000c 9843     		bics	r0, r3
 3473              	.LVL253:
 661:Core/Src/AB1805.c ****   if (value)
 3474              		.loc 1 661 6 view .LVU728
 3475 000e C1B2     		uxtb	r1, r0
 3476              	.LVL254:
 662:Core/Src/AB1805.c ****   {
 3477              		.loc 1 662 3 is_stmt 1 view .LVU729
 662:Core/Src/AB1805.c ****   {
 3478              		.loc 1 662 6 is_stmt 0 view .LVU730
 3479 0010 002C     		cmp	r4, #0
 3480 0012 01D0     		beq	.L172
 664:Core/Src/AB1805.c ****   }
 3481              		.loc 1 664 5 is_stmt 1 view .LVU731
 664:Core/Src/AB1805.c ****   }
 3482              		.loc 1 664 8 is_stmt 0 view .LVU732
 3483 0014 1943     		orrs	r1, r3
 3484              	.LVL255:
 664:Core/Src/AB1805.c ****   }
 3485              		.loc 1 664 8 view .LVU733
 3486 0016 C9B2     		uxtb	r1, r1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 120


 3487              	.LVL256:
 3488              	.L172:
 666:Core/Src/AB1805.c **** }
 3489              		.loc 1 666 3 is_stmt 1 view .LVU734
 3490 0018 1220     		movs	r0, #18
 3491 001a FFF7FEFF 		bl	write_rtc_register
 3492              	.LVL257:
 667:Core/Src/AB1805.c **** 
 3493              		.loc 1 667 1 is_stmt 0 view .LVU735
 3494              		@ sp needed
 3495 001e 10BD     		pop	{r4, pc}
 3496              		.cfi_endproc
 3497              	.LFE573:
 3499              		.section	.text.set_EX2E_interrupt,"ax",%progbits
 3500              		.align	1
 3501              		.global	set_EX2E_interrupt
 3502              		.syntax unified
 3503              		.code	16
 3504              		.thumb_func
 3506              	set_EX2E_interrupt:
 3507              	.LVL258:
 3508              	.LFB574:
 670:Core/Src/AB1805.c ****   uint8_t c1;
 3509              		.loc 1 670 1 is_stmt 1 view -0
 3510              		.cfi_startproc
 3511              		@ args = 0, pretend = 0, frame = 0
 3512              		@ frame_needed = 0, uses_anonymous_args = 0
 670:Core/Src/AB1805.c ****   uint8_t c1;
 3513              		.loc 1 670 1 is_stmt 0 view .LVU737
 3514 0000 10B5     		push	{r4, lr}
 3515              	.LCFI68:
 3516              		.cfi_def_cfa_offset 8
 3517              		.cfi_offset 4, -8
 3518              		.cfi_offset 14, -4
 3519 0002 0400     		movs	r4, r0
 671:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 3520              		.loc 1 671 3 is_stmt 1 view .LVU738
 672:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX2E_MASK;
 3521              		.loc 1 672 3 view .LVU739
 672:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX2E_MASK;
 3522              		.loc 1 672 8 is_stmt 0 view .LVU740
 3523 0004 1220     		movs	r0, #18
 3524              	.LVL259:
 672:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX2E_MASK;
 3525              		.loc 1 672 8 view .LVU741
 3526 0006 FFF7FEFF 		bl	read_rtc_register
 3527              	.LVL260:
 673:Core/Src/AB1805.c ****   if (value)
 3528              		.loc 1 673 3 is_stmt 1 view .LVU742
 673:Core/Src/AB1805.c ****   if (value)
 3529              		.loc 1 673 6 is_stmt 0 view .LVU743
 3530 000a 0223     		movs	r3, #2
 3531 000c 9843     		bics	r0, r3
 3532              	.LVL261:
 673:Core/Src/AB1805.c ****   if (value)
 3533              		.loc 1 673 6 view .LVU744
 3534 000e C1B2     		uxtb	r1, r0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 121


 3535              	.LVL262:
 674:Core/Src/AB1805.c ****   {
 3536              		.loc 1 674 3 is_stmt 1 view .LVU745
 674:Core/Src/AB1805.c ****   {
 3537              		.loc 1 674 6 is_stmt 0 view .LVU746
 3538 0010 002C     		cmp	r4, #0
 3539 0012 01D0     		beq	.L174
 676:Core/Src/AB1805.c ****   }
 3540              		.loc 1 676 5 is_stmt 1 view .LVU747
 676:Core/Src/AB1805.c ****   }
 3541              		.loc 1 676 8 is_stmt 0 view .LVU748
 3542 0014 1943     		orrs	r1, r3
 3543              	.LVL263:
 676:Core/Src/AB1805.c ****   }
 3544              		.loc 1 676 8 view .LVU749
 3545 0016 C9B2     		uxtb	r1, r1
 3546              	.LVL264:
 3547              	.L174:
 678:Core/Src/AB1805.c **** }
 3548              		.loc 1 678 3 is_stmt 1 view .LVU750
 3549 0018 1220     		movs	r0, #18
 3550 001a FFF7FEFF 		bl	write_rtc_register
 3551              	.LVL265:
 679:Core/Src/AB1805.c **** 
 3552              		.loc 1 679 1 is_stmt 0 view .LVU751
 3553              		@ sp needed
 3554 001e 10BD     		pop	{r4, pc}
 3555              		.cfi_endproc
 3556              	.LFE574:
 3558              		.section	.text.get_control2,"ax",%progbits
 3559              		.align	1
 3560              		.global	get_control2
 3561              		.syntax unified
 3562              		.code	16
 3563              		.thumb_func
 3565              	get_control2:
 3566              	.LFB575:
 683:Core/Src/AB1805.c ****   _control2 = read_rtc_register(CONTROL2_REGISTER);
 3567              		.loc 1 683 1 is_stmt 1 view -0
 3568              		.cfi_startproc
 3569              		@ args = 0, pretend = 0, frame = 0
 3570              		@ frame_needed = 0, uses_anonymous_args = 0
 3571 0000 10B5     		push	{r4, lr}
 3572              	.LCFI69:
 3573              		.cfi_def_cfa_offset 8
 3574              		.cfi_offset 4, -8
 3575              		.cfi_offset 14, -4
 684:Core/Src/AB1805.c ****   return _control2;
 3576              		.loc 1 684 3 view .LVU753
 684:Core/Src/AB1805.c ****   return _control2;
 3577              		.loc 1 684 15 is_stmt 0 view .LVU754
 3578 0002 1120     		movs	r0, #17
 3579 0004 FFF7FEFF 		bl	read_rtc_register
 3580              	.LVL266:
 684:Core/Src/AB1805.c ****   return _control2;
 3581              		.loc 1 684 13 view .LVU755
 3582 0008 014B     		ldr	r3, .L176
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 122


 3583 000a 1870     		strb	r0, [r3]
 685:Core/Src/AB1805.c **** }
 3584              		.loc 1 685 3 is_stmt 1 view .LVU756
 686:Core/Src/AB1805.c **** 
 3585              		.loc 1 686 1 is_stmt 0 view .LVU757
 3586              		@ sp needed
 3587 000c 10BD     		pop	{r4, pc}
 3588              	.L177:
 3589 000e C046     		.align	2
 3590              	.L176:
 3591 0010 00000000 		.word	_control2
 3592              		.cfi_endproc
 3593              	.LFE575:
 3595              		.section	.text.get_RS1E_control2,"ax",%progbits
 3596              		.align	1
 3597              		.global	get_RS1E_control2
 3598              		.syntax unified
 3599              		.code	16
 3600              		.thumb_func
 3602              	get_RS1E_control2:
 3603              	.LFB576:
 689:Core/Src/AB1805.c ****   get_control2();
 3604              		.loc 1 689 1 is_stmt 1 view -0
 3605              		.cfi_startproc
 3606              		@ args = 0, pretend = 0, frame = 0
 3607              		@ frame_needed = 0, uses_anonymous_args = 0
 3608 0000 10B5     		push	{r4, lr}
 3609              	.LCFI70:
 3610              		.cfi_def_cfa_offset 8
 3611              		.cfi_offset 4, -8
 3612              		.cfi_offset 14, -4
 690:Core/Src/AB1805.c ****   return (_control2 & (CONTROL2_RS1E_MASK > 5));
 3613              		.loc 1 690 3 view .LVU759
 3614 0002 FFF7FEFF 		bl	get_control2
 3615              	.LVL267:
 691:Core/Src/AB1805.c **** };
 3616              		.loc 1 691 3 view .LVU760
 691:Core/Src/AB1805.c **** };
 3617              		.loc 1 691 21 is_stmt 0 view .LVU761
 3618 0006 024B     		ldr	r3, .L179
 3619 0008 1B78     		ldrb	r3, [r3]
 3620 000a 0120     		movs	r0, #1
 3621 000c 1840     		ands	r0, r3
 692:Core/Src/AB1805.c **** 
 3622              		.loc 1 692 1 view .LVU762
 3623              		@ sp needed
 3624 000e 10BD     		pop	{r4, pc}
 3625              	.L180:
 3626              		.align	2
 3627              	.L179:
 3628 0010 00000000 		.word	_control2
 3629              		.cfi_endproc
 3630              	.LFE576:
 3632              		.section	.text.get_OUT2S_control2,"ax",%progbits
 3633              		.align	1
 3634              		.global	get_OUT2S_control2
 3635              		.syntax unified
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 123


 3636              		.code	16
 3637              		.thumb_func
 3639              	get_OUT2S_control2:
 3640              	.LFB577:
 695:Core/Src/AB1805.c ****   get_control2();
 3641              		.loc 1 695 1 is_stmt 1 view -0
 3642              		.cfi_startproc
 3643              		@ args = 0, pretend = 0, frame = 0
 3644              		@ frame_needed = 0, uses_anonymous_args = 0
 3645 0000 10B5     		push	{r4, lr}
 3646              	.LCFI71:
 3647              		.cfi_def_cfa_offset 8
 3648              		.cfi_offset 4, -8
 3649              		.cfi_offset 14, -4
 696:Core/Src/AB1805.c ****   return (_control2 & (CONTROL2_OUT2S_MASK > 2));
 3650              		.loc 1 696 3 view .LVU764
 3651 0002 FFF7FEFF 		bl	get_control2
 3652              	.LVL268:
 697:Core/Src/AB1805.c **** };
 3653              		.loc 1 697 3 view .LVU765
 697:Core/Src/AB1805.c **** };
 3654              		.loc 1 697 21 is_stmt 0 view .LVU766
 3655 0006 024B     		ldr	r3, .L182
 3656 0008 1B78     		ldrb	r3, [r3]
 3657 000a 0120     		movs	r0, #1
 3658 000c 1840     		ands	r0, r3
 698:Core/Src/AB1805.c **** 
 3659              		.loc 1 698 1 view .LVU767
 3660              		@ sp needed
 3661 000e 10BD     		pop	{r4, pc}
 3662              	.L183:
 3663              		.align	2
 3664              	.L182:
 3665 0010 00000000 		.word	_control2
 3666              		.cfi_endproc
 3667              	.LFE577:
 3669              		.section	.text.get_OUT1S_control2,"ax",%progbits
 3670              		.align	1
 3671              		.global	get_OUT1S_control2
 3672              		.syntax unified
 3673              		.code	16
 3674              		.thumb_func
 3676              	get_OUT1S_control2:
 3677              	.LFB578:
 701:Core/Src/AB1805.c ****   get_control2();
 3678              		.loc 1 701 1 is_stmt 1 view -0
 3679              		.cfi_startproc
 3680              		@ args = 0, pretend = 0, frame = 0
 3681              		@ frame_needed = 0, uses_anonymous_args = 0
 3682 0000 10B5     		push	{r4, lr}
 3683              	.LCFI72:
 3684              		.cfi_def_cfa_offset 8
 3685              		.cfi_offset 4, -8
 3686              		.cfi_offset 14, -4
 702:Core/Src/AB1805.c ****   return (_control2 & (CONTROL2_OUT1S_MASK));
 3687              		.loc 1 702 3 view .LVU769
 3688 0002 FFF7FEFF 		bl	get_control2
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 124


 3689              	.LVL269:
 703:Core/Src/AB1805.c **** };
 3690              		.loc 1 703 3 view .LVU770
 703:Core/Src/AB1805.c **** };
 3691              		.loc 1 703 21 is_stmt 0 view .LVU771
 3692 0006 024B     		ldr	r3, .L185
 3693 0008 1B78     		ldrb	r3, [r3]
 3694 000a 0320     		movs	r0, #3
 3695 000c 1840     		ands	r0, r3
 704:Core/Src/AB1805.c **** 
 3696              		.loc 1 704 1 view .LVU772
 3697              		@ sp needed
 3698 000e 10BD     		pop	{r4, pc}
 3699              	.L186:
 3700              		.align	2
 3701              	.L185:
 3702 0010 00000000 		.word	_control2
 3703              		.cfi_endproc
 3704              	.LFE578:
 3706              		.section	.text.set_control2,"ax",%progbits
 3707              		.align	1
 3708              		.global	set_control2
 3709              		.syntax unified
 3710              		.code	16
 3711              		.thumb_func
 3713              	set_control2:
 3714              	.LVL270:
 3715              	.LFB579:
 707:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, value);
 3716              		.loc 1 707 1 is_stmt 1 view -0
 3717              		.cfi_startproc
 3718              		@ args = 0, pretend = 0, frame = 0
 3719              		@ frame_needed = 0, uses_anonymous_args = 0
 707:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, value);
 3720              		.loc 1 707 1 is_stmt 0 view .LVU774
 3721 0000 10B5     		push	{r4, lr}
 3722              	.LCFI73:
 3723              		.cfi_def_cfa_offset 8
 3724              		.cfi_offset 4, -8
 3725              		.cfi_offset 14, -4
 3726 0002 0100     		movs	r1, r0
 708:Core/Src/AB1805.c ****   _control2 = read_rtc_register(CONTROL2_REGISTER);
 3727              		.loc 1 708 3 is_stmt 1 view .LVU775
 3728 0004 1120     		movs	r0, #17
 3729              	.LVL271:
 708:Core/Src/AB1805.c ****   _control2 = read_rtc_register(CONTROL2_REGISTER);
 3730              		.loc 1 708 3 is_stmt 0 view .LVU776
 3731 0006 FFF7FEFF 		bl	write_rtc_register
 3732              	.LVL272:
 709:Core/Src/AB1805.c ****   return _control2;
 3733              		.loc 1 709 3 is_stmt 1 view .LVU777
 709:Core/Src/AB1805.c ****   return _control2;
 3734              		.loc 1 709 15 is_stmt 0 view .LVU778
 3735 000a 1120     		movs	r0, #17
 3736 000c FFF7FEFF 		bl	read_rtc_register
 3737              	.LVL273:
 709:Core/Src/AB1805.c ****   return _control2;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 125


 3738              		.loc 1 709 13 view .LVU779
 3739 0010 014B     		ldr	r3, .L188
 3740 0012 1870     		strb	r0, [r3]
 710:Core/Src/AB1805.c **** }
 3741              		.loc 1 710 3 is_stmt 1 view .LVU780
 711:Core/Src/AB1805.c **** 
 3742              		.loc 1 711 1 is_stmt 0 view .LVU781
 3743              		@ sp needed
 3744 0014 10BD     		pop	{r4, pc}
 3745              	.L189:
 3746 0016 C046     		.align	2
 3747              	.L188:
 3748 0018 00000000 		.word	_control2
 3749              		.cfi_endproc
 3750              	.LFE579:
 3752              		.section	.text.set_RS1E_control2,"ax",%progbits
 3753              		.align	1
 3754              		.global	set_RS1E_control2
 3755              		.syntax unified
 3756              		.code	16
 3757              		.thumb_func
 3759              	set_RS1E_control2:
 3760              	.LVL274:
 3761              	.LFB580:
 714:Core/Src/AB1805.c ****   uint8_t c1;
 3762              		.loc 1 714 1 is_stmt 1 view -0
 3763              		.cfi_startproc
 3764              		@ args = 0, pretend = 0, frame = 0
 3765              		@ frame_needed = 0, uses_anonymous_args = 0
 714:Core/Src/AB1805.c ****   uint8_t c1;
 3766              		.loc 1 714 1 is_stmt 0 view .LVU783
 3767 0000 70B5     		push	{r4, r5, r6, lr}
 3768              	.LCFI74:
 3769              		.cfi_def_cfa_offset 16
 3770              		.cfi_offset 4, -16
 3771              		.cfi_offset 5, -12
 3772              		.cfi_offset 6, -8
 3773              		.cfi_offset 14, -4
 3774 0002 0500     		movs	r5, r0
 715:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL2_REGISTER);
 3775              		.loc 1 715 3 is_stmt 1 view .LVU784
 716:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_RS1E_MASK;
 3776              		.loc 1 716 3 view .LVU785
 716:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_RS1E_MASK;
 3777              		.loc 1 716 8 is_stmt 0 view .LVU786
 3778 0004 1120     		movs	r0, #17
 3779              	.LVL275:
 716:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_RS1E_MASK;
 3780              		.loc 1 716 8 view .LVU787
 3781 0006 FFF7FEFF 		bl	read_rtc_register
 3782              	.LVL276:
 717:Core/Src/AB1805.c ****   if (value)
 3783              		.loc 1 717 3 is_stmt 1 view .LVU788
 717:Core/Src/AB1805.c ****   if (value)
 3784              		.loc 1 717 6 is_stmt 0 view .LVU789
 3785 000a 2023     		movs	r3, #32
 3786 000c 9843     		bics	r0, r3
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 126


 3787              	.LVL277:
 717:Core/Src/AB1805.c ****   if (value)
 3788              		.loc 1 717 6 view .LVU790
 3789 000e C4B2     		uxtb	r4, r0
 3790              	.LVL278:
 718:Core/Src/AB1805.c ****   {
 3791              		.loc 1 718 3 is_stmt 1 view .LVU791
 718:Core/Src/AB1805.c ****   {
 3792              		.loc 1 718 6 is_stmt 0 view .LVU792
 3793 0010 002D     		cmp	r5, #0
 3794 0012 01D0     		beq	.L191
 720:Core/Src/AB1805.c ****   }
 3795              		.loc 1 720 5 is_stmt 1 view .LVU793
 720:Core/Src/AB1805.c ****   }
 3796              		.loc 1 720 8 is_stmt 0 view .LVU794
 3797 0014 1C43     		orrs	r4, r3
 3798              	.LVL279:
 720:Core/Src/AB1805.c ****   }
 3799              		.loc 1 720 8 view .LVU795
 3800 0016 E4B2     		uxtb	r4, r4
 3801              	.LVL280:
 3802              	.L191:
 722:Core/Src/AB1805.c ****   return c1;
 3803              		.loc 1 722 3 is_stmt 1 view .LVU796
 3804 0018 2100     		movs	r1, r4
 3805 001a 1120     		movs	r0, #17
 3806 001c FFF7FEFF 		bl	write_rtc_register
 3807              	.LVL281:
 723:Core/Src/AB1805.c **** }
 3808              		.loc 1 723 3 view .LVU797
 724:Core/Src/AB1805.c **** 
 3809              		.loc 1 724 1 is_stmt 0 view .LVU798
 3810 0020 2000     		movs	r0, r4
 3811              		@ sp needed
 3812              	.LVL282:
 724:Core/Src/AB1805.c **** 
 3813              		.loc 1 724 1 view .LVU799
 3814 0022 70BD     		pop	{r4, r5, r6, pc}
 3815              		.cfi_endproc
 3816              	.LFE580:
 3818              		.section	.text.set_OUT2S_control2,"ax",%progbits
 3819              		.align	1
 3820              		.global	set_OUT2S_control2
 3821              		.syntax unified
 3822              		.code	16
 3823              		.thumb_func
 3825              	set_OUT2S_control2:
 3826              	.LVL283:
 3827              	.LFB581:
 727:Core/Src/AB1805.c ****   uint8_t c1;
 3828              		.loc 1 727 1 is_stmt 1 view -0
 3829              		.cfi_startproc
 3830              		@ args = 0, pretend = 0, frame = 0
 3831              		@ frame_needed = 0, uses_anonymous_args = 0
 727:Core/Src/AB1805.c ****   uint8_t c1;
 3832              		.loc 1 727 1 is_stmt 0 view .LVU801
 3833 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 127


 3834              	.LCFI75:
 3835              		.cfi_def_cfa_offset 16
 3836              		.cfi_offset 4, -16
 3837              		.cfi_offset 5, -12
 3838              		.cfi_offset 6, -8
 3839              		.cfi_offset 14, -4
 3840 0002 0500     		movs	r5, r0
 728:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL2_REGISTER);
 3841              		.loc 1 728 3 is_stmt 1 view .LVU802
 729:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT2S_MASK;
 3842              		.loc 1 729 3 view .LVU803
 729:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT2S_MASK;
 3843              		.loc 1 729 8 is_stmt 0 view .LVU804
 3844 0004 1120     		movs	r0, #17
 3845              	.LVL284:
 729:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT2S_MASK;
 3846              		.loc 1 729 8 view .LVU805
 3847 0006 FFF7FEFF 		bl	read_rtc_register
 3848              	.LVL285:
 730:Core/Src/AB1805.c ****   c1 |= (value << 2) & CONTROL2_OUT2S_MASK;
 3849              		.loc 1 730 3 is_stmt 1 view .LVU806
 730:Core/Src/AB1805.c ****   c1 |= (value << 2) & CONTROL2_OUT2S_MASK;
 3850              		.loc 1 730 6 is_stmt 0 view .LVU807
 3851 000a 1C23     		movs	r3, #28
 3852 000c 9843     		bics	r0, r3
 3853              	.LVL286:
 730:Core/Src/AB1805.c ****   c1 |= (value << 2) & CONTROL2_OUT2S_MASK;
 3854              		.loc 1 730 6 view .LVU808
 3855 000e C4B2     		uxtb	r4, r0
 3856              	.LVL287:
 731:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 3857              		.loc 1 731 3 is_stmt 1 view .LVU809
 731:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 3858              		.loc 1 731 16 is_stmt 0 view .LVU810
 3859 0010 AD00     		lsls	r5, r5, #2
 731:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 3860              		.loc 1 731 22 view .LVU811
 3861 0012 2B40     		ands	r3, r5
 731:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 3862              		.loc 1 731 6 view .LVU812
 3863 0014 1C43     		orrs	r4, r3
 3864              	.LVL288:
 732:Core/Src/AB1805.c ****   return c1;
 3865              		.loc 1 732 3 is_stmt 1 view .LVU813
 3866 0016 2100     		movs	r1, r4
 3867 0018 1120     		movs	r0, #17
 3868 001a FFF7FEFF 		bl	write_rtc_register
 3869              	.LVL289:
 733:Core/Src/AB1805.c **** }
 3870              		.loc 1 733 3 view .LVU814
 734:Core/Src/AB1805.c **** 
 3871              		.loc 1 734 1 is_stmt 0 view .LVU815
 3872 001e 2000     		movs	r0, r4
 3873              		@ sp needed
 3874              	.LVL290:
 734:Core/Src/AB1805.c **** 
 3875              		.loc 1 734 1 view .LVU816
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 128


 3876 0020 70BD     		pop	{r4, r5, r6, pc}
 3877              		.cfi_endproc
 3878              	.LFE581:
 3880              		.section	.text.set_OUT1S_control2,"ax",%progbits
 3881              		.align	1
 3882              		.global	set_OUT1S_control2
 3883              		.syntax unified
 3884              		.code	16
 3885              		.thumb_func
 3887              	set_OUT1S_control2:
 3888              	.LVL291:
 3889              	.LFB582:
 737:Core/Src/AB1805.c ****   uint8_t c1;
 3890              		.loc 1 737 1 is_stmt 1 view -0
 3891              		.cfi_startproc
 3892              		@ args = 0, pretend = 0, frame = 0
 3893              		@ frame_needed = 0, uses_anonymous_args = 0
 737:Core/Src/AB1805.c ****   uint8_t c1;
 3894              		.loc 1 737 1 is_stmt 0 view .LVU818
 3895 0000 70B5     		push	{r4, r5, r6, lr}
 3896              	.LCFI76:
 3897              		.cfi_def_cfa_offset 16
 3898              		.cfi_offset 4, -16
 3899              		.cfi_offset 5, -12
 3900              		.cfi_offset 6, -8
 3901              		.cfi_offset 14, -4
 3902 0002 0500     		movs	r5, r0
 738:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL2_REGISTER);
 3903              		.loc 1 738 3 is_stmt 1 view .LVU819
 739:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT1S_MASK;
 3904              		.loc 1 739 3 view .LVU820
 739:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT1S_MASK;
 3905              		.loc 1 739 8 is_stmt 0 view .LVU821
 3906 0004 1120     		movs	r0, #17
 3907              	.LVL292:
 739:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT1S_MASK;
 3908              		.loc 1 739 8 view .LVU822
 3909 0006 FFF7FEFF 		bl	read_rtc_register
 3910              	.LVL293:
 740:Core/Src/AB1805.c ****   c1 |= (value)&CONTROL2_OUT1S_MASK;
 3911              		.loc 1 740 3 is_stmt 1 view .LVU823
 740:Core/Src/AB1805.c ****   c1 |= (value)&CONTROL2_OUT1S_MASK;
 3912              		.loc 1 740 6 is_stmt 0 view .LVU824
 3913 000a 0323     		movs	r3, #3
 3914 000c 9843     		bics	r0, r3
 3915              	.LVL294:
 740:Core/Src/AB1805.c ****   c1 |= (value)&CONTROL2_OUT1S_MASK;
 3916              		.loc 1 740 6 view .LVU825
 3917 000e C4B2     		uxtb	r4, r0
 3918              	.LVL295:
 741:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 3919              		.loc 1 741 3 is_stmt 1 view .LVU826
 3920 0010 0320     		movs	r0, #3
 3921 0012 2840     		ands	r0, r5
 3922 0014 0443     		orrs	r4, r0
 3923              	.LVL296:
 742:Core/Src/AB1805.c ****   return c1;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 129


 3924              		.loc 1 742 3 view .LVU827
 3925 0016 2100     		movs	r1, r4
 3926 0018 1120     		movs	r0, #17
 3927 001a FFF7FEFF 		bl	write_rtc_register
 3928              	.LVL297:
 743:Core/Src/AB1805.c **** }
 3929              		.loc 1 743 3 view .LVU828
 744:Core/Src/AB1805.c **** 
 3930              		.loc 1 744 1 is_stmt 0 view .LVU829
 3931 001e 2000     		movs	r0, r4
 3932              		@ sp needed
 3933              	.LVL298:
 744:Core/Src/AB1805.c **** 
 3934              		.loc 1 744 1 view .LVU830
 3935 0020 70BD     		pop	{r4, r5, r6, pc}
 3936              		.cfi_endproc
 3937              	.LFE582:
 3939              		.section	.text.get_sleep,"ax",%progbits
 3940              		.align	1
 3941              		.global	get_sleep
 3942              		.syntax unified
 3943              		.code	16
 3944              		.thumb_func
 3946              	get_sleep:
 3947              	.LFB583:
 748:Core/Src/AB1805.c ****   _sleep_mode = read_rtc_register(SLEEP_CONTROL_REGISTER);
 3948              		.loc 1 748 1 is_stmt 1 view -0
 3949              		.cfi_startproc
 3950              		@ args = 0, pretend = 0, frame = 0
 3951              		@ frame_needed = 0, uses_anonymous_args = 0
 3952 0000 10B5     		push	{r4, lr}
 3953              	.LCFI77:
 3954              		.cfi_def_cfa_offset 8
 3955              		.cfi_offset 4, -8
 3956              		.cfi_offset 14, -4
 749:Core/Src/AB1805.c ****   return _sleep_mode;
 3957              		.loc 1 749 3 view .LVU832
 749:Core/Src/AB1805.c ****   return _sleep_mode;
 3958              		.loc 1 749 17 is_stmt 0 view .LVU833
 3959 0002 1720     		movs	r0, #23
 3960 0004 FFF7FEFF 		bl	read_rtc_register
 3961              	.LVL299:
 749:Core/Src/AB1805.c ****   return _sleep_mode;
 3962              		.loc 1 749 15 view .LVU834
 3963 0008 014B     		ldr	r3, .L195
 3964 000a 1870     		strb	r0, [r3]
 750:Core/Src/AB1805.c **** }
 3965              		.loc 1 750 3 is_stmt 1 view .LVU835
 751:Core/Src/AB1805.c **** 
 3966              		.loc 1 751 1 is_stmt 0 view .LVU836
 3967              		@ sp needed
 3968 000c 10BD     		pop	{r4, pc}
 3969              	.L196:
 3970 000e C046     		.align	2
 3971              	.L195:
 3972 0010 00000000 		.word	_sleep_mode
 3973              		.cfi_endproc
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 130


 3974              	.LFE583:
 3976              		.section	.text.get_SLP_sleep,"ax",%progbits
 3977              		.align	1
 3978              		.global	get_SLP_sleep
 3979              		.syntax unified
 3980              		.code	16
 3981              		.thumb_func
 3983              	get_SLP_sleep:
 3984              	.LFB584:
 754:Core/Src/AB1805.c ****   get_sleep();
 3985              		.loc 1 754 1 is_stmt 1 view -0
 3986              		.cfi_startproc
 3987              		@ args = 0, pretend = 0, frame = 0
 3988              		@ frame_needed = 0, uses_anonymous_args = 0
 3989 0000 10B5     		push	{r4, lr}
 3990              	.LCFI78:
 3991              		.cfi_def_cfa_offset 8
 3992              		.cfi_offset 4, -8
 3993              		.cfi_offset 14, -4
 755:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLP_MASK > 7));
 3994              		.loc 1 755 3 view .LVU838
 3995 0002 FFF7FEFF 		bl	get_sleep
 3996              	.LVL300:
 756:Core/Src/AB1805.c **** };
 3997              		.loc 1 756 3 view .LVU839
 756:Core/Src/AB1805.c **** };
 3998              		.loc 1 756 23 is_stmt 0 view .LVU840
 3999 0006 024B     		ldr	r3, .L198
 4000 0008 1B78     		ldrb	r3, [r3]
 4001 000a 0120     		movs	r0, #1
 4002 000c 1840     		ands	r0, r3
 757:Core/Src/AB1805.c **** 
 4003              		.loc 1 757 1 view .LVU841
 4004              		@ sp needed
 4005 000e 10BD     		pop	{r4, pc}
 4006              	.L199:
 4007              		.align	2
 4008              	.L198:
 4009 0010 00000000 		.word	_sleep_mode
 4010              		.cfi_endproc
 4011              	.LFE584:
 4013              		.section	.text.get_SLRES_sleep,"ax",%progbits
 4014              		.align	1
 4015              		.global	get_SLRES_sleep
 4016              		.syntax unified
 4017              		.code	16
 4018              		.thumb_func
 4020              	get_SLRES_sleep:
 4021              	.LFB585:
 760:Core/Src/AB1805.c ****   get_sleep();
 4022              		.loc 1 760 1 is_stmt 1 view -0
 4023              		.cfi_startproc
 4024              		@ args = 0, pretend = 0, frame = 0
 4025              		@ frame_needed = 0, uses_anonymous_args = 0
 4026 0000 10B5     		push	{r4, lr}
 4027              	.LCFI79:
 4028              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 131


 4029              		.cfi_offset 4, -8
 4030              		.cfi_offset 14, -4
 761:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLRES_MASK > 6));
 4031              		.loc 1 761 3 view .LVU843
 4032 0002 FFF7FEFF 		bl	get_sleep
 4033              	.LVL301:
 762:Core/Src/AB1805.c **** };
 4034              		.loc 1 762 3 view .LVU844
 762:Core/Src/AB1805.c **** };
 4035              		.loc 1 762 23 is_stmt 0 view .LVU845
 4036 0006 024B     		ldr	r3, .L201
 4037 0008 1B78     		ldrb	r3, [r3]
 4038 000a 0120     		movs	r0, #1
 4039 000c 1840     		ands	r0, r3
 763:Core/Src/AB1805.c **** 
 4040              		.loc 1 763 1 view .LVU846
 4041              		@ sp needed
 4042 000e 10BD     		pop	{r4, pc}
 4043              	.L202:
 4044              		.align	2
 4045              	.L201:
 4046 0010 00000000 		.word	_sleep_mode
 4047              		.cfi_endproc
 4048              	.LFE585:
 4050              		.section	.text.get_EX2P_sleep,"ax",%progbits
 4051              		.align	1
 4052              		.global	get_EX2P_sleep
 4053              		.syntax unified
 4054              		.code	16
 4055              		.thumb_func
 4057              	get_EX2P_sleep:
 4058              	.LFB586:
 766:Core/Src/AB1805.c ****   get_sleep();
 4059              		.loc 1 766 1 is_stmt 1 view -0
 4060              		.cfi_startproc
 4061              		@ args = 0, pretend = 0, frame = 0
 4062              		@ frame_needed = 0, uses_anonymous_args = 0
 4063 0000 10B5     		push	{r4, lr}
 4064              	.LCFI80:
 4065              		.cfi_def_cfa_offset 8
 4066              		.cfi_offset 4, -8
 4067              		.cfi_offset 14, -4
 767:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_EX2P_MASK > 5));
 4068              		.loc 1 767 3 view .LVU848
 4069 0002 FFF7FEFF 		bl	get_sleep
 4070              	.LVL302:
 768:Core/Src/AB1805.c **** };
 4071              		.loc 1 768 3 view .LVU849
 768:Core/Src/AB1805.c **** };
 4072              		.loc 1 768 23 is_stmt 0 view .LVU850
 4073 0006 024B     		ldr	r3, .L204
 4074 0008 1B78     		ldrb	r3, [r3]
 4075 000a 0120     		movs	r0, #1
 4076 000c 1840     		ands	r0, r3
 769:Core/Src/AB1805.c **** 
 4077              		.loc 1 769 1 view .LVU851
 4078              		@ sp needed
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 132


 4079 000e 10BD     		pop	{r4, pc}
 4080              	.L205:
 4081              		.align	2
 4082              	.L204:
 4083 0010 00000000 		.word	_sleep_mode
 4084              		.cfi_endproc
 4085              	.LFE586:
 4087              		.section	.text.get_EX1P_sleep,"ax",%progbits
 4088              		.align	1
 4089              		.global	get_EX1P_sleep
 4090              		.syntax unified
 4091              		.code	16
 4092              		.thumb_func
 4094              	get_EX1P_sleep:
 4095              	.LFB587:
 772:Core/Src/AB1805.c ****   get_sleep();
 4096              		.loc 1 772 1 is_stmt 1 view -0
 4097              		.cfi_startproc
 4098              		@ args = 0, pretend = 0, frame = 0
 4099              		@ frame_needed = 0, uses_anonymous_args = 0
 4100 0000 10B5     		push	{r4, lr}
 4101              	.LCFI81:
 4102              		.cfi_def_cfa_offset 8
 4103              		.cfi_offset 4, -8
 4104              		.cfi_offset 14, -4
 773:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_EX1P_MASK > 4));
 4105              		.loc 1 773 3 view .LVU853
 4106 0002 FFF7FEFF 		bl	get_sleep
 4107              	.LVL303:
 774:Core/Src/AB1805.c **** };
 4108              		.loc 1 774 3 view .LVU854
 774:Core/Src/AB1805.c **** };
 4109              		.loc 1 774 23 is_stmt 0 view .LVU855
 4110 0006 024B     		ldr	r3, .L207
 4111 0008 1B78     		ldrb	r3, [r3]
 4112 000a 0120     		movs	r0, #1
 4113 000c 1840     		ands	r0, r3
 775:Core/Src/AB1805.c **** 
 4114              		.loc 1 775 1 view .LVU856
 4115              		@ sp needed
 4116 000e 10BD     		pop	{r4, pc}
 4117              	.L208:
 4118              		.align	2
 4119              	.L207:
 4120 0010 00000000 		.word	_sleep_mode
 4121              		.cfi_endproc
 4122              	.LFE587:
 4124              		.section	.text.get_SLST_sleep,"ax",%progbits
 4125              		.align	1
 4126              		.global	get_SLST_sleep
 4127              		.syntax unified
 4128              		.code	16
 4129              		.thumb_func
 4131              	get_SLST_sleep:
 4132              	.LFB588:
 778:Core/Src/AB1805.c ****   get_sleep();
 4133              		.loc 1 778 1 is_stmt 1 view -0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 133


 4134              		.cfi_startproc
 4135              		@ args = 0, pretend = 0, frame = 0
 4136              		@ frame_needed = 0, uses_anonymous_args = 0
 4137 0000 10B5     		push	{r4, lr}
 4138              	.LCFI82:
 4139              		.cfi_def_cfa_offset 8
 4140              		.cfi_offset 4, -8
 4141              		.cfi_offset 14, -4
 779:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLST_MASK > 3));
 4142              		.loc 1 779 3 view .LVU858
 4143 0002 FFF7FEFF 		bl	get_sleep
 4144              	.LVL304:
 780:Core/Src/AB1805.c **** };
 4145              		.loc 1 780 3 view .LVU859
 780:Core/Src/AB1805.c **** };
 4146              		.loc 1 780 23 is_stmt 0 view .LVU860
 4147 0006 024B     		ldr	r3, .L210
 4148 0008 1B78     		ldrb	r3, [r3]
 4149 000a 0120     		movs	r0, #1
 4150 000c 1840     		ands	r0, r3
 781:Core/Src/AB1805.c **** 
 4151              		.loc 1 781 1 view .LVU861
 4152              		@ sp needed
 4153 000e 10BD     		pop	{r4, pc}
 4154              	.L211:
 4155              		.align	2
 4156              	.L210:
 4157 0010 00000000 		.word	_sleep_mode
 4158              		.cfi_endproc
 4159              	.LFE588:
 4161              		.section	.text.get_SLTO_sleep,"ax",%progbits
 4162              		.align	1
 4163              		.global	get_SLTO_sleep
 4164              		.syntax unified
 4165              		.code	16
 4166              		.thumb_func
 4168              	get_SLTO_sleep:
 4169              	.LFB589:
 784:Core/Src/AB1805.c ****   get_sleep();
 4170              		.loc 1 784 1 is_stmt 1 view -0
 4171              		.cfi_startproc
 4172              		@ args = 0, pretend = 0, frame = 0
 4173              		@ frame_needed = 0, uses_anonymous_args = 0
 4174 0000 10B5     		push	{r4, lr}
 4175              	.LCFI83:
 4176              		.cfi_def_cfa_offset 8
 4177              		.cfi_offset 4, -8
 4178              		.cfi_offset 14, -4
 785:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLTO_MASK));
 4179              		.loc 1 785 3 view .LVU863
 4180 0002 FFF7FEFF 		bl	get_sleep
 4181              	.LVL305:
 786:Core/Src/AB1805.c **** };
 4182              		.loc 1 786 3 view .LVU864
 786:Core/Src/AB1805.c **** };
 4183              		.loc 1 786 23 is_stmt 0 view .LVU865
 4184 0006 024B     		ldr	r3, .L213
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 134


 4185 0008 1B78     		ldrb	r3, [r3]
 4186 000a 0720     		movs	r0, #7
 4187 000c 1840     		ands	r0, r3
 787:Core/Src/AB1805.c **** 
 4188              		.loc 1 787 1 view .LVU866
 4189              		@ sp needed
 4190 000e 10BD     		pop	{r4, pc}
 4191              	.L214:
 4192              		.align	2
 4193              	.L213:
 4194 0010 00000000 		.word	_sleep_mode
 4195              		.cfi_endproc
 4196              	.LFE589:
 4198              		.section	.text.set_sleep,"ax",%progbits
 4199              		.align	1
 4200              		.global	set_sleep
 4201              		.syntax unified
 4202              		.code	16
 4203              		.thumb_func
 4205              	set_sleep:
 4206              	.LVL306:
 4207              	.LFB590:
 790:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, value);
 4208              		.loc 1 790 1 is_stmt 1 view -0
 4209              		.cfi_startproc
 4210              		@ args = 0, pretend = 0, frame = 0
 4211              		@ frame_needed = 0, uses_anonymous_args = 0
 790:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, value);
 4212              		.loc 1 790 1 is_stmt 0 view .LVU868
 4213 0000 10B5     		push	{r4, lr}
 4214              	.LCFI84:
 4215              		.cfi_def_cfa_offset 8
 4216              		.cfi_offset 4, -8
 4217              		.cfi_offset 14, -4
 4218 0002 0100     		movs	r1, r0
 791:Core/Src/AB1805.c ****   _sleep_mode = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4219              		.loc 1 791 3 is_stmt 1 view .LVU869
 4220 0004 1720     		movs	r0, #23
 4221              	.LVL307:
 791:Core/Src/AB1805.c ****   _sleep_mode = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4222              		.loc 1 791 3 is_stmt 0 view .LVU870
 4223 0006 FFF7FEFF 		bl	write_rtc_register
 4224              	.LVL308:
 792:Core/Src/AB1805.c ****   return _sleep_mode;
 4225              		.loc 1 792 3 is_stmt 1 view .LVU871
 792:Core/Src/AB1805.c ****   return _sleep_mode;
 4226              		.loc 1 792 17 is_stmt 0 view .LVU872
 4227 000a 1720     		movs	r0, #23
 4228 000c FFF7FEFF 		bl	read_rtc_register
 4229              	.LVL309:
 792:Core/Src/AB1805.c ****   return _sleep_mode;
 4230              		.loc 1 792 15 view .LVU873
 4231 0010 014B     		ldr	r3, .L216
 4232 0012 1870     		strb	r0, [r3]
 793:Core/Src/AB1805.c **** }
 4233              		.loc 1 793 3 is_stmt 1 view .LVU874
 794:Core/Src/AB1805.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 135


 4234              		.loc 1 794 1 is_stmt 0 view .LVU875
 4235              		@ sp needed
 4236 0014 10BD     		pop	{r4, pc}
 4237              	.L217:
 4238 0016 C046     		.align	2
 4239              	.L216:
 4240 0018 00000000 		.word	_sleep_mode
 4241              		.cfi_endproc
 4242              	.LFE590:
 4244              		.section	.text.set_SLP_sleep,"ax",%progbits
 4245              		.align	1
 4246              		.global	set_SLP_sleep
 4247              		.syntax unified
 4248              		.code	16
 4249              		.thumb_func
 4251              	set_SLP_sleep:
 4252              	.LVL310:
 4253              	.LFB591:
 797:Core/Src/AB1805.c ****   uint8_t c1;
 4254              		.loc 1 797 1 is_stmt 1 view -0
 4255              		.cfi_startproc
 4256              		@ args = 0, pretend = 0, frame = 0
 4257              		@ frame_needed = 0, uses_anonymous_args = 0
 797:Core/Src/AB1805.c ****   uint8_t c1;
 4258              		.loc 1 797 1 is_stmt 0 view .LVU877
 4259 0000 70B5     		push	{r4, r5, r6, lr}
 4260              	.LCFI85:
 4261              		.cfi_def_cfa_offset 16
 4262              		.cfi_offset 4, -16
 4263              		.cfi_offset 5, -12
 4264              		.cfi_offset 6, -8
 4265              		.cfi_offset 14, -4
 4266 0002 0500     		movs	r5, r0
 798:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4267              		.loc 1 798 3 is_stmt 1 view .LVU878
 799:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLP_MASK;
 4268              		.loc 1 799 3 view .LVU879
 799:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLP_MASK;
 4269              		.loc 1 799 8 is_stmt 0 view .LVU880
 4270 0004 1720     		movs	r0, #23
 4271              	.LVL311:
 799:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLP_MASK;
 4272              		.loc 1 799 8 view .LVU881
 4273 0006 FFF7FEFF 		bl	read_rtc_register
 4274              	.LVL312:
 800:Core/Src/AB1805.c ****   if (value)
 4275              		.loc 1 800 3 is_stmt 1 view .LVU882
 800:Core/Src/AB1805.c ****   if (value)
 4276              		.loc 1 800 6 is_stmt 0 view .LVU883
 4277 000a 7F24     		movs	r4, #127
 4278 000c 0440     		ands	r4, r0
 4279              	.LVL313:
 801:Core/Src/AB1805.c ****   {
 4280              		.loc 1 801 3 is_stmt 1 view .LVU884
 801:Core/Src/AB1805.c ****   {
 4281              		.loc 1 801 6 is_stmt 0 view .LVU885
 4282 000e 002D     		cmp	r5, #0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 136


 4283 0010 03D0     		beq	.L219
 803:Core/Src/AB1805.c ****   }
 4284              		.loc 1 803 5 is_stmt 1 view .LVU886
 803:Core/Src/AB1805.c ****   }
 4285              		.loc 1 803 8 is_stmt 0 view .LVU887
 4286 0012 8023     		movs	r3, #128
 4287 0014 5B42     		rsbs	r3, r3, #0
 4288 0016 1C43     		orrs	r4, r3
 4289              	.LVL314:
 803:Core/Src/AB1805.c ****   }
 4290              		.loc 1 803 8 view .LVU888
 4291 0018 E4B2     		uxtb	r4, r4
 4292              	.LVL315:
 4293              	.L219:
 805:Core/Src/AB1805.c ****   return c1;
 4294              		.loc 1 805 3 is_stmt 1 view .LVU889
 4295 001a 2100     		movs	r1, r4
 4296 001c 1720     		movs	r0, #23
 4297 001e FFF7FEFF 		bl	write_rtc_register
 4298              	.LVL316:
 806:Core/Src/AB1805.c **** }
 4299              		.loc 1 806 3 view .LVU890
 807:Core/Src/AB1805.c **** 
 4300              		.loc 1 807 1 is_stmt 0 view .LVU891
 4301 0022 2000     		movs	r0, r4
 4302              		@ sp needed
 4303              	.LVL317:
 807:Core/Src/AB1805.c **** 
 4304              		.loc 1 807 1 view .LVU892
 4305 0024 70BD     		pop	{r4, r5, r6, pc}
 4306              		.cfi_endproc
 4307              	.LFE591:
 4309              		.section	.text.set_SLRES_sleep,"ax",%progbits
 4310              		.align	1
 4311              		.global	set_SLRES_sleep
 4312              		.syntax unified
 4313              		.code	16
 4314              		.thumb_func
 4316              	set_SLRES_sleep:
 4317              	.LVL318:
 4318              	.LFB592:
 810:Core/Src/AB1805.c ****   uint8_t c1;
 4319              		.loc 1 810 1 is_stmt 1 view -0
 4320              		.cfi_startproc
 4321              		@ args = 0, pretend = 0, frame = 0
 4322              		@ frame_needed = 0, uses_anonymous_args = 0
 810:Core/Src/AB1805.c ****   uint8_t c1;
 4323              		.loc 1 810 1 is_stmt 0 view .LVU894
 4324 0000 70B5     		push	{r4, r5, r6, lr}
 4325              	.LCFI86:
 4326              		.cfi_def_cfa_offset 16
 4327              		.cfi_offset 4, -16
 4328              		.cfi_offset 5, -12
 4329              		.cfi_offset 6, -8
 4330              		.cfi_offset 14, -4
 4331 0002 0500     		movs	r5, r0
 811:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 137


 4332              		.loc 1 811 3 is_stmt 1 view .LVU895
 812:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLRES_MASK;
 4333              		.loc 1 812 3 view .LVU896
 812:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLRES_MASK;
 4334              		.loc 1 812 8 is_stmt 0 view .LVU897
 4335 0004 1720     		movs	r0, #23
 4336              	.LVL319:
 812:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLRES_MASK;
 4337              		.loc 1 812 8 view .LVU898
 4338 0006 FFF7FEFF 		bl	read_rtc_register
 4339              	.LVL320:
 813:Core/Src/AB1805.c ****   if (value)
 4340              		.loc 1 813 3 is_stmt 1 view .LVU899
 813:Core/Src/AB1805.c ****   if (value)
 4341              		.loc 1 813 6 is_stmt 0 view .LVU900
 4342 000a 4023     		movs	r3, #64
 4343 000c 9843     		bics	r0, r3
 4344              	.LVL321:
 813:Core/Src/AB1805.c ****   if (value)
 4345              		.loc 1 813 6 view .LVU901
 4346 000e C4B2     		uxtb	r4, r0
 4347              	.LVL322:
 814:Core/Src/AB1805.c ****   {
 4348              		.loc 1 814 3 is_stmt 1 view .LVU902
 814:Core/Src/AB1805.c ****   {
 4349              		.loc 1 814 6 is_stmt 0 view .LVU903
 4350 0010 002D     		cmp	r5, #0
 4351 0012 01D0     		beq	.L221
 816:Core/Src/AB1805.c ****   }
 4352              		.loc 1 816 5 is_stmt 1 view .LVU904
 816:Core/Src/AB1805.c ****   }
 4353              		.loc 1 816 8 is_stmt 0 view .LVU905
 4354 0014 1C43     		orrs	r4, r3
 4355              	.LVL323:
 816:Core/Src/AB1805.c ****   }
 4356              		.loc 1 816 8 view .LVU906
 4357 0016 E4B2     		uxtb	r4, r4
 4358              	.LVL324:
 4359              	.L221:
 818:Core/Src/AB1805.c ****   return c1;
 4360              		.loc 1 818 3 is_stmt 1 view .LVU907
 4361 0018 2100     		movs	r1, r4
 4362 001a 1720     		movs	r0, #23
 4363 001c FFF7FEFF 		bl	write_rtc_register
 4364              	.LVL325:
 819:Core/Src/AB1805.c **** }
 4365              		.loc 1 819 3 view .LVU908
 820:Core/Src/AB1805.c **** 
 4366              		.loc 1 820 1 is_stmt 0 view .LVU909
 4367 0020 2000     		movs	r0, r4
 4368              		@ sp needed
 4369              	.LVL326:
 820:Core/Src/AB1805.c **** 
 4370              		.loc 1 820 1 view .LVU910
 4371 0022 70BD     		pop	{r4, r5, r6, pc}
 4372              		.cfi_endproc
 4373              	.LFE592:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 138


 4375              		.section	.text.set_EX2P_sleep,"ax",%progbits
 4376              		.align	1
 4377              		.global	set_EX2P_sleep
 4378              		.syntax unified
 4379              		.code	16
 4380              		.thumb_func
 4382              	set_EX2P_sleep:
 4383              	.LVL327:
 4384              	.LFB593:
 823:Core/Src/AB1805.c ****   uint8_t c1;
 4385              		.loc 1 823 1 is_stmt 1 view -0
 4386              		.cfi_startproc
 4387              		@ args = 0, pretend = 0, frame = 0
 4388              		@ frame_needed = 0, uses_anonymous_args = 0
 823:Core/Src/AB1805.c ****   uint8_t c1;
 4389              		.loc 1 823 1 is_stmt 0 view .LVU912
 4390 0000 70B5     		push	{r4, r5, r6, lr}
 4391              	.LCFI87:
 4392              		.cfi_def_cfa_offset 16
 4393              		.cfi_offset 4, -16
 4394              		.cfi_offset 5, -12
 4395              		.cfi_offset 6, -8
 4396              		.cfi_offset 14, -4
 4397 0002 0500     		movs	r5, r0
 824:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4398              		.loc 1 824 3 is_stmt 1 view .LVU913
 825:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX2P_MASK;
 4399              		.loc 1 825 3 view .LVU914
 825:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX2P_MASK;
 4400              		.loc 1 825 8 is_stmt 0 view .LVU915
 4401 0004 1720     		movs	r0, #23
 4402              	.LVL328:
 825:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX2P_MASK;
 4403              		.loc 1 825 8 view .LVU916
 4404 0006 FFF7FEFF 		bl	read_rtc_register
 4405              	.LVL329:
 826:Core/Src/AB1805.c ****   if (value)
 4406              		.loc 1 826 3 is_stmt 1 view .LVU917
 826:Core/Src/AB1805.c ****   if (value)
 4407              		.loc 1 826 6 is_stmt 0 view .LVU918
 4408 000a 2023     		movs	r3, #32
 4409 000c 9843     		bics	r0, r3
 4410              	.LVL330:
 826:Core/Src/AB1805.c ****   if (value)
 4411              		.loc 1 826 6 view .LVU919
 4412 000e C4B2     		uxtb	r4, r0
 4413              	.LVL331:
 827:Core/Src/AB1805.c ****   {
 4414              		.loc 1 827 3 is_stmt 1 view .LVU920
 827:Core/Src/AB1805.c ****   {
 4415              		.loc 1 827 6 is_stmt 0 view .LVU921
 4416 0010 002D     		cmp	r5, #0
 4417 0012 01D0     		beq	.L223
 829:Core/Src/AB1805.c ****   }
 4418              		.loc 1 829 5 is_stmt 1 view .LVU922
 829:Core/Src/AB1805.c ****   }
 4419              		.loc 1 829 8 is_stmt 0 view .LVU923
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 139


 4420 0014 1C43     		orrs	r4, r3
 4421              	.LVL332:
 829:Core/Src/AB1805.c ****   }
 4422              		.loc 1 829 8 view .LVU924
 4423 0016 E4B2     		uxtb	r4, r4
 4424              	.LVL333:
 4425              	.L223:
 831:Core/Src/AB1805.c ****   return c1;
 4426              		.loc 1 831 3 is_stmt 1 view .LVU925
 4427 0018 2100     		movs	r1, r4
 4428 001a 1720     		movs	r0, #23
 4429 001c FFF7FEFF 		bl	write_rtc_register
 4430              	.LVL334:
 832:Core/Src/AB1805.c **** }
 4431              		.loc 1 832 3 view .LVU926
 833:Core/Src/AB1805.c **** 
 4432              		.loc 1 833 1 is_stmt 0 view .LVU927
 4433 0020 2000     		movs	r0, r4
 4434              		@ sp needed
 4435              	.LVL335:
 833:Core/Src/AB1805.c **** 
 4436              		.loc 1 833 1 view .LVU928
 4437 0022 70BD     		pop	{r4, r5, r6, pc}
 4438              		.cfi_endproc
 4439              	.LFE593:
 4441              		.section	.text.set_EX1P_sleep,"ax",%progbits
 4442              		.align	1
 4443              		.global	set_EX1P_sleep
 4444              		.syntax unified
 4445              		.code	16
 4446              		.thumb_func
 4448              	set_EX1P_sleep:
 4449              	.LVL336:
 4450              	.LFB594:
 836:Core/Src/AB1805.c ****   uint8_t c1;
 4451              		.loc 1 836 1 is_stmt 1 view -0
 4452              		.cfi_startproc
 4453              		@ args = 0, pretend = 0, frame = 0
 4454              		@ frame_needed = 0, uses_anonymous_args = 0
 836:Core/Src/AB1805.c ****   uint8_t c1;
 4455              		.loc 1 836 1 is_stmt 0 view .LVU930
 4456 0000 70B5     		push	{r4, r5, r6, lr}
 4457              	.LCFI88:
 4458              		.cfi_def_cfa_offset 16
 4459              		.cfi_offset 4, -16
 4460              		.cfi_offset 5, -12
 4461              		.cfi_offset 6, -8
 4462              		.cfi_offset 14, -4
 4463 0002 0500     		movs	r5, r0
 837:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4464              		.loc 1 837 3 is_stmt 1 view .LVU931
 838:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX1P_MASK;
 4465              		.loc 1 838 3 view .LVU932
 838:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX1P_MASK;
 4466              		.loc 1 838 8 is_stmt 0 view .LVU933
 4467 0004 1720     		movs	r0, #23
 4468              	.LVL337:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 140


 838:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX1P_MASK;
 4469              		.loc 1 838 8 view .LVU934
 4470 0006 FFF7FEFF 		bl	read_rtc_register
 4471              	.LVL338:
 839:Core/Src/AB1805.c ****   if (value)
 4472              		.loc 1 839 3 is_stmt 1 view .LVU935
 839:Core/Src/AB1805.c ****   if (value)
 4473              		.loc 1 839 6 is_stmt 0 view .LVU936
 4474 000a 1023     		movs	r3, #16
 4475 000c 9843     		bics	r0, r3
 4476              	.LVL339:
 839:Core/Src/AB1805.c ****   if (value)
 4477              		.loc 1 839 6 view .LVU937
 4478 000e C4B2     		uxtb	r4, r0
 4479              	.LVL340:
 840:Core/Src/AB1805.c ****   {
 4480              		.loc 1 840 3 is_stmt 1 view .LVU938
 840:Core/Src/AB1805.c ****   {
 4481              		.loc 1 840 6 is_stmt 0 view .LVU939
 4482 0010 002D     		cmp	r5, #0
 4483 0012 01D0     		beq	.L225
 842:Core/Src/AB1805.c ****   }
 4484              		.loc 1 842 5 is_stmt 1 view .LVU940
 842:Core/Src/AB1805.c ****   }
 4485              		.loc 1 842 8 is_stmt 0 view .LVU941
 4486 0014 1C43     		orrs	r4, r3
 4487              	.LVL341:
 842:Core/Src/AB1805.c ****   }
 4488              		.loc 1 842 8 view .LVU942
 4489 0016 E4B2     		uxtb	r4, r4
 4490              	.LVL342:
 4491              	.L225:
 844:Core/Src/AB1805.c ****   return c1;
 4492              		.loc 1 844 3 is_stmt 1 view .LVU943
 4493 0018 2100     		movs	r1, r4
 4494 001a 1720     		movs	r0, #23
 4495 001c FFF7FEFF 		bl	write_rtc_register
 4496              	.LVL343:
 845:Core/Src/AB1805.c **** }
 4497              		.loc 1 845 3 view .LVU944
 846:Core/Src/AB1805.c **** 
 4498              		.loc 1 846 1 is_stmt 0 view .LVU945
 4499 0020 2000     		movs	r0, r4
 4500              		@ sp needed
 4501              	.LVL344:
 846:Core/Src/AB1805.c **** 
 4502              		.loc 1 846 1 view .LVU946
 4503 0022 70BD     		pop	{r4, r5, r6, pc}
 4504              		.cfi_endproc
 4505              	.LFE594:
 4507              		.section	.text.clean_SLST_sleep,"ax",%progbits
 4508              		.align	1
 4509              		.global	clean_SLST_sleep
 4510              		.syntax unified
 4511              		.code	16
 4512              		.thumb_func
 4514              	clean_SLST_sleep:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 141


 4515              	.LFB595:
 849:Core/Src/AB1805.c ****   uint8_t c1;
 4516              		.loc 1 849 1 is_stmt 1 view -0
 4517              		.cfi_startproc
 4518              		@ args = 0, pretend = 0, frame = 0
 4519              		@ frame_needed = 0, uses_anonymous_args = 0
 4520 0000 10B5     		push	{r4, lr}
 4521              	.LCFI89:
 4522              		.cfi_def_cfa_offset 8
 4523              		.cfi_offset 4, -8
 4524              		.cfi_offset 14, -4
 850:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4525              		.loc 1 850 3 view .LVU948
 851:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLST_MASK;
 4526              		.loc 1 851 3 view .LVU949
 851:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLST_MASK;
 4527              		.loc 1 851 8 is_stmt 0 view .LVU950
 4528 0002 1720     		movs	r0, #23
 4529 0004 FFF7FEFF 		bl	read_rtc_register
 4530              	.LVL345:
 852:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 4531              		.loc 1 852 3 is_stmt 1 view .LVU951
 852:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 4532              		.loc 1 852 6 is_stmt 0 view .LVU952
 4533 0008 0823     		movs	r3, #8
 4534 000a 9843     		bics	r0, r3
 4535              	.LVL346:
 852:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 4536              		.loc 1 852 6 view .LVU953
 4537 000c C4B2     		uxtb	r4, r0
 4538              	.LVL347:
 853:Core/Src/AB1805.c ****   return c1;
 4539              		.loc 1 853 3 is_stmt 1 view .LVU954
 4540 000e 2100     		movs	r1, r4
 4541 0010 1720     		movs	r0, #23
 4542 0012 FFF7FEFF 		bl	write_rtc_register
 4543              	.LVL348:
 854:Core/Src/AB1805.c **** }
 4544              		.loc 1 854 3 view .LVU955
 855:Core/Src/AB1805.c **** 
 4545              		.loc 1 855 1 is_stmt 0 view .LVU956
 4546 0016 2000     		movs	r0, r4
 4547              		@ sp needed
 4548              	.LVL349:
 855:Core/Src/AB1805.c **** 
 4549              		.loc 1 855 1 view .LVU957
 4550 0018 10BD     		pop	{r4, pc}
 4551              		.cfi_endproc
 4552              	.LFE595:
 4554              		.section	.text.set_SLTO_sleep,"ax",%progbits
 4555              		.align	1
 4556              		.global	set_SLTO_sleep
 4557              		.syntax unified
 4558              		.code	16
 4559              		.thumb_func
 4561              	set_SLTO_sleep:
 4562              	.LVL350:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 142


 4563              	.LFB596:
 858:Core/Src/AB1805.c ****   uint8_t c1;
 4564              		.loc 1 858 1 is_stmt 1 view -0
 4565              		.cfi_startproc
 4566              		@ args = 0, pretend = 0, frame = 0
 4567              		@ frame_needed = 0, uses_anonymous_args = 0
 858:Core/Src/AB1805.c ****   uint8_t c1;
 4568              		.loc 1 858 1 is_stmt 0 view .LVU959
 4569 0000 70B5     		push	{r4, r5, r6, lr}
 4570              	.LCFI90:
 4571              		.cfi_def_cfa_offset 16
 4572              		.cfi_offset 4, -16
 4573              		.cfi_offset 5, -12
 4574              		.cfi_offset 6, -8
 4575              		.cfi_offset 14, -4
 4576 0002 0500     		movs	r5, r0
 859:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4577              		.loc 1 859 3 is_stmt 1 view .LVU960
 860:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLTO_MASK;
 4578              		.loc 1 860 3 view .LVU961
 860:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLTO_MASK;
 4579              		.loc 1 860 8 is_stmt 0 view .LVU962
 4580 0004 1720     		movs	r0, #23
 4581              	.LVL351:
 860:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLTO_MASK;
 4582              		.loc 1 860 8 view .LVU963
 4583 0006 FFF7FEFF 		bl	read_rtc_register
 4584              	.LVL352:
 861:Core/Src/AB1805.c ****   c1 |= value;
 4585              		.loc 1 861 3 is_stmt 1 view .LVU964
 861:Core/Src/AB1805.c ****   c1 |= value;
 4586              		.loc 1 861 6 is_stmt 0 view .LVU965
 4587 000a 0723     		movs	r3, #7
 4588 000c 9843     		bics	r0, r3
 4589              	.LVL353:
 861:Core/Src/AB1805.c ****   c1 |= value;
 4590              		.loc 1 861 6 view .LVU966
 4591 000e C4B2     		uxtb	r4, r0
 4592              	.LVL354:
 862:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 4593              		.loc 1 862 3 is_stmt 1 view .LVU967
 862:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 4594              		.loc 1 862 6 is_stmt 0 view .LVU968
 4595 0010 2C43     		orrs	r4, r5
 4596              	.LVL355:
 863:Core/Src/AB1805.c ****   return c1;
 4597              		.loc 1 863 3 is_stmt 1 view .LVU969
 4598 0012 2100     		movs	r1, r4
 4599 0014 1720     		movs	r0, #23
 4600 0016 FFF7FEFF 		bl	write_rtc_register
 4601              	.LVL356:
 864:Core/Src/AB1805.c **** }
 4602              		.loc 1 864 3 view .LVU970
 865:Core/Src/AB1805.c **** 
 4603              		.loc 1 865 1 is_stmt 0 view .LVU971
 4604 001a 2000     		movs	r0, r4
 4605              		@ sp needed
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 143


 4606              	.LVL357:
 865:Core/Src/AB1805.c **** 
 4607              		.loc 1 865 1 view .LVU972
 4608 001c 70BD     		pop	{r4, r5, r6, pc}
 4609              		.cfi_endproc
 4610              	.LFE596:
 4612              		.section	.text.get_time_control,"ax",%progbits
 4613              		.align	1
 4614              		.global	get_time_control
 4615              		.syntax unified
 4616              		.code	16
 4617              		.thumb_func
 4619              	get_time_control:
 4620              	.LFB597:
 869:Core/Src/AB1805.c ****   _timer_control_mode = read_rtc_register(TIMER_CONTROL_REGISTER);
 4621              		.loc 1 869 1 is_stmt 1 view -0
 4622              		.cfi_startproc
 4623              		@ args = 0, pretend = 0, frame = 0
 4624              		@ frame_needed = 0, uses_anonymous_args = 0
 4625 0000 10B5     		push	{r4, lr}
 4626              	.LCFI91:
 4627              		.cfi_def_cfa_offset 8
 4628              		.cfi_offset 4, -8
 4629              		.cfi_offset 14, -4
 870:Core/Src/AB1805.c ****   return _timer_control_mode;
 4630              		.loc 1 870 3 view .LVU974
 870:Core/Src/AB1805.c ****   return _timer_control_mode;
 4631              		.loc 1 870 25 is_stmt 0 view .LVU975
 4632 0002 1820     		movs	r0, #24
 4633 0004 FFF7FEFF 		bl	read_rtc_register
 4634              	.LVL358:
 870:Core/Src/AB1805.c ****   return _timer_control_mode;
 4635              		.loc 1 870 23 view .LVU976
 4636 0008 014B     		ldr	r3, .L229
 4637 000a 1870     		strb	r0, [r3]
 871:Core/Src/AB1805.c **** }
 4638              		.loc 1 871 3 is_stmt 1 view .LVU977
 872:Core/Src/AB1805.c **** 
 4639              		.loc 1 872 1 is_stmt 0 view .LVU978
 4640              		@ sp needed
 4641 000c 10BD     		pop	{r4, pc}
 4642              	.L230:
 4643 000e C046     		.align	2
 4644              	.L229:
 4645 0010 00000000 		.word	_timer_control_mode
 4646              		.cfi_endproc
 4647              	.LFE597:
 4649              		.section	.text.get_TE_time_control,"ax",%progbits
 4650              		.align	1
 4651              		.global	get_TE_time_control
 4652              		.syntax unified
 4653              		.code	16
 4654              		.thumb_func
 4656              	get_TE_time_control:
 4657              	.LFB598:
 875:Core/Src/AB1805.c ****   get_time_control();
 4658              		.loc 1 875 1 is_stmt 1 view -0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 144


 4659              		.cfi_startproc
 4660              		@ args = 0, pretend = 0, frame = 0
 4661              		@ frame_needed = 0, uses_anonymous_args = 0
 4662 0000 10B5     		push	{r4, lr}
 4663              	.LCFI92:
 4664              		.cfi_def_cfa_offset 8
 4665              		.cfi_offset 4, -8
 4666              		.cfi_offset 14, -4
 876:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TE_MASK > 7));
 4667              		.loc 1 876 3 view .LVU980
 4668 0002 FFF7FEFF 		bl	get_time_control
 4669              	.LVL359:
 877:Core/Src/AB1805.c **** };
 4670              		.loc 1 877 3 view .LVU981
 877:Core/Src/AB1805.c **** };
 4671              		.loc 1 877 31 is_stmt 0 view .LVU982
 4672 0006 024B     		ldr	r3, .L232
 4673 0008 1B78     		ldrb	r3, [r3]
 4674 000a 0120     		movs	r0, #1
 4675 000c 1840     		ands	r0, r3
 878:Core/Src/AB1805.c **** 
 4676              		.loc 1 878 1 view .LVU983
 4677              		@ sp needed
 4678 000e 10BD     		pop	{r4, pc}
 4679              	.L233:
 4680              		.align	2
 4681              	.L232:
 4682 0010 00000000 		.word	_timer_control_mode
 4683              		.cfi_endproc
 4684              	.LFE598:
 4686              		.section	.text.get_TM_time_control,"ax",%progbits
 4687              		.align	1
 4688              		.global	get_TM_time_control
 4689              		.syntax unified
 4690              		.code	16
 4691              		.thumb_func
 4693              	get_TM_time_control:
 4694              	.LFB599:
 881:Core/Src/AB1805.c ****   get_time_control();
 4695              		.loc 1 881 1 is_stmt 1 view -0
 4696              		.cfi_startproc
 4697              		@ args = 0, pretend = 0, frame = 0
 4698              		@ frame_needed = 0, uses_anonymous_args = 0
 4699 0000 10B5     		push	{r4, lr}
 4700              	.LCFI93:
 4701              		.cfi_def_cfa_offset 8
 4702              		.cfi_offset 4, -8
 4703              		.cfi_offset 14, -4
 882:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TM_MASK > 6));
 4704              		.loc 1 882 3 view .LVU985
 4705 0002 FFF7FEFF 		bl	get_time_control
 4706              	.LVL360:
 883:Core/Src/AB1805.c **** };
 4707              		.loc 1 883 3 view .LVU986
 883:Core/Src/AB1805.c **** };
 4708              		.loc 1 883 31 is_stmt 0 view .LVU987
 4709 0006 024B     		ldr	r3, .L235
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 145


 4710 0008 1B78     		ldrb	r3, [r3]
 4711 000a 0120     		movs	r0, #1
 4712 000c 1840     		ands	r0, r3
 884:Core/Src/AB1805.c **** 
 4713              		.loc 1 884 1 view .LVU988
 4714              		@ sp needed
 4715 000e 10BD     		pop	{r4, pc}
 4716              	.L236:
 4717              		.align	2
 4718              	.L235:
 4719 0010 00000000 		.word	_timer_control_mode
 4720              		.cfi_endproc
 4721              	.LFE599:
 4723              		.section	.text.get_TRPT_time_control,"ax",%progbits
 4724              		.align	1
 4725              		.global	get_TRPT_time_control
 4726              		.syntax unified
 4727              		.code	16
 4728              		.thumb_func
 4730              	get_TRPT_time_control:
 4731              	.LFB600:
 887:Core/Src/AB1805.c ****   get_time_control();
 4732              		.loc 1 887 1 is_stmt 1 view -0
 4733              		.cfi_startproc
 4734              		@ args = 0, pretend = 0, frame = 0
 4735              		@ frame_needed = 0, uses_anonymous_args = 0
 4736 0000 10B5     		push	{r4, lr}
 4737              	.LCFI94:
 4738              		.cfi_def_cfa_offset 8
 4739              		.cfi_offset 4, -8
 4740              		.cfi_offset 14, -4
 888:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TRPT_MASK > 5));
 4741              		.loc 1 888 3 view .LVU990
 4742 0002 FFF7FEFF 		bl	get_time_control
 4743              	.LVL361:
 889:Core/Src/AB1805.c **** };
 4744              		.loc 1 889 3 view .LVU991
 889:Core/Src/AB1805.c **** };
 4745              		.loc 1 889 31 is_stmt 0 view .LVU992
 4746 0006 024B     		ldr	r3, .L238
 4747 0008 1B78     		ldrb	r3, [r3]
 4748 000a 0120     		movs	r0, #1
 4749 000c 1840     		ands	r0, r3
 890:Core/Src/AB1805.c **** 
 4750              		.loc 1 890 1 view .LVU993
 4751              		@ sp needed
 4752 000e 10BD     		pop	{r4, pc}
 4753              	.L239:
 4754              		.align	2
 4755              	.L238:
 4756 0010 00000000 		.word	_timer_control_mode
 4757              		.cfi_endproc
 4758              	.LFE600:
 4760              		.section	.text.get_RPT_time_control,"ax",%progbits
 4761              		.align	1
 4762              		.global	get_RPT_time_control
 4763              		.syntax unified
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 146


 4764              		.code	16
 4765              		.thumb_func
 4767              	get_RPT_time_control:
 4768              	.LFB601:
 893:Core/Src/AB1805.c ****   get_time_control();
 4769              		.loc 1 893 1 is_stmt 1 view -0
 4770              		.cfi_startproc
 4771              		@ args = 0, pretend = 0, frame = 0
 4772              		@ frame_needed = 0, uses_anonymous_args = 0
 4773 0000 10B5     		push	{r4, lr}
 4774              	.LCFI95:
 4775              		.cfi_def_cfa_offset 8
 4776              		.cfi_offset 4, -8
 4777              		.cfi_offset 14, -4
 894:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_RPT_MASK > 2));
 4778              		.loc 1 894 3 view .LVU995
 4779 0002 FFF7FEFF 		bl	get_time_control
 4780              	.LVL362:
 895:Core/Src/AB1805.c **** };
 4781              		.loc 1 895 3 view .LVU996
 895:Core/Src/AB1805.c **** };
 4782              		.loc 1 895 31 is_stmt 0 view .LVU997
 4783 0006 024B     		ldr	r3, .L241
 4784 0008 1B78     		ldrb	r3, [r3]
 4785 000a 0120     		movs	r0, #1
 4786 000c 1840     		ands	r0, r3
 896:Core/Src/AB1805.c **** 
 4787              		.loc 1 896 1 view .LVU998
 4788              		@ sp needed
 4789 000e 10BD     		pop	{r4, pc}
 4790              	.L242:
 4791              		.align	2
 4792              	.L241:
 4793 0010 00000000 		.word	_timer_control_mode
 4794              		.cfi_endproc
 4795              	.LFE601:
 4797              		.section	.text.get_TFS_time_control,"ax",%progbits
 4798              		.align	1
 4799              		.global	get_TFS_time_control
 4800              		.syntax unified
 4801              		.code	16
 4802              		.thumb_func
 4804              	get_TFS_time_control:
 4805              	.LFB602:
 899:Core/Src/AB1805.c ****   get_time_control();
 4806              		.loc 1 899 1 is_stmt 1 view -0
 4807              		.cfi_startproc
 4808              		@ args = 0, pretend = 0, frame = 0
 4809              		@ frame_needed = 0, uses_anonymous_args = 0
 4810 0000 10B5     		push	{r4, lr}
 4811              	.LCFI96:
 4812              		.cfi_def_cfa_offset 8
 4813              		.cfi_offset 4, -8
 4814              		.cfi_offset 14, -4
 900:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TFS_MASK));
 4815              		.loc 1 900 3 view .LVU1000
 4816 0002 FFF7FEFF 		bl	get_time_control
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 147


 4817              	.LVL363:
 901:Core/Src/AB1805.c **** };
 4818              		.loc 1 901 3 view .LVU1001
 901:Core/Src/AB1805.c **** };
 4819              		.loc 1 901 31 is_stmt 0 view .LVU1002
 4820 0006 024B     		ldr	r3, .L244
 4821 0008 1B78     		ldrb	r3, [r3]
 4822 000a 0320     		movs	r0, #3
 4823 000c 1840     		ands	r0, r3
 902:Core/Src/AB1805.c **** 
 4824              		.loc 1 902 1 view .LVU1003
 4825              		@ sp needed
 4826 000e 10BD     		pop	{r4, pc}
 4827              	.L245:
 4828              		.align	2
 4829              	.L244:
 4830 0010 00000000 		.word	_timer_control_mode
 4831              		.cfi_endproc
 4832              	.LFE602:
 4834              		.section	.text.set_time_control,"ax",%progbits
 4835              		.align	1
 4836              		.global	set_time_control
 4837              		.syntax unified
 4838              		.code	16
 4839              		.thumb_func
 4841              	set_time_control:
 4842              	.LVL364:
 4843              	.LFB603:
 905:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, value);
 4844              		.loc 1 905 1 is_stmt 1 view -0
 4845              		.cfi_startproc
 4846              		@ args = 0, pretend = 0, frame = 0
 4847              		@ frame_needed = 0, uses_anonymous_args = 0
 905:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, value);
 4848              		.loc 1 905 1 is_stmt 0 view .LVU1005
 4849 0000 10B5     		push	{r4, lr}
 4850              	.LCFI97:
 4851              		.cfi_def_cfa_offset 8
 4852              		.cfi_offset 4, -8
 4853              		.cfi_offset 14, -4
 4854 0002 0100     		movs	r1, r0
 906:Core/Src/AB1805.c ****   _timer_control_mode = read_rtc_register(TIMER_CONTROL_REGISTER);
 4855              		.loc 1 906 3 is_stmt 1 view .LVU1006
 4856 0004 1820     		movs	r0, #24
 4857              	.LVL365:
 906:Core/Src/AB1805.c ****   _timer_control_mode = read_rtc_register(TIMER_CONTROL_REGISTER);
 4858              		.loc 1 906 3 is_stmt 0 view .LVU1007
 4859 0006 FFF7FEFF 		bl	write_rtc_register
 4860              	.LVL366:
 907:Core/Src/AB1805.c ****   return _timer_control_mode;
 4861              		.loc 1 907 3 is_stmt 1 view .LVU1008
 907:Core/Src/AB1805.c ****   return _timer_control_mode;
 4862              		.loc 1 907 25 is_stmt 0 view .LVU1009
 4863 000a 1820     		movs	r0, #24
 4864 000c FFF7FEFF 		bl	read_rtc_register
 4865              	.LVL367:
 907:Core/Src/AB1805.c ****   return _timer_control_mode;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 148


 4866              		.loc 1 907 23 view .LVU1010
 4867 0010 014B     		ldr	r3, .L247
 4868 0012 1870     		strb	r0, [r3]
 908:Core/Src/AB1805.c **** }
 4869              		.loc 1 908 3 is_stmt 1 view .LVU1011
 909:Core/Src/AB1805.c **** 
 4870              		.loc 1 909 1 is_stmt 0 view .LVU1012
 4871              		@ sp needed
 4872 0014 10BD     		pop	{r4, pc}
 4873              	.L248:
 4874 0016 C046     		.align	2
 4875              	.L247:
 4876 0018 00000000 		.word	_timer_control_mode
 4877              		.cfi_endproc
 4878              	.LFE603:
 4880              		.section	.text.set_TE_time_control,"ax",%progbits
 4881              		.align	1
 4882              		.global	set_TE_time_control
 4883              		.syntax unified
 4884              		.code	16
 4885              		.thumb_func
 4887              	set_TE_time_control:
 4888              	.LVL368:
 4889              	.LFB604:
 912:Core/Src/AB1805.c ****   uint8_t c1;
 4890              		.loc 1 912 1 is_stmt 1 view -0
 4891              		.cfi_startproc
 4892              		@ args = 0, pretend = 0, frame = 0
 4893              		@ frame_needed = 0, uses_anonymous_args = 0
 912:Core/Src/AB1805.c ****   uint8_t c1;
 4894              		.loc 1 912 1 is_stmt 0 view .LVU1014
 4895 0000 70B5     		push	{r4, r5, r6, lr}
 4896              	.LCFI98:
 4897              		.cfi_def_cfa_offset 16
 4898              		.cfi_offset 4, -16
 4899              		.cfi_offset 5, -12
 4900              		.cfi_offset 6, -8
 4901              		.cfi_offset 14, -4
 4902 0002 0500     		movs	r5, r0
 913:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 4903              		.loc 1 913 3 is_stmt 1 view .LVU1015
 914:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TE_MASK;
 4904              		.loc 1 914 3 view .LVU1016
 914:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TE_MASK;
 4905              		.loc 1 914 8 is_stmt 0 view .LVU1017
 4906 0004 1820     		movs	r0, #24
 4907              	.LVL369:
 914:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TE_MASK;
 4908              		.loc 1 914 8 view .LVU1018
 4909 0006 FFF7FEFF 		bl	read_rtc_register
 4910              	.LVL370:
 915:Core/Src/AB1805.c ****   if (value)
 4911              		.loc 1 915 3 is_stmt 1 view .LVU1019
 915:Core/Src/AB1805.c ****   if (value)
 4912              		.loc 1 915 6 is_stmt 0 view .LVU1020
 4913 000a 7F24     		movs	r4, #127
 4914 000c 0440     		ands	r4, r0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 149


 4915              	.LVL371:
 916:Core/Src/AB1805.c ****   {
 4916              		.loc 1 916 3 is_stmt 1 view .LVU1021
 916:Core/Src/AB1805.c ****   {
 4917              		.loc 1 916 6 is_stmt 0 view .LVU1022
 4918 000e 002D     		cmp	r5, #0
 4919 0010 03D0     		beq	.L250
 918:Core/Src/AB1805.c ****   }
 4920              		.loc 1 918 5 is_stmt 1 view .LVU1023
 918:Core/Src/AB1805.c ****   }
 4921              		.loc 1 918 8 is_stmt 0 view .LVU1024
 4922 0012 8023     		movs	r3, #128
 4923 0014 5B42     		rsbs	r3, r3, #0
 4924 0016 1C43     		orrs	r4, r3
 4925              	.LVL372:
 918:Core/Src/AB1805.c ****   }
 4926              		.loc 1 918 8 view .LVU1025
 4927 0018 E4B2     		uxtb	r4, r4
 4928              	.LVL373:
 4929              	.L250:
 920:Core/Src/AB1805.c ****   return c1;
 4930              		.loc 1 920 3 is_stmt 1 view .LVU1026
 4931 001a 2100     		movs	r1, r4
 4932 001c 1820     		movs	r0, #24
 4933 001e FFF7FEFF 		bl	write_rtc_register
 4934              	.LVL374:
 921:Core/Src/AB1805.c **** }
 4935              		.loc 1 921 3 view .LVU1027
 922:Core/Src/AB1805.c **** 
 4936              		.loc 1 922 1 is_stmt 0 view .LVU1028
 4937 0022 2000     		movs	r0, r4
 4938              		@ sp needed
 4939              	.LVL375:
 922:Core/Src/AB1805.c **** 
 4940              		.loc 1 922 1 view .LVU1029
 4941 0024 70BD     		pop	{r4, r5, r6, pc}
 4942              		.cfi_endproc
 4943              	.LFE604:
 4945              		.section	.text.set_TM_time_control,"ax",%progbits
 4946              		.align	1
 4947              		.global	set_TM_time_control
 4948              		.syntax unified
 4949              		.code	16
 4950              		.thumb_func
 4952              	set_TM_time_control:
 4953              	.LVL376:
 4954              	.LFB605:
 925:Core/Src/AB1805.c ****   uint8_t c1;
 4955              		.loc 1 925 1 is_stmt 1 view -0
 4956              		.cfi_startproc
 4957              		@ args = 0, pretend = 0, frame = 0
 4958              		@ frame_needed = 0, uses_anonymous_args = 0
 925:Core/Src/AB1805.c ****   uint8_t c1;
 4959              		.loc 1 925 1 is_stmt 0 view .LVU1031
 4960 0000 70B5     		push	{r4, r5, r6, lr}
 4961              	.LCFI99:
 4962              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 150


 4963              		.cfi_offset 4, -16
 4964              		.cfi_offset 5, -12
 4965              		.cfi_offset 6, -8
 4966              		.cfi_offset 14, -4
 4967 0002 0500     		movs	r5, r0
 926:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 4968              		.loc 1 926 3 is_stmt 1 view .LVU1032
 927:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TM_MASK;
 4969              		.loc 1 927 3 view .LVU1033
 927:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TM_MASK;
 4970              		.loc 1 927 8 is_stmt 0 view .LVU1034
 4971 0004 1820     		movs	r0, #24
 4972              	.LVL377:
 927:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TM_MASK;
 4973              		.loc 1 927 8 view .LVU1035
 4974 0006 FFF7FEFF 		bl	read_rtc_register
 4975              	.LVL378:
 928:Core/Src/AB1805.c ****   if (value)
 4976              		.loc 1 928 3 is_stmt 1 view .LVU1036
 928:Core/Src/AB1805.c ****   if (value)
 4977              		.loc 1 928 6 is_stmt 0 view .LVU1037
 4978 000a 4023     		movs	r3, #64
 4979 000c 9843     		bics	r0, r3
 4980              	.LVL379:
 928:Core/Src/AB1805.c ****   if (value)
 4981              		.loc 1 928 6 view .LVU1038
 4982 000e C4B2     		uxtb	r4, r0
 4983              	.LVL380:
 929:Core/Src/AB1805.c ****   {
 4984              		.loc 1 929 3 is_stmt 1 view .LVU1039
 929:Core/Src/AB1805.c ****   {
 4985              		.loc 1 929 6 is_stmt 0 view .LVU1040
 4986 0010 002D     		cmp	r5, #0
 4987 0012 01D0     		beq	.L252
 931:Core/Src/AB1805.c ****   }
 4988              		.loc 1 931 5 is_stmt 1 view .LVU1041
 931:Core/Src/AB1805.c ****   }
 4989              		.loc 1 931 8 is_stmt 0 view .LVU1042
 4990 0014 1C43     		orrs	r4, r3
 4991              	.LVL381:
 931:Core/Src/AB1805.c ****   }
 4992              		.loc 1 931 8 view .LVU1043
 4993 0016 E4B2     		uxtb	r4, r4
 4994              	.LVL382:
 4995              	.L252:
 933:Core/Src/AB1805.c ****   return c1;
 4996              		.loc 1 933 3 is_stmt 1 view .LVU1044
 4997 0018 2100     		movs	r1, r4
 4998 001a 1820     		movs	r0, #24
 4999 001c FFF7FEFF 		bl	write_rtc_register
 5000              	.LVL383:
 934:Core/Src/AB1805.c **** }
 5001              		.loc 1 934 3 view .LVU1045
 935:Core/Src/AB1805.c **** 
 5002              		.loc 1 935 1 is_stmt 0 view .LVU1046
 5003 0020 2000     		movs	r0, r4
 5004              		@ sp needed
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 151


 5005              	.LVL384:
 935:Core/Src/AB1805.c **** 
 5006              		.loc 1 935 1 view .LVU1047
 5007 0022 70BD     		pop	{r4, r5, r6, pc}
 5008              		.cfi_endproc
 5009              	.LFE605:
 5011              		.section	.text.set_TRPT_time_control,"ax",%progbits
 5012              		.align	1
 5013              		.global	set_TRPT_time_control
 5014              		.syntax unified
 5015              		.code	16
 5016              		.thumb_func
 5018              	set_TRPT_time_control:
 5019              	.LVL385:
 5020              	.LFB606:
 938:Core/Src/AB1805.c ****   uint8_t c1;
 5021              		.loc 1 938 1 is_stmt 1 view -0
 5022              		.cfi_startproc
 5023              		@ args = 0, pretend = 0, frame = 0
 5024              		@ frame_needed = 0, uses_anonymous_args = 0
 938:Core/Src/AB1805.c ****   uint8_t c1;
 5025              		.loc 1 938 1 is_stmt 0 view .LVU1049
 5026 0000 70B5     		push	{r4, r5, r6, lr}
 5027              	.LCFI100:
 5028              		.cfi_def_cfa_offset 16
 5029              		.cfi_offset 4, -16
 5030              		.cfi_offset 5, -12
 5031              		.cfi_offset 6, -8
 5032              		.cfi_offset 14, -4
 5033 0002 0500     		movs	r5, r0
 939:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 5034              		.loc 1 939 3 is_stmt 1 view .LVU1050
 940:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TRPT_MASK;
 5035              		.loc 1 940 3 view .LVU1051
 940:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TRPT_MASK;
 5036              		.loc 1 940 8 is_stmt 0 view .LVU1052
 5037 0004 1820     		movs	r0, #24
 5038              	.LVL386:
 940:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TRPT_MASK;
 5039              		.loc 1 940 8 view .LVU1053
 5040 0006 FFF7FEFF 		bl	read_rtc_register
 5041              	.LVL387:
 941:Core/Src/AB1805.c ****   if (value)
 5042              		.loc 1 941 3 is_stmt 1 view .LVU1054
 941:Core/Src/AB1805.c ****   if (value)
 5043              		.loc 1 941 6 is_stmt 0 view .LVU1055
 5044 000a 2023     		movs	r3, #32
 5045 000c 9843     		bics	r0, r3
 5046              	.LVL388:
 941:Core/Src/AB1805.c ****   if (value)
 5047              		.loc 1 941 6 view .LVU1056
 5048 000e C4B2     		uxtb	r4, r0
 5049              	.LVL389:
 942:Core/Src/AB1805.c ****   {
 5050              		.loc 1 942 3 is_stmt 1 view .LVU1057
 942:Core/Src/AB1805.c ****   {
 5051              		.loc 1 942 6 is_stmt 0 view .LVU1058
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 152


 5052 0010 002D     		cmp	r5, #0
 5053 0012 01D0     		beq	.L254
 944:Core/Src/AB1805.c ****   }
 5054              		.loc 1 944 5 is_stmt 1 view .LVU1059
 944:Core/Src/AB1805.c ****   }
 5055              		.loc 1 944 8 is_stmt 0 view .LVU1060
 5056 0014 1C43     		orrs	r4, r3
 5057              	.LVL390:
 944:Core/Src/AB1805.c ****   }
 5058              		.loc 1 944 8 view .LVU1061
 5059 0016 E4B2     		uxtb	r4, r4
 5060              	.LVL391:
 5061              	.L254:
 946:Core/Src/AB1805.c ****   return c1;
 5062              		.loc 1 946 3 is_stmt 1 view .LVU1062
 5063 0018 2100     		movs	r1, r4
 5064 001a 1820     		movs	r0, #24
 5065 001c FFF7FEFF 		bl	write_rtc_register
 5066              	.LVL392:
 947:Core/Src/AB1805.c **** }
 5067              		.loc 1 947 3 view .LVU1063
 948:Core/Src/AB1805.c **** 
 5068              		.loc 1 948 1 is_stmt 0 view .LVU1064
 5069 0020 2000     		movs	r0, r4
 5070              		@ sp needed
 5071              	.LVL393:
 948:Core/Src/AB1805.c **** 
 5072              		.loc 1 948 1 view .LVU1065
 5073 0022 70BD     		pop	{r4, r5, r6, pc}
 5074              		.cfi_endproc
 5075              	.LFE606:
 5077              		.section	.text.set_RPT_time_control,"ax",%progbits
 5078              		.align	1
 5079              		.global	set_RPT_time_control
 5080              		.syntax unified
 5081              		.code	16
 5082              		.thumb_func
 5084              	set_RPT_time_control:
 5085              	.LVL394:
 5086              	.LFB607:
 951:Core/Src/AB1805.c ****   uint8_t c1;
 5087              		.loc 1 951 1 is_stmt 1 view -0
 5088              		.cfi_startproc
 5089              		@ args = 0, pretend = 0, frame = 0
 5090              		@ frame_needed = 0, uses_anonymous_args = 0
 951:Core/Src/AB1805.c ****   uint8_t c1;
 5091              		.loc 1 951 1 is_stmt 0 view .LVU1067
 5092 0000 70B5     		push	{r4, r5, r6, lr}
 5093              	.LCFI101:
 5094              		.cfi_def_cfa_offset 16
 5095              		.cfi_offset 4, -16
 5096              		.cfi_offset 5, -12
 5097              		.cfi_offset 6, -8
 5098              		.cfi_offset 14, -4
 5099 0002 0500     		movs	r5, r0
 952:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 5100              		.loc 1 952 3 is_stmt 1 view .LVU1068
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 153


 953:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_RPT_MASK;
 5101              		.loc 1 953 3 view .LVU1069
 953:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_RPT_MASK;
 5102              		.loc 1 953 8 is_stmt 0 view .LVU1070
 5103 0004 1820     		movs	r0, #24
 5104              	.LVL395:
 953:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_RPT_MASK;
 5105              		.loc 1 953 8 view .LVU1071
 5106 0006 FFF7FEFF 		bl	read_rtc_register
 5107              	.LVL396:
 954:Core/Src/AB1805.c ****   c1 |= (value << 2) & TIMER_CONTROL_RPT_MASK;
 5108              		.loc 1 954 3 is_stmt 1 view .LVU1072
 954:Core/Src/AB1805.c ****   c1 |= (value << 2) & TIMER_CONTROL_RPT_MASK;
 5109              		.loc 1 954 6 is_stmt 0 view .LVU1073
 5110 000a 1C23     		movs	r3, #28
 5111 000c 9843     		bics	r0, r3
 5112              	.LVL397:
 954:Core/Src/AB1805.c ****   c1 |= (value << 2) & TIMER_CONTROL_RPT_MASK;
 5113              		.loc 1 954 6 view .LVU1074
 5114 000e C4B2     		uxtb	r4, r0
 5115              	.LVL398:
 955:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 5116              		.loc 1 955 3 is_stmt 1 view .LVU1075
 955:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 5117              		.loc 1 955 16 is_stmt 0 view .LVU1076
 5118 0010 AD00     		lsls	r5, r5, #2
 955:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 5119              		.loc 1 955 22 view .LVU1077
 5120 0012 2B40     		ands	r3, r5
 955:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 5121              		.loc 1 955 6 view .LVU1078
 5122 0014 1C43     		orrs	r4, r3
 5123              	.LVL399:
 956:Core/Src/AB1805.c ****   return c1;
 5124              		.loc 1 956 3 is_stmt 1 view .LVU1079
 5125 0016 2100     		movs	r1, r4
 5126 0018 1820     		movs	r0, #24
 5127 001a FFF7FEFF 		bl	write_rtc_register
 5128              	.LVL400:
 957:Core/Src/AB1805.c **** }
 5129              		.loc 1 957 3 view .LVU1080
 958:Core/Src/AB1805.c **** 
 5130              		.loc 1 958 1 is_stmt 0 view .LVU1081
 5131 001e 2000     		movs	r0, r4
 5132              		@ sp needed
 5133              	.LVL401:
 958:Core/Src/AB1805.c **** 
 5134              		.loc 1 958 1 view .LVU1082
 5135 0020 70BD     		pop	{r4, r5, r6, pc}
 5136              		.cfi_endproc
 5137              	.LFE607:
 5139              		.section	.text.set_datetime_alarm_month,"ax",%progbits
 5140              		.align	1
 5141              		.global	set_datetime_alarm_month
 5142              		.syntax unified
 5143              		.code	16
 5144              		.thumb_func
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 154


 5146              	set_datetime_alarm_month:
 5147              	.LVL402:
 5148              	.LFB524:
 169:Core/Src/AB1805.c ****   set_month_alarm(month);
 5149              		.loc 1 169 1 is_stmt 1 view -0
 5150              		.cfi_startproc
 5151              		@ args = 4, pretend = 0, frame = 0
 5152              		@ frame_needed = 0, uses_anonymous_args = 0
 169:Core/Src/AB1805.c ****   set_month_alarm(month);
 5153              		.loc 1 169 1 is_stmt 0 view .LVU1084
 5154 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5155              	.LCFI102:
 5156              		.cfi_def_cfa_offset 24
 5157              		.cfi_offset 3, -24
 5158              		.cfi_offset 4, -20
 5159              		.cfi_offset 5, -16
 5160              		.cfi_offset 6, -12
 5161              		.cfi_offset 7, -8
 5162              		.cfi_offset 14, -4
 5163 0002 0E00     		movs	r6, r1
 5164 0004 1500     		movs	r5, r2
 5165 0006 1C00     		movs	r4, r3
 5166 0008 06AB     		add	r3, sp, #24
 5167              	.LVL403:
 169:Core/Src/AB1805.c ****   set_month_alarm(month);
 5168              		.loc 1 169 1 view .LVU1085
 5169 000a 1F78     		ldrb	r7, [r3]
 170:Core/Src/AB1805.c ****   set_date_alarm(date);
 5170              		.loc 1 170 3 is_stmt 1 view .LVU1086
 5171 000c FFF7FEFF 		bl	set_month_alarm
 5172              	.LVL404:
 171:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 5173              		.loc 1 171 3 view .LVU1087
 5174 0010 3000     		movs	r0, r6
 5175 0012 FFF7FEFF 		bl	set_date_alarm
 5176              	.LVL405:
 172:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 5177              		.loc 1 172 3 view .LVU1088
 5178 0016 2800     		movs	r0, r5
 5179 0018 FFF7FEFF 		bl	set_hour_alarm
 5180              	.LVL406:
 173:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 5181              		.loc 1 173 3 view .LVU1089
 5182 001c 2000     		movs	r0, r4
 5183 001e FFF7FEFF 		bl	set_minute_alarm
 5184              	.LVL407:
 174:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_YEAR);
 5185              		.loc 1 174 3 view .LVU1090
 5186 0022 3800     		movs	r0, r7
 5187 0024 FFF7FEFF 		bl	set_second_alarm
 5188              	.LVL408:
 175:Core/Src/AB1805.c **** }
 5189              		.loc 1 175 3 view .LVU1091
 5190 0028 0120     		movs	r0, #1
 5191 002a FFF7FEFF 		bl	set_RPT_time_control
 5192              	.LVL409:
 176:Core/Src/AB1805.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 155


 5193              		.loc 1 176 1 is_stmt 0 view .LVU1092
 5194              		@ sp needed
 5195 002e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5196              		.cfi_endproc
 5197              	.LFE524:
 5199              		.section	.text.set_datetime_alarm_date,"ax",%progbits
 5200              		.align	1
 5201              		.global	set_datetime_alarm_date
 5202              		.syntax unified
 5203              		.code	16
 5204              		.thumb_func
 5206              	set_datetime_alarm_date:
 5207              	.LVL410:
 5208              	.LFB525:
 179:Core/Src/AB1805.c ****   set_date_alarm(date);
 5209              		.loc 1 179 1 is_stmt 1 view -0
 5210              		.cfi_startproc
 5211              		@ args = 0, pretend = 0, frame = 0
 5212              		@ frame_needed = 0, uses_anonymous_args = 0
 179:Core/Src/AB1805.c ****   set_date_alarm(date);
 5213              		.loc 1 179 1 is_stmt 0 view .LVU1094
 5214 0000 70B5     		push	{r4, r5, r6, lr}
 5215              	.LCFI103:
 5216              		.cfi_def_cfa_offset 16
 5217              		.cfi_offset 4, -16
 5218              		.cfi_offset 5, -12
 5219              		.cfi_offset 6, -8
 5220              		.cfi_offset 14, -4
 5221 0002 0E00     		movs	r6, r1
 5222 0004 1500     		movs	r5, r2
 5223 0006 1C00     		movs	r4, r3
 180:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 5224              		.loc 1 180 3 is_stmt 1 view .LVU1095
 5225 0008 FFF7FEFF 		bl	set_date_alarm
 5226              	.LVL411:
 181:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 5227              		.loc 1 181 3 view .LVU1096
 5228 000c 3000     		movs	r0, r6
 5229 000e FFF7FEFF 		bl	set_hour_alarm
 5230              	.LVL412:
 182:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 5231              		.loc 1 182 3 view .LVU1097
 5232 0012 2800     		movs	r0, r5
 5233 0014 FFF7FEFF 		bl	set_minute_alarm
 5234              	.LVL413:
 183:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_MONTH);
 5235              		.loc 1 183 3 view .LVU1098
 5236 0018 2000     		movs	r0, r4
 5237 001a FFF7FEFF 		bl	set_second_alarm
 5238              	.LVL414:
 184:Core/Src/AB1805.c **** }
 5239              		.loc 1 184 3 view .LVU1099
 5240 001e 0220     		movs	r0, #2
 5241 0020 FFF7FEFF 		bl	set_RPT_time_control
 5242              	.LVL415:
 185:Core/Src/AB1805.c **** 
 5243              		.loc 1 185 1 is_stmt 0 view .LVU1100
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 156


 5244              		@ sp needed
 5245 0024 70BD     		pop	{r4, r5, r6, pc}
 5246              		.cfi_endproc
 5247              	.LFE525:
 5249              		.section	.text.set_week_alarm,"ax",%progbits
 5250              		.align	1
 5251              		.global	set_week_alarm
 5252              		.syntax unified
 5253              		.code	16
 5254              		.thumb_func
 5256              	set_week_alarm:
 5257              	.LVL416:
 5258              	.LFB526:
 188:Core/Src/AB1805.c ****   set_weekday_alarm(weekday);
 5259              		.loc 1 188 1 is_stmt 1 view -0
 5260              		.cfi_startproc
 5261              		@ args = 0, pretend = 0, frame = 0
 5262              		@ frame_needed = 0, uses_anonymous_args = 0
 188:Core/Src/AB1805.c ****   set_weekday_alarm(weekday);
 5263              		.loc 1 188 1 is_stmt 0 view .LVU1102
 5264 0000 70B5     		push	{r4, r5, r6, lr}
 5265              	.LCFI104:
 5266              		.cfi_def_cfa_offset 16
 5267              		.cfi_offset 4, -16
 5268              		.cfi_offset 5, -12
 5269              		.cfi_offset 6, -8
 5270              		.cfi_offset 14, -4
 5271 0002 0E00     		movs	r6, r1
 5272 0004 1500     		movs	r5, r2
 5273 0006 1C00     		movs	r4, r3
 189:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 5274              		.loc 1 189 3 is_stmt 1 view .LVU1103
 5275 0008 FFF7FEFF 		bl	set_weekday_alarm
 5276              	.LVL417:
 190:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 5277              		.loc 1 190 3 view .LVU1104
 5278 000c 3000     		movs	r0, r6
 5279 000e FFF7FEFF 		bl	set_hour_alarm
 5280              	.LVL418:
 191:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 5281              		.loc 1 191 3 view .LVU1105
 5282 0012 2800     		movs	r0, r5
 5283 0014 FFF7FEFF 		bl	set_minute_alarm
 5284              	.LVL419:
 192:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_WEEK);
 5285              		.loc 1 192 3 view .LVU1106
 5286 0018 2000     		movs	r0, r4
 5287 001a FFF7FEFF 		bl	set_second_alarm
 5288              	.LVL420:
 193:Core/Src/AB1805.c **** }
 5289              		.loc 1 193 3 view .LVU1107
 5290 001e 0320     		movs	r0, #3
 5291 0020 FFF7FEFF 		bl	set_RPT_time_control
 5292              	.LVL421:
 194:Core/Src/AB1805.c **** 
 5293              		.loc 1 194 1 is_stmt 0 view .LVU1108
 5294              		@ sp needed
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 157


 5295 0024 70BD     		pop	{r4, r5, r6, pc}
 5296              		.cfi_endproc
 5297              	.LFE526:
 5299              		.section	.text.set_datetime_alarm_hour,"ax",%progbits
 5300              		.align	1
 5301              		.global	set_datetime_alarm_hour
 5302              		.syntax unified
 5303              		.code	16
 5304              		.thumb_func
 5306              	set_datetime_alarm_hour:
 5307              	.LVL422:
 5308              	.LFB527:
 197:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 5309              		.loc 1 197 1 is_stmt 1 view -0
 5310              		.cfi_startproc
 5311              		@ args = 0, pretend = 0, frame = 0
 5312              		@ frame_needed = 0, uses_anonymous_args = 0
 197:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 5313              		.loc 1 197 1 is_stmt 0 view .LVU1110
 5314 0000 70B5     		push	{r4, r5, r6, lr}
 5315              	.LCFI105:
 5316              		.cfi_def_cfa_offset 16
 5317              		.cfi_offset 4, -16
 5318              		.cfi_offset 5, -12
 5319              		.cfi_offset 6, -8
 5320              		.cfi_offset 14, -4
 5321 0002 0D00     		movs	r5, r1
 5322 0004 1400     		movs	r4, r2
 198:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 5323              		.loc 1 198 3 is_stmt 1 view .LVU1111
 5324 0006 FFF7FEFF 		bl	set_hour_alarm
 5325              	.LVL423:
 199:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 5326              		.loc 1 199 3 view .LVU1112
 5327 000a 2800     		movs	r0, r5
 5328 000c FFF7FEFF 		bl	set_minute_alarm
 5329              	.LVL424:
 200:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_DAY);
 5330              		.loc 1 200 3 view .LVU1113
 5331 0010 2000     		movs	r0, r4
 5332 0012 FFF7FEFF 		bl	set_second_alarm
 5333              	.LVL425:
 201:Core/Src/AB1805.c **** }
 5334              		.loc 1 201 3 view .LVU1114
 5335 0016 0420     		movs	r0, #4
 5336 0018 FFF7FEFF 		bl	set_RPT_time_control
 5337              	.LVL426:
 202:Core/Src/AB1805.c **** 
 5338              		.loc 1 202 1 is_stmt 0 view .LVU1115
 5339              		@ sp needed
 5340 001c 70BD     		pop	{r4, r5, r6, pc}
 5341              		.cfi_endproc
 5342              	.LFE527:
 5344              		.section	.text.set_datetime_alarm_minutes,"ax",%progbits
 5345              		.align	1
 5346              		.global	set_datetime_alarm_minutes
 5347              		.syntax unified
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 158


 5348              		.code	16
 5349              		.thumb_func
 5351              	set_datetime_alarm_minutes:
 5352              	.LVL427:
 5353              	.LFB528:
 205:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 5354              		.loc 1 205 1 is_stmt 1 view -0
 5355              		.cfi_startproc
 5356              		@ args = 0, pretend = 0, frame = 0
 5357              		@ frame_needed = 0, uses_anonymous_args = 0
 205:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 5358              		.loc 1 205 1 is_stmt 0 view .LVU1117
 5359 0000 10B5     		push	{r4, lr}
 5360              	.LCFI106:
 5361              		.cfi_def_cfa_offset 8
 5362              		.cfi_offset 4, -8
 5363              		.cfi_offset 14, -4
 5364 0002 0C00     		movs	r4, r1
 206:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 5365              		.loc 1 206 3 is_stmt 1 view .LVU1118
 5366 0004 FFF7FEFF 		bl	set_minute_alarm
 5367              	.LVL428:
 207:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_HOUR);
 5368              		.loc 1 207 3 view .LVU1119
 5369 0008 2000     		movs	r0, r4
 5370 000a FFF7FEFF 		bl	set_second_alarm
 5371              	.LVL429:
 208:Core/Src/AB1805.c **** }
 5372              		.loc 1 208 3 view .LVU1120
 5373 000e 0520     		movs	r0, #5
 5374 0010 FFF7FEFF 		bl	set_RPT_time_control
 5375              	.LVL430:
 209:Core/Src/AB1805.c **** 
 5376              		.loc 1 209 1 is_stmt 0 view .LVU1121
 5377              		@ sp needed
 5378 0014 10BD     		pop	{r4, pc}
 5379              		.cfi_endproc
 5380              	.LFE528:
 5382              		.section	.text.set_datetime_alarm_seconds,"ax",%progbits
 5383              		.align	1
 5384              		.global	set_datetime_alarm_seconds
 5385              		.syntax unified
 5386              		.code	16
 5387              		.thumb_func
 5389              	set_datetime_alarm_seconds:
 5390              	.LVL431:
 5391              	.LFB529:
 212:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 5392              		.loc 1 212 1 is_stmt 1 view -0
 5393              		.cfi_startproc
 5394              		@ args = 0, pretend = 0, frame = 0
 5395              		@ frame_needed = 0, uses_anonymous_args = 0
 212:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 5396              		.loc 1 212 1 is_stmt 0 view .LVU1123
 5397 0000 10B5     		push	{r4, lr}
 5398              	.LCFI107:
 5399              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 159


 5400              		.cfi_offset 4, -8
 5401              		.cfi_offset 14, -4
 213:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_MINUTE);
 5402              		.loc 1 213 3 is_stmt 1 view .LVU1124
 5403 0002 FFF7FEFF 		bl	set_second_alarm
 5404              	.LVL432:
 214:Core/Src/AB1805.c **** }
 5405              		.loc 1 214 3 view .LVU1125
 5406 0006 0620     		movs	r0, #6
 5407 0008 FFF7FEFF 		bl	set_RPT_time_control
 5408              	.LVL433:
 215:Core/Src/AB1805.c **** 
 5409              		.loc 1 215 1 is_stmt 0 view .LVU1126
 5410              		@ sp needed
 5411 000c 10BD     		pop	{r4, pc}
 5412              		.cfi_endproc
 5413              	.LFE529:
 5415              		.section	.text.set_once_second_alarm,"ax",%progbits
 5416              		.align	1
 5417              		.global	set_once_second_alarm
 5418              		.syntax unified
 5419              		.code	16
 5420              		.thumb_func
 5422              	set_once_second_alarm:
 5423              	.LVL434:
 5424              	.LFB530:
 218:Core/Src/AB1805.c ****   // set_second_alarm(seconds);
 5425              		.loc 1 218 1 is_stmt 1 view -0
 5426              		.cfi_startproc
 5427              		@ args = 0, pretend = 0, frame = 0
 5428              		@ frame_needed = 0, uses_anonymous_args = 0
 218:Core/Src/AB1805.c ****   // set_second_alarm(seconds);
 5429              		.loc 1 218 1 is_stmt 0 view .LVU1128
 5430 0000 10B5     		push	{r4, lr}
 5431              	.LCFI108:
 5432              		.cfi_def_cfa_offset 8
 5433              		.cfi_offset 4, -8
 5434              		.cfi_offset 14, -4
 220:Core/Src/AB1805.c **** }
 5435              		.loc 1 220 3 is_stmt 1 view .LVU1129
 5436 0002 0720     		movs	r0, #7
 5437              	.LVL435:
 220:Core/Src/AB1805.c **** }
 5438              		.loc 1 220 3 is_stmt 0 view .LVU1130
 5439 0004 FFF7FEFF 		bl	set_RPT_time_control
 5440              	.LVL436:
 221:Core/Src/AB1805.c **** 
 5441              		.loc 1 221 1 view .LVU1131
 5442              		@ sp needed
 5443 0008 10BD     		pop	{r4, pc}
 5444              		.cfi_endproc
 5445              	.LFE530:
 5447              		.section	.text.set_TFS_time_control,"ax",%progbits
 5448              		.align	1
 5449              		.global	set_TFS_time_control
 5450              		.syntax unified
 5451              		.code	16
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 160


 5452              		.thumb_func
 5454              	set_TFS_time_control:
 5455              	.LVL437:
 5456              	.LFB608:
 961:Core/Src/AB1805.c ****   uint8_t c1;
 5457              		.loc 1 961 1 is_stmt 1 view -0
 5458              		.cfi_startproc
 5459              		@ args = 0, pretend = 0, frame = 0
 5460              		@ frame_needed = 0, uses_anonymous_args = 0
 961:Core/Src/AB1805.c ****   uint8_t c1;
 5461              		.loc 1 961 1 is_stmt 0 view .LVU1133
 5462 0000 70B5     		push	{r4, r5, r6, lr}
 5463              	.LCFI109:
 5464              		.cfi_def_cfa_offset 16
 5465              		.cfi_offset 4, -16
 5466              		.cfi_offset 5, -12
 5467              		.cfi_offset 6, -8
 5468              		.cfi_offset 14, -4
 5469 0002 0500     		movs	r5, r0
 962:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 5470              		.loc 1 962 3 is_stmt 1 view .LVU1134
 963:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TFS_MASK;
 5471              		.loc 1 963 3 view .LVU1135
 963:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TFS_MASK;
 5472              		.loc 1 963 8 is_stmt 0 view .LVU1136
 5473 0004 1820     		movs	r0, #24
 5474              	.LVL438:
 963:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TFS_MASK;
 5475              		.loc 1 963 8 view .LVU1137
 5476 0006 FFF7FEFF 		bl	read_rtc_register
 5477              	.LVL439:
 964:Core/Src/AB1805.c ****   c1 |= value;
 5478              		.loc 1 964 3 is_stmt 1 view .LVU1138
 964:Core/Src/AB1805.c ****   c1 |= value;
 5479              		.loc 1 964 6 is_stmt 0 view .LVU1139
 5480 000a 0323     		movs	r3, #3
 5481 000c 9843     		bics	r0, r3
 5482              	.LVL440:
 964:Core/Src/AB1805.c ****   c1 |= value;
 5483              		.loc 1 964 6 view .LVU1140
 5484 000e C4B2     		uxtb	r4, r0
 5485              	.LVL441:
 965:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 5486              		.loc 1 965 3 is_stmt 1 view .LVU1141
 965:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 5487              		.loc 1 965 6 is_stmt 0 view .LVU1142
 5488 0010 2C43     		orrs	r4, r5
 5489              	.LVL442:
 966:Core/Src/AB1805.c ****   return c1;
 5490              		.loc 1 966 3 is_stmt 1 view .LVU1143
 5491 0012 2100     		movs	r1, r4
 5492 0014 1820     		movs	r0, #24
 5493 0016 FFF7FEFF 		bl	write_rtc_register
 5494              	.LVL443:
 967:Core/Src/AB1805.c **** }
 5495              		.loc 1 967 3 view .LVU1144
 968:Core/Src/AB1805.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 161


 5496              		.loc 1 968 1 is_stmt 0 view .LVU1145
 5497 001a 2000     		movs	r0, r4
 5498              		@ sp needed
 5499              	.LVL444:
 968:Core/Src/AB1805.c **** 
 5500              		.loc 1 968 1 view .LVU1146
 5501 001c 70BD     		pop	{r4, r5, r6, pc}
 5502              		.cfi_endproc
 5503              	.LFE608:
 5505              		.section	.text.get_outcontrol,"ax",%progbits
 5506              		.align	1
 5507              		.global	get_outcontrol
 5508              		.syntax unified
 5509              		.code	16
 5510              		.thumb_func
 5512              	get_outcontrol:
 5513              	.LFB609:
 972:Core/Src/AB1805.c ****   _outcontrol = read_rtc_register(OCTRL_REGISTER);
 5514              		.loc 1 972 1 is_stmt 1 view -0
 5515              		.cfi_startproc
 5516              		@ args = 0, pretend = 0, frame = 0
 5517              		@ frame_needed = 0, uses_anonymous_args = 0
 5518 0000 10B5     		push	{r4, lr}
 5519              	.LCFI110:
 5520              		.cfi_def_cfa_offset 8
 5521              		.cfi_offset 4, -8
 5522              		.cfi_offset 14, -4
 973:Core/Src/AB1805.c ****   return _outcontrol;
 5523              		.loc 1 973 3 view .LVU1148
 973:Core/Src/AB1805.c ****   return _outcontrol;
 5524              		.loc 1 973 17 is_stmt 0 view .LVU1149
 5525 0002 3020     		movs	r0, #48
 5526 0004 FFF7FEFF 		bl	read_rtc_register
 5527              	.LVL445:
 973:Core/Src/AB1805.c ****   return _outcontrol;
 5528              		.loc 1 973 15 view .LVU1150
 5529 0008 014B     		ldr	r3, .L265
 5530 000a 1870     		strb	r0, [r3]
 974:Core/Src/AB1805.c **** }
 5531              		.loc 1 974 3 is_stmt 1 view .LVU1151
 975:Core/Src/AB1805.c **** 
 5532              		.loc 1 975 1 is_stmt 0 view .LVU1152
 5533              		@ sp needed
 5534 000c 10BD     		pop	{r4, pc}
 5535              	.L266:
 5536 000e C046     		.align	2
 5537              	.L265:
 5538 0010 00000000 		.word	_outcontrol
 5539              		.cfi_endproc
 5540              	.LFE609:
 5542              		.section	.text.get_outcontrol_mask,"ax",%progbits
 5543              		.align	1
 5544              		.global	get_outcontrol_mask
 5545              		.syntax unified
 5546              		.code	16
 5547              		.thumb_func
 5549              	get_outcontrol_mask:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 162


 5550              	.LVL446:
 5551              	.LFB610:
 978:Core/Src/AB1805.c ****   uint8_t ret;
 5552              		.loc 1 978 1 is_stmt 1 view -0
 5553              		.cfi_startproc
 5554              		@ args = 0, pretend = 0, frame = 0
 5555              		@ frame_needed = 0, uses_anonymous_args = 0
 978:Core/Src/AB1805.c ****   uint8_t ret;
 5556              		.loc 1 978 1 is_stmt 0 view .LVU1154
 5557 0000 10B5     		push	{r4, lr}
 5558              	.LCFI111:
 5559              		.cfi_def_cfa_offset 8
 5560              		.cfi_offset 4, -8
 5561              		.cfi_offset 14, -4
 5562 0002 0400     		movs	r4, r0
 979:Core/Src/AB1805.c ****   ret = get_outcontrol() & mask;
 5563              		.loc 1 979 3 is_stmt 1 view .LVU1155
 980:Core/Src/AB1805.c ****   switch (mask)
 5564              		.loc 1 980 3 view .LVU1156
 980:Core/Src/AB1805.c ****   switch (mask)
 5565              		.loc 1 980 9 is_stmt 0 view .LVU1157
 5566 0004 FFF7FEFF 		bl	get_outcontrol
 5567              	.LVL447:
 980:Core/Src/AB1805.c ****   switch (mask)
 5568              		.loc 1 980 7 view .LVU1158
 5569 0008 2040     		ands	r0, r4
 5570              	.LVL448:
 981:Core/Src/AB1805.c ****   {
 5571              		.loc 1 981 3 is_stmt 1 view .LVU1159
 5572 000a 202C     		cmp	r4, #32
 5573 000c 07D8     		bhi	.L268
 5574 000e 002C     		cmp	r4, #0
 5575 0010 17D0     		beq	.L269
 5576 0012 202C     		cmp	r4, #32
 5577 0014 15D8     		bhi	.L269
 5578 0016 A400     		lsls	r4, r4, #2
 5579 0018 0B4B     		ldr	r3, .L278
 5580 001a 1B59     		ldr	r3, [r3, r4]
 5581 001c 9F46     		mov	pc, r3
 5582              		.section	.rodata.get_outcontrol_mask,"a",%progbits
 5583              		.align	2
 5584              	.L271:
 5585 0000 42000000 		.word	.L269
 5586 0004 28000000 		.word	.L276
 5587 0008 3E000000 		.word	.L275
 5588 000c 42000000 		.word	.L269
 5589 0010 3A000000 		.word	.L274
 5590 0014 42000000 		.word	.L269
 5591 0018 42000000 		.word	.L269
 5592 001c 42000000 		.word	.L269
 5593 0020 36000000 		.word	.L273
 5594 0024 42000000 		.word	.L269
 5595 0028 42000000 		.word	.L269
 5596 002c 42000000 		.word	.L269
 5597 0030 42000000 		.word	.L269
 5598 0034 42000000 		.word	.L269
 5599 0038 42000000 		.word	.L269
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 163


 5600 003c 42000000 		.word	.L269
 5601 0040 32000000 		.word	.L272
 5602 0044 42000000 		.word	.L269
 5603 0048 42000000 		.word	.L269
 5604 004c 42000000 		.word	.L269
 5605 0050 42000000 		.word	.L269
 5606 0054 42000000 		.word	.L269
 5607 0058 42000000 		.word	.L269
 5608 005c 42000000 		.word	.L269
 5609 0060 42000000 		.word	.L269
 5610 0064 42000000 		.word	.L269
 5611 0068 42000000 		.word	.L269
 5612 006c 42000000 		.word	.L269
 5613 0070 42000000 		.word	.L269
 5614 0074 42000000 		.word	.L269
 5615 0078 42000000 		.word	.L269
 5616 007c 42000000 		.word	.L269
 5617 0080 2E000000 		.word	.L270
 5618              		.section	.text.get_outcontrol_mask
 5619              	.L268:
 5620 001e 402C     		cmp	r4, #64
 5621 0020 03D0     		beq	.L277
 5622 0022 802C     		cmp	r4, #128
 5623 0024 0DD1     		bne	.L269
 984:Core/Src/AB1805.c ****     break;
 5624              		.loc 1 984 5 view .LVU1160
 984:Core/Src/AB1805.c ****     break;
 5625              		.loc 1 984 9 is_stmt 0 view .LVU1161
 5626 0026 C009     		lsrs	r0, r0, #7
 5627              	.LVL449:
 985:Core/Src/AB1805.c ****   case OCTRL_EXBM_MASK:
 5628              		.loc 1 985 5 is_stmt 1 view .LVU1162
 5629              	.L276:
1010:Core/Src/AB1805.c **** }
 5630              		.loc 1 1010 3 view .LVU1163
1011:Core/Src/AB1805.c **** 
 5631              		.loc 1 1011 1 is_stmt 0 view .LVU1164
 5632              		@ sp needed
 5633 0028 10BD     		pop	{r4, pc}
 5634              	.L277:
 987:Core/Src/AB1805.c ****     break;
 5635              		.loc 1 987 5 is_stmt 1 view .LVU1165
 987:Core/Src/AB1805.c ****     break;
 5636              		.loc 1 987 9 is_stmt 0 view .LVU1166
 5637 002a 8009     		lsrs	r0, r0, #6
 5638              	.LVL450:
 988:Core/Src/AB1805.c ****   case OCTRL_WDDS_MASK:
 5639              		.loc 1 988 5 is_stmt 1 view .LVU1167
 5640 002c FCE7     		b	.L276
 5641              	.L270:
 990:Core/Src/AB1805.c ****     break;
 5642              		.loc 1 990 5 view .LVU1168
 990:Core/Src/AB1805.c ****     break;
 5643              		.loc 1 990 9 is_stmt 0 view .LVU1169
 5644 002e 4009     		lsrs	r0, r0, #5
 5645              	.LVL451:
 991:Core/Src/AB1805.c ****   case OCTRL_EXDS_MASK:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 164


 5646              		.loc 1 991 5 is_stmt 1 view .LVU1170
 5647 0030 FAE7     		b	.L276
 5648              	.L272:
 993:Core/Src/AB1805.c ****     break;
 5649              		.loc 1 993 5 view .LVU1171
 993:Core/Src/AB1805.c ****     break;
 5650              		.loc 1 993 9 is_stmt 0 view .LVU1172
 5651 0032 0009     		lsrs	r0, r0, #4
 5652              	.LVL452:
 994:Core/Src/AB1805.c ****   case OCTRL_RSEN_MASK:
 5653              		.loc 1 994 5 is_stmt 1 view .LVU1173
 5654 0034 F8E7     		b	.L276
 5655              	.L273:
 996:Core/Src/AB1805.c ****     break;
 5656              		.loc 1 996 5 view .LVU1174
 996:Core/Src/AB1805.c ****     break;
 5657              		.loc 1 996 9 is_stmt 0 view .LVU1175
 5658 0036 C008     		lsrs	r0, r0, #3
 5659              	.LVL453:
 997:Core/Src/AB1805.c ****   case OCTRL_O4EN_MASK:
 5660              		.loc 1 997 5 is_stmt 1 view .LVU1176
 5661 0038 F6E7     		b	.L276
 5662              	.L274:
 999:Core/Src/AB1805.c ****     break;
 5663              		.loc 1 999 5 view .LVU1177
 999:Core/Src/AB1805.c ****     break;
 5664              		.loc 1 999 9 is_stmt 0 view .LVU1178
 5665 003a 8008     		lsrs	r0, r0, #2
 5666              	.LVL454:
1000:Core/Src/AB1805.c ****   case OCTRL_O3EN_MASK:
 5667              		.loc 1 1000 5 is_stmt 1 view .LVU1179
 5668 003c F4E7     		b	.L276
 5669              	.L275:
1002:Core/Src/AB1805.c ****     break;
 5670              		.loc 1 1002 5 view .LVU1180
1002:Core/Src/AB1805.c ****     break;
 5671              		.loc 1 1002 9 is_stmt 0 view .LVU1181
 5672 003e 4008     		lsrs	r0, r0, #1
 5673              	.LVL455:
1003:Core/Src/AB1805.c ****   case OCTRL_O1EN_MASK:
 5674              		.loc 1 1003 5 is_stmt 1 view .LVU1182
 5675 0040 F2E7     		b	.L276
 5676              	.L269:
1008:Core/Src/AB1805.c ****   }
 5677              		.loc 1 1008 5 view .LVU1183
1008:Core/Src/AB1805.c ****   }
 5678              		.loc 1 1008 9 is_stmt 0 view .LVU1184
 5679 0042 024B     		ldr	r3, .L278+4
 5680 0044 1878     		ldrb	r0, [r3]
 5681              	.LVL456:
1008:Core/Src/AB1805.c ****   }
 5682              		.loc 1 1008 9 view .LVU1185
 5683 0046 EFE7     		b	.L276
 5684              	.L279:
 5685              		.align	2
 5686              	.L278:
 5687 0048 00000000 		.word	.L271
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 165


 5688 004c 00000000 		.word	_outcontrol
 5689              		.cfi_endproc
 5690              	.LFE610:
 5692              		.section	.text.set_outcontrol_value,"ax",%progbits
 5693              		.align	1
 5694              		.global	set_outcontrol_value
 5695              		.syntax unified
 5696              		.code	16
 5697              		.thumb_func
 5699              	set_outcontrol_value:
 5700              	.LVL457:
 5701              	.LFB611:
1014:Core/Src/AB1805.c ****   write_rtc_register(OCTRL_REGISTER, value);
 5702              		.loc 1 1014 1 is_stmt 1 view -0
 5703              		.cfi_startproc
 5704              		@ args = 0, pretend = 0, frame = 0
 5705              		@ frame_needed = 0, uses_anonymous_args = 0
1014:Core/Src/AB1805.c ****   write_rtc_register(OCTRL_REGISTER, value);
 5706              		.loc 1 1014 1 is_stmt 0 view .LVU1187
 5707 0000 10B5     		push	{r4, lr}
 5708              	.LCFI112:
 5709              		.cfi_def_cfa_offset 8
 5710              		.cfi_offset 4, -8
 5711              		.cfi_offset 14, -4
 5712 0002 0100     		movs	r1, r0
1015:Core/Src/AB1805.c ****   _outcontrol = read_rtc_register(OCTRL_REGISTER);
 5713              		.loc 1 1015 3 is_stmt 1 view .LVU1188
 5714 0004 3020     		movs	r0, #48
 5715              	.LVL458:
1015:Core/Src/AB1805.c ****   _outcontrol = read_rtc_register(OCTRL_REGISTER);
 5716              		.loc 1 1015 3 is_stmt 0 view .LVU1189
 5717 0006 FFF7FEFF 		bl	write_rtc_register
 5718              	.LVL459:
1016:Core/Src/AB1805.c ****   return _outcontrol;
 5719              		.loc 1 1016 3 is_stmt 1 view .LVU1190
1016:Core/Src/AB1805.c ****   return _outcontrol;
 5720              		.loc 1 1016 17 is_stmt 0 view .LVU1191
 5721 000a 3020     		movs	r0, #48
 5722 000c FFF7FEFF 		bl	read_rtc_register
 5723              	.LVL460:
1016:Core/Src/AB1805.c ****   return _outcontrol;
 5724              		.loc 1 1016 15 view .LVU1192
 5725 0010 014B     		ldr	r3, .L281
 5726 0012 1870     		strb	r0, [r3]
1017:Core/Src/AB1805.c **** }
 5727              		.loc 1 1017 3 is_stmt 1 view .LVU1193
1018:Core/Src/AB1805.c **** 
 5728              		.loc 1 1018 1 is_stmt 0 view .LVU1194
 5729              		@ sp needed
 5730 0014 10BD     		pop	{r4, pc}
 5731              	.L282:
 5732 0016 C046     		.align	2
 5733              	.L281:
 5734 0018 00000000 		.word	_outcontrol
 5735              		.cfi_endproc
 5736              	.LFE611:
 5738              		.section	.text.set_outcontrol_value_mask,"ax",%progbits
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 166


 5739              		.align	1
 5740              		.global	set_outcontrol_value_mask
 5741              		.syntax unified
 5742              		.code	16
 5743              		.thumb_func
 5745              	set_outcontrol_value_mask:
 5746              	.LVL461:
 5747              	.LFB612:
1021:Core/Src/AB1805.c ****   uint8_t c1;
 5748              		.loc 1 1021 1 is_stmt 1 view -0
 5749              		.cfi_startproc
 5750              		@ args = 0, pretend = 0, frame = 0
 5751              		@ frame_needed = 0, uses_anonymous_args = 0
1021:Core/Src/AB1805.c ****   uint8_t c1;
 5752              		.loc 1 1021 1 is_stmt 0 view .LVU1196
 5753 0000 70B5     		push	{r4, r5, r6, lr}
 5754              	.LCFI113:
 5755              		.cfi_def_cfa_offset 16
 5756              		.cfi_offset 4, -16
 5757              		.cfi_offset 5, -12
 5758              		.cfi_offset 6, -8
 5759              		.cfi_offset 14, -4
 5760 0002 0500     		movs	r5, r0
 5761 0004 0C00     		movs	r4, r1
1022:Core/Src/AB1805.c ****   c1 = get_outcontrol();
 5762              		.loc 1 1022 3 is_stmt 1 view .LVU1197
1023:Core/Src/AB1805.c ****   switch (mask)
 5763              		.loc 1 1023 3 view .LVU1198
1023:Core/Src/AB1805.c ****   switch (mask)
 5764              		.loc 1 1023 8 is_stmt 0 view .LVU1199
 5765 0006 FFF7FEFF 		bl	get_outcontrol
 5766              	.LVL462:
1024:Core/Src/AB1805.c ****   {
 5767              		.loc 1 1024 3 is_stmt 1 view .LVU1200
 5768 000a 202C     		cmp	r4, #32
 5769 000c 07D8     		bhi	.L284
 5770 000e 002C     		cmp	r4, #0
 5771 0010 0ED0     		beq	.L285
 5772 0012 202C     		cmp	r4, #32
 5773 0014 0CD8     		bhi	.L285
 5774 0016 A400     		lsls	r4, r4, #2
 5775 0018 224B     		ldr	r3, .L294
 5776 001a 1B59     		ldr	r3, [r3, r4]
 5777 001c 9F46     		mov	pc, r3
 5778              		.section	.rodata.set_outcontrol_value_mask,"a",%progbits
 5779              		.align	2
 5780              	.L287:
 5781 0000 30000000 		.word	.L285
 5782 0004 98000000 		.word	.L292
 5783 0008 88000000 		.word	.L291
 5784 000c 30000000 		.word	.L285
 5785 0010 78000000 		.word	.L290
 5786 0014 30000000 		.word	.L285
 5787 0018 30000000 		.word	.L285
 5788 001c 30000000 		.word	.L285
 5789 0020 68000000 		.word	.L289
 5790 0024 30000000 		.word	.L285
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 167


 5791 0028 30000000 		.word	.L285
 5792 002c 30000000 		.word	.L285
 5793 0030 30000000 		.word	.L285
 5794 0034 30000000 		.word	.L285
 5795 0038 30000000 		.word	.L285
 5796 003c 30000000 		.word	.L285
 5797 0040 58000000 		.word	.L288
 5798 0044 30000000 		.word	.L285
 5799 0048 30000000 		.word	.L285
 5800 004c 30000000 		.word	.L285
 5801 0050 30000000 		.word	.L285
 5802 0054 30000000 		.word	.L285
 5803 0058 30000000 		.word	.L285
 5804 005c 30000000 		.word	.L285
 5805 0060 30000000 		.word	.L285
 5806 0064 30000000 		.word	.L285
 5807 0068 30000000 		.word	.L285
 5808 006c 30000000 		.word	.L285
 5809 0070 30000000 		.word	.L285
 5810 0074 30000000 		.word	.L285
 5811 0078 30000000 		.word	.L285
 5812 007c 30000000 		.word	.L285
 5813 0080 48000000 		.word	.L286
 5814              		.section	.text.set_outcontrol_value_mask
 5815              	.L284:
 5816 001e 402C     		cmp	r4, #64
 5817 0020 0AD0     		beq	.L293
 5818 0022 802C     		cmp	r4, #128
 5819 0024 04D1     		bne	.L285
1027:Core/Src/AB1805.c ****     c1 |= (value << 7) & OCTRL_WDBM_MASK;
 5820              		.loc 1 1027 5 view .LVU1201
1027:Core/Src/AB1805.c ****     c1 |= (value << 7) & OCTRL_WDBM_MASK;
 5821              		.loc 1 1027 8 is_stmt 0 view .LVU1202
 5822 0026 7F23     		movs	r3, #127
 5823 0028 0340     		ands	r3, r0
 5824              	.LVL463:
1028:Core/Src/AB1805.c ****     break;
 5825              		.loc 1 1028 5 is_stmt 1 view .LVU1203
1028:Core/Src/AB1805.c ****     break;
 5826              		.loc 1 1028 18 is_stmt 0 view .LVU1204
 5827 002a ED01     		lsls	r5, r5, #7
1028:Core/Src/AB1805.c ****     break;
 5828              		.loc 1 1028 8 view .LVU1205
 5829 002c 1D43     		orrs	r5, r3
 5830 002e EDB2     		uxtb	r5, r5
 5831              	.LVL464:
1029:Core/Src/AB1805.c ****   case OCTRL_EXBM_MASK:
 5832              		.loc 1 1029 5 is_stmt 1 view .LVU1206
 5833              	.L285:
1065:Core/Src/AB1805.c **** }
 5834              		.loc 1 1065 3 view .LVU1207
1065:Core/Src/AB1805.c **** }
 5835              		.loc 1 1065 10 is_stmt 0 view .LVU1208
 5836 0030 2800     		movs	r0, r5
 5837 0032 FFF7FEFF 		bl	set_outcontrol_value
 5838              	.LVL465:
1066:Core/Src/AB1805.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 168


 5839              		.loc 1 1066 1 view .LVU1209
 5840              		@ sp needed
 5841              	.LVL466:
1066:Core/Src/AB1805.c **** 
 5842              		.loc 1 1066 1 view .LVU1210
 5843 0036 70BD     		pop	{r4, r5, r6, pc}
 5844              	.LVL467:
 5845              	.L293:
1031:Core/Src/AB1805.c ****     c1 |= (value << 6) & OCTRL_EXBM_MASK;
 5846              		.loc 1 1031 5 is_stmt 1 view .LVU1211
1031:Core/Src/AB1805.c ****     c1 |= (value << 6) & OCTRL_EXBM_MASK;
 5847              		.loc 1 1031 8 is_stmt 0 view .LVU1212
 5848 0038 4023     		movs	r3, #64
 5849 003a 9843     		bics	r0, r3
 5850              	.LVL468:
1031:Core/Src/AB1805.c ****     c1 |= (value << 6) & OCTRL_EXBM_MASK;
 5851              		.loc 1 1031 8 view .LVU1213
 5852 003c C0B2     		uxtb	r0, r0
 5853              	.LVL469:
1032:Core/Src/AB1805.c ****     break;
 5854              		.loc 1 1032 5 is_stmt 1 view .LVU1214
1032:Core/Src/AB1805.c ****     break;
 5855              		.loc 1 1032 18 is_stmt 0 view .LVU1215
 5856 003e AB01     		lsls	r3, r5, #6
1032:Core/Src/AB1805.c ****     break;
 5857              		.loc 1 1032 24 view .LVU1216
 5858 0040 4025     		movs	r5, #64
 5859 0042 1D40     		ands	r5, r3
1032:Core/Src/AB1805.c ****     break;
 5860              		.loc 1 1032 8 view .LVU1217
 5861 0044 0543     		orrs	r5, r0
 5862              	.LVL470:
1033:Core/Src/AB1805.c ****   case OCTRL_WDDS_MASK:
 5863              		.loc 1 1033 5 is_stmt 1 view .LVU1218
 5864 0046 F3E7     		b	.L285
 5865              	.LVL471:
 5866              	.L286:
1035:Core/Src/AB1805.c ****     c1 |= (value << 5) & OCTRL_WDDS_MASK;
 5867              		.loc 1 1035 5 view .LVU1219
1035:Core/Src/AB1805.c ****     c1 |= (value << 5) & OCTRL_WDDS_MASK;
 5868              		.loc 1 1035 8 is_stmt 0 view .LVU1220
 5869 0048 2023     		movs	r3, #32
 5870 004a 9843     		bics	r0, r3
 5871              	.LVL472:
1035:Core/Src/AB1805.c ****     c1 |= (value << 5) & OCTRL_WDDS_MASK;
 5872              		.loc 1 1035 8 view .LVU1221
 5873 004c C0B2     		uxtb	r0, r0
 5874              	.LVL473:
1036:Core/Src/AB1805.c ****     break;
 5875              		.loc 1 1036 5 is_stmt 1 view .LVU1222
1036:Core/Src/AB1805.c ****     break;
 5876              		.loc 1 1036 18 is_stmt 0 view .LVU1223
 5877 004e 6B01     		lsls	r3, r5, #5
1036:Core/Src/AB1805.c ****     break;
 5878              		.loc 1 1036 24 view .LVU1224
 5879 0050 2025     		movs	r5, #32
 5880 0052 1D40     		ands	r5, r3
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 169


1036:Core/Src/AB1805.c ****     break;
 5881              		.loc 1 1036 8 view .LVU1225
 5882 0054 0543     		orrs	r5, r0
 5883              	.LVL474:
1037:Core/Src/AB1805.c ****   case OCTRL_EXDS_MASK:
 5884              		.loc 1 1037 5 is_stmt 1 view .LVU1226
 5885 0056 EBE7     		b	.L285
 5886              	.LVL475:
 5887              	.L288:
1039:Core/Src/AB1805.c ****     c1 |= (value << 4) & OCTRL_EXDS_MASK;
 5888              		.loc 1 1039 5 view .LVU1227
1039:Core/Src/AB1805.c ****     c1 |= (value << 4) & OCTRL_EXDS_MASK;
 5889              		.loc 1 1039 8 is_stmt 0 view .LVU1228
 5890 0058 1023     		movs	r3, #16
 5891 005a 9843     		bics	r0, r3
 5892              	.LVL476:
1039:Core/Src/AB1805.c ****     c1 |= (value << 4) & OCTRL_EXDS_MASK;
 5893              		.loc 1 1039 8 view .LVU1229
 5894 005c C0B2     		uxtb	r0, r0
 5895              	.LVL477:
1040:Core/Src/AB1805.c ****     break;
 5896              		.loc 1 1040 5 is_stmt 1 view .LVU1230
1040:Core/Src/AB1805.c ****     break;
 5897              		.loc 1 1040 18 is_stmt 0 view .LVU1231
 5898 005e 2B01     		lsls	r3, r5, #4
1040:Core/Src/AB1805.c ****     break;
 5899              		.loc 1 1040 24 view .LVU1232
 5900 0060 1025     		movs	r5, #16
 5901 0062 1D40     		ands	r5, r3
1040:Core/Src/AB1805.c ****     break;
 5902              		.loc 1 1040 8 view .LVU1233
 5903 0064 0543     		orrs	r5, r0
 5904              	.LVL478:
1041:Core/Src/AB1805.c ****   case OCTRL_RSEN_MASK:
 5905              		.loc 1 1041 5 is_stmt 1 view .LVU1234
 5906 0066 E3E7     		b	.L285
 5907              	.LVL479:
 5908              	.L289:
1043:Core/Src/AB1805.c ****     c1 |= (value << 3) & OCTRL_RSEN_MASK;
 5909              		.loc 1 1043 5 view .LVU1235
1043:Core/Src/AB1805.c ****     c1 |= (value << 3) & OCTRL_RSEN_MASK;
 5910              		.loc 1 1043 8 is_stmt 0 view .LVU1236
 5911 0068 0823     		movs	r3, #8
 5912 006a 9843     		bics	r0, r3
 5913              	.LVL480:
1043:Core/Src/AB1805.c ****     c1 |= (value << 3) & OCTRL_RSEN_MASK;
 5914              		.loc 1 1043 8 view .LVU1237
 5915 006c C0B2     		uxtb	r0, r0
 5916              	.LVL481:
1044:Core/Src/AB1805.c ****     break;
 5917              		.loc 1 1044 5 is_stmt 1 view .LVU1238
1044:Core/Src/AB1805.c ****     break;
 5918              		.loc 1 1044 18 is_stmt 0 view .LVU1239
 5919 006e EB00     		lsls	r3, r5, #3
1044:Core/Src/AB1805.c ****     break;
 5920              		.loc 1 1044 24 view .LVU1240
 5921 0070 0825     		movs	r5, #8
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 170


 5922 0072 1D40     		ands	r5, r3
1044:Core/Src/AB1805.c ****     break;
 5923              		.loc 1 1044 8 view .LVU1241
 5924 0074 0543     		orrs	r5, r0
 5925              	.LVL482:
1045:Core/Src/AB1805.c ****   case OCTRL_O4EN_MASK:
 5926              		.loc 1 1045 5 is_stmt 1 view .LVU1242
 5927 0076 DBE7     		b	.L285
 5928              	.LVL483:
 5929              	.L290:
1047:Core/Src/AB1805.c ****     c1 |= (value << 2) & OCTRL_O4EN_MASK;
 5930              		.loc 1 1047 5 view .LVU1243
1047:Core/Src/AB1805.c ****     c1 |= (value << 2) & OCTRL_O4EN_MASK;
 5931              		.loc 1 1047 8 is_stmt 0 view .LVU1244
 5932 0078 0423     		movs	r3, #4
 5933 007a 9843     		bics	r0, r3
 5934              	.LVL484:
1047:Core/Src/AB1805.c ****     c1 |= (value << 2) & OCTRL_O4EN_MASK;
 5935              		.loc 1 1047 8 view .LVU1245
 5936 007c C0B2     		uxtb	r0, r0
 5937              	.LVL485:
1048:Core/Src/AB1805.c ****     break;
 5938              		.loc 1 1048 5 is_stmt 1 view .LVU1246
1048:Core/Src/AB1805.c ****     break;
 5939              		.loc 1 1048 18 is_stmt 0 view .LVU1247
 5940 007e AB00     		lsls	r3, r5, #2
1048:Core/Src/AB1805.c ****     break;
 5941              		.loc 1 1048 24 view .LVU1248
 5942 0080 0425     		movs	r5, #4
 5943 0082 1D40     		ands	r5, r3
1048:Core/Src/AB1805.c ****     break;
 5944              		.loc 1 1048 8 view .LVU1249
 5945 0084 0543     		orrs	r5, r0
 5946              	.LVL486:
1049:Core/Src/AB1805.c ****   case OCTRL_O3EN_MASK:
 5947              		.loc 1 1049 5 is_stmt 1 view .LVU1250
 5948 0086 D3E7     		b	.L285
 5949              	.LVL487:
 5950              	.L291:
1051:Core/Src/AB1805.c ****     c1 |= (value << 1) & OCTRL_O3EN_MASK;
 5951              		.loc 1 1051 5 view .LVU1251
1051:Core/Src/AB1805.c ****     c1 |= (value << 1) & OCTRL_O3EN_MASK;
 5952              		.loc 1 1051 8 is_stmt 0 view .LVU1252
 5953 0088 0223     		movs	r3, #2
 5954 008a 9843     		bics	r0, r3
 5955              	.LVL488:
1051:Core/Src/AB1805.c ****     c1 |= (value << 1) & OCTRL_O3EN_MASK;
 5956              		.loc 1 1051 8 view .LVU1253
 5957 008c C0B2     		uxtb	r0, r0
 5958              	.LVL489:
1052:Core/Src/AB1805.c ****     break;
 5959              		.loc 1 1052 5 is_stmt 1 view .LVU1254
1052:Core/Src/AB1805.c ****     break;
 5960              		.loc 1 1052 18 is_stmt 0 view .LVU1255
 5961 008e 6B00     		lsls	r3, r5, #1
1052:Core/Src/AB1805.c ****     break;
 5962              		.loc 1 1052 24 view .LVU1256
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 171


 5963 0090 0225     		movs	r5, #2
 5964 0092 1D40     		ands	r5, r3
1052:Core/Src/AB1805.c ****     break;
 5965              		.loc 1 1052 8 view .LVU1257
 5966 0094 0543     		orrs	r5, r0
 5967              	.LVL490:
1053:Core/Src/AB1805.c ****   case OCTRL_O1EN_MASK:
 5968              		.loc 1 1053 5 is_stmt 1 view .LVU1258
 5969 0096 CBE7     		b	.L285
 5970              	.LVL491:
 5971              	.L292:
1055:Core/Src/AB1805.c ****     c1 |= (value)&OCTRL_O1EN_MASK;
 5972              		.loc 1 1055 5 view .LVU1259
1055:Core/Src/AB1805.c ****     c1 |= (value)&OCTRL_O1EN_MASK;
 5973              		.loc 1 1055 8 is_stmt 0 view .LVU1260
 5974 0098 0123     		movs	r3, #1
 5975 009a 9843     		bics	r0, r3
 5976              	.LVL492:
1055:Core/Src/AB1805.c ****     c1 |= (value)&OCTRL_O1EN_MASK;
 5977              		.loc 1 1055 8 view .LVU1261
 5978 009c C0B2     		uxtb	r0, r0
 5979              	.LVL493:
1056:Core/Src/AB1805.c ****     break;
 5980              		.loc 1 1056 5 is_stmt 1 view .LVU1262
 5981 009e 1D40     		ands	r5, r3
 5982 00a0 0543     		orrs	r5, r0
 5983              	.LVL494:
1057:Core/Src/AB1805.c ****   case CCTRL_SLEEP_MODE_MASK:
 5984              		.loc 1 1057 5 view .LVU1263
 5985 00a2 C5E7     		b	.L285
 5986              	.L295:
 5987              		.align	2
 5988              	.L294:
 5989 00a4 00000000 		.word	.L287
 5990              		.cfi_endproc
 5991              	.LFE612:
 5993              		.section	.text.get_osc_control,"ax",%progbits
 5994              		.align	1
 5995              		.global	get_osc_control
 5996              		.syntax unified
 5997              		.code	16
 5998              		.thumb_func
 6000              	get_osc_control:
 6001              	.LFB613:
1070:Core/Src/AB1805.c ****   _osc_control = read_rtc_register(OSC_CONTROL_REGISTER);
 6002              		.loc 1 1070 1 view -0
 6003              		.cfi_startproc
 6004              		@ args = 0, pretend = 0, frame = 0
 6005              		@ frame_needed = 0, uses_anonymous_args = 0
 6006 0000 10B5     		push	{r4, lr}
 6007              	.LCFI114:
 6008              		.cfi_def_cfa_offset 8
 6009              		.cfi_offset 4, -8
 6010              		.cfi_offset 14, -4
1071:Core/Src/AB1805.c ****   return _osc_control;
 6011              		.loc 1 1071 3 view .LVU1265
1071:Core/Src/AB1805.c ****   return _osc_control;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 172


 6012              		.loc 1 1071 18 is_stmt 0 view .LVU1266
 6013 0002 1C20     		movs	r0, #28
 6014 0004 FFF7FEFF 		bl	read_rtc_register
 6015              	.LVL495:
1071:Core/Src/AB1805.c ****   return _osc_control;
 6016              		.loc 1 1071 16 view .LVU1267
 6017 0008 014B     		ldr	r3, .L297
 6018 000a 1870     		strb	r0, [r3]
1072:Core/Src/AB1805.c **** }
 6019              		.loc 1 1072 3 is_stmt 1 view .LVU1268
1073:Core/Src/AB1805.c **** 
 6020              		.loc 1 1073 1 is_stmt 0 view .LVU1269
 6021              		@ sp needed
 6022 000c 10BD     		pop	{r4, pc}
 6023              	.L298:
 6024 000e C046     		.align	2
 6025              	.L297:
 6026 0010 00000000 		.word	_osc_control
 6027              		.cfi_endproc
 6028              	.LFE613:
 6030              		.section	.text.get_osc_control_mask,"ax",%progbits
 6031              		.align	1
 6032              		.global	get_osc_control_mask
 6033              		.syntax unified
 6034              		.code	16
 6035              		.thumb_func
 6037              	get_osc_control_mask:
 6038              	.LVL496:
 6039              	.LFB614:
1076:Core/Src/AB1805.c ****   uint8_t ret;
 6040              		.loc 1 1076 1 is_stmt 1 view -0
 6041              		.cfi_startproc
 6042              		@ args = 0, pretend = 0, frame = 0
 6043              		@ frame_needed = 0, uses_anonymous_args = 0
1076:Core/Src/AB1805.c ****   uint8_t ret;
 6044              		.loc 1 1076 1 is_stmt 0 view .LVU1271
 6045 0000 10B5     		push	{r4, lr}
 6046              	.LCFI115:
 6047              		.cfi_def_cfa_offset 8
 6048              		.cfi_offset 4, -8
 6049              		.cfi_offset 14, -4
 6050 0002 0400     		movs	r4, r0
1077:Core/Src/AB1805.c ****   ret = get_osc_control() & mask;
 6051              		.loc 1 1077 3 is_stmt 1 view .LVU1272
1078:Core/Src/AB1805.c ****   switch (mask)
 6052              		.loc 1 1078 3 view .LVU1273
1078:Core/Src/AB1805.c ****   switch (mask)
 6053              		.loc 1 1078 9 is_stmt 0 view .LVU1274
 6054 0004 FFF7FEFF 		bl	get_osc_control
 6055              	.LVL497:
1078:Core/Src/AB1805.c ****   switch (mask)
 6056              		.loc 1 1078 7 view .LVU1275
 6057 0008 2040     		ands	r0, r4
 6058              	.LVL498:
1079:Core/Src/AB1805.c ****   {
 6059              		.loc 1 1079 3 is_stmt 1 view .LVU1276
 6060 000a 102C     		cmp	r4, #16
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 173


 6061 000c 07D8     		bhi	.L300
 6062 000e 002C     		cmp	r4, #0
 6063 0010 15D0     		beq	.L301
 6064 0012 102C     		cmp	r4, #16
 6065 0014 13D8     		bhi	.L301
 6066 0016 A400     		lsls	r4, r4, #2
 6067 0018 0A4B     		ldr	r3, .L309
 6068 001a 1B59     		ldr	r3, [r3, r4]
 6069 001c 9F46     		mov	pc, r3
 6070              		.section	.rodata.get_osc_control_mask,"a",%progbits
 6071              		.align	2
 6072              	.L303:
 6073 0000 3E000000 		.word	.L301
 6074 0004 28000000 		.word	.L307
 6075 0008 3A000000 		.word	.L306
 6076 000c 3E000000 		.word	.L301
 6077 0010 36000000 		.word	.L305
 6078 0014 3E000000 		.word	.L301
 6079 0018 3E000000 		.word	.L301
 6080 001c 3E000000 		.word	.L301
 6081 0020 32000000 		.word	.L304
 6082 0024 3E000000 		.word	.L301
 6083 0028 3E000000 		.word	.L301
 6084 002c 3E000000 		.word	.L301
 6085 0030 3E000000 		.word	.L301
 6086 0034 3E000000 		.word	.L301
 6087 0038 3E000000 		.word	.L301
 6088 003c 3E000000 		.word	.L301
 6089 0040 2E000000 		.word	.L302
 6090              		.section	.text.get_osc_control_mask
 6091              	.L300:
 6092 001e 602C     		cmp	r4, #96
 6093 0020 03D0     		beq	.L308
 6094 0022 802C     		cmp	r4, #128
 6095 0024 0BD1     		bne	.L301
1082:Core/Src/AB1805.c ****     break;
 6096              		.loc 1 1082 5 view .LVU1277
1082:Core/Src/AB1805.c ****     break;
 6097              		.loc 1 1082 9 is_stmt 0 view .LVU1278
 6098 0026 C009     		lsrs	r0, r0, #7
 6099              	.LVL499:
1083:Core/Src/AB1805.c ****   case OSC_CONTROL_ACAL_MASK:
 6100              		.loc 1 1083 5 is_stmt 1 view .LVU1279
 6101              	.L307:
1105:Core/Src/AB1805.c **** }
 6102              		.loc 1 1105 3 view .LVU1280
1106:Core/Src/AB1805.c **** 
 6103              		.loc 1 1106 1 is_stmt 0 view .LVU1281
 6104              		@ sp needed
 6105 0028 10BD     		pop	{r4, pc}
 6106              	.L308:
1085:Core/Src/AB1805.c ****     break;
 6107              		.loc 1 1085 5 is_stmt 1 view .LVU1282
1085:Core/Src/AB1805.c ****     break;
 6108              		.loc 1 1085 9 is_stmt 0 view .LVU1283
 6109 002a 4009     		lsrs	r0, r0, #5
 6110              	.LVL500:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 174


1086:Core/Src/AB1805.c ****   case OSC_CONTROL_AOS_MASK:
 6111              		.loc 1 1086 5 is_stmt 1 view .LVU1284
 6112 002c FCE7     		b	.L307
 6113              	.L302:
1088:Core/Src/AB1805.c ****     break;
 6114              		.loc 1 1088 5 view .LVU1285
1088:Core/Src/AB1805.c ****     break;
 6115              		.loc 1 1088 9 is_stmt 0 view .LVU1286
 6116 002e 0009     		lsrs	r0, r0, #4
 6117              	.LVL501:
1089:Core/Src/AB1805.c ****   case OSC_CONTROL_FOS_MASK:
 6118              		.loc 1 1089 5 is_stmt 1 view .LVU1287
 6119 0030 FAE7     		b	.L307
 6120              	.L304:
1091:Core/Src/AB1805.c ****     break;
 6121              		.loc 1 1091 5 view .LVU1288
1091:Core/Src/AB1805.c ****     break;
 6122              		.loc 1 1091 9 is_stmt 0 view .LVU1289
 6123 0032 C008     		lsrs	r0, r0, #3
 6124              	.LVL502:
1092:Core/Src/AB1805.c ****   case OSC_CONTROL_PWGT_MASK:
 6125              		.loc 1 1092 5 is_stmt 1 view .LVU1290
 6126 0034 F8E7     		b	.L307
 6127              	.L305:
1094:Core/Src/AB1805.c ****     break;
 6128              		.loc 1 1094 5 view .LVU1291
1094:Core/Src/AB1805.c ****     break;
 6129              		.loc 1 1094 9 is_stmt 0 view .LVU1292
 6130 0036 8008     		lsrs	r0, r0, #2
 6131              	.LVL503:
1095:Core/Src/AB1805.c ****   case OSC_CONTROL_OFIE_MASK:
 6132              		.loc 1 1095 5 is_stmt 1 view .LVU1293
 6133 0038 F6E7     		b	.L307
 6134              	.L306:
1097:Core/Src/AB1805.c ****     break;
 6135              		.loc 1 1097 5 view .LVU1294
1097:Core/Src/AB1805.c ****     break;
 6136              		.loc 1 1097 9 is_stmt 0 view .LVU1295
 6137 003a 4008     		lsrs	r0, r0, #1
 6138              	.LVL504:
1098:Core/Src/AB1805.c ****   case OSC_CONTROL_ACIE_MASK:
 6139              		.loc 1 1098 5 is_stmt 1 view .LVU1296
 6140 003c F4E7     		b	.L307
 6141              	.L301:
1103:Core/Src/AB1805.c ****   }
 6142              		.loc 1 1103 5 view .LVU1297
1103:Core/Src/AB1805.c ****   }
 6143              		.loc 1 1103 9 is_stmt 0 view .LVU1298
 6144 003e 024B     		ldr	r3, .L309+4
 6145 0040 1878     		ldrb	r0, [r3]
 6146              	.LVL505:
1103:Core/Src/AB1805.c ****   }
 6147              		.loc 1 1103 9 view .LVU1299
 6148 0042 F1E7     		b	.L307
 6149              	.L310:
 6150              		.align	2
 6151              	.L309:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 175


 6152 0044 00000000 		.word	.L303
 6153 0048 00000000 		.word	_osc_control
 6154              		.cfi_endproc
 6155              	.LFE614:
 6157              		.section	.text.set_osc_control_value,"ax",%progbits
 6158              		.align	1
 6159              		.global	set_osc_control_value
 6160              		.syntax unified
 6161              		.code	16
 6162              		.thumb_func
 6164              	set_osc_control_value:
 6165              	.LVL506:
 6166              	.LFB615:
1109:Core/Src/AB1805.c ****   write_rtc_register(OSC_CONTROL_REGISTER, value);
 6167              		.loc 1 1109 1 is_stmt 1 view -0
 6168              		.cfi_startproc
 6169              		@ args = 0, pretend = 0, frame = 0
 6170              		@ frame_needed = 0, uses_anonymous_args = 0
1109:Core/Src/AB1805.c ****   write_rtc_register(OSC_CONTROL_REGISTER, value);
 6171              		.loc 1 1109 1 is_stmt 0 view .LVU1301
 6172 0000 10B5     		push	{r4, lr}
 6173              	.LCFI116:
 6174              		.cfi_def_cfa_offset 8
 6175              		.cfi_offset 4, -8
 6176              		.cfi_offset 14, -4
 6177 0002 0100     		movs	r1, r0
1110:Core/Src/AB1805.c ****   _osc_control = read_rtc_register(OSC_CONTROL_REGISTER);
 6178              		.loc 1 1110 3 is_stmt 1 view .LVU1302
 6179 0004 1C20     		movs	r0, #28
 6180              	.LVL507:
1110:Core/Src/AB1805.c ****   _osc_control = read_rtc_register(OSC_CONTROL_REGISTER);
 6181              		.loc 1 1110 3 is_stmt 0 view .LVU1303
 6182 0006 FFF7FEFF 		bl	write_rtc_register
 6183              	.LVL508:
1111:Core/Src/AB1805.c ****   return _osc_control;
 6184              		.loc 1 1111 3 is_stmt 1 view .LVU1304
1111:Core/Src/AB1805.c ****   return _osc_control;
 6185              		.loc 1 1111 18 is_stmt 0 view .LVU1305
 6186 000a 1C20     		movs	r0, #28
 6187 000c FFF7FEFF 		bl	read_rtc_register
 6188              	.LVL509:
1111:Core/Src/AB1805.c ****   return _osc_control;
 6189              		.loc 1 1111 16 view .LVU1306
 6190 0010 014B     		ldr	r3, .L312
 6191 0012 1870     		strb	r0, [r3]
1112:Core/Src/AB1805.c **** }
 6192              		.loc 1 1112 3 is_stmt 1 view .LVU1307
1113:Core/Src/AB1805.c **** 
 6193              		.loc 1 1113 1 is_stmt 0 view .LVU1308
 6194              		@ sp needed
 6195 0014 10BD     		pop	{r4, pc}
 6196              	.L313:
 6197 0016 C046     		.align	2
 6198              	.L312:
 6199 0018 00000000 		.word	_osc_control
 6200              		.cfi_endproc
 6201              	.LFE615:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 176


 6203              		.section	.text.set_osc_control_value_mask,"ax",%progbits
 6204              		.align	1
 6205              		.global	set_osc_control_value_mask
 6206              		.syntax unified
 6207              		.code	16
 6208              		.thumb_func
 6210              	set_osc_control_value_mask:
 6211              	.LVL510:
 6212              	.LFB616:
1116:Core/Src/AB1805.c ****   uint8_t c1;
 6213              		.loc 1 1116 1 is_stmt 1 view -0
 6214              		.cfi_startproc
 6215              		@ args = 0, pretend = 0, frame = 0
 6216              		@ frame_needed = 0, uses_anonymous_args = 0
1116:Core/Src/AB1805.c ****   uint8_t c1;
 6217              		.loc 1 1116 1 is_stmt 0 view .LVU1310
 6218 0000 70B5     		push	{r4, r5, r6, lr}
 6219              	.LCFI117:
 6220              		.cfi_def_cfa_offset 16
 6221              		.cfi_offset 4, -16
 6222              		.cfi_offset 5, -12
 6223              		.cfi_offset 6, -8
 6224              		.cfi_offset 14, -4
 6225 0002 0500     		movs	r5, r0
 6226 0004 0C00     		movs	r4, r1
1117:Core/Src/AB1805.c ****   c1 = get_osc_control();
 6227              		.loc 1 1117 3 is_stmt 1 view .LVU1311
1118:Core/Src/AB1805.c ****   switch (mask)
 6228              		.loc 1 1118 3 view .LVU1312
1118:Core/Src/AB1805.c ****   switch (mask)
 6229              		.loc 1 1118 8 is_stmt 0 view .LVU1313
 6230 0006 FFF7FEFF 		bl	get_osc_control
 6231              	.LVL511:
1119:Core/Src/AB1805.c ****   {
 6232              		.loc 1 1119 3 is_stmt 1 view .LVU1314
 6233 000a 102C     		cmp	r4, #16
 6234 000c 07D8     		bhi	.L315
 6235 000e 002C     		cmp	r4, #0
 6236 0010 0ED0     		beq	.L316
 6237 0012 102C     		cmp	r4, #16
 6238 0014 0CD8     		bhi	.L316
 6239 0016 A400     		lsls	r4, r4, #2
 6240 0018 1E4B     		ldr	r3, .L324
 6241 001a 1B59     		ldr	r3, [r3, r4]
 6242 001c 9F46     		mov	pc, r3
 6243              		.section	.rodata.set_osc_control_value_mask,"a",%progbits
 6244              		.align	2
 6245              	.L318:
 6246 0000 30000000 		.word	.L316
 6247 0004 88000000 		.word	.L322
 6248 0008 78000000 		.word	.L321
 6249 000c 30000000 		.word	.L316
 6250 0010 68000000 		.word	.L320
 6251 0014 30000000 		.word	.L316
 6252 0018 30000000 		.word	.L316
 6253 001c 30000000 		.word	.L316
 6254 0020 58000000 		.word	.L319
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 177


 6255 0024 30000000 		.word	.L316
 6256 0028 30000000 		.word	.L316
 6257 002c 30000000 		.word	.L316
 6258 0030 30000000 		.word	.L316
 6259 0034 30000000 		.word	.L316
 6260 0038 30000000 		.word	.L316
 6261 003c 30000000 		.word	.L316
 6262 0040 48000000 		.word	.L317
 6263              		.section	.text.set_osc_control_value_mask
 6264              	.L315:
 6265 001e 602C     		cmp	r4, #96
 6266 0020 0AD0     		beq	.L323
 6267 0022 802C     		cmp	r4, #128
 6268 0024 04D1     		bne	.L316
1122:Core/Src/AB1805.c ****     c1 |= (value << 7) & OSC_CONTROL_OSEL_MASK;
 6269              		.loc 1 1122 5 view .LVU1315
1122:Core/Src/AB1805.c ****     c1 |= (value << 7) & OSC_CONTROL_OSEL_MASK;
 6270              		.loc 1 1122 8 is_stmt 0 view .LVU1316
 6271 0026 7F23     		movs	r3, #127
 6272 0028 0340     		ands	r3, r0
 6273              	.LVL512:
1123:Core/Src/AB1805.c ****     break;
 6274              		.loc 1 1123 5 is_stmt 1 view .LVU1317
1123:Core/Src/AB1805.c ****     break;
 6275              		.loc 1 1123 18 is_stmt 0 view .LVU1318
 6276 002a ED01     		lsls	r5, r5, #7
1123:Core/Src/AB1805.c ****     break;
 6277              		.loc 1 1123 8 view .LVU1319
 6278 002c 1D43     		orrs	r5, r3
 6279 002e EDB2     		uxtb	r5, r5
 6280              	.LVL513:
1124:Core/Src/AB1805.c ****   case OSC_CONTROL_ACAL_MASK:
 6281              		.loc 1 1124 5 is_stmt 1 view .LVU1320
 6282              	.L316:
1152:Core/Src/AB1805.c **** }
 6283              		.loc 1 1152 3 view .LVU1321
1152:Core/Src/AB1805.c **** }
 6284              		.loc 1 1152 10 is_stmt 0 view .LVU1322
 6285 0030 2800     		movs	r0, r5
 6286 0032 FFF7FEFF 		bl	set_osc_control_value
 6287              	.LVL514:
1153:Core/Src/AB1805.c **** 
 6288              		.loc 1 1153 1 view .LVU1323
 6289              		@ sp needed
 6290              	.LVL515:
1153:Core/Src/AB1805.c **** 
 6291              		.loc 1 1153 1 view .LVU1324
 6292 0036 70BD     		pop	{r4, r5, r6, pc}
 6293              	.LVL516:
 6294              	.L323:
1126:Core/Src/AB1805.c ****     c1 |= (value << 5) & OSC_CONTROL_ACAL_MASK;
 6295              		.loc 1 1126 5 is_stmt 1 view .LVU1325
1126:Core/Src/AB1805.c ****     c1 |= (value << 5) & OSC_CONTROL_ACAL_MASK;
 6296              		.loc 1 1126 8 is_stmt 0 view .LVU1326
 6297 0038 6023     		movs	r3, #96
 6298 003a 9843     		bics	r0, r3
 6299              	.LVL517:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 178


1126:Core/Src/AB1805.c ****     c1 |= (value << 5) & OSC_CONTROL_ACAL_MASK;
 6300              		.loc 1 1126 8 view .LVU1327
 6301 003c C0B2     		uxtb	r0, r0
 6302              	.LVL518:
1127:Core/Src/AB1805.c ****     break;
 6303              		.loc 1 1127 5 is_stmt 1 view .LVU1328
1127:Core/Src/AB1805.c ****     break;
 6304              		.loc 1 1127 18 is_stmt 0 view .LVU1329
 6305 003e 6B01     		lsls	r3, r5, #5
1127:Core/Src/AB1805.c ****     break;
 6306              		.loc 1 1127 24 view .LVU1330
 6307 0040 6025     		movs	r5, #96
 6308 0042 1D40     		ands	r5, r3
1127:Core/Src/AB1805.c ****     break;
 6309              		.loc 1 1127 8 view .LVU1331
 6310 0044 0543     		orrs	r5, r0
 6311              	.LVL519:
1128:Core/Src/AB1805.c ****   case OSC_CONTROL_AOS_MASK:
 6312              		.loc 1 1128 5 is_stmt 1 view .LVU1332
 6313 0046 F3E7     		b	.L316
 6314              	.LVL520:
 6315              	.L317:
1130:Core/Src/AB1805.c ****     c1 |= (value << 4) & OSC_CONTROL_AOS_MASK;
 6316              		.loc 1 1130 5 view .LVU1333
1130:Core/Src/AB1805.c ****     c1 |= (value << 4) & OSC_CONTROL_AOS_MASK;
 6317              		.loc 1 1130 8 is_stmt 0 view .LVU1334
 6318 0048 1023     		movs	r3, #16
 6319 004a 9843     		bics	r0, r3
 6320              	.LVL521:
1130:Core/Src/AB1805.c ****     c1 |= (value << 4) & OSC_CONTROL_AOS_MASK;
 6321              		.loc 1 1130 8 view .LVU1335
 6322 004c C0B2     		uxtb	r0, r0
 6323              	.LVL522:
1131:Core/Src/AB1805.c ****     break;
 6324              		.loc 1 1131 5 is_stmt 1 view .LVU1336
1131:Core/Src/AB1805.c ****     break;
 6325              		.loc 1 1131 18 is_stmt 0 view .LVU1337
 6326 004e 2B01     		lsls	r3, r5, #4
1131:Core/Src/AB1805.c ****     break;
 6327              		.loc 1 1131 24 view .LVU1338
 6328 0050 1025     		movs	r5, #16
 6329 0052 1D40     		ands	r5, r3
1131:Core/Src/AB1805.c ****     break;
 6330              		.loc 1 1131 8 view .LVU1339
 6331 0054 0543     		orrs	r5, r0
 6332              	.LVL523:
1132:Core/Src/AB1805.c ****   case OSC_CONTROL_FOS_MASK:
 6333              		.loc 1 1132 5 is_stmt 1 view .LVU1340
 6334 0056 EBE7     		b	.L316
 6335              	.LVL524:
 6336              	.L319:
1134:Core/Src/AB1805.c ****     c1 |= (value << 3) & OSC_CONTROL_FOS_MASK;
 6337              		.loc 1 1134 5 view .LVU1341
1134:Core/Src/AB1805.c ****     c1 |= (value << 3) & OSC_CONTROL_FOS_MASK;
 6338              		.loc 1 1134 8 is_stmt 0 view .LVU1342
 6339 0058 0823     		movs	r3, #8
 6340 005a 9843     		bics	r0, r3
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 179


 6341              	.LVL525:
1134:Core/Src/AB1805.c ****     c1 |= (value << 3) & OSC_CONTROL_FOS_MASK;
 6342              		.loc 1 1134 8 view .LVU1343
 6343 005c C0B2     		uxtb	r0, r0
 6344              	.LVL526:
1135:Core/Src/AB1805.c ****     break;
 6345              		.loc 1 1135 5 is_stmt 1 view .LVU1344
1135:Core/Src/AB1805.c ****     break;
 6346              		.loc 1 1135 18 is_stmt 0 view .LVU1345
 6347 005e EB00     		lsls	r3, r5, #3
1135:Core/Src/AB1805.c ****     break;
 6348              		.loc 1 1135 24 view .LVU1346
 6349 0060 0825     		movs	r5, #8
 6350 0062 1D40     		ands	r5, r3
1135:Core/Src/AB1805.c ****     break;
 6351              		.loc 1 1135 8 view .LVU1347
 6352 0064 0543     		orrs	r5, r0
 6353              	.LVL527:
1136:Core/Src/AB1805.c ****   case OSC_CONTROL_PWGT_MASK:
 6354              		.loc 1 1136 5 is_stmt 1 view .LVU1348
 6355 0066 E3E7     		b	.L316
 6356              	.LVL528:
 6357              	.L320:
1138:Core/Src/AB1805.c ****     c1 |= (value << 2) & OSC_CONTROL_PWGT_MASK;
 6358              		.loc 1 1138 5 view .LVU1349
1138:Core/Src/AB1805.c ****     c1 |= (value << 2) & OSC_CONTROL_PWGT_MASK;
 6359              		.loc 1 1138 8 is_stmt 0 view .LVU1350
 6360 0068 0423     		movs	r3, #4
 6361 006a 9843     		bics	r0, r3
 6362              	.LVL529:
1138:Core/Src/AB1805.c ****     c1 |= (value << 2) & OSC_CONTROL_PWGT_MASK;
 6363              		.loc 1 1138 8 view .LVU1351
 6364 006c C0B2     		uxtb	r0, r0
 6365              	.LVL530:
1139:Core/Src/AB1805.c ****     break;
 6366              		.loc 1 1139 5 is_stmt 1 view .LVU1352
1139:Core/Src/AB1805.c ****     break;
 6367              		.loc 1 1139 18 is_stmt 0 view .LVU1353
 6368 006e AB00     		lsls	r3, r5, #2
1139:Core/Src/AB1805.c ****     break;
 6369              		.loc 1 1139 24 view .LVU1354
 6370 0070 0425     		movs	r5, #4
 6371 0072 1D40     		ands	r5, r3
1139:Core/Src/AB1805.c ****     break;
 6372              		.loc 1 1139 8 view .LVU1355
 6373 0074 0543     		orrs	r5, r0
 6374              	.LVL531:
1140:Core/Src/AB1805.c ****   case OSC_CONTROL_OFIE_MASK:
 6375              		.loc 1 1140 5 is_stmt 1 view .LVU1356
 6376 0076 DBE7     		b	.L316
 6377              	.LVL532:
 6378              	.L321:
1142:Core/Src/AB1805.c ****     c1 |= (value << 1) & OSC_CONTROL_OFIE_MASK;
 6379              		.loc 1 1142 5 view .LVU1357
1142:Core/Src/AB1805.c ****     c1 |= (value << 1) & OSC_CONTROL_OFIE_MASK;
 6380              		.loc 1 1142 8 is_stmt 0 view .LVU1358
 6381 0078 0223     		movs	r3, #2
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 180


 6382 007a 9843     		bics	r0, r3
 6383              	.LVL533:
1142:Core/Src/AB1805.c ****     c1 |= (value << 1) & OSC_CONTROL_OFIE_MASK;
 6384              		.loc 1 1142 8 view .LVU1359
 6385 007c C0B2     		uxtb	r0, r0
 6386              	.LVL534:
1143:Core/Src/AB1805.c ****     break;
 6387              		.loc 1 1143 5 is_stmt 1 view .LVU1360
1143:Core/Src/AB1805.c ****     break;
 6388              		.loc 1 1143 18 is_stmt 0 view .LVU1361
 6389 007e 6B00     		lsls	r3, r5, #1
1143:Core/Src/AB1805.c ****     break;
 6390              		.loc 1 1143 24 view .LVU1362
 6391 0080 0225     		movs	r5, #2
 6392 0082 1D40     		ands	r5, r3
1143:Core/Src/AB1805.c ****     break;
 6393              		.loc 1 1143 8 view .LVU1363
 6394 0084 0543     		orrs	r5, r0
 6395              	.LVL535:
1144:Core/Src/AB1805.c ****   case OSC_CONTROL_ACIE_MASK:
 6396              		.loc 1 1144 5 is_stmt 1 view .LVU1364
 6397 0086 D3E7     		b	.L316
 6398              	.LVL536:
 6399              	.L322:
1146:Core/Src/AB1805.c ****     c1 |= (value)&OSC_CONTROL_ACIE_MASK;
 6400              		.loc 1 1146 5 view .LVU1365
1146:Core/Src/AB1805.c ****     c1 |= (value)&OSC_CONTROL_ACIE_MASK;
 6401              		.loc 1 1146 8 is_stmt 0 view .LVU1366
 6402 0088 0123     		movs	r3, #1
 6403 008a 9843     		bics	r0, r3
 6404              	.LVL537:
1146:Core/Src/AB1805.c ****     c1 |= (value)&OSC_CONTROL_ACIE_MASK;
 6405              		.loc 1 1146 8 view .LVU1367
 6406 008c C0B2     		uxtb	r0, r0
 6407              	.LVL538:
1147:Core/Src/AB1805.c ****     break;
 6408              		.loc 1 1147 5 is_stmt 1 view .LVU1368
 6409 008e 1D40     		ands	r5, r3
 6410 0090 0543     		orrs	r5, r0
 6411              	.LVL539:
1148:Core/Src/AB1805.c ****   default:
 6412              		.loc 1 1148 5 view .LVU1369
 6413 0092 CDE7     		b	.L316
 6414              	.L325:
 6415              		.align	2
 6416              	.L324:
 6417 0094 00000000 		.word	.L318
 6418              		.cfi_endproc
 6419              	.LFE616:
 6421              		.section	.text.get_WDT_register,"ax",%progbits
 6422              		.align	1
 6423              		.global	get_WDT_register
 6424              		.syntax unified
 6425              		.code	16
 6426              		.thumb_func
 6428              	get_WDT_register:
 6429              	.LFB617:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 181


1157:Core/Src/AB1805.c ****   _wdt_register = read_rtc_register(WDT_REGISTER);
 6430              		.loc 1 1157 1 view -0
 6431              		.cfi_startproc
 6432              		@ args = 0, pretend = 0, frame = 0
 6433              		@ frame_needed = 0, uses_anonymous_args = 0
 6434 0000 10B5     		push	{r4, lr}
 6435              	.LCFI118:
 6436              		.cfi_def_cfa_offset 8
 6437              		.cfi_offset 4, -8
 6438              		.cfi_offset 14, -4
1158:Core/Src/AB1805.c ****   return _wdt_register;
 6439              		.loc 1 1158 3 view .LVU1371
1158:Core/Src/AB1805.c ****   return _wdt_register;
 6440              		.loc 1 1158 19 is_stmt 0 view .LVU1372
 6441 0002 1B20     		movs	r0, #27
 6442 0004 FFF7FEFF 		bl	read_rtc_register
 6443              	.LVL540:
1158:Core/Src/AB1805.c ****   return _wdt_register;
 6444              		.loc 1 1158 17 view .LVU1373
 6445 0008 014B     		ldr	r3, .L327
 6446 000a 1870     		strb	r0, [r3]
1159:Core/Src/AB1805.c **** }
 6447              		.loc 1 1159 3 is_stmt 1 view .LVU1374
1160:Core/Src/AB1805.c **** 
 6448              		.loc 1 1160 1 is_stmt 0 view .LVU1375
 6449              		@ sp needed
 6450 000c 10BD     		pop	{r4, pc}
 6451              	.L328:
 6452 000e C046     		.align	2
 6453              	.L327:
 6454 0010 00000000 		.word	_wdt_register
 6455              		.cfi_endproc
 6456              	.LFE617:
 6458              		.section	.text.get_WDT_register_mask,"ax",%progbits
 6459              		.align	1
 6460              		.global	get_WDT_register_mask
 6461              		.syntax unified
 6462              		.code	16
 6463              		.thumb_func
 6465              	get_WDT_register_mask:
 6466              	.LVL541:
 6467              	.LFB618:
1163:Core/Src/AB1805.c ****   uint8_t ret;
 6468              		.loc 1 1163 1 is_stmt 1 view -0
 6469              		.cfi_startproc
 6470              		@ args = 0, pretend = 0, frame = 0
 6471              		@ frame_needed = 0, uses_anonymous_args = 0
1163:Core/Src/AB1805.c ****   uint8_t ret;
 6472              		.loc 1 1163 1 is_stmt 0 view .LVU1377
 6473 0000 10B5     		push	{r4, lr}
 6474              	.LCFI119:
 6475              		.cfi_def_cfa_offset 8
 6476              		.cfi_offset 4, -8
 6477              		.cfi_offset 14, -4
 6478 0002 0400     		movs	r4, r0
1164:Core/Src/AB1805.c ****   ret = get_WDT_register() & mask;
 6479              		.loc 1 1164 3 is_stmt 1 view .LVU1378
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 182


1165:Core/Src/AB1805.c ****   switch (mask)
 6480              		.loc 1 1165 3 view .LVU1379
1165:Core/Src/AB1805.c ****   switch (mask)
 6481              		.loc 1 1165 9 is_stmt 0 view .LVU1380
 6482 0004 FFF7FEFF 		bl	get_WDT_register
 6483              	.LVL542:
1165:Core/Src/AB1805.c ****   switch (mask)
 6484              		.loc 1 1165 7 view .LVU1381
 6485 0008 2040     		ands	r0, r4
 6486              	.LVL543:
1166:Core/Src/AB1805.c ****   {
 6487              		.loc 1 1166 3 is_stmt 1 view .LVU1382
 6488 000a 7C2C     		cmp	r4, #124
 6489 000c 08D0     		beq	.L330
 6490 000e 802C     		cmp	r4, #128
 6491 0010 04D0     		beq	.L331
 6492 0012 032C     		cmp	r4, #3
 6493 0014 03D0     		beq	.L332
1178:Core/Src/AB1805.c ****   }
 6494              		.loc 1 1178 5 view .LVU1383
1178:Core/Src/AB1805.c ****   }
 6495              		.loc 1 1178 9 is_stmt 0 view .LVU1384
 6496 0016 034B     		ldr	r3, .L335
 6497 0018 1878     		ldrb	r0, [r3]
 6498              	.LVL544:
1178:Core/Src/AB1805.c ****   }
 6499              		.loc 1 1178 9 view .LVU1385
 6500 001a 00E0     		b	.L332
 6501              	.L331:
1169:Core/Src/AB1805.c ****     break;
 6502              		.loc 1 1169 5 is_stmt 1 view .LVU1386
1169:Core/Src/AB1805.c ****     break;
 6503              		.loc 1 1169 9 is_stmt 0 view .LVU1387
 6504 001c C009     		lsrs	r0, r0, #7
 6505              	.LVL545:
1170:Core/Src/AB1805.c ****   case WDT_REGISTER_BMB_MASK:
 6506              		.loc 1 1170 5 is_stmt 1 view .LVU1388
 6507              	.L332:
1180:Core/Src/AB1805.c **** }
 6508              		.loc 1 1180 3 view .LVU1389
1181:Core/Src/AB1805.c **** 
 6509              		.loc 1 1181 1 is_stmt 0 view .LVU1390
 6510              		@ sp needed
 6511 001e 10BD     		pop	{r4, pc}
 6512              	.L330:
1172:Core/Src/AB1805.c ****     break;
 6513              		.loc 1 1172 5 is_stmt 1 view .LVU1391
1172:Core/Src/AB1805.c ****     break;
 6514              		.loc 1 1172 9 is_stmt 0 view .LVU1392
 6515 0020 8008     		lsrs	r0, r0, #2
 6516              	.LVL546:
1173:Core/Src/AB1805.c ****   case WDT_REGISTER_WRB_MASK:
 6517              		.loc 1 1173 5 is_stmt 1 view .LVU1393
 6518 0022 FCE7     		b	.L332
 6519              	.L336:
 6520              		.align	2
 6521              	.L335:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 183


 6522 0024 00000000 		.word	_wdt_register
 6523              		.cfi_endproc
 6524              	.LFE618:
 6526              		.section	.text.set_value,"ax",%progbits
 6527              		.align	1
 6528              		.global	set_value
 6529              		.syntax unified
 6530              		.code	16
 6531              		.thumb_func
 6533              	set_value:
 6534              	.LVL547:
 6535              	.LFB619:
1184:Core/Src/AB1805.c ****   write_rtc_register(WDT_REGISTER, value);
 6536              		.loc 1 1184 1 view -0
 6537              		.cfi_startproc
 6538              		@ args = 0, pretend = 0, frame = 0
 6539              		@ frame_needed = 0, uses_anonymous_args = 0
1184:Core/Src/AB1805.c ****   write_rtc_register(WDT_REGISTER, value);
 6540              		.loc 1 1184 1 is_stmt 0 view .LVU1395
 6541 0000 10B5     		push	{r4, lr}
 6542              	.LCFI120:
 6543              		.cfi_def_cfa_offset 8
 6544              		.cfi_offset 4, -8
 6545              		.cfi_offset 14, -4
 6546 0002 0100     		movs	r1, r0
1185:Core/Src/AB1805.c ****   _wdt_register = read_rtc_register(WDT_REGISTER);
 6547              		.loc 1 1185 3 is_stmt 1 view .LVU1396
 6548 0004 1B20     		movs	r0, #27
 6549              	.LVL548:
1185:Core/Src/AB1805.c ****   _wdt_register = read_rtc_register(WDT_REGISTER);
 6550              		.loc 1 1185 3 is_stmt 0 view .LVU1397
 6551 0006 FFF7FEFF 		bl	write_rtc_register
 6552              	.LVL549:
1186:Core/Src/AB1805.c ****   return _wdt_register;
 6553              		.loc 1 1186 3 is_stmt 1 view .LVU1398
1186:Core/Src/AB1805.c ****   return _wdt_register;
 6554              		.loc 1 1186 19 is_stmt 0 view .LVU1399
 6555 000a 1B20     		movs	r0, #27
 6556 000c FFF7FEFF 		bl	read_rtc_register
 6557              	.LVL550:
1186:Core/Src/AB1805.c ****   return _wdt_register;
 6558              		.loc 1 1186 17 view .LVU1400
 6559 0010 014B     		ldr	r3, .L338
 6560 0012 1870     		strb	r0, [r3]
1187:Core/Src/AB1805.c **** }
 6561              		.loc 1 1187 3 is_stmt 1 view .LVU1401
1188:Core/Src/AB1805.c **** 
 6562              		.loc 1 1188 1 is_stmt 0 view .LVU1402
 6563              		@ sp needed
 6564 0014 10BD     		pop	{r4, pc}
 6565              	.L339:
 6566 0016 C046     		.align	2
 6567              	.L338:
 6568 0018 00000000 		.word	_wdt_register
 6569              		.cfi_endproc
 6570              	.LFE619:
 6572              		.section	.text.set_WDT_register_mask,"ax",%progbits
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 184


 6573              		.align	1
 6574              		.global	set_WDT_register_mask
 6575              		.syntax unified
 6576              		.code	16
 6577              		.thumb_func
 6579              	set_WDT_register_mask:
 6580              	.LVL551:
 6581              	.LFB620:
1191:Core/Src/AB1805.c ****   uint8_t c1;
 6582              		.loc 1 1191 1 is_stmt 1 view -0
 6583              		.cfi_startproc
 6584              		@ args = 0, pretend = 0, frame = 0
 6585              		@ frame_needed = 0, uses_anonymous_args = 0
1191:Core/Src/AB1805.c ****   uint8_t c1;
 6586              		.loc 1 1191 1 is_stmt 0 view .LVU1404
 6587 0000 70B5     		push	{r4, r5, r6, lr}
 6588              	.LCFI121:
 6589              		.cfi_def_cfa_offset 16
 6590              		.cfi_offset 4, -16
 6591              		.cfi_offset 5, -12
 6592              		.cfi_offset 6, -8
 6593              		.cfi_offset 14, -4
 6594 0002 0400     		movs	r4, r0
 6595 0004 0D00     		movs	r5, r1
1192:Core/Src/AB1805.c ****   c1 = get_WDT_register();
 6596              		.loc 1 1192 3 is_stmt 1 view .LVU1405
1193:Core/Src/AB1805.c ****   switch (mask)
 6597              		.loc 1 1193 3 view .LVU1406
1193:Core/Src/AB1805.c ****   switch (mask)
 6598              		.loc 1 1193 8 is_stmt 0 view .LVU1407
 6599 0006 FFF7FEFF 		bl	get_WDT_register
 6600              	.LVL552:
1194:Core/Src/AB1805.c ****   {
 6601              		.loc 1 1194 3 is_stmt 1 view .LVU1408
 6602 000a 7C2D     		cmp	r5, #124
 6603 000c 0DD0     		beq	.L341
 6604 000e 802D     		cmp	r5, #128
 6605 0010 05D0     		beq	.L342
 6606 0012 032D     		cmp	r5, #3
 6607 0014 11D0     		beq	.L345
 6608              	.LVL553:
 6609              	.L344:
1211:Core/Src/AB1805.c **** }
 6610              		.loc 1 1211 3 view .LVU1409
1211:Core/Src/AB1805.c **** }
 6611              		.loc 1 1211 10 is_stmt 0 view .LVU1410
 6612 0016 2000     		movs	r0, r4
 6613 0018 FFF7FEFF 		bl	set_WDT_register_value
 6614              	.LVL554:
1212:Core/Src/AB1805.c **** 
 6615              		.loc 1 1212 1 view .LVU1411
 6616              		@ sp needed
 6617              	.LVL555:
1212:Core/Src/AB1805.c **** 
 6618              		.loc 1 1212 1 view .LVU1412
 6619 001c 70BD     		pop	{r4, r5, r6, pc}
 6620              	.LVL556:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 185


 6621              	.L342:
1197:Core/Src/AB1805.c ****     c1 |= (value << 7) & WDT_REGISTER_WDS_MASK;
 6622              		.loc 1 1197 5 is_stmt 1 view .LVU1413
1197:Core/Src/AB1805.c ****     c1 |= (value << 7) & WDT_REGISTER_WDS_MASK;
 6623              		.loc 1 1197 8 is_stmt 0 view .LVU1414
 6624 001e 7F23     		movs	r3, #127
 6625 0020 0340     		ands	r3, r0
 6626              	.LVL557:
1198:Core/Src/AB1805.c ****     break;
 6627              		.loc 1 1198 5 is_stmt 1 view .LVU1415
1198:Core/Src/AB1805.c ****     break;
 6628              		.loc 1 1198 18 is_stmt 0 view .LVU1416
 6629 0022 E401     		lsls	r4, r4, #7
1198:Core/Src/AB1805.c ****     break;
 6630              		.loc 1 1198 8 view .LVU1417
 6631 0024 1C43     		orrs	r4, r3
 6632 0026 E4B2     		uxtb	r4, r4
 6633              	.LVL558:
1199:Core/Src/AB1805.c ****   case WDT_REGISTER_BMB_MASK:
 6634              		.loc 1 1199 5 is_stmt 1 view .LVU1418
 6635 0028 F5E7     		b	.L344
 6636              	.LVL559:
 6637              	.L341:
1201:Core/Src/AB1805.c ****     c1 |= (value << 2) & WDT_REGISTER_BMB_MASK;
 6638              		.loc 1 1201 5 view .LVU1419
1201:Core/Src/AB1805.c ****     c1 |= (value << 2) & WDT_REGISTER_BMB_MASK;
 6639              		.loc 1 1201 8 is_stmt 0 view .LVU1420
 6640 002a 7C23     		movs	r3, #124
 6641 002c 9843     		bics	r0, r3
 6642              	.LVL560:
1201:Core/Src/AB1805.c ****     c1 |= (value << 2) & WDT_REGISTER_BMB_MASK;
 6643              		.loc 1 1201 8 view .LVU1421
 6644 002e C0B2     		uxtb	r0, r0
 6645              	.LVL561:
1202:Core/Src/AB1805.c ****     break;
 6646              		.loc 1 1202 5 is_stmt 1 view .LVU1422
1202:Core/Src/AB1805.c ****     break;
 6647              		.loc 1 1202 18 is_stmt 0 view .LVU1423
 6648 0030 A300     		lsls	r3, r4, #2
1202:Core/Src/AB1805.c ****     break;
 6649              		.loc 1 1202 24 view .LVU1424
 6650 0032 7C24     		movs	r4, #124
 6651 0034 1C40     		ands	r4, r3
1202:Core/Src/AB1805.c ****     break;
 6652              		.loc 1 1202 8 view .LVU1425
 6653 0036 0443     		orrs	r4, r0
 6654              	.LVL562:
1203:Core/Src/AB1805.c ****   case WDT_REGISTER_WRB_MASK:
 6655              		.loc 1 1203 5 is_stmt 1 view .LVU1426
 6656 0038 EDE7     		b	.L344
 6657              	.LVL563:
 6658              	.L345:
1205:Core/Src/AB1805.c ****     c1 |= (value)&WDT_REGISTER_WRB_MASK;
 6659              		.loc 1 1205 5 view .LVU1427
1205:Core/Src/AB1805.c ****     c1 |= (value)&WDT_REGISTER_WRB_MASK;
 6660              		.loc 1 1205 8 is_stmt 0 view .LVU1428
 6661 003a 0323     		movs	r3, #3
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 186


 6662 003c 9843     		bics	r0, r3
 6663              	.LVL564:
1205:Core/Src/AB1805.c ****     c1 |= (value)&WDT_REGISTER_WRB_MASK;
 6664              		.loc 1 1205 8 view .LVU1429
 6665 003e C0B2     		uxtb	r0, r0
 6666              	.LVL565:
1206:Core/Src/AB1805.c ****     break;
 6667              		.loc 1 1206 5 is_stmt 1 view .LVU1430
 6668 0040 1C40     		ands	r4, r3
 6669 0042 0443     		orrs	r4, r0
 6670              	.LVL566:
1207:Core/Src/AB1805.c ****   default:
 6671              		.loc 1 1207 5 view .LVU1431
 6672 0044 E7E7     		b	.L344
 6673              		.cfi_endproc
 6674              	.LFE620:
 6676              		.section	.text.enter_sleep_mode_PWR_value,"ax",%progbits
 6677              		.align	1
 6678              		.global	enter_sleep_mode_PWR_value
 6679              		.syntax unified
 6680              		.code	16
 6681              		.thumb_func
 6683              	enter_sleep_mode_PWR_value:
 6684              	.LVL567:
 6685              	.LFB621:
1220:Core/Src/AB1805.c ****   if (get_SLST_sleep())
 6686              		.loc 1 1220 1 view -0
 6687              		.cfi_startproc
 6688              		@ args = 0, pretend = 0, frame = 0
 6689              		@ frame_needed = 0, uses_anonymous_args = 0
1220:Core/Src/AB1805.c ****   if (get_SLST_sleep())
 6690              		.loc 1 1220 1 is_stmt 0 view .LVU1433
 6691 0000 10B5     		push	{r4, lr}
 6692              	.LCFI122:
 6693              		.cfi_def_cfa_offset 8
 6694              		.cfi_offset 4, -8
 6695              		.cfi_offset 14, -4
 6696 0002 0400     		movs	r4, r0
1221:Core/Src/AB1805.c ****   { // clean previous sleep
 6697              		.loc 1 1221 3 is_stmt 1 view .LVU1434
1221:Core/Src/AB1805.c ****   { // clean previous sleep
 6698              		.loc 1 1221 7 is_stmt 0 view .LVU1435
 6699 0004 FFF7FEFF 		bl	get_SLST_sleep
 6700              	.LVL568:
1221:Core/Src/AB1805.c ****   { // clean previous sleep
 6701              		.loc 1 1221 6 view .LVU1436
 6702 0008 0028     		cmp	r0, #0
 6703 000a 11D1     		bne	.L348
 6704              	.L347:
1227:Core/Src/AB1805.c **** 
 6705              		.loc 1 1227 3 is_stmt 1 view .LVU1437
 6706 000c 0620     		movs	r0, #6
 6707 000e FFF7FEFF 		bl	set_OUT2S_control2
 6708              	.LVL569:
1231:Core/Src/AB1805.c **** 
 6709              		.loc 1 1231 3 view .LVU1438
 6710 0012 C021     		movs	r1, #192
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 187


 6711 0014 0020     		movs	r0, #0
 6712 0016 FFF7FEFF 		bl	set_outcontrol_value_mask
 6713              	.LVL570:
1234:Core/Src/AB1805.c **** 
 6714              		.loc 1 1234 3 view .LVU1439
 6715 001a 0421     		movs	r1, #4
 6716 001c 0020     		movs	r0, #0
 6717 001e FFF7FEFF 		bl	set_osc_control_value_mask
 6718              	.LVL571:
1237:Core/Src/AB1805.c **** 
 6719              		.loc 1 1237 3 view .LVU1440
 6720 0022 2000     		movs	r0, r4
 6721 0024 FFF7FEFF 		bl	set_SLTO_sleep
 6722              	.LVL572:
1240:Core/Src/AB1805.c **** }
 6723              		.loc 1 1240 3 view .LVU1441
 6724 0028 0120     		movs	r0, #1
 6725 002a FFF7FEFF 		bl	set_SLP_sleep
 6726              	.LVL573:
1241:Core/Src/AB1805.c **** 
 6727              		.loc 1 1241 1 is_stmt 0 view .LVU1442
 6728              		@ sp needed
 6729 002e 10BD     		pop	{r4, pc}
 6730              	.L348:
1223:Core/Src/AB1805.c ****   }
 6731              		.loc 1 1223 5 is_stmt 1 view .LVU1443
 6732 0030 FFF7FEFF 		bl	clean_SLST_sleep
 6733              	.LVL574:
 6734 0034 EAE7     		b	.L347
 6735              		.cfi_endproc
 6736              	.LFE621:
 6738              		.section	.text.enter_sleep_mode,"ax",%progbits
 6739              		.align	1
 6740              		.global	enter_sleep_mode
 6741              		.syntax unified
 6742              		.code	16
 6743              		.thumb_func
 6745              	enter_sleep_mode:
 6746              	.LVL575:
 6747              	.LFB622:
1256:Core/Src/AB1805.c ****   uint8_t ret = 0;
 6748              		.loc 1 1256 1 view -0
 6749              		.cfi_startproc
 6750              		@ args = 0, pretend = 0, frame = 0
 6751              		@ frame_needed = 0, uses_anonymous_args = 0
1256:Core/Src/AB1805.c ****   uint8_t ret = 0;
 6752              		.loc 1 1256 1 is_stmt 0 view .LVU1445
 6753 0000 10B5     		push	{r4, lr}
 6754              	.LCFI123:
 6755              		.cfi_def_cfa_offset 8
 6756              		.cfi_offset 4, -8
 6757              		.cfi_offset 14, -4
 6758 0002 0400     		movs	r4, r0
1257:Core/Src/AB1805.c ****   uint8_t slres = 0;
 6759              		.loc 1 1257 3 is_stmt 1 view .LVU1446
 6760              	.LVL576:
1258:Core/Src/AB1805.c ****   char temp = 0;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 188


 6761              		.loc 1 1258 3 view .LVU1447
1259:Core/Src/AB1805.c **** 
 6762              		.loc 1 1259 3 view .LVU1448
1287:Core/Src/AB1805.c ****   {
 6763              		.loc 1 1287 3 view .LVU1449
1287:Core/Src/AB1805.c ****   {
 6764              		.loc 1 1287 6 is_stmt 0 view .LVU1450
 6765 0004 0029     		cmp	r1, #0
 6766 0006 07D1     		bne	.L351
 6767              	.LVL577:
 6768              	.L350:
1296:Core/Src/AB1805.c ****   set_sleep(temp);                      // Write to the register
 6769              		.loc 1 1296 3 is_stmt 1 view .LVU1451
1297:Core/Src/AB1805.c **** 
 6770              		.loc 1 1297 3 view .LVU1452
 6771 0008 8020     		movs	r0, #128
 6772 000a 4042     		rsbs	r0, r0, #0
 6773 000c 2043     		orrs	r0, r4
 6774 000e C0B2     		uxtb	r0, r0
 6775 0010 FFF7FEFF 		bl	set_sleep
 6776              	.LVL578:
1326:Core/Src/AB1805.c **** }
 6777              		.loc 1 1326 3 view .LVU1453
1327:Core/Src/AB1805.c **** 
 6778              		.loc 1 1327 1 is_stmt 0 view .LVU1454
 6779 0014 0020     		movs	r0, #0
 6780              		@ sp needed
 6781              	.LVL579:
1327:Core/Src/AB1805.c **** 
 6782              		.loc 1 1327 1 view .LVU1455
 6783 0016 10BD     		pop	{r4, pc}
 6784              	.LVL580:
 6785              	.L351:
1290:Core/Src/AB1805.c ****     temp = (temp & 0xE3) | 0x18; // MUST NOT WRITE OUT2S WITH 000
 6786              		.loc 1 1290 5 is_stmt 1 view .LVU1456
1290:Core/Src/AB1805.c ****     temp = (temp & 0xE3) | 0x18; // MUST NOT WRITE OUT2S WITH 000
 6787              		.loc 1 1290 12 is_stmt 0 view .LVU1457
 6788 0018 FFF7FEFF 		bl	get_OUT2S_control2
 6789              	.LVL581:
1291:Core/Src/AB1805.c ****     set_OUT2S_control2(temp);    // Write value to OUT2S
 6790              		.loc 1 1291 5 is_stmt 1 view .LVU1458
1292:Core/Src/AB1805.c ****     slres = 0;
 6791              		.loc 1 1292 5 view .LVU1459
 6792 001c 1C23     		movs	r3, #28
 6793 001e 9843     		bics	r0, r3
 6794              	.LVL582:
1292:Core/Src/AB1805.c ****     slres = 0;
 6795              		.loc 1 1292 5 is_stmt 0 view .LVU1460
 6796 0020 1823     		movs	r3, #24
 6797 0022 1843     		orrs	r0, r3
 6798 0024 C0B2     		uxtb	r0, r0
 6799 0026 FFF7FEFF 		bl	set_OUT2S_control2
 6800              	.LVL583:
1293:Core/Src/AB1805.c ****   }
 6801              		.loc 1 1293 5 is_stmt 1 view .LVU1461
1293:Core/Src/AB1805.c ****   }
 6802              		.loc 1 1293 5 is_stmt 0 view .LVU1462
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 189


 6803 002a EDE7     		b	.L350
 6804              		.cfi_endproc
 6805              	.LFE622:
 6807              		.section	.rodata.hex_dump.str1.4,"aMS",%progbits,1
 6808              		.align	2
 6809              	.LC84:
 6810 0000 23203078 		.ascii	"# 0x%02x: 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x"
 6810      25303278 
 6810      3A203078 
 6810      25303278 
 6810      20307825 
 6811 0033 20307825 		.ascii	" 0x%02x 0x%02x\015\012\000"
 6811      30327820 
 6811      30782530 
 6811      32780D0A 
 6811      00
 6812              		.section	.text.hex_dump,"ax",%progbits
 6813              		.align	1
 6814              		.global	hex_dump
 6815              		.syntax unified
 6816              		.code	16
 6817              		.thumb_func
 6819              	hex_dump:
 6820              	.LFB626:
1392:Core/Src/AB1805.c **** 
1393:Core/Src/AB1805.c **** void hex_dump(void)
1394:Core/Src/AB1805.c **** {
 6821              		.loc 1 1394 1 is_stmt 1 view -0
 6822              		.cfi_startproc
 6823              		@ args = 0, pretend = 0, frame = 8
 6824              		@ frame_needed = 0, uses_anonymous_args = 0
 6825 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6826              	.LCFI124:
 6827              		.cfi_def_cfa_offset 20
 6828              		.cfi_offset 4, -20
 6829              		.cfi_offset 5, -16
 6830              		.cfi_offset 6, -12
 6831              		.cfi_offset 7, -8
 6832              		.cfi_offset 14, -4
 6833 0002 C646     		mov	lr, r8
 6834 0004 00B5     		push	{lr}
 6835              	.LCFI125:
 6836              		.cfi_def_cfa_offset 24
 6837              		.cfi_offset 8, -24
 6838 0006 88B0     		sub	sp, sp, #32
 6839              	.LCFI126:
 6840              		.cfi_def_cfa_offset 56
1395:Core/Src/AB1805.c ****   uint8_t buffer[8];
 6841              		.loc 1 1395 3 view .LVU1464
1396:Core/Src/AB1805.c ****   for (uint8_t pos = 0; pos < 0x7F; pos += 8)
 6842              		.loc 1 1396 3 view .LVU1465
 6843              	.LBB18:
 6844              		.loc 1 1396 8 view .LVU1466
 6845              	.LVL584:
 6846              		.loc 1 1396 16 is_stmt 0 view .LVU1467
 6847 0008 0025     		movs	r5, #0
 6848              		.loc 1 1396 3 view .LVU1468
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 190


 6849 000a 22E0     		b	.L353
 6850              	.LVL585:
 6851              	.L354:
 6852              	.LBB19:
1397:Core/Src/AB1805.c ****   {
1398:Core/Src/AB1805.c **** 
1399:Core/Src/AB1805.c ****     uint8_t ii = 0;
1400:Core/Src/AB1805.c ****     for (ii = 0; ii < 7; ii++)
1401:Core/Src/AB1805.c ****     {
1402:Core/Src/AB1805.c ****       buffer[ii] = read_rtc_register(pos + ii);
 6853              		.loc 1 1402 7 is_stmt 1 discriminator 3 view .LVU1469
 6854              		.loc 1 1402 20 is_stmt 0 discriminator 3 view .LVU1470
 6855 000c 2819     		adds	r0, r5, r4
 6856 000e C0B2     		uxtb	r0, r0
 6857 0010 FFF7FEFF 		bl	read_rtc_register
 6858              	.LVL586:
 6859              		.loc 1 1402 18 discriminator 3 view .LVU1471
 6860 0014 06AB     		add	r3, sp, #24
 6861 0016 1855     		strb	r0, [r3, r4]
1400:Core/Src/AB1805.c ****     {
 6862              		.loc 1 1400 28 is_stmt 1 discriminator 3 view .LVU1472
 6863 0018 0134     		adds	r4, r4, #1
 6864              	.LVL587:
1400:Core/Src/AB1805.c ****     {
 6865              		.loc 1 1400 28 is_stmt 0 discriminator 3 view .LVU1473
 6866 001a E4B2     		uxtb	r4, r4
 6867              	.LVL588:
 6868              	.L355:
1400:Core/Src/AB1805.c ****     {
 6869              		.loc 1 1400 21 is_stmt 1 discriminator 1 view .LVU1474
 6870 001c 062C     		cmp	r4, #6
 6871 001e F5D9     		bls	.L354
1403:Core/Src/AB1805.c ****     }
1404:Core/Src/AB1805.c ****     printf("# 0x%02x: 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x\r\n", pos, buffer[0],
 6872              		.loc 1 1404 5 discriminator 2 view .LVU1475
 6873              		.loc 1 1404 96 is_stmt 0 discriminator 2 view .LVU1476
 6874 0020 06A9     		add	r1, sp, #24
 6875 0022 0A78     		ldrb	r2, [r1]
 6876              		.loc 1 1404 107 discriminator 2 view .LVU1477
 6877 0024 4B78     		ldrb	r3, [r1, #1]
 6878              		.loc 1 1404 118 discriminator 2 view .LVU1478
 6879 0026 8C78     		ldrb	r4, [r1, #2]
 6880              	.LVL589:
 6881              		.loc 1 1404 129 discriminator 2 view .LVU1479
 6882 0028 CE78     		ldrb	r6, [r1, #3]
 6883              		.loc 1 1404 140 discriminator 2 view .LVU1480
 6884 002a 0F79     		ldrb	r7, [r1, #4]
 6885              		.loc 1 1404 151 discriminator 2 view .LVU1481
 6886 002c 4879     		ldrb	r0, [r1, #5]
 6887 002e 8446     		mov	ip, r0
 6888              		.loc 1 1404 162 discriminator 2 view .LVU1482
 6889 0030 8879     		ldrb	r0, [r1, #6]
 6890 0032 8046     		mov	r8, r0
 6891              		.loc 1 1404 173 discriminator 2 view .LVU1483
 6892 0034 C979     		ldrb	r1, [r1, #7]
 6893              		.loc 1 1404 5 discriminator 2 view .LVU1484
 6894 0036 0B48     		ldr	r0, .L358
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 191


 6895 0038 0591     		str	r1, [sp, #20]
 6896 003a 4146     		mov	r1, r8
 6897 003c 0491     		str	r1, [sp, #16]
 6898 003e 6146     		mov	r1, ip
 6899 0040 0391     		str	r1, [sp, #12]
 6900 0042 0297     		str	r7, [sp, #8]
 6901 0044 0196     		str	r6, [sp, #4]
 6902 0046 0094     		str	r4, [sp]
 6903 0048 2900     		movs	r1, r5
 6904 004a FFF7FEFF 		bl	printf_
 6905              	.LVL590:
 6906              	.LBE19:
1396:Core/Src/AB1805.c ****   {
 6907              		.loc 1 1396 41 is_stmt 1 discriminator 2 view .LVU1485
 6908 004e 0835     		adds	r5, r5, #8
 6909              	.LVL591:
1396:Core/Src/AB1805.c ****   {
 6910              		.loc 1 1396 41 is_stmt 0 discriminator 2 view .LVU1486
 6911 0050 EDB2     		uxtb	r5, r5
 6912              	.LVL592:
 6913              	.L353:
1396:Core/Src/AB1805.c ****   {
 6914              		.loc 1 1396 29 is_stmt 1 discriminator 1 view .LVU1487
 6915 0052 7E2D     		cmp	r5, #126
 6916 0054 01D8     		bhi	.L357
 6917              	.LBB20:
1400:Core/Src/AB1805.c ****     {
 6918              		.loc 1 1400 13 is_stmt 0 view .LVU1488
 6919 0056 0024     		movs	r4, #0
 6920 0058 E0E7     		b	.L355
 6921              	.L357:
 6922              	.LBE20:
 6923              	.LBE18:
1405:Core/Src/AB1805.c ****   }
1406:Core/Src/AB1805.c **** }
 6924              		.loc 1 1406 1 view .LVU1489
 6925 005a 08B0     		add	sp, sp, #32
 6926              		@ sp needed
 6927              	.LVL593:
 6928              		.loc 1 1406 1 view .LVU1490
 6929 005c 80BC     		pop	{r7}
 6930 005e B846     		mov	r8, r7
 6931 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 6932              	.L359:
 6933 0062 C046     		.align	2
 6934              	.L358:
 6935 0064 00000000 		.word	.LC84
 6936              		.cfi_endproc
 6937              	.LFE626:
 6939              		.global	_wdt_register
 6940              		.section	.bss._wdt_register,"aw",%nobits
 6943              	_wdt_register:
 6944 0000 00       		.space	1
 6945              		.global	_osc_control
 6946              		.section	.bss._osc_control,"aw",%nobits
 6949              	_osc_control:
 6950 0000 00       		.space	1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 192


 6951              		.global	_outcontrol
 6952              		.section	.bss._outcontrol,"aw",%nobits
 6955              	_outcontrol:
 6956 0000 00       		.space	1
 6957              		.global	_timer_control_mode
 6958              		.section	.bss._timer_control_mode,"aw",%nobits
 6961              	_timer_control_mode:
 6962 0000 00       		.space	1
 6963              		.global	_sleep_mode
 6964              		.section	.bss._sleep_mode,"aw",%nobits
 6967              	_sleep_mode:
 6968 0000 00       		.space	1
 6969              		.global	_interrupt
 6970              		.section	.bss._interrupt,"aw",%nobits
 6973              	_interrupt:
 6974 0000 00       		.space	1
 6975              		.global	_control2
 6976              		.section	.bss._control2,"aw",%nobits
 6979              	_control2:
 6980 0000 00       		.space	1
 6981              		.global	_control1
 6982              		.section	.bss._control1,"aw",%nobits
 6985              	_control1:
 6986 0000 00       		.space	1
 6987              		.global	_status
 6988              		.section	.bss._status,"aw",%nobits
 6991              	_status:
 6992 0000 00       		.space	1
 6993              		.global	data_time_string
 6994              		.section	.bss.data_time_string,"aw",%nobits
 6995              		.align	2
 6998              	data_time_string:
 6999 0000 00000000 		.space	30
 6999      00000000 
 6999      00000000 
 6999      00000000 
 6999      00000000 
 7000              		.global	_alarm_second
 7001              		.section	.bss._alarm_second,"aw",%nobits
 7004              	_alarm_second:
 7005 0000 00       		.space	1
 7006              		.global	_alarm_minute
 7007              		.section	.bss._alarm_minute,"aw",%nobits
 7010              	_alarm_minute:
 7011 0000 00       		.space	1
 7012              		.global	_alarm_hour
 7013              		.section	.bss._alarm_hour,"aw",%nobits
 7016              	_alarm_hour:
 7017 0000 00       		.space	1
 7018              		.global	_alarm_weekday
 7019              		.section	.bss._alarm_weekday,"aw",%nobits
 7022              	_alarm_weekday:
 7023 0000 00       		.space	1
 7024              		.global	_alarm_date
 7025              		.section	.bss._alarm_date,"aw",%nobits
 7028              	_alarm_date:
 7029 0000 00       		.space	1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 193


 7030              		.global	_alarm_month
 7031              		.section	.bss._alarm_month,"aw",%nobits
 7034              	_alarm_month:
 7035 0000 00       		.space	1
 7036              		.global	_alarm_year
 7037              		.section	.bss._alarm_year,"aw",%nobits
 7040              	_alarm_year:
 7041 0000 00       		.space	1
 7042              		.global	_hundredth
 7043              		.section	.bss._hundredth,"aw",%nobits
 7046              	_hundredth:
 7047 0000 00       		.space	1
 7048              		.global	_second
 7049              		.section	.bss._second,"aw",%nobits
 7052              	_second:
 7053 0000 00       		.space	1
 7054              		.global	_minute
 7055              		.section	.bss._minute,"aw",%nobits
 7058              	_minute:
 7059 0000 00       		.space	1
 7060              		.global	_hour
 7061              		.section	.bss._hour,"aw",%nobits
 7064              	_hour:
 7065 0000 00       		.space	1
 7066              		.global	_weekday
 7067              		.section	.bss._weekday,"aw",%nobits
 7070              	_weekday:
 7071 0000 00       		.space	1
 7072              		.global	_date
 7073              		.section	.bss._date,"aw",%nobits
 7076              	_date:
 7077 0000 00       		.space	1
 7078              		.global	_month
 7079              		.section	.bss._month,"aw",%nobits
 7082              	_month:
 7083 0000 00       		.space	1
 7084              		.global	_year
 7085              		.section	.bss._year,"aw",%nobits
 7088              	_year:
 7089 0000 00       		.space	1
 7090              		.text
 7091              	.Letext0:
 7092              		.file 3 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 7093              		.file 4 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 7094              		.file 5 "Core\\Inc/AB1805.h"
 7095              		.file 6 "Drivers/CMSIS/Device/ST/STM32U0xx/Include/stm32u073xx.h"
 7096              		.file 7 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 7097              		.file 8 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_dma.h"
 7098              		.file 9 "Drivers/CMSIS/Device/ST/STM32U0xx/Include/stm32u0xx.h"
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 194


DEFINED SYMBOLS
                            *ABS*:00000000 AB1805.c
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:19     .text.SPI1_SendByte:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:24     .text.SPI1_SendByte:00000000 SPI1_SendByte
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:136    .text.SPI1_SendByte:0000003c $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:141    .text.read_rtc_register:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:146    .text.read_rtc_register:00000000 read_rtc_register
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:186    .text.spi_select_slave:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:192    .text.spi_select_slave:00000000 spi_select_slave
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:224    .text.spi_select_slave:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:229    .text.write_rtc_register:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:234    .text.write_rtc_register:00000000 write_rtc_register
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:306    .text.write_rtc_register:00000044 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:311    .text.get_rtc_data:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:317    .text.get_rtc_data:00000000 get_rtc_data
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:344    .text.get_hundredths:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:350    .text.get_hundredths:00000000 get_hundredths
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:374    .text.get_second:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:380    .text.get_second:00000000 get_second
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:404    .text.get_minute:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:410    .text.get_minute:00000000 get_minute
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:434    .text.get_hour:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:440    .text.get_hour:00000000 get_hour
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:464    .text.get_weekday:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:470    .text.get_weekday:00000000 get_weekday
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:494    .text.get_date:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:500    .text.get_date:00000000 get_date
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:524    .text.get_month:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:530    .text.get_month:00000000 get_month
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:554    .text.get_year:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:560    .text.get_year:00000000 get_year
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:584    .text.get_datetime:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:590    .text.get_datetime:00000000 get_datetime
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:656    .text.get_datetime:0000003c $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7052   .bss._second:00000000 _second
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7058   .bss._minute:00000000 _minute
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7064   .bss._hour:00000000 _hour
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7070   .bss._weekday:00000000 _weekday
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7076   .bss._date:00000000 _date
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7082   .bss._month:00000000 _month
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7088   .bss._year:00000000 _year
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:667    .text.get_second_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:673    .text.get_second_alarm:00000000 get_second_alarm
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:703    .text.get_second_alarm:00000014 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7004   .bss._alarm_second:00000000 _alarm_second
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:708    .text.get_minute_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:714    .text.get_minute_alarm:00000000 get_minute_alarm
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:744    .text.get_minute_alarm:00000014 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7010   .bss._alarm_minute:00000000 _alarm_minute
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:749    .text.get_hour_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:755    .text.get_hour_alarm:00000000 get_hour_alarm
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:785    .text.get_hour_alarm:00000014 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7016   .bss._alarm_hour:00000000 _alarm_hour
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:790    .text.get_weekday_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:796    .text.get_weekday_alarm:00000000 get_weekday_alarm
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:826    .text.get_weekday_alarm:00000014 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7022   .bss._alarm_weekday:00000000 _alarm_weekday
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 195


C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:831    .text.get_date_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:837    .text.get_date_alarm:00000000 get_date_alarm
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:867    .text.get_date_alarm:00000014 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7028   .bss._alarm_date:00000000 _alarm_date
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:872    .text.get_month_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:878    .text.get_month_alarm:00000000 get_month_alarm
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:908    .text.get_month_alarm:00000014 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7034   .bss._alarm_month:00000000 _alarm_month
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:914    .text.set_second:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:920    .text.set_second:00000000 set_second
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:954    .text.set_second:0000001c $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:959    .text.set_minute:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:965    .text.set_minute:00000000 set_minute
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:999    .text.set_minute:0000001c $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1004   .text.set_hour:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1010   .text.set_hour:00000000 set_hour
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1044   .text.set_hour:0000001c $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1049   .text.set_weekday:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1055   .text.set_weekday:00000000 set_weekday
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1089   .text.set_weekday:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1094   .text.set_date:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1100   .text.set_date:00000000 set_date
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1134   .text.set_date:0000001c $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1139   .text.set_month:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1145   .text.set_month:00000000 set_month
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1179   .text.set_month:0000001c $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1184   .text.set_year:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1190   .text.set_year:00000000 set_year
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1220   .text.set_year:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1225   .text.set_datetime:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1231   .text.set_datetime:00000000 set_datetime
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1313   .text.set_second_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1319   .text.set_second_alarm:00000000 set_second_alarm
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1369   .text.set_second_alarm:0000002c $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1374   .text.set_minute_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1380   .text.set_minute_alarm:00000000 set_minute_alarm
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1430   .text.set_minute_alarm:0000002c $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1435   .text.set_hour_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1441   .text.set_hour_alarm:00000000 set_hour_alarm
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1491   .text.set_hour_alarm:0000002c $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1496   .text.set_weekday_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1502   .text.set_weekday_alarm:00000000 set_weekday_alarm
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1552   .text.set_weekday_alarm:00000028 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1557   .text.set_date_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1563   .text.set_date_alarm:00000000 set_date_alarm
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1613   .text.set_date_alarm:0000002c $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1618   .text.set_month_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1624   .text.set_month_alarm:00000000 set_month_alarm
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1674   .text.set_month_alarm:0000002c $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1679   .text.get_date_time:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1685   .text.get_date_time:00000000 get_date_time
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1905   .text.get_date_time:000000b0 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6998   .bss.data_time_string:00000000 data_time_string
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7046   .bss._hundredth:00000000 _hundredth
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1917   .text.dec_hex:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1923   .text.dec_hex:00000000 dec_hex
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1950   .text.hex_dec:00000000 $t
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 196


C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1956   .text.hex_dec:00000000 hex_dec
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1988   .text.get_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:1994   .text.get_status:00000000 get_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2021   .text.get_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6991   .bss._status:00000000 _status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2026   .text.get_CB_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2032   .text.get_CB_status:00000000 get_CB_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2058   .text.get_CB_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2063   .text.get_BAT_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2069   .text.get_BAT_status:00000000 get_BAT_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2095   .text.get_BAT_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2100   .text.get_WDT_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2106   .text.get_WDT_status:00000000 get_WDT_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2132   .text.get_WDT_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2137   .text.get_BL_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2143   .text.get_BL_status:00000000 get_BL_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2169   .text.get_BL_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2174   .text.get_TIM_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2180   .text.get_TIM_status:00000000 get_TIM_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2206   .text.get_TIM_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2211   .text.get_ALM_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2217   .text.get_ALM_status:00000000 get_ALM_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2243   .text.get_ALM_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2248   .text.get_EX2_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2254   .text.get_EX2_status:00000000 get_EX2_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2280   .text.get_EX2_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2285   .text.get_EX1_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2291   .text.get_EX1_status:00000000 get_EX1_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2317   .text.get_EX1_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2322   .text.clean_CB_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2328   .text.clean_CB_status:00000000 clean_CB_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2361   .text.clean_BAT_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2367   .text.clean_BAT_status:00000000 clean_BAT_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2403   .text.clean_WDT_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2409   .text.clean_WDT_status:00000000 clean_WDT_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2445   .text.clean_BL_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2451   .text.clean_BL_status:00000000 clean_BL_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2487   .text.clean_TIM_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2493   .text.clean_TIM_status:00000000 clean_TIM_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2529   .text.clean_ALM_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2535   .text.clean_ALM_status:00000000 clean_ALM_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2571   .text.clean_EX2_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2577   .text.clean_EX2_status:00000000 clean_EX2_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2613   .text.clean_EX1_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2619   .text.clean_EX1_status:00000000 clean_EX1_status
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2655   .text.set_control1:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2661   .text.set_control1:00000000 set_control1
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2696   .text.set_control1:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6985   .bss._control1:00000000 _control1
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2701   .text.set_1224:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2707   .text.set_1224:00000000 set_1224
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2760   .text.set_RSP:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2766   .text.set_RSP:00000000 set_RSP
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2819   .text.set_ARST:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2825   .text.set_ARST:00000000 set_ARST
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2878   .text.set_PWR2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2884   .text.set_PWR2:00000000 set_PWR2
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 197


C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2937   .text.set_WRTC:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2943   .text.set_WRTC:00000000 set_WRTC
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:2996   .text.get_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3002   .text.get_interrupt:00000000 get_interrupt
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3028   .text.get_interrupt:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6973   .bss._interrupt:00000000 _interrupt
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3033   .text.get_BLIE_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3039   .text.get_BLIE_interrupt:00000000 get_BLIE_interrupt
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3065   .text.get_BLIE_interrupt:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3070   .text.get_TIE_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3076   .text.get_TIE_interrupt:00000000 get_TIE_interrupt
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3102   .text.get_TIE_interrupt:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3107   .text.get_AIE_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3113   .text.get_AIE_interrupt:00000000 get_AIE_interrupt
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3139   .text.get_AIE_interrupt:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3144   .text.get_EX2E_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3150   .text.get_EX2E_interrupt:00000000 get_EX2E_interrupt
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3176   .text.get_EX2E_interrupt:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3181   .text.get_EX1E_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3187   .text.get_EX1E_interrupt:00000000 get_EX1E_interrupt
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3213   .text.get_EX1E_interrupt:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3218   .text.set_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3224   .text.set_interrupt:00000000 set_interrupt
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3259   .text.set_interrupt:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3264   .text.set_BLIE_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3270   .text.set_BLIE_interrupt:00000000 set_BLIE_interrupt
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3323   .text.set_TIE_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3329   .text.set_TIE_interrupt:00000000 set_TIE_interrupt
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3382   .text.set_AIE_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3388   .text.set_AIE_interrupt:00000000 set_AIE_interrupt
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3441   .text.set_EX1E_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3447   .text.set_EX1E_interrupt:00000000 set_EX1E_interrupt
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3500   .text.set_EX2E_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3506   .text.set_EX2E_interrupt:00000000 set_EX2E_interrupt
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3559   .text.get_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3565   .text.get_control2:00000000 get_control2
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3591   .text.get_control2:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6979   .bss._control2:00000000 _control2
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3596   .text.get_RS1E_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3602   .text.get_RS1E_control2:00000000 get_RS1E_control2
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3628   .text.get_RS1E_control2:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3633   .text.get_OUT2S_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3639   .text.get_OUT2S_control2:00000000 get_OUT2S_control2
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3665   .text.get_OUT2S_control2:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3670   .text.get_OUT1S_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3676   .text.get_OUT1S_control2:00000000 get_OUT1S_control2
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3702   .text.get_OUT1S_control2:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3707   .text.set_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3713   .text.set_control2:00000000 set_control2
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3748   .text.set_control2:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3753   .text.set_RS1E_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3759   .text.set_RS1E_control2:00000000 set_RS1E_control2
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3819   .text.set_OUT2S_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3825   .text.set_OUT2S_control2:00000000 set_OUT2S_control2
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3881   .text.set_OUT1S_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3887   .text.set_OUT1S_control2:00000000 set_OUT1S_control2
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3940   .text.get_sleep:00000000 $t
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 198


C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3946   .text.get_sleep:00000000 get_sleep
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3972   .text.get_sleep:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6967   .bss._sleep_mode:00000000 _sleep_mode
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3977   .text.get_SLP_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:3983   .text.get_SLP_sleep:00000000 get_SLP_sleep
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4009   .text.get_SLP_sleep:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4014   .text.get_SLRES_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4020   .text.get_SLRES_sleep:00000000 get_SLRES_sleep
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4046   .text.get_SLRES_sleep:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4051   .text.get_EX2P_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4057   .text.get_EX2P_sleep:00000000 get_EX2P_sleep
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4083   .text.get_EX2P_sleep:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4088   .text.get_EX1P_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4094   .text.get_EX1P_sleep:00000000 get_EX1P_sleep
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4120   .text.get_EX1P_sleep:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4125   .text.get_SLST_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4131   .text.get_SLST_sleep:00000000 get_SLST_sleep
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4157   .text.get_SLST_sleep:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4162   .text.get_SLTO_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4168   .text.get_SLTO_sleep:00000000 get_SLTO_sleep
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4194   .text.get_SLTO_sleep:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4199   .text.set_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4205   .text.set_sleep:00000000 set_sleep
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4240   .text.set_sleep:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4245   .text.set_SLP_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4251   .text.set_SLP_sleep:00000000 set_SLP_sleep
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4310   .text.set_SLRES_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4316   .text.set_SLRES_sleep:00000000 set_SLRES_sleep
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4376   .text.set_EX2P_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4382   .text.set_EX2P_sleep:00000000 set_EX2P_sleep
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4442   .text.set_EX1P_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4448   .text.set_EX1P_sleep:00000000 set_EX1P_sleep
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4508   .text.clean_SLST_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4514   .text.clean_SLST_sleep:00000000 clean_SLST_sleep
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4555   .text.set_SLTO_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4561   .text.set_SLTO_sleep:00000000 set_SLTO_sleep
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4613   .text.get_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4619   .text.get_time_control:00000000 get_time_control
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4645   .text.get_time_control:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6961   .bss._timer_control_mode:00000000 _timer_control_mode
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4650   .text.get_TE_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4656   .text.get_TE_time_control:00000000 get_TE_time_control
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4682   .text.get_TE_time_control:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4687   .text.get_TM_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4693   .text.get_TM_time_control:00000000 get_TM_time_control
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4719   .text.get_TM_time_control:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4724   .text.get_TRPT_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4730   .text.get_TRPT_time_control:00000000 get_TRPT_time_control
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4756   .text.get_TRPT_time_control:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4761   .text.get_RPT_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4767   .text.get_RPT_time_control:00000000 get_RPT_time_control
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4793   .text.get_RPT_time_control:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4798   .text.get_TFS_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4804   .text.get_TFS_time_control:00000000 get_TFS_time_control
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4830   .text.get_TFS_time_control:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4835   .text.set_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4841   .text.set_time_control:00000000 set_time_control
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 199


C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4876   .text.set_time_control:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4881   .text.set_TE_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4887   .text.set_TE_time_control:00000000 set_TE_time_control
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4946   .text.set_TM_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:4952   .text.set_TM_time_control:00000000 set_TM_time_control
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5012   .text.set_TRPT_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5018   .text.set_TRPT_time_control:00000000 set_TRPT_time_control
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5078   .text.set_RPT_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5084   .text.set_RPT_time_control:00000000 set_RPT_time_control
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5140   .text.set_datetime_alarm_month:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5146   .text.set_datetime_alarm_month:00000000 set_datetime_alarm_month
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5200   .text.set_datetime_alarm_date:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5206   .text.set_datetime_alarm_date:00000000 set_datetime_alarm_date
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5250   .text.set_week_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5256   .text.set_week_alarm:00000000 set_week_alarm
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5300   .text.set_datetime_alarm_hour:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5306   .text.set_datetime_alarm_hour:00000000 set_datetime_alarm_hour
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5345   .text.set_datetime_alarm_minutes:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5351   .text.set_datetime_alarm_minutes:00000000 set_datetime_alarm_minutes
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5383   .text.set_datetime_alarm_seconds:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5389   .text.set_datetime_alarm_seconds:00000000 set_datetime_alarm_seconds
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5416   .text.set_once_second_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5422   .text.set_once_second_alarm:00000000 set_once_second_alarm
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5448   .text.set_TFS_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5454   .text.set_TFS_time_control:00000000 set_TFS_time_control
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5506   .text.get_outcontrol:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5512   .text.get_outcontrol:00000000 get_outcontrol
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5538   .text.get_outcontrol:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6955   .bss._outcontrol:00000000 _outcontrol
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5543   .text.get_outcontrol_mask:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5549   .text.get_outcontrol_mask:00000000 get_outcontrol_mask
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5583   .rodata.get_outcontrol_mask:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5687   .text.get_outcontrol_mask:00000048 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5693   .text.set_outcontrol_value:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5699   .text.set_outcontrol_value:00000000 set_outcontrol_value
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5734   .text.set_outcontrol_value:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5739   .text.set_outcontrol_value_mask:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5745   .text.set_outcontrol_value_mask:00000000 set_outcontrol_value_mask
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5779   .rodata.set_outcontrol_value_mask:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5989   .text.set_outcontrol_value_mask:000000a4 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:5994   .text.get_osc_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6000   .text.get_osc_control:00000000 get_osc_control
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6026   .text.get_osc_control:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6949   .bss._osc_control:00000000 _osc_control
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6031   .text.get_osc_control_mask:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6037   .text.get_osc_control_mask:00000000 get_osc_control_mask
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6071   .rodata.get_osc_control_mask:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6152   .text.get_osc_control_mask:00000044 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6158   .text.set_osc_control_value:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6164   .text.set_osc_control_value:00000000 set_osc_control_value
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6199   .text.set_osc_control_value:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6204   .text.set_osc_control_value_mask:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6210   .text.set_osc_control_value_mask:00000000 set_osc_control_value_mask
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6244   .rodata.set_osc_control_value_mask:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6417   .text.set_osc_control_value_mask:00000094 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6422   .text.get_WDT_register:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6428   .text.get_WDT_register:00000000 get_WDT_register
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s 			page 200


C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6454   .text.get_WDT_register:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6943   .bss._wdt_register:00000000 _wdt_register
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6459   .text.get_WDT_register_mask:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6465   .text.get_WDT_register_mask:00000000 get_WDT_register_mask
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6522   .text.get_WDT_register_mask:00000024 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6527   .text.set_value:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6533   .text.set_value:00000000 set_value
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6568   .text.set_value:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6573   .text.set_WDT_register_mask:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6579   .text.set_WDT_register_mask:00000000 set_WDT_register_mask
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6677   .text.enter_sleep_mode_PWR_value:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6683   .text.enter_sleep_mode_PWR_value:00000000 enter_sleep_mode_PWR_value
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6739   .text.enter_sleep_mode:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6745   .text.enter_sleep_mode:00000000 enter_sleep_mode
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6808   .rodata.hex_dump.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6813   .text.hex_dump:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6819   .text.hex_dump:00000000 hex_dump
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6935   .text.hex_dump:00000064 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6944   .bss._wdt_register:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6950   .bss._osc_control:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6956   .bss._outcontrol:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6962   .bss._timer_control_mode:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6968   .bss._sleep_mode:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6974   .bss._interrupt:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6980   .bss._control2:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6986   .bss._control1:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6992   .bss._status:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:6995   .bss.data_time_string:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7005   .bss._alarm_second:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7011   .bss._alarm_minute:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7017   .bss._alarm_hour:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7023   .bss._alarm_weekday:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7029   .bss._alarm_date:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7035   .bss._alarm_month:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7040   .bss._alarm_year:00000000 _alarm_year
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7041   .bss._alarm_year:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7047   .bss._hundredth:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7053   .bss._second:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7059   .bss._minute:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7065   .bss._hour:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7071   .bss._weekday:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7077   .bss._date:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7083   .bss._month:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdYoPD9.s:7089   .bss._year:00000000 $d

UNDEFINED SYMBOLS
AB1815_SPI_WRITE
__aeabi_uidivmod
set_WDT_register_value
printf_
