ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"AB1805.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/AB1805.c"
  18              		.section	.text.SPI1_SendByte,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	SPI1_SendByte:
  25              	.LFB623:
   1:Core/Src/AB1805.c **** #include "AB1805.h"
   2:Core/Src/AB1805.c **** #include "printf.h"
   3:Core/Src/AB1805.c **** #include "stm32u0xx_ll_spi.h"
   4:Core/Src/AB1805.c **** #include "main.h"
   5:Core/Src/AB1805.c **** 
   6:Core/Src/AB1805.c **** inline static uint8_t read_rtc_register(uint8_t reg_addr);
   7:Core/Src/AB1805.c **** inline static uint8_t write_rtc_register(uint8_t rtc_register, uint8_t data);
   8:Core/Src/AB1805.c **** #define AB1815_SPI_READ(offset) (127 & offset)
   9:Core/Src/AB1805.c **** #define AB1815_SPI_WRITE(offset) (128 | offset)
  10:Core/Src/AB1805.c **** 
  11:Core/Src/AB1805.c **** // data
  12:Core/Src/AB1805.c **** 
  13:Core/Src/AB1805.c **** volatile uint8_t _year;
  14:Core/Src/AB1805.c **** volatile uint8_t _month;
  15:Core/Src/AB1805.c **** volatile uint8_t _date;
  16:Core/Src/AB1805.c **** volatile uint8_t _weekday;
  17:Core/Src/AB1805.c **** volatile uint8_t _hour;
  18:Core/Src/AB1805.c **** volatile uint8_t _minute;
  19:Core/Src/AB1805.c **** volatile uint8_t _second;
  20:Core/Src/AB1805.c **** volatile uint8_t _hundredth;
  21:Core/Src/AB1805.c **** 
  22:Core/Src/AB1805.c **** volatile uint8_t _alarm_year;
  23:Core/Src/AB1805.c **** volatile uint8_t _alarm_month;
  24:Core/Src/AB1805.c **** volatile uint8_t _alarm_date;
  25:Core/Src/AB1805.c **** volatile uint8_t _alarm_weekday;
  26:Core/Src/AB1805.c **** volatile uint8_t _alarm_hour;
  27:Core/Src/AB1805.c **** volatile uint8_t _alarm_minute;
  28:Core/Src/AB1805.c **** volatile uint8_t _alarm_second;
  29:Core/Src/AB1805.c **** char data_time_string[CONST_DATE_TIME_STRING_LEN];
  30:Core/Src/AB1805.c **** 
  31:Core/Src/AB1805.c **** uint8_t _status;
  32:Core/Src/AB1805.c **** uint8_t _control1;
  33:Core/Src/AB1805.c **** uint8_t _control2;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 2


  34:Core/Src/AB1805.c **** uint8_t _interrupt;
  35:Core/Src/AB1805.c **** uint8_t _sleep_mode;
  36:Core/Src/AB1805.c **** uint8_t _timer_control_mode;
  37:Core/Src/AB1805.c **** uint8_t _outcontrol;
  38:Core/Src/AB1805.c **** uint8_t _osc_control;
  39:Core/Src/AB1805.c **** uint8_t _wdt_register;
  40:Core/Src/AB1805.c **** 
  41:Core/Src/AB1805.c **** void spi_select_slave(bool select) // 1 = high, 0 = low
  42:Core/Src/AB1805.c **** {
  43:Core/Src/AB1805.c ****   if (select)
  44:Core/Src/AB1805.c ****   {
  45:Core/Src/AB1805.c ****     RTC_H();
  46:Core/Src/AB1805.c ****   }
  47:Core/Src/AB1805.c ****   else
  48:Core/Src/AB1805.c ****   {
  49:Core/Src/AB1805.c ****     RTC_L();
  50:Core/Src/AB1805.c ****   }
  51:Core/Src/AB1805.c **** }
  52:Core/Src/AB1805.c **** 
  53:Core/Src/AB1805.c **** uint8_t get_rtc_data(const uint8_t rtc_register, const uint8_t register_mask)
  54:Core/Src/AB1805.c **** {
  55:Core/Src/AB1805.c ****   return (read_rtc_register(rtc_register) & register_mask);
  56:Core/Src/AB1805.c **** }
  57:Core/Src/AB1805.c **** 
  58:Core/Src/AB1805.c **** uint8_t get_hundredths(void)
  59:Core/Src/AB1805.c **** {
  60:Core/Src/AB1805.c ****   return get_rtc_data(HUNDRETH_REGISTER, 0xFF);
  61:Core/Src/AB1805.c **** }
  62:Core/Src/AB1805.c **** 
  63:Core/Src/AB1805.c **** uint8_t get_second(void)
  64:Core/Src/AB1805.c **** {
  65:Core/Src/AB1805.c ****   return get_rtc_data(SECOND_REGISTER, SECOND_MASK);
  66:Core/Src/AB1805.c **** }
  67:Core/Src/AB1805.c **** 
  68:Core/Src/AB1805.c **** uint8_t get_minute(void)
  69:Core/Src/AB1805.c **** {
  70:Core/Src/AB1805.c ****   return get_rtc_data(MINUTE_REGISTER, MINUTE_MASK);
  71:Core/Src/AB1805.c **** }
  72:Core/Src/AB1805.c **** 
  73:Core/Src/AB1805.c **** uint8_t get_hour(void)
  74:Core/Src/AB1805.c **** {
  75:Core/Src/AB1805.c ****   return get_rtc_data(HOUR_REGISTER, HOUR_24_MASK);
  76:Core/Src/AB1805.c **** }
  77:Core/Src/AB1805.c **** 
  78:Core/Src/AB1805.c **** uint8_t get_weekday(void)
  79:Core/Src/AB1805.c **** {
  80:Core/Src/AB1805.c ****   return get_rtc_data(WEEKDAY_REGISTER, DAY_MASK);
  81:Core/Src/AB1805.c **** }
  82:Core/Src/AB1805.c **** 
  83:Core/Src/AB1805.c **** uint8_t get_date(void)
  84:Core/Src/AB1805.c **** {
  85:Core/Src/AB1805.c ****   return get_rtc_data(DATE_REGISTER, DATE_MASK);
  86:Core/Src/AB1805.c **** }
  87:Core/Src/AB1805.c **** 
  88:Core/Src/AB1805.c **** uint8_t get_month(void)
  89:Core/Src/AB1805.c **** {
  90:Core/Src/AB1805.c ****   return get_rtc_data(MONTH_REGISTER, MONTH_MASK);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 3


  91:Core/Src/AB1805.c **** }
  92:Core/Src/AB1805.c **** 
  93:Core/Src/AB1805.c **** uint8_t get_year(void)
  94:Core/Src/AB1805.c **** {
  95:Core/Src/AB1805.c ****   return get_rtc_data(YEAR_REGISTER, YEAR_MASK);
  96:Core/Src/AB1805.c **** }
  97:Core/Src/AB1805.c **** 
  98:Core/Src/AB1805.c **** void get_datetime(void)
  99:Core/Src/AB1805.c **** {
 100:Core/Src/AB1805.c ****   // rtc_check_valid();
 101:Core/Src/AB1805.c ****   //_hundredths = get_hundredths();
 102:Core/Src/AB1805.c ****   _second = get_second();
 103:Core/Src/AB1805.c ****   _minute = get_minute();
 104:Core/Src/AB1805.c ****   _hour = get_hour();
 105:Core/Src/AB1805.c ****   _weekday = get_weekday();
 106:Core/Src/AB1805.c ****   _date = get_date();
 107:Core/Src/AB1805.c ****   _month = get_month();
 108:Core/Src/AB1805.c ****   _year = get_year();
 109:Core/Src/AB1805.c **** }
 110:Core/Src/AB1805.c **** 
 111:Core/Src/AB1805.c **** uint8_t get_second_alarm(void)
 112:Core/Src/AB1805.c **** {
 113:Core/Src/AB1805.c ****   _alarm_second = get_rtc_data(SECOND_ALARM_REGISTER, SECOND_ALARM_MASK);
 114:Core/Src/AB1805.c ****   return _alarm_second;
 115:Core/Src/AB1805.c **** }
 116:Core/Src/AB1805.c **** 
 117:Core/Src/AB1805.c **** uint8_t get_minute_alarm(void)
 118:Core/Src/AB1805.c **** {
 119:Core/Src/AB1805.c ****   _alarm_minute = get_rtc_data(MINUTE_ALARM_REGISTER, MINUTE_ALARM_MASK);
 120:Core/Src/AB1805.c ****   return _alarm_minute;
 121:Core/Src/AB1805.c **** }
 122:Core/Src/AB1805.c **** 
 123:Core/Src/AB1805.c **** uint8_t get_hour_alarm(void)
 124:Core/Src/AB1805.c **** {
 125:Core/Src/AB1805.c ****   _alarm_hour = get_rtc_data(HOUR_ALARM_REGISTER, HOUR_24_ALARM_MASK);
 126:Core/Src/AB1805.c ****   return _alarm_hour;
 127:Core/Src/AB1805.c **** }
 128:Core/Src/AB1805.c **** 
 129:Core/Src/AB1805.c **** uint8_t get_weekday_alarm(void)
 130:Core/Src/AB1805.c **** {
 131:Core/Src/AB1805.c ****   _alarm_weekday = get_rtc_data(WEEKDAY_ALARM_REGISTER, WEEKDAY_ALARM_MASK);
 132:Core/Src/AB1805.c ****   return _alarm_weekday;
 133:Core/Src/AB1805.c **** }
 134:Core/Src/AB1805.c **** 
 135:Core/Src/AB1805.c **** uint8_t get_date_alarm(void)
 136:Core/Src/AB1805.c **** {
 137:Core/Src/AB1805.c ****   _alarm_date = get_rtc_data(DATE_ALARM_REGISTER, DATE_ALARM_MASK);
 138:Core/Src/AB1805.c ****   return _alarm_date;
 139:Core/Src/AB1805.c **** }
 140:Core/Src/AB1805.c **** 
 141:Core/Src/AB1805.c **** uint8_t get_month_alarm(void)
 142:Core/Src/AB1805.c **** {
 143:Core/Src/AB1805.c ****   _alarm_month = get_rtc_data(MONTH_ALARM_REGISTER, MONTH_ALARM_MASK);
 144:Core/Src/AB1805.c ****   return _alarm_month;
 145:Core/Src/AB1805.c **** }
 146:Core/Src/AB1805.c **** 
 147:Core/Src/AB1805.c **** void set_second(const uint8_t value)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 4


 148:Core/Src/AB1805.c **** {
 149:Core/Src/AB1805.c ****   _second = value % MAX_SECOND;
 150:Core/Src/AB1805.c ****   write_rtc_register(SECOND_REGISTER, _second);
 151:Core/Src/AB1805.c **** }
 152:Core/Src/AB1805.c **** 
 153:Core/Src/AB1805.c **** void set_minute(const uint8_t value)
 154:Core/Src/AB1805.c **** {
 155:Core/Src/AB1805.c ****   _minute = value % MAX_MINUTE;
 156:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_REGISTER, _minute);
 157:Core/Src/AB1805.c **** }
 158:Core/Src/AB1805.c **** 
 159:Core/Src/AB1805.c **** void set_hour(const uint8_t value)
 160:Core/Src/AB1805.c **** {
 161:Core/Src/AB1805.c ****   _hour = value % MAX_HOURS;
 162:Core/Src/AB1805.c ****   write_rtc_register(HOUR_REGISTER, _hour);
 163:Core/Src/AB1805.c **** }
 164:Core/Src/AB1805.c **** 
 165:Core/Src/AB1805.c **** void set_weekday(const uint8_t value)
 166:Core/Src/AB1805.c **** {
 167:Core/Src/AB1805.c ****   _weekday = value % MAX_DAY;
 168:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_REGISTER, _weekday);
 169:Core/Src/AB1805.c **** }
 170:Core/Src/AB1805.c **** 
 171:Core/Src/AB1805.c **** void set_date(const uint8_t value)
 172:Core/Src/AB1805.c **** {
 173:Core/Src/AB1805.c ****   _date = value % MAX_DATE;
 174:Core/Src/AB1805.c ****   write_rtc_register(DATE_REGISTER, _date);
 175:Core/Src/AB1805.c **** }
 176:Core/Src/AB1805.c **** 
 177:Core/Src/AB1805.c **** void set_month(const uint8_t value)
 178:Core/Src/AB1805.c **** {
 179:Core/Src/AB1805.c ****   _month = value % MAX_MONTH;
 180:Core/Src/AB1805.c ****   write_rtc_register(MONTH_REGISTER, _month);
 181:Core/Src/AB1805.c **** }
 182:Core/Src/AB1805.c **** 
 183:Core/Src/AB1805.c **** void set_year(const uint8_t value)
 184:Core/Src/AB1805.c **** {
 185:Core/Src/AB1805.c ****   _year = value % MAX_YEAR;
 186:Core/Src/AB1805.c ****   write_rtc_register(YEAR_REGISTER, value);
 187:Core/Src/AB1805.c **** }
 188:Core/Src/AB1805.c **** 
 189:Core/Src/AB1805.c **** void set_datetime(uint8_t year, uint8_t month, uint8_t date, uint8_t weekday, uint8_t hour, uint8_t
 190:Core/Src/AB1805.c **** {
 191:Core/Src/AB1805.c ****   set_year(year);
 192:Core/Src/AB1805.c ****   set_month(month);
 193:Core/Src/AB1805.c ****   set_date(date);
 194:Core/Src/AB1805.c ****   set_weekday(weekday);
 195:Core/Src/AB1805.c ****   set_hour(hour);
 196:Core/Src/AB1805.c ****   set_minute(minutes);
 197:Core/Src/AB1805.c ****   set_second(seconds);
 198:Core/Src/AB1805.c **** }
 199:Core/Src/AB1805.c **** 
 200:Core/Src/AB1805.c **** void set_datetime_alarm_month(uint8_t month, uint8_t date, uint8_t hour, uint8_t minutes, uint8_t s
 201:Core/Src/AB1805.c **** {
 202:Core/Src/AB1805.c ****   set_month_alarm(month);
 203:Core/Src/AB1805.c ****   set_date_alarm(date);
 204:Core/Src/AB1805.c ****   set_hour_alarm(hour);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 5


 205:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 206:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 207:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_YEAR);
 208:Core/Src/AB1805.c **** }
 209:Core/Src/AB1805.c **** 
 210:Core/Src/AB1805.c **** void set_datetime_alarm_date(uint8_t date, uint8_t hour, uint8_t minutes, uint8_t seconds)
 211:Core/Src/AB1805.c **** {
 212:Core/Src/AB1805.c ****   set_date_alarm(date);
 213:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 214:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 215:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 216:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_MONTH);
 217:Core/Src/AB1805.c **** }
 218:Core/Src/AB1805.c **** 
 219:Core/Src/AB1805.c **** void set_week_alarm(uint8_t weekday, uint8_t hour, uint8_t minutes, uint8_t seconds)
 220:Core/Src/AB1805.c **** {
 221:Core/Src/AB1805.c ****   set_weekday_alarm(weekday);
 222:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 223:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 224:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 225:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_WEEK);
 226:Core/Src/AB1805.c **** }
 227:Core/Src/AB1805.c **** 
 228:Core/Src/AB1805.c **** void set_datetime_alarm_hour(uint8_t hour, uint8_t minutes, uint8_t seconds)
 229:Core/Src/AB1805.c **** {
 230:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 231:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 232:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 233:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_DAY);
 234:Core/Src/AB1805.c **** }
 235:Core/Src/AB1805.c **** 
 236:Core/Src/AB1805.c **** void set_datetime_alarm_minutes(uint8_t minutes, uint8_t seconds)
 237:Core/Src/AB1805.c **** {
 238:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 239:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 240:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_HOUR);
 241:Core/Src/AB1805.c **** }
 242:Core/Src/AB1805.c **** 
 243:Core/Src/AB1805.c **** void set_datetime_alarm_seconds(uint8_t seconds)
 244:Core/Src/AB1805.c **** {
 245:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 246:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_MINUTE);
 247:Core/Src/AB1805.c **** }
 248:Core/Src/AB1805.c **** 
 249:Core/Src/AB1805.c **** void set_once_second_alarm(uint8_t hundredths)
 250:Core/Src/AB1805.c **** {
 251:Core/Src/AB1805.c ****   // set_second_alarm(seconds);
 252:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_SECOND);
 253:Core/Src/AB1805.c **** }
 254:Core/Src/AB1805.c **** 
 255:Core/Src/AB1805.c **** bool set_second_alarm(uint8_t value)
 256:Core/Src/AB1805.c **** {
 257:Core/Src/AB1805.c ****   _alarm_second = value % MAX_SECOND;
 258:Core/Src/AB1805.c ****   write_rtc_register(SECOND_ALARM_REGISTER, _alarm_second);
 259:Core/Src/AB1805.c ****   _alarm_second = get_second_alarm();
 260:Core/Src/AB1805.c ****   return (value == _alarm_second);
 261:Core/Src/AB1805.c **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 6


 262:Core/Src/AB1805.c **** 
 263:Core/Src/AB1805.c **** bool set_minute_alarm(uint8_t value)
 264:Core/Src/AB1805.c **** {
 265:Core/Src/AB1805.c ****   _alarm_minute = value % MAX_MINUTE;
 266:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_ALARM_REGISTER, _alarm_minute);
 267:Core/Src/AB1805.c ****   _alarm_minute = get_minute_alarm();
 268:Core/Src/AB1805.c ****   return (value == _alarm_minute);
 269:Core/Src/AB1805.c **** }
 270:Core/Src/AB1805.c **** 
 271:Core/Src/AB1805.c **** bool set_hour_alarm(uint8_t value)
 272:Core/Src/AB1805.c **** {
 273:Core/Src/AB1805.c ****   _alarm_hour = value % MAX_HOURS;
 274:Core/Src/AB1805.c ****   write_rtc_register(HOUR_ALARM_REGISTER, _alarm_hour);
 275:Core/Src/AB1805.c ****   _alarm_hour = get_hour_alarm();
 276:Core/Src/AB1805.c ****   return (value == _alarm_hour);
 277:Core/Src/AB1805.c **** }
 278:Core/Src/AB1805.c **** 
 279:Core/Src/AB1805.c **** bool set_weekday_alarm(uint8_t value)
 280:Core/Src/AB1805.c **** {
 281:Core/Src/AB1805.c ****   _alarm_weekday = value % MAX_DAY;
 282:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_ALARM_REGISTER, _alarm_weekday);
 283:Core/Src/AB1805.c ****   _alarm_weekday = get_weekday_alarm();
 284:Core/Src/AB1805.c ****   return (value == _alarm_weekday);
 285:Core/Src/AB1805.c **** }
 286:Core/Src/AB1805.c **** 
 287:Core/Src/AB1805.c **** bool set_date_alarm(uint8_t value)
 288:Core/Src/AB1805.c **** {
 289:Core/Src/AB1805.c ****   _alarm_date = value % MAX_DATE;
 290:Core/Src/AB1805.c ****   write_rtc_register(DATE_ALARM_REGISTER, _alarm_date);
 291:Core/Src/AB1805.c ****   _alarm_date = get_date_alarm();
 292:Core/Src/AB1805.c ****   return (value == _alarm_date);
 293:Core/Src/AB1805.c **** }
 294:Core/Src/AB1805.c **** 
 295:Core/Src/AB1805.c **** bool set_month_alarm(uint8_t value)
 296:Core/Src/AB1805.c **** {
 297:Core/Src/AB1805.c ****   _alarm_month = value % MAX_MONTH;
 298:Core/Src/AB1805.c ****   write_rtc_register(MONTH_ALARM_REGISTER, _alarm_month);
 299:Core/Src/AB1805.c ****   _alarm_month = get_month_alarm();
 300:Core/Src/AB1805.c ****   return (value == _alarm_month);
 301:Core/Src/AB1805.c **** }
 302:Core/Src/AB1805.c **** 
 303:Core/Src/AB1805.c **** // String get_date_string(void)
 304:Core/Src/AB1805.c **** // {
 305:Core/Src/AB1805.c **** 
 306:Core/Src/AB1805.c **** //   String date_string;
 307:Core/Src/AB1805.c **** 
 308:Core/Src/AB1805.c **** //   _date = get_date();
 309:Core/Src/AB1805.c **** //   date_string += ((_date & 0xF0) >> 4);
 310:Core/Src/AB1805.c **** //   date_string += (_date & 0x0F);
 311:Core/Src/AB1805.c **** 
 312:Core/Src/AB1805.c **** //   date_string += '/';
 313:Core/Src/AB1805.c **** 
 314:Core/Src/AB1805.c **** //   _month = get_month();
 315:Core/Src/AB1805.c **** //   date_string += ((_month & 0xF0) >> 4);
 316:Core/Src/AB1805.c **** //   date_string += (_month & 0x0F);
 317:Core/Src/AB1805.c **** 
 318:Core/Src/AB1805.c **** //   date_string += '/';
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 7


 319:Core/Src/AB1805.c **** 
 320:Core/Src/AB1805.c **** //   _year = get_year();
 321:Core/Src/AB1805.c **** //   date_string += ((_year & 0xF0) >> 4);
 322:Core/Src/AB1805.c **** //   date_string += (_year & 0x0F);
 323:Core/Src/AB1805.c **** 
 324:Core/Src/AB1805.c **** //   date_string += ' ';
 325:Core/Src/AB1805.c **** 
 326:Core/Src/AB1805.c **** //   _hour = get_hour();
 327:Core/Src/AB1805.c **** //   date_string += ((_hour & 0xF0) >> 4);
 328:Core/Src/AB1805.c **** //   date_string += (_hour & 0x0F);
 329:Core/Src/AB1805.c **** 
 330:Core/Src/AB1805.c **** //   date_string += ':';
 331:Core/Src/AB1805.c **** 
 332:Core/Src/AB1805.c **** //   _minute = get_minute();
 333:Core/Src/AB1805.c **** //   date_string += ((_minute & 0xF0) >> 4);
 334:Core/Src/AB1805.c **** //   date_string += (_minute & 0x0F);
 335:Core/Src/AB1805.c **** 
 336:Core/Src/AB1805.c **** //   date_string += ':';
 337:Core/Src/AB1805.c **** 
 338:Core/Src/AB1805.c **** //   _second = get_second();
 339:Core/Src/AB1805.c **** //   date_string += ((_second & 0xF0) >> 4);
 340:Core/Src/AB1805.c **** //   date_string += (_second & 0x0F);
 341:Core/Src/AB1805.c **** 
 342:Core/Src/AB1805.c **** //   return date_string;
 343:Core/Src/AB1805.c **** // }
 344:Core/Src/AB1805.c **** 
 345:Core/Src/AB1805.c **** char *get_date_time(void)
 346:Core/Src/AB1805.c **** {
 347:Core/Src/AB1805.c ****   char *currPos;
 348:Core/Src/AB1805.c ****   currPos = data_time_string;
 349:Core/Src/AB1805.c ****   *currPos = 0;
 350:Core/Src/AB1805.c ****   get_datetime();
 351:Core/Src/AB1805.c **** 
 352:Core/Src/AB1805.c ****   *currPos = ((_date & 0xF0) >> 4) + 0x30;
 353:Core/Src/AB1805.c ****   currPos++;
 354:Core/Src/AB1805.c ****   *currPos = (_date & 0x0F) + 0x30;
 355:Core/Src/AB1805.c ****   currPos++;
 356:Core/Src/AB1805.c **** 
 357:Core/Src/AB1805.c ****   *currPos = '/';
 358:Core/Src/AB1805.c ****   currPos++;
 359:Core/Src/AB1805.c **** 
 360:Core/Src/AB1805.c ****   *currPos = ((_month & 0xF0) >> 4) + 0x30;
 361:Core/Src/AB1805.c ****   currPos++;
 362:Core/Src/AB1805.c ****   *currPos = (_month & 0x0F) + 0x30;
 363:Core/Src/AB1805.c ****   currPos++;
 364:Core/Src/AB1805.c **** 
 365:Core/Src/AB1805.c ****   *currPos = '/';
 366:Core/Src/AB1805.c ****   currPos++;
 367:Core/Src/AB1805.c **** 
 368:Core/Src/AB1805.c ****   *currPos = ((_year & 0xF0) >> 4) + 0x30;
 369:Core/Src/AB1805.c ****   currPos++;
 370:Core/Src/AB1805.c ****   *currPos = (_year & 0x0F) + 0x30;
 371:Core/Src/AB1805.c ****   currPos++;
 372:Core/Src/AB1805.c **** 
 373:Core/Src/AB1805.c ****   *currPos = ' ';
 374:Core/Src/AB1805.c ****   currPos++;
 375:Core/Src/AB1805.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 8


 376:Core/Src/AB1805.c ****   *currPos = ((_hour & 0xF0) >> 4) + 0x30;
 377:Core/Src/AB1805.c ****   currPos++;
 378:Core/Src/AB1805.c ****   *currPos = (_hour & 0x0F) + 0x30;
 379:Core/Src/AB1805.c ****   currPos++;
 380:Core/Src/AB1805.c **** 
 381:Core/Src/AB1805.c ****   *currPos = ':';
 382:Core/Src/AB1805.c ****   currPos++;
 383:Core/Src/AB1805.c **** 
 384:Core/Src/AB1805.c ****   *currPos = ((_minute & 0xF0) >> 4) + 0x30;
 385:Core/Src/AB1805.c ****   currPos++;
 386:Core/Src/AB1805.c ****   *currPos = (_minute & 0x0F) + 0x30;
 387:Core/Src/AB1805.c ****   currPos++;
 388:Core/Src/AB1805.c **** 
 389:Core/Src/AB1805.c ****   *currPos = ':';
 390:Core/Src/AB1805.c ****   currPos++;
 391:Core/Src/AB1805.c **** 
 392:Core/Src/AB1805.c ****   *currPos = ((_second & 0xF0) >> 4) + 0x30;
 393:Core/Src/AB1805.c ****   currPos++;
 394:Core/Src/AB1805.c ****   *currPos = (_second & 0x0F) + 0x30;
 395:Core/Src/AB1805.c ****   currPos++;
 396:Core/Src/AB1805.c **** 
 397:Core/Src/AB1805.c ****   *currPos = ' ';
 398:Core/Src/AB1805.c ****   currPos++;
 399:Core/Src/AB1805.c **** 
 400:Core/Src/AB1805.c ****   *currPos = ((_hundredth & 0xF0) >> 4) + 0x30;
 401:Core/Src/AB1805.c ****   currPos++;
 402:Core/Src/AB1805.c ****   *currPos = (_hundredth & 0x0F) + 0x30;
 403:Core/Src/AB1805.c ****   currPos++;
 404:Core/Src/AB1805.c **** 
 405:Core/Src/AB1805.c ****   return data_time_string;
 406:Core/Src/AB1805.c **** }
 407:Core/Src/AB1805.c **** 
 408:Core/Src/AB1805.c **** uint8_t dec_hex(uint8_t tens, uint8_t digits)
 409:Core/Src/AB1805.c **** {
 410:Core/Src/AB1805.c ****   uint8_t ret;
 411:Core/Src/AB1805.c ****   ret = (tens << 4) + digits;
 412:Core/Src/AB1805.c ****   return ret;
 413:Core/Src/AB1805.c **** }
 414:Core/Src/AB1805.c **** 
 415:Core/Src/AB1805.c **** uint8_t hex_dec(uint8_t hex)
 416:Core/Src/AB1805.c **** {
 417:Core/Src/AB1805.c ****   uint8_t ret;
 418:Core/Src/AB1805.c ****   ret = ((hex >> 4) & 0xF * 10) + (hex & 0xF);
 419:Core/Src/AB1805.c ****   return ret;
 420:Core/Src/AB1805.c **** }
 421:Core/Src/AB1805.c **** 
 422:Core/Src/AB1805.c **** // status
 423:Core/Src/AB1805.c **** uint8_t get_status(void)
 424:Core/Src/AB1805.c **** {
 425:Core/Src/AB1805.c ****   _status = get_rtc_data(STATU_REGISTER, STATUS_READ_ALL_MASK);
 426:Core/Src/AB1805.c ****   return _status;
 427:Core/Src/AB1805.c **** }
 428:Core/Src/AB1805.c **** 
 429:Core/Src/AB1805.c **** uint8_t get_CB_status(void)
 430:Core/Src/AB1805.c **** {
 431:Core/Src/AB1805.c ****   get_status();
 432:Core/Src/AB1805.c ****   return (_status & (STATUS_CB_MASK > 7));
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 9


 433:Core/Src/AB1805.c **** };
 434:Core/Src/AB1805.c **** 
 435:Core/Src/AB1805.c **** uint8_t get_BAT_status(void)
 436:Core/Src/AB1805.c **** {
 437:Core/Src/AB1805.c ****   get_status();
 438:Core/Src/AB1805.c ****   return (_status & (STATUS_BAT_MASK > 6));
 439:Core/Src/AB1805.c **** };
 440:Core/Src/AB1805.c **** 
 441:Core/Src/AB1805.c **** uint8_t get_WDT_status(void)
 442:Core/Src/AB1805.c **** {
 443:Core/Src/AB1805.c ****   get_status();
 444:Core/Src/AB1805.c ****   return (_status & (STATUS_WDT_MASK > 5));
 445:Core/Src/AB1805.c **** };
 446:Core/Src/AB1805.c **** 
 447:Core/Src/AB1805.c **** uint8_t get_BL_status(void)
 448:Core/Src/AB1805.c **** {
 449:Core/Src/AB1805.c ****   get_status();
 450:Core/Src/AB1805.c ****   return (_status & (STATUS_BL_MASK > 4));
 451:Core/Src/AB1805.c **** };
 452:Core/Src/AB1805.c **** 
 453:Core/Src/AB1805.c **** uint8_t get_TIM_status(void)
 454:Core/Src/AB1805.c **** {
 455:Core/Src/AB1805.c ****   get_status();
 456:Core/Src/AB1805.c ****   return (_status & (STATUS_TIM_MASK > 3));
 457:Core/Src/AB1805.c **** };
 458:Core/Src/AB1805.c **** 
 459:Core/Src/AB1805.c **** uint8_t get_ALM_status(void)
 460:Core/Src/AB1805.c **** {
 461:Core/Src/AB1805.c ****   get_status();
 462:Core/Src/AB1805.c ****   return (_status & (STATUS_ALM_MASK > 2));
 463:Core/Src/AB1805.c **** };
 464:Core/Src/AB1805.c **** 
 465:Core/Src/AB1805.c **** uint8_t get_EX2_status(void)
 466:Core/Src/AB1805.c **** {
 467:Core/Src/AB1805.c ****   get_status();
 468:Core/Src/AB1805.c ****   return (_status & (STATUS_EX2_MASK > 1));
 469:Core/Src/AB1805.c **** };
 470:Core/Src/AB1805.c **** 
 471:Core/Src/AB1805.c **** uint8_t get_EX1_status(void)
 472:Core/Src/AB1805.c **** {
 473:Core/Src/AB1805.c ****   get_status();
 474:Core/Src/AB1805.c ****   return (_status & (STATUS_EX1_MASK));
 475:Core/Src/AB1805.c **** };
 476:Core/Src/AB1805.c **** 
 477:Core/Src/AB1805.c **** uint8_t clean_CB_status(void)
 478:Core/Src/AB1805.c **** {
 479:Core/Src/AB1805.c ****   uint8_t c1;
 480:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 481:Core/Src/AB1805.c ****   c1 &= ~STATUS_CB_MASK;
 482:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 483:Core/Src/AB1805.c ****   return 1;
 484:Core/Src/AB1805.c **** }
 485:Core/Src/AB1805.c **** 
 486:Core/Src/AB1805.c **** uint8_t clean_BAT_status(void)
 487:Core/Src/AB1805.c **** {
 488:Core/Src/AB1805.c ****   uint8_t c1;
 489:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 10


 490:Core/Src/AB1805.c ****   c1 &= ~STATUS_BAT_MASK;
 491:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 492:Core/Src/AB1805.c ****   return 1;
 493:Core/Src/AB1805.c **** }
 494:Core/Src/AB1805.c **** 
 495:Core/Src/AB1805.c **** uint8_t clean_WDT_status(void)
 496:Core/Src/AB1805.c **** {
 497:Core/Src/AB1805.c ****   uint8_t c1;
 498:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 499:Core/Src/AB1805.c ****   c1 &= ~STATUS_WDT_MASK;
 500:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 501:Core/Src/AB1805.c ****   return 1;
 502:Core/Src/AB1805.c **** }
 503:Core/Src/AB1805.c **** 
 504:Core/Src/AB1805.c **** uint8_t clean_BL_status(void)
 505:Core/Src/AB1805.c **** {
 506:Core/Src/AB1805.c ****   uint8_t c1;
 507:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 508:Core/Src/AB1805.c ****   c1 &= ~STATUS_BL_MASK;
 509:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 510:Core/Src/AB1805.c ****   return 1;
 511:Core/Src/AB1805.c **** }
 512:Core/Src/AB1805.c **** 
 513:Core/Src/AB1805.c **** uint8_t clean_TIM_status(void)
 514:Core/Src/AB1805.c **** {
 515:Core/Src/AB1805.c ****   uint8_t c1;
 516:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 517:Core/Src/AB1805.c ****   c1 &= ~STATUS_TIM_MASK;
 518:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 519:Core/Src/AB1805.c ****   return 1;
 520:Core/Src/AB1805.c **** }
 521:Core/Src/AB1805.c **** 
 522:Core/Src/AB1805.c **** uint8_t clean_ALM_status(void)
 523:Core/Src/AB1805.c **** {
 524:Core/Src/AB1805.c ****   uint8_t c1;
 525:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 526:Core/Src/AB1805.c ****   c1 &= ~STATUS_ALM_MASK;
 527:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 528:Core/Src/AB1805.c ****   return 1;
 529:Core/Src/AB1805.c **** }
 530:Core/Src/AB1805.c **** 
 531:Core/Src/AB1805.c **** uint8_t clean_EX2_status(void)
 532:Core/Src/AB1805.c **** {
 533:Core/Src/AB1805.c ****   uint8_t c1;
 534:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 535:Core/Src/AB1805.c ****   c1 &= ~STATUS_EX2_MASK;
 536:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 537:Core/Src/AB1805.c ****   return 1;
 538:Core/Src/AB1805.c **** }
 539:Core/Src/AB1805.c **** 
 540:Core/Src/AB1805.c **** uint8_t clean_EX1_status(void)
 541:Core/Src/AB1805.c **** {
 542:Core/Src/AB1805.c ****   uint8_t c1;
 543:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 544:Core/Src/AB1805.c ****   c1 &= ~STATUS_EX1_MASK;
 545:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 546:Core/Src/AB1805.c ****   return 1;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 11


 547:Core/Src/AB1805.c **** }
 548:Core/Src/AB1805.c **** 
 549:Core/Src/AB1805.c **** // set func
 550:Core/Src/AB1805.c **** uint8_t set_control1(uint8_t value)
 551:Core/Src/AB1805.c **** {
 552:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, value);
 553:Core/Src/AB1805.c ****   _control1 = read_rtc_register(CONTROL1_REGISTER);
 554:Core/Src/AB1805.c ****   return _control1;
 555:Core/Src/AB1805.c **** }
 556:Core/Src/AB1805.c **** 
 557:Core/Src/AB1805.c **** uint8_t set_1224(uint8_t value)
 558:Core/Src/AB1805.c **** {
 559:Core/Src/AB1805.c ****   uint8_t c1;
 560:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 561:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_1224_MASK;
 562:Core/Src/AB1805.c ****   if (value)
 563:Core/Src/AB1805.c ****   {
 564:Core/Src/AB1805.c ****     c1 |= CONTROL1_1224_MASK;
 565:Core/Src/AB1805.c ****   }
 566:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, c1);
 567:Core/Src/AB1805.c ****   return 1;
 568:Core/Src/AB1805.c **** }
 569:Core/Src/AB1805.c **** 
 570:Core/Src/AB1805.c **** uint8_t set_RSP(uint8_t value)
 571:Core/Src/AB1805.c **** {
 572:Core/Src/AB1805.c ****   uint8_t c1;
 573:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 574:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_RSP_MASK;
 575:Core/Src/AB1805.c ****   if (value)
 576:Core/Src/AB1805.c ****   {
 577:Core/Src/AB1805.c ****     c1 |= CONTROL1_RSP_MASK;
 578:Core/Src/AB1805.c ****   }
 579:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, c1);
 580:Core/Src/AB1805.c ****   return 1;
 581:Core/Src/AB1805.c **** }
 582:Core/Src/AB1805.c **** 
 583:Core/Src/AB1805.c **** uint8_t set_ARST(uint8_t value)
 584:Core/Src/AB1805.c **** {
 585:Core/Src/AB1805.c ****   uint8_t c1;
 586:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 587:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_ARST_MASK;
 588:Core/Src/AB1805.c ****   if (value)
 589:Core/Src/AB1805.c ****   {
 590:Core/Src/AB1805.c ****     c1 |= CONTROL1_ARST_MASK;
 591:Core/Src/AB1805.c ****   }
 592:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, c1);
 593:Core/Src/AB1805.c ****   return 1;
 594:Core/Src/AB1805.c **** }
 595:Core/Src/AB1805.c **** 
 596:Core/Src/AB1805.c **** uint8_t set_PWR2(uint8_t value)
 597:Core/Src/AB1805.c **** {
 598:Core/Src/AB1805.c ****   uint8_t c1;
 599:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 600:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_PWR2_MASK;
 601:Core/Src/AB1805.c ****   if (value)
 602:Core/Src/AB1805.c ****   {
 603:Core/Src/AB1805.c ****     c1 |= CONTROL1_PWR2_MASK;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 12


 604:Core/Src/AB1805.c ****   }
 605:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, c1);
 606:Core/Src/AB1805.c ****   return 1;
 607:Core/Src/AB1805.c **** }
 608:Core/Src/AB1805.c **** 
 609:Core/Src/AB1805.c **** uint8_t set_WRTC(uint8_t value)
 610:Core/Src/AB1805.c **** {
 611:Core/Src/AB1805.c ****   uint8_t c1;
 612:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 613:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_WRTC_MASK;
 614:Core/Src/AB1805.c ****   if (value)
 615:Core/Src/AB1805.c ****   {
 616:Core/Src/AB1805.c ****     c1 |= CONTROL1_WRTC_MASK;
 617:Core/Src/AB1805.c ****   }
 618:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, c1);
 619:Core/Src/AB1805.c ****   return 1;
 620:Core/Src/AB1805.c **** }
 621:Core/Src/AB1805.c **** 
 622:Core/Src/AB1805.c **** // interrupt
 623:Core/Src/AB1805.c **** uint8_t get_interrupt(void)
 624:Core/Src/AB1805.c **** {
 625:Core/Src/AB1805.c ****   _interrupt = read_rtc_register(INT_MASK_REGISTER);
 626:Core/Src/AB1805.c ****   return _interrupt;
 627:Core/Src/AB1805.c **** }
 628:Core/Src/AB1805.c **** 
 629:Core/Src/AB1805.c **** uint8_t get_BLIE_interrupt(void)
 630:Core/Src/AB1805.c **** {
 631:Core/Src/AB1805.c ****   get_status();
 632:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_BL_MASK > 4));
 633:Core/Src/AB1805.c **** };
 634:Core/Src/AB1805.c **** 
 635:Core/Src/AB1805.c **** uint8_t get_TIE_interrupt(void)
 636:Core/Src/AB1805.c **** {
 637:Core/Src/AB1805.c ****   get_status();
 638:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_TIM_MASK > 3));
 639:Core/Src/AB1805.c **** };
 640:Core/Src/AB1805.c **** 
 641:Core/Src/AB1805.c **** uint8_t get_AIE_interrupt(void)
 642:Core/Src/AB1805.c **** {
 643:Core/Src/AB1805.c ****   get_status();
 644:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_ALM_MASK > 2));
 645:Core/Src/AB1805.c **** };
 646:Core/Src/AB1805.c **** 
 647:Core/Src/AB1805.c **** uint8_t get_EX2E_interrupt(void)
 648:Core/Src/AB1805.c **** {
 649:Core/Src/AB1805.c ****   get_status();
 650:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_EX2_MASK > 1));
 651:Core/Src/AB1805.c **** };
 652:Core/Src/AB1805.c **** 
 653:Core/Src/AB1805.c **** uint8_t get_EX1E_interrupt(void)
 654:Core/Src/AB1805.c **** {
 655:Core/Src/AB1805.c ****   get_status();
 656:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_EX1_MASK));
 657:Core/Src/AB1805.c **** };
 658:Core/Src/AB1805.c **** 
 659:Core/Src/AB1805.c **** uint8_t set_interrupt(uint8_t value)
 660:Core/Src/AB1805.c **** {
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 13


 661:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, value);
 662:Core/Src/AB1805.c ****   _interrupt = read_rtc_register(INT_MASK_REGISTER);
 663:Core/Src/AB1805.c ****   return _interrupt;
 664:Core/Src/AB1805.c **** }
 665:Core/Src/AB1805.c **** 
 666:Core/Src/AB1805.c **** uint8_t set_BLIE_interrupt(uint8_t value)
 667:Core/Src/AB1805.c **** {
 668:Core/Src/AB1805.c ****   uint8_t c1;
 669:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 670:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_BLIE_MASK;
 671:Core/Src/AB1805.c ****   if (value)
 672:Core/Src/AB1805.c ****   {
 673:Core/Src/AB1805.c ****     c1 |= INTERRUPT_BLIE_MASK;
 674:Core/Src/AB1805.c ****   }
 675:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, c1);
 676:Core/Src/AB1805.c ****   return 1;
 677:Core/Src/AB1805.c **** }
 678:Core/Src/AB1805.c **** 
 679:Core/Src/AB1805.c **** uint8_t set_TIE_interrupt(uint8_t value)
 680:Core/Src/AB1805.c **** {
 681:Core/Src/AB1805.c ****   uint8_t c1;
 682:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 683:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_TIE_MASK;
 684:Core/Src/AB1805.c ****   if (value)
 685:Core/Src/AB1805.c ****   {
 686:Core/Src/AB1805.c ****     c1 |= INTERRUPT_TIE_MASK;
 687:Core/Src/AB1805.c ****   }
 688:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, c1);
 689:Core/Src/AB1805.c ****   return 1;
 690:Core/Src/AB1805.c **** }
 691:Core/Src/AB1805.c **** 
 692:Core/Src/AB1805.c **** uint8_t set_AIE_interrupt(uint8_t value)
 693:Core/Src/AB1805.c **** {
 694:Core/Src/AB1805.c ****   uint8_t c1;
 695:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 696:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_AIE_MASK;
 697:Core/Src/AB1805.c ****   if (value)
 698:Core/Src/AB1805.c ****   {
 699:Core/Src/AB1805.c ****     c1 |= INTERRUPT_AIE_MASK;
 700:Core/Src/AB1805.c ****   }
 701:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, c1);
 702:Core/Src/AB1805.c ****   return 1;
 703:Core/Src/AB1805.c **** }
 704:Core/Src/AB1805.c **** 
 705:Core/Src/AB1805.c **** uint8_t set_EX1E_interrupt(uint8_t value)
 706:Core/Src/AB1805.c **** {
 707:Core/Src/AB1805.c ****   uint8_t c1;
 708:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 709:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX1E_MASK;
 710:Core/Src/AB1805.c ****   if (value)
 711:Core/Src/AB1805.c ****   {
 712:Core/Src/AB1805.c ****     c1 |= INTERRUPT_EX1E_MASK;
 713:Core/Src/AB1805.c ****   }
 714:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, c1);
 715:Core/Src/AB1805.c ****   return 1;
 716:Core/Src/AB1805.c **** }
 717:Core/Src/AB1805.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 14


 718:Core/Src/AB1805.c **** uint8_t set_EX2E_interrupt(uint8_t value)
 719:Core/Src/AB1805.c **** {
 720:Core/Src/AB1805.c ****   uint8_t c1;
 721:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 722:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX2E_MASK;
 723:Core/Src/AB1805.c ****   if (value)
 724:Core/Src/AB1805.c ****   {
 725:Core/Src/AB1805.c ****     c1 |= INTERRUPT_EX2E_MASK;
 726:Core/Src/AB1805.c ****   }
 727:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, c1);
 728:Core/Src/AB1805.c ****   return 1;
 729:Core/Src/AB1805.c **** }
 730:Core/Src/AB1805.c **** 
 731:Core/Src/AB1805.c **** // control2
 732:Core/Src/AB1805.c **** uint8_t get_control2(void)
 733:Core/Src/AB1805.c **** {
 734:Core/Src/AB1805.c ****   _control2 = read_rtc_register(CONTROL2_REGISTER);
 735:Core/Src/AB1805.c ****   return _control2;
 736:Core/Src/AB1805.c **** }
 737:Core/Src/AB1805.c **** 
 738:Core/Src/AB1805.c **** uint8_t get_RS1E_control2(void)
 739:Core/Src/AB1805.c **** {
 740:Core/Src/AB1805.c ****   get_control2();
 741:Core/Src/AB1805.c ****   return (_control2 & (CONTROL2_RS1E_MASK > 5));
 742:Core/Src/AB1805.c **** };
 743:Core/Src/AB1805.c **** 
 744:Core/Src/AB1805.c **** uint8_t get_OUT2S_control2(void)
 745:Core/Src/AB1805.c **** {
 746:Core/Src/AB1805.c ****   get_control2();
 747:Core/Src/AB1805.c ****   return (_control2 & (CONTROL2_OUT2S_MASK > 2));
 748:Core/Src/AB1805.c **** };
 749:Core/Src/AB1805.c **** 
 750:Core/Src/AB1805.c **** uint8_t get_OUT1S_control2(void)
 751:Core/Src/AB1805.c **** {
 752:Core/Src/AB1805.c ****   get_control2();
 753:Core/Src/AB1805.c ****   return (_control2 & (CONTROL2_OUT1S_MASK));
 754:Core/Src/AB1805.c **** };
 755:Core/Src/AB1805.c **** 
 756:Core/Src/AB1805.c **** uint8_t set_control2(uint8_t value)
 757:Core/Src/AB1805.c **** {
 758:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, value);
 759:Core/Src/AB1805.c ****   _control2 = read_rtc_register(CONTROL2_REGISTER);
 760:Core/Src/AB1805.c ****   return _control2;
 761:Core/Src/AB1805.c **** }
 762:Core/Src/AB1805.c **** 
 763:Core/Src/AB1805.c **** uint8_t set_RS1E_control2(uint8_t value)
 764:Core/Src/AB1805.c **** {
 765:Core/Src/AB1805.c ****   uint8_t c1;
 766:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL2_REGISTER);
 767:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_RS1E_MASK;
 768:Core/Src/AB1805.c ****   if (value)
 769:Core/Src/AB1805.c ****   {
 770:Core/Src/AB1805.c ****     c1 |= CONTROL2_RS1E_MASK;
 771:Core/Src/AB1805.c ****   }
 772:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 773:Core/Src/AB1805.c ****   return c1;
 774:Core/Src/AB1805.c **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 15


 775:Core/Src/AB1805.c **** 
 776:Core/Src/AB1805.c **** uint8_t set_OUT2S_control2(uint8_t value)
 777:Core/Src/AB1805.c **** {
 778:Core/Src/AB1805.c ****   uint8_t c1;
 779:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL2_REGISTER);
 780:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT2S_MASK;
 781:Core/Src/AB1805.c ****   c1 |= (value << 2) & CONTROL2_OUT2S_MASK;
 782:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 783:Core/Src/AB1805.c ****   return c1;
 784:Core/Src/AB1805.c **** }
 785:Core/Src/AB1805.c **** 
 786:Core/Src/AB1805.c **** uint8_t set_OUT1S_control2(uint8_t value)
 787:Core/Src/AB1805.c **** {
 788:Core/Src/AB1805.c ****   uint8_t c1;
 789:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL2_REGISTER);
 790:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT1S_MASK;
 791:Core/Src/AB1805.c ****   c1 |= (value)&CONTROL2_OUT1S_MASK;
 792:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 793:Core/Src/AB1805.c ****   return c1;
 794:Core/Src/AB1805.c **** }
 795:Core/Src/AB1805.c **** 
 796:Core/Src/AB1805.c **** // sleep mode
 797:Core/Src/AB1805.c **** uint8_t get_sleep(void)
 798:Core/Src/AB1805.c **** {
 799:Core/Src/AB1805.c ****   _sleep_mode = read_rtc_register(SLEEP_CONTROL_REGISTER);
 800:Core/Src/AB1805.c ****   return _sleep_mode;
 801:Core/Src/AB1805.c **** }
 802:Core/Src/AB1805.c **** 
 803:Core/Src/AB1805.c **** uint8_t get_SLP_sleep(void)
 804:Core/Src/AB1805.c **** {
 805:Core/Src/AB1805.c ****   get_sleep();
 806:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLP_MASK > 7));
 807:Core/Src/AB1805.c **** };
 808:Core/Src/AB1805.c **** 
 809:Core/Src/AB1805.c **** uint8_t get_SLRES_sleep(void)
 810:Core/Src/AB1805.c **** {
 811:Core/Src/AB1805.c ****   get_sleep();
 812:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLRES_MASK > 6));
 813:Core/Src/AB1805.c **** };
 814:Core/Src/AB1805.c **** 
 815:Core/Src/AB1805.c **** uint8_t get_EX2P_sleep(void)
 816:Core/Src/AB1805.c **** {
 817:Core/Src/AB1805.c ****   get_sleep();
 818:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_EX2P_MASK > 5));
 819:Core/Src/AB1805.c **** };
 820:Core/Src/AB1805.c **** 
 821:Core/Src/AB1805.c **** uint8_t get_EX1P_sleep(void)
 822:Core/Src/AB1805.c **** {
 823:Core/Src/AB1805.c ****   get_sleep();
 824:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_EX1P_MASK > 4));
 825:Core/Src/AB1805.c **** };
 826:Core/Src/AB1805.c **** 
 827:Core/Src/AB1805.c **** uint8_t get_SLST_sleep(void)
 828:Core/Src/AB1805.c **** {
 829:Core/Src/AB1805.c ****   get_sleep();
 830:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLST_MASK > 3));
 831:Core/Src/AB1805.c **** };
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 16


 832:Core/Src/AB1805.c **** 
 833:Core/Src/AB1805.c **** uint8_t get_SLTO_sleep(void)
 834:Core/Src/AB1805.c **** {
 835:Core/Src/AB1805.c ****   get_sleep();
 836:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLTO_MASK));
 837:Core/Src/AB1805.c **** };
 838:Core/Src/AB1805.c **** 
 839:Core/Src/AB1805.c **** uint8_t set_sleep(uint8_t value)
 840:Core/Src/AB1805.c **** {
 841:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, value);
 842:Core/Src/AB1805.c ****   _sleep_mode = read_rtc_register(SLEEP_CONTROL_REGISTER);
 843:Core/Src/AB1805.c ****   return _sleep_mode;
 844:Core/Src/AB1805.c **** }
 845:Core/Src/AB1805.c **** 
 846:Core/Src/AB1805.c **** uint8_t set_SLP_sleep(uint8_t value)
 847:Core/Src/AB1805.c **** {
 848:Core/Src/AB1805.c ****   uint8_t c1;
 849:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 850:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLP_MASK;
 851:Core/Src/AB1805.c ****   if (value)
 852:Core/Src/AB1805.c ****   {
 853:Core/Src/AB1805.c ****     c1 |= SLEEP_CONTROL_SLP_MASK;
 854:Core/Src/AB1805.c ****   }
 855:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 856:Core/Src/AB1805.c ****   return c1;
 857:Core/Src/AB1805.c **** }
 858:Core/Src/AB1805.c **** 
 859:Core/Src/AB1805.c **** uint8_t set_SLRES_sleep(uint8_t value)
 860:Core/Src/AB1805.c **** {
 861:Core/Src/AB1805.c ****   uint8_t c1;
 862:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 863:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLRES_MASK;
 864:Core/Src/AB1805.c ****   if (value)
 865:Core/Src/AB1805.c ****   {
 866:Core/Src/AB1805.c ****     c1 |= SLEEP_CONTROL_SLRES_MASK;
 867:Core/Src/AB1805.c ****   }
 868:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 869:Core/Src/AB1805.c ****   return c1;
 870:Core/Src/AB1805.c **** }
 871:Core/Src/AB1805.c **** 
 872:Core/Src/AB1805.c **** uint8_t set_EX2P_sleep(uint8_t value)
 873:Core/Src/AB1805.c **** {
 874:Core/Src/AB1805.c ****   uint8_t c1;
 875:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 876:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX2P_MASK;
 877:Core/Src/AB1805.c ****   if (value)
 878:Core/Src/AB1805.c ****   {
 879:Core/Src/AB1805.c ****     c1 |= SLEEP_CONTROL_EX2P_MASK;
 880:Core/Src/AB1805.c ****   }
 881:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 882:Core/Src/AB1805.c ****   return c1;
 883:Core/Src/AB1805.c **** }
 884:Core/Src/AB1805.c **** 
 885:Core/Src/AB1805.c **** uint8_t set_EX1P_sleep(uint8_t value)
 886:Core/Src/AB1805.c **** {
 887:Core/Src/AB1805.c ****   uint8_t c1;
 888:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 17


 889:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX1P_MASK;
 890:Core/Src/AB1805.c ****   if (value)
 891:Core/Src/AB1805.c ****   {
 892:Core/Src/AB1805.c ****     c1 |= SLEEP_CONTROL_EX1P_MASK;
 893:Core/Src/AB1805.c ****   }
 894:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 895:Core/Src/AB1805.c ****   return c1;
 896:Core/Src/AB1805.c **** }
 897:Core/Src/AB1805.c **** 
 898:Core/Src/AB1805.c **** uint8_t clean_SLST_sleep(void)
 899:Core/Src/AB1805.c **** {
 900:Core/Src/AB1805.c ****   uint8_t c1;
 901:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 902:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLST_MASK;
 903:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 904:Core/Src/AB1805.c ****   return c1;
 905:Core/Src/AB1805.c **** }
 906:Core/Src/AB1805.c **** 
 907:Core/Src/AB1805.c **** uint8_t set_SLTO_sleep(uint8_t value)
 908:Core/Src/AB1805.c **** {
 909:Core/Src/AB1805.c ****   uint8_t c1;
 910:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 911:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLTO_MASK;
 912:Core/Src/AB1805.c ****   c1 |= value;
 913:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 914:Core/Src/AB1805.c ****   return c1;
 915:Core/Src/AB1805.c **** }
 916:Core/Src/AB1805.c **** 
 917:Core/Src/AB1805.c **** // countdown control
 918:Core/Src/AB1805.c **** uint8_t get_time_control(void)
 919:Core/Src/AB1805.c **** {
 920:Core/Src/AB1805.c ****   _timer_control_mode = read_rtc_register(TIMER_CONTROL_REGISTER);
 921:Core/Src/AB1805.c ****   return _timer_control_mode;
 922:Core/Src/AB1805.c **** }
 923:Core/Src/AB1805.c **** 
 924:Core/Src/AB1805.c **** uint8_t get_TE_time_control(void)
 925:Core/Src/AB1805.c **** {
 926:Core/Src/AB1805.c ****   get_time_control();
 927:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TE_MASK > 7));
 928:Core/Src/AB1805.c **** };
 929:Core/Src/AB1805.c **** 
 930:Core/Src/AB1805.c **** uint8_t get_TM_time_control(void)
 931:Core/Src/AB1805.c **** {
 932:Core/Src/AB1805.c ****   get_time_control();
 933:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TM_MASK > 6));
 934:Core/Src/AB1805.c **** };
 935:Core/Src/AB1805.c **** 
 936:Core/Src/AB1805.c **** uint8_t get_TRPT_time_control(void)
 937:Core/Src/AB1805.c **** {
 938:Core/Src/AB1805.c ****   get_time_control();
 939:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TRPT_MASK > 5));
 940:Core/Src/AB1805.c **** };
 941:Core/Src/AB1805.c **** 
 942:Core/Src/AB1805.c **** uint8_t get_RPT_time_control(void)
 943:Core/Src/AB1805.c **** {
 944:Core/Src/AB1805.c ****   get_time_control();
 945:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_RPT_MASK > 2));
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 18


 946:Core/Src/AB1805.c **** };
 947:Core/Src/AB1805.c **** 
 948:Core/Src/AB1805.c **** uint8_t get_TFS_time_control(void)
 949:Core/Src/AB1805.c **** {
 950:Core/Src/AB1805.c ****   get_time_control();
 951:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TFS_MASK));
 952:Core/Src/AB1805.c **** };
 953:Core/Src/AB1805.c **** 
 954:Core/Src/AB1805.c **** uint8_t set_time_control(uint8_t value)
 955:Core/Src/AB1805.c **** {
 956:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, value);
 957:Core/Src/AB1805.c ****   _timer_control_mode = read_rtc_register(TIMER_CONTROL_REGISTER);
 958:Core/Src/AB1805.c ****   return _timer_control_mode;
 959:Core/Src/AB1805.c **** }
 960:Core/Src/AB1805.c **** 
 961:Core/Src/AB1805.c **** uint8_t set_TE_time_control(uint8_t value)
 962:Core/Src/AB1805.c **** {
 963:Core/Src/AB1805.c ****   uint8_t c1;
 964:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 965:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TE_MASK;
 966:Core/Src/AB1805.c ****   if (value)
 967:Core/Src/AB1805.c ****   {
 968:Core/Src/AB1805.c ****     c1 |= TIMER_CONTROL_TE_MASK;
 969:Core/Src/AB1805.c ****   }
 970:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 971:Core/Src/AB1805.c ****   return c1;
 972:Core/Src/AB1805.c **** }
 973:Core/Src/AB1805.c **** 
 974:Core/Src/AB1805.c **** uint8_t set_TM_time_control(uint8_t value)
 975:Core/Src/AB1805.c **** {
 976:Core/Src/AB1805.c ****   uint8_t c1;
 977:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 978:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TM_MASK;
 979:Core/Src/AB1805.c ****   if (value)
 980:Core/Src/AB1805.c ****   {
 981:Core/Src/AB1805.c ****     c1 |= TIMER_CONTROL_TM_MASK;
 982:Core/Src/AB1805.c ****   }
 983:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 984:Core/Src/AB1805.c ****   return c1;
 985:Core/Src/AB1805.c **** }
 986:Core/Src/AB1805.c **** 
 987:Core/Src/AB1805.c **** uint8_t set_TRPT_time_control(uint8_t value)
 988:Core/Src/AB1805.c **** {
 989:Core/Src/AB1805.c ****   uint8_t c1;
 990:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 991:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TRPT_MASK;
 992:Core/Src/AB1805.c ****   if (value)
 993:Core/Src/AB1805.c ****   {
 994:Core/Src/AB1805.c ****     c1 |= TIMER_CONTROL_TRPT_MASK;
 995:Core/Src/AB1805.c ****   }
 996:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 997:Core/Src/AB1805.c ****   return c1;
 998:Core/Src/AB1805.c **** }
 999:Core/Src/AB1805.c **** 
1000:Core/Src/AB1805.c **** uint8_t set_RPT_time_control(uint8_t value)
1001:Core/Src/AB1805.c **** {
1002:Core/Src/AB1805.c ****   uint8_t c1;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 19


1003:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
1004:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_RPT_MASK;
1005:Core/Src/AB1805.c ****   c1 |= (value << 2) & TIMER_CONTROL_RPT_MASK;
1006:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
1007:Core/Src/AB1805.c ****   return c1;
1008:Core/Src/AB1805.c **** }
1009:Core/Src/AB1805.c **** 
1010:Core/Src/AB1805.c **** uint8_t set_TFS_time_control(uint8_t value)
1011:Core/Src/AB1805.c **** {
1012:Core/Src/AB1805.c ****   uint8_t c1;
1013:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
1014:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TFS_MASK;
1015:Core/Src/AB1805.c ****   c1 |= value;
1016:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
1017:Core/Src/AB1805.c ****   return c1;
1018:Core/Src/AB1805.c **** }
1019:Core/Src/AB1805.c **** 
1020:Core/Src/AB1805.c **** // outcontrol registers
1021:Core/Src/AB1805.c **** uint8_t get_outcontrol(void)
1022:Core/Src/AB1805.c **** {
1023:Core/Src/AB1805.c ****   _outcontrol = read_rtc_register(OCTRL_REGISTER);
1024:Core/Src/AB1805.c ****   return _outcontrol;
1025:Core/Src/AB1805.c **** }
1026:Core/Src/AB1805.c **** 
1027:Core/Src/AB1805.c **** uint8_t get_outcontrol_mask(uint8_t mask)
1028:Core/Src/AB1805.c **** {
1029:Core/Src/AB1805.c ****   uint8_t ret;
1030:Core/Src/AB1805.c ****   ret = get_outcontrol() & mask;
1031:Core/Src/AB1805.c ****   switch (mask)
1032:Core/Src/AB1805.c ****   {
1033:Core/Src/AB1805.c ****   case OCTRL_WDBM_MASK:
1034:Core/Src/AB1805.c ****     ret = ret >> 7;
1035:Core/Src/AB1805.c ****     break;
1036:Core/Src/AB1805.c ****   case OCTRL_EXBM_MASK:
1037:Core/Src/AB1805.c ****     ret = ret >> 6;
1038:Core/Src/AB1805.c ****     break;
1039:Core/Src/AB1805.c ****   case OCTRL_WDDS_MASK:
1040:Core/Src/AB1805.c ****     ret = ret >> 5;
1041:Core/Src/AB1805.c ****     break;
1042:Core/Src/AB1805.c ****   case OCTRL_EXDS_MASK:
1043:Core/Src/AB1805.c ****     ret = ret >> 4;
1044:Core/Src/AB1805.c ****     break;
1045:Core/Src/AB1805.c ****   case OCTRL_RSEN_MASK:
1046:Core/Src/AB1805.c ****     ret = ret >> 3;
1047:Core/Src/AB1805.c ****     break;
1048:Core/Src/AB1805.c ****   case OCTRL_O4EN_MASK:
1049:Core/Src/AB1805.c ****     ret = ret >> 2;
1050:Core/Src/AB1805.c ****     break;
1051:Core/Src/AB1805.c ****   case OCTRL_O3EN_MASK:
1052:Core/Src/AB1805.c ****     ret = ret >> 1;
1053:Core/Src/AB1805.c ****     break;
1054:Core/Src/AB1805.c ****   case OCTRL_O1EN_MASK:
1055:Core/Src/AB1805.c ****     ret = ret;
1056:Core/Src/AB1805.c ****     break;
1057:Core/Src/AB1805.c ****   default:
1058:Core/Src/AB1805.c ****     ret = _outcontrol;
1059:Core/Src/AB1805.c ****   }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 20


1060:Core/Src/AB1805.c ****   return ret;
1061:Core/Src/AB1805.c **** }
1062:Core/Src/AB1805.c **** 
1063:Core/Src/AB1805.c **** uint8_t set_outcontrol_value(uint8_t value)
1064:Core/Src/AB1805.c **** {
1065:Core/Src/AB1805.c ****   write_rtc_register(OCTRL_REGISTER, value);
1066:Core/Src/AB1805.c ****   _outcontrol = read_rtc_register(OCTRL_REGISTER);
1067:Core/Src/AB1805.c ****   return _outcontrol;
1068:Core/Src/AB1805.c **** }
1069:Core/Src/AB1805.c **** 
1070:Core/Src/AB1805.c **** uint8_t set_outcontrol_value_mask(uint8_t value, uint8_t mask)
1071:Core/Src/AB1805.c **** {
1072:Core/Src/AB1805.c ****   uint8_t c1;
1073:Core/Src/AB1805.c ****   c1 = get_outcontrol();
1074:Core/Src/AB1805.c ****   switch (mask)
1075:Core/Src/AB1805.c ****   {
1076:Core/Src/AB1805.c ****   case OCTRL_WDBM_MASK:
1077:Core/Src/AB1805.c ****     c1 &= ~OCTRL_WDBM_MASK;
1078:Core/Src/AB1805.c ****     c1 |= (value << 7) & OCTRL_WDBM_MASK;
1079:Core/Src/AB1805.c ****     break;
1080:Core/Src/AB1805.c ****   case OCTRL_EXBM_MASK:
1081:Core/Src/AB1805.c ****     c1 &= ~OCTRL_EXBM_MASK;
1082:Core/Src/AB1805.c ****     c1 |= (value << 6) & OCTRL_EXBM_MASK;
1083:Core/Src/AB1805.c ****     break;
1084:Core/Src/AB1805.c ****   case OCTRL_WDDS_MASK:
1085:Core/Src/AB1805.c ****     c1 &= ~OCTRL_WDDS_MASK;
1086:Core/Src/AB1805.c ****     c1 |= (value << 5) & OCTRL_WDDS_MASK;
1087:Core/Src/AB1805.c ****     break;
1088:Core/Src/AB1805.c ****   case OCTRL_EXDS_MASK:
1089:Core/Src/AB1805.c ****     c1 &= ~OCTRL_EXDS_MASK;
1090:Core/Src/AB1805.c ****     c1 |= (value << 4) & OCTRL_EXDS_MASK;
1091:Core/Src/AB1805.c ****     break;
1092:Core/Src/AB1805.c ****   case OCTRL_RSEN_MASK:
1093:Core/Src/AB1805.c ****     c1 &= ~OCTRL_RSEN_MASK;
1094:Core/Src/AB1805.c ****     c1 |= (value << 3) & OCTRL_RSEN_MASK;
1095:Core/Src/AB1805.c ****     break;
1096:Core/Src/AB1805.c ****   case OCTRL_O4EN_MASK:
1097:Core/Src/AB1805.c ****     c1 &= ~OCTRL_O4EN_MASK;
1098:Core/Src/AB1805.c ****     c1 |= (value << 2) & OCTRL_O4EN_MASK;
1099:Core/Src/AB1805.c ****     break;
1100:Core/Src/AB1805.c ****   case OCTRL_O3EN_MASK:
1101:Core/Src/AB1805.c ****     c1 &= ~OCTRL_O3EN_MASK;
1102:Core/Src/AB1805.c ****     c1 |= (value << 1) & OCTRL_O3EN_MASK;
1103:Core/Src/AB1805.c ****     break;
1104:Core/Src/AB1805.c ****   case OCTRL_O1EN_MASK:
1105:Core/Src/AB1805.c ****     c1 &= ~OCTRL_O1EN_MASK;
1106:Core/Src/AB1805.c ****     c1 |= (value)&OCTRL_O1EN_MASK;
1107:Core/Src/AB1805.c ****     break;
1108:Core/Src/AB1805.c ****   case CCTRL_SLEEP_MODE_MASK:
1109:Core/Src/AB1805.c ****     // special mode for sleep mode, to Avoiding Unexpected Leakage Paths
1110:Core/Src/AB1805.c ****     c1 &= ~CCTRL_SLEEP_MODE_MASK;
1111:Core/Src/AB1805.c ****     c1 |= (value)&CCTRL_SLEEP_MODE_MASK;
1112:Core/Src/AB1805.c ****   default:
1113:Core/Src/AB1805.c ****     c1 = value;
1114:Core/Src/AB1805.c ****   }
1115:Core/Src/AB1805.c ****   return set_outcontrol_value(c1);
1116:Core/Src/AB1805.c **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 21


1117:Core/Src/AB1805.c **** 
1118:Core/Src/AB1805.c **** // OSC control registers
1119:Core/Src/AB1805.c **** uint8_t get_osc_control(void)
1120:Core/Src/AB1805.c **** {
1121:Core/Src/AB1805.c ****   _osc_control = read_rtc_register(OSC_CONTROL_REGISTER);
1122:Core/Src/AB1805.c ****   return _osc_control;
1123:Core/Src/AB1805.c **** }
1124:Core/Src/AB1805.c **** 
1125:Core/Src/AB1805.c **** uint8_t get_osc_control_mask(uint8_t mask)
1126:Core/Src/AB1805.c **** {
1127:Core/Src/AB1805.c ****   uint8_t ret;
1128:Core/Src/AB1805.c ****   ret = get_osc_control() & mask;
1129:Core/Src/AB1805.c ****   switch (mask)
1130:Core/Src/AB1805.c ****   {
1131:Core/Src/AB1805.c ****   case OSC_CONTROL_OSEL_MASK:
1132:Core/Src/AB1805.c ****     ret = ret >> 7;
1133:Core/Src/AB1805.c ****     break;
1134:Core/Src/AB1805.c ****   case OSC_CONTROL_ACAL_MASK:
1135:Core/Src/AB1805.c ****     ret = ret >> 5;
1136:Core/Src/AB1805.c ****     break;
1137:Core/Src/AB1805.c ****   case OSC_CONTROL_AOS_MASK:
1138:Core/Src/AB1805.c ****     ret = ret >> 4;
1139:Core/Src/AB1805.c ****     break;
1140:Core/Src/AB1805.c ****   case OSC_CONTROL_FOS_MASK:
1141:Core/Src/AB1805.c ****     ret = ret >> 3;
1142:Core/Src/AB1805.c ****     break;
1143:Core/Src/AB1805.c ****   case OSC_CONTROL_PWGT_MASK:
1144:Core/Src/AB1805.c ****     ret = ret >> 2;
1145:Core/Src/AB1805.c ****     break;
1146:Core/Src/AB1805.c ****   case OSC_CONTROL_OFIE_MASK:
1147:Core/Src/AB1805.c ****     ret = ret >> 1;
1148:Core/Src/AB1805.c ****     break;
1149:Core/Src/AB1805.c ****   case OSC_CONTROL_ACIE_MASK:
1150:Core/Src/AB1805.c ****     ret = ret;
1151:Core/Src/AB1805.c ****     break;
1152:Core/Src/AB1805.c ****   default:
1153:Core/Src/AB1805.c ****     ret = _osc_control;
1154:Core/Src/AB1805.c ****   }
1155:Core/Src/AB1805.c ****   return ret;
1156:Core/Src/AB1805.c **** }
1157:Core/Src/AB1805.c **** 
1158:Core/Src/AB1805.c **** uint8_t set_osc_control_value(uint8_t value)
1159:Core/Src/AB1805.c **** {
1160:Core/Src/AB1805.c ****   write_rtc_register(OSC_CONTROL_REGISTER, value);
1161:Core/Src/AB1805.c ****   _osc_control = read_rtc_register(OSC_CONTROL_REGISTER);
1162:Core/Src/AB1805.c ****   return _osc_control;
1163:Core/Src/AB1805.c **** }
1164:Core/Src/AB1805.c **** 
1165:Core/Src/AB1805.c **** uint8_t set_osc_control_value_mask(uint8_t value, uint8_t mask)
1166:Core/Src/AB1805.c **** {
1167:Core/Src/AB1805.c ****   uint8_t c1;
1168:Core/Src/AB1805.c ****   c1 = get_osc_control();
1169:Core/Src/AB1805.c ****   switch (mask)
1170:Core/Src/AB1805.c ****   {
1171:Core/Src/AB1805.c ****   case OSC_CONTROL_OSEL_MASK:
1172:Core/Src/AB1805.c ****     c1 &= ~OSC_CONTROL_OSEL_MASK;
1173:Core/Src/AB1805.c ****     c1 |= (value << 7) & OSC_CONTROL_OSEL_MASK;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 22


1174:Core/Src/AB1805.c ****     break;
1175:Core/Src/AB1805.c ****   case OSC_CONTROL_ACAL_MASK:
1176:Core/Src/AB1805.c ****     c1 &= ~OSC_CONTROL_ACAL_MASK;
1177:Core/Src/AB1805.c ****     c1 |= (value << 5) & OSC_CONTROL_ACAL_MASK;
1178:Core/Src/AB1805.c ****     break;
1179:Core/Src/AB1805.c ****   case OSC_CONTROL_AOS_MASK:
1180:Core/Src/AB1805.c ****     c1 &= ~OSC_CONTROL_AOS_MASK;
1181:Core/Src/AB1805.c ****     c1 |= (value << 4) & OSC_CONTROL_AOS_MASK;
1182:Core/Src/AB1805.c ****     break;
1183:Core/Src/AB1805.c ****   case OSC_CONTROL_FOS_MASK:
1184:Core/Src/AB1805.c ****     c1 &= ~OSC_CONTROL_FOS_MASK;
1185:Core/Src/AB1805.c ****     c1 |= (value << 3) & OSC_CONTROL_FOS_MASK;
1186:Core/Src/AB1805.c ****     break;
1187:Core/Src/AB1805.c ****   case OSC_CONTROL_PWGT_MASK:
1188:Core/Src/AB1805.c ****     c1 &= ~OSC_CONTROL_PWGT_MASK;
1189:Core/Src/AB1805.c ****     c1 |= (value << 2) & OSC_CONTROL_PWGT_MASK;
1190:Core/Src/AB1805.c ****     break;
1191:Core/Src/AB1805.c ****   case OSC_CONTROL_OFIE_MASK:
1192:Core/Src/AB1805.c ****     c1 &= ~OSC_CONTROL_OFIE_MASK;
1193:Core/Src/AB1805.c ****     c1 |= (value << 1) & OSC_CONTROL_OFIE_MASK;
1194:Core/Src/AB1805.c ****     break;
1195:Core/Src/AB1805.c ****   case OSC_CONTROL_ACIE_MASK:
1196:Core/Src/AB1805.c ****     c1 &= ~OSC_CONTROL_ACIE_MASK;
1197:Core/Src/AB1805.c ****     c1 |= (value)&OSC_CONTROL_ACIE_MASK;
1198:Core/Src/AB1805.c ****     break;
1199:Core/Src/AB1805.c ****   default:
1200:Core/Src/AB1805.c ****     c1 = value;
1201:Core/Src/AB1805.c ****   }
1202:Core/Src/AB1805.c ****   return set_osc_control_value(c1);
1203:Core/Src/AB1805.c **** }
1204:Core/Src/AB1805.c **** 
1205:Core/Src/AB1805.c **** // WDT register
1206:Core/Src/AB1805.c **** uint8_t get_WDT_register(void)
1207:Core/Src/AB1805.c **** {
1208:Core/Src/AB1805.c ****   _wdt_register = read_rtc_register(WDT_REGISTER);
1209:Core/Src/AB1805.c ****   return _wdt_register;
1210:Core/Src/AB1805.c **** }
1211:Core/Src/AB1805.c **** 
1212:Core/Src/AB1805.c **** uint8_t get_WDT_register_mask(uint8_t mask)
1213:Core/Src/AB1805.c **** {
1214:Core/Src/AB1805.c ****   uint8_t ret;
1215:Core/Src/AB1805.c ****   ret = get_WDT_register() & mask;
1216:Core/Src/AB1805.c ****   switch (mask)
1217:Core/Src/AB1805.c ****   {
1218:Core/Src/AB1805.c ****   case WDT_REGISTER_WDS_MASK:
1219:Core/Src/AB1805.c ****     ret = ret >> 7;
1220:Core/Src/AB1805.c ****     break;
1221:Core/Src/AB1805.c ****   case WDT_REGISTER_BMB_MASK:
1222:Core/Src/AB1805.c ****     ret = ret >> 2;
1223:Core/Src/AB1805.c ****     break;
1224:Core/Src/AB1805.c ****   case WDT_REGISTER_WRB_MASK:
1225:Core/Src/AB1805.c ****     ret = ret;
1226:Core/Src/AB1805.c ****     break;
1227:Core/Src/AB1805.c ****   default:
1228:Core/Src/AB1805.c ****     ret = _wdt_register;
1229:Core/Src/AB1805.c ****   }
1230:Core/Src/AB1805.c ****   return ret;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 23


1231:Core/Src/AB1805.c **** }
1232:Core/Src/AB1805.c **** 
1233:Core/Src/AB1805.c **** uint8_t set_value(uint8_t value)
1234:Core/Src/AB1805.c **** {
1235:Core/Src/AB1805.c ****   write_rtc_register(WDT_REGISTER, value);
1236:Core/Src/AB1805.c ****   _wdt_register = read_rtc_register(WDT_REGISTER);
1237:Core/Src/AB1805.c ****   return _wdt_register;
1238:Core/Src/AB1805.c **** }
1239:Core/Src/AB1805.c **** 
1240:Core/Src/AB1805.c **** uint8_t set_WDT_register_mask(uint8_t value, uint8_t mask)
1241:Core/Src/AB1805.c **** {
1242:Core/Src/AB1805.c ****   uint8_t c1;
1243:Core/Src/AB1805.c ****   c1 = get_WDT_register();
1244:Core/Src/AB1805.c ****   switch (mask)
1245:Core/Src/AB1805.c ****   {
1246:Core/Src/AB1805.c ****   case WDT_REGISTER_WDS_MASK:
1247:Core/Src/AB1805.c ****     c1 &= ~WDT_REGISTER_WDS_MASK;
1248:Core/Src/AB1805.c ****     c1 |= (value << 7) & WDT_REGISTER_WDS_MASK;
1249:Core/Src/AB1805.c ****     break;
1250:Core/Src/AB1805.c ****   case WDT_REGISTER_BMB_MASK:
1251:Core/Src/AB1805.c ****     c1 &= ~WDT_REGISTER_BMB_MASK;
1252:Core/Src/AB1805.c ****     c1 |= (value << 2) & WDT_REGISTER_BMB_MASK;
1253:Core/Src/AB1805.c ****     break;
1254:Core/Src/AB1805.c ****   case WDT_REGISTER_WRB_MASK:
1255:Core/Src/AB1805.c ****     c1 &= ~WDT_REGISTER_WRB_MASK;
1256:Core/Src/AB1805.c ****     c1 |= (value)&WDT_REGISTER_WRB_MASK;
1257:Core/Src/AB1805.c ****     break;
1258:Core/Src/AB1805.c ****   default:
1259:Core/Src/AB1805.c ****     c1 = value;
1260:Core/Src/AB1805.c ****   }
1261:Core/Src/AB1805.c ****   return set_WDT_register_value(c1);
1262:Core/Src/AB1805.c **** }
1263:Core/Src/AB1805.c **** 
1264:Core/Src/AB1805.c **** // void enter_sleep_mode_PWR(void)
1265:Core/Src/AB1805.c **** // {
1266:Core/Src/AB1805.c **** //   enter_sleep_mode_PWR_value(SLEEP_CONTROL_SLTO_MAX_VALUE);
1267:Core/Src/AB1805.c **** // }
1268:Core/Src/AB1805.c **** 
1269:Core/Src/AB1805.c **** void enter_sleep_mode_PWR_value(uint8_t value)
1270:Core/Src/AB1805.c **** {
1271:Core/Src/AB1805.c ****   if (get_SLST_sleep())
1272:Core/Src/AB1805.c ****   { // clean previous sleep
1273:Core/Src/AB1805.c ****     clean_SLST_sleep();
1274:Core/Src/AB1805.c ****   }
1275:Core/Src/AB1805.c ****   // set OUT2S sleep mode
1276:Core/Src/AB1805.c ****   // the OUT2S field must be set to a value of 6 to select the SLEEP output.
1277:Core/Src/AB1805.c ****   set_OUT2S_control2(CONTROL2_SLEEP_MODE);
1278:Core/Src/AB1805.c **** 
1279:Core/Src/AB1805.c ****   // Avoiding Unexpected Leakage Paths
1280:Core/Src/AB1805.c ****   // clearing the RSEN,O1EN,O4EN,O3EN,EXDS,WDDS bits in output control register
1281:Core/Src/AB1805.c ****   set_outcontrol_value_mask(0, CCTRL_SLEEP_MODE_MASK);
1282:Core/Src/AB1805.c **** 
1283:Core/Src/AB1805.c ****   // The I2C or SPI interface pins are disabled in Sleep Mode by setting the PWGT bit in the Oscill
1284:Core/Src/AB1805.c ****   set_osc_control_value_mask(0, OSC_CONTROL_PWGT_MASK);
1285:Core/Src/AB1805.c **** 
1286:Core/Src/AB1805.c ****   // The number of 7.8 ms periods after SLP is set until the Power Control SM goes into the SLEEP s
1287:Core/Src/AB1805.c ****   set_SLTO_sleep(value);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 24


1288:Core/Src/AB1805.c **** 
1289:Core/Src/AB1805.c ****   // set sleep mode
1290:Core/Src/AB1805.c ****   set_SLP_sleep(1);
1291:Core/Src/AB1805.c **** }
1292:Core/Src/AB1805.c **** 
1293:Core/Src/AB1805.c **** /** Parameter:
1294:Core/Src/AB1805.c ****  *  timeout - minimum timeout period in 7.8 ms periods (0 to 7)
1295:Core/Src/AB1805.c ****  *  mode - sleep mode (nRST modes not available in AM08xx)
1296:Core/Src/AB1805.c ****  *      0 => nRST is pulled low in sleep mode
1297:Core/Src/AB1805.c ****  *      1 => PSW/nIRQ2 is pulled high on a sleep
1298:Core/Src/AB1805.c ****  *      2 => nRST pulled low and PSW/nIRQ2 pulled high on sleep
1299:Core/Src/AB1805.c ****  *  error ?returned value of the attempted sleep command
1300:Core/Src/AB1805.c ****  *      0 => sleep request accepted, sleep mode will be initiated in timeout seconds
1301:Core/Src/AB1805.c ****  *      1 => illegal input values
1302:Core/Src/AB1805.c ****  *      2 => sleep request declined, interrupt is currently pending
1303:Core/Src/AB1805.c ****  *      3 => sleep request declined, no sleep trigger interrupt enabled
1304:Core/Src/AB1805.c ****  **/
1305:Core/Src/AB1805.c **** uint8_t enter_sleep_mode(uint8_t timeout, uint8_t mode)
1306:Core/Src/AB1805.c **** {
1307:Core/Src/AB1805.c ****   uint8_t ret = 0;
1308:Core/Src/AB1805.c ****   uint8_t slres = 0;
1309:Core/Src/AB1805.c ****   char temp = 0;
1310:Core/Src/AB1805.c **** 
1311:Core/Src/AB1805.c **** #ifdef DEBUG_SIO
1312:Core/Src/AB1805.c ****   temp = get_SLST_sleep(); // Get SLST bit (temp & 0x08)
1313:Core/Src/AB1805.c **** 
1314:Core/Src/AB1805.c ****   if ((temp) == 0)
1315:Core/Src/AB1805.c ****   {
1316:Core/Src/AB1805.c ****     DBGPRINT("\r\nPrevious Sleep Failed");
1317:Core/Src/AB1805.c ****   }
1318:Core/Src/AB1805.c ****   else
1319:Core/Src/AB1805.c ****   {
1320:Core/Src/AB1805.c ****     DBGPRINT("\r\nPrevious Sleep Successful");
1321:Core/Src/AB1805.c ****   }
1322:Core/Src/AB1805.c ****   clean_SLST_sleep(); // Clear SLST
1323:Core/Src/AB1805.c **** 
1324:Core/Src/AB1805.c ****   temp = get_SLST_sleep(); // Get SLST bit (temp & 0x08)
1325:Core/Src/AB1805.c **** 
1326:Core/Src/AB1805.c ****   if ((temp) == 0)
1327:Core/Src/AB1805.c ****   {
1328:Core/Src/AB1805.c ****     DBGPRINT("\r\nClear Succ");
1329:Core/Src/AB1805.c ****   }
1330:Core/Src/AB1805.c ****   else
1331:Core/Src/AB1805.c ****   {
1332:Core/Src/AB1805.c ****     DBGPRINT("\r\nClear Fail");
1333:Core/Src/AB1805.c ****   }
1334:Core/Src/AB1805.c ****   clean_SLST_sleep(); // Clear SLST
1335:Core/Src/AB1805.c **** #endif
1336:Core/Src/AB1805.c **** 
1337:Core/Src/AB1805.c ****   if (mode > 0)
1338:Core/Src/AB1805.c ****   {
1339:Core/Src/AB1805.c ****     /* Sleep to PSW/nIRQ2 */
1340:Core/Src/AB1805.c ****     temp = get_OUT2S_control2(); // Read OUT2S
1341:Core/Src/AB1805.c ****     temp = (temp & 0xE3) | 0x18; // MUST NOT WRITE OUT2S WITH 000
1342:Core/Src/AB1805.c ****     set_OUT2S_control2(temp);    // Write value to OUT2S
1343:Core/Src/AB1805.c ****     slres = 0;
1344:Core/Src/AB1805.c ****   }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 25


1345:Core/Src/AB1805.c **** 
1346:Core/Src/AB1805.c ****   temp = timeout | (slres << 6) | 0x80; // Assemble SLEEP register value
1347:Core/Src/AB1805.c ****   set_sleep(temp);                      // Write to the register
1348:Core/Src/AB1805.c **** 
1349:Core/Src/AB1805.c **** #ifdef DEBUG_SIO
1350:Core/Src/AB1805.c ****   /* Determine if SLEEP was accepted */
1351:Core/Src/AB1805.c ****   temp = get_SLP_sleep(); // Get SLP bit (temp & 0x80)
1352:Core/Src/AB1805.c **** 
1353:Core/Src/AB1805.c ****   if ((temp) == 0)
1354:Core/Src/AB1805.c ****   {
1355:Core/Src/AB1805.c ****     char reg_wdi_value = 0;
1356:Core/Src/AB1805.c ****     /* SLEEP did not happen - determine why and return reason. */
1357:Core/Src/AB1805.c ****     temp = get_interrupt(); // Get status register interrupt enables
1358:Core/Src/AB1805.c ****     reg_wdi_value = get_WDT_register();
1359:Core/Src/AB1805.c ****     if (((temp & 0x0F) == 0) & (((reg_wdi_value & 0x7C) == 0) || ((reg_wdi_value & 0x80) == 0x80)))
1360:Core/Src/AB1805.c ****     {
1361:Core/Src/AB1805.c ****       ret = 3;
1362:Core/Src/AB1805.c ****       DBGPRINT("\r\nNo trigger interrupts enabled");
1363:Core/Src/AB1805.c ****     }
1364:Core/Src/AB1805.c ****     else
1365:Core/Src/AB1805.c ****     {
1366:Core/Src/AB1805.c ****       ret = 2;
1367:Core/Src/AB1805.c ****       DBGPRINT("\r\nInterrupt pending");
1368:Core/Src/AB1805.c ****     }
1369:Core/Src/AB1805.c ****   }
1370:Core/Src/AB1805.c ****   else
1371:Core/Src/AB1805.c ****   {
1372:Core/Src/AB1805.c ****     ret = 0;
1373:Core/Src/AB1805.c ****     DBGPRINT("\r\nSLEEP request successful");
1374:Core/Src/AB1805.c ****   }
1375:Core/Src/AB1805.c **** #endif
1376:Core/Src/AB1805.c ****   return ret;
1377:Core/Src/AB1805.c **** }
1378:Core/Src/AB1805.c **** 
1379:Core/Src/AB1805.c **** // *********************************__________ MY_____________**********************
1380:Core/Src/AB1805.c **** inline static uint8_t SPI1_SendByte(uint8_t data)
1381:Core/Src/AB1805.c **** {
  26              		.loc 1 1381 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32              		.loc 1 1381 1 is_stmt 0 view .LVU1
  33 0000 01E0     		b	.L3
  34              	.LVL1:
  35              	.L2:
1382:Core/Src/AB1805.c ****   while (LL_SPI_IsActiveFlag_TXE(SPI1) == RESET)
  36              		.loc 1 1382 40 view .LVU2
  37 0002 002B     		cmp	r3, #0
  38 0004 08D1     		bne	.L6
  39              	.L3:
  40              		.loc 1 1382 40 is_stmt 1 discriminator 1 view .LVU3
  41              	.LVL2:
  42              	.LBB10:
  43              	.LBI10:
  44              		.file 2 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h"
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 26


   1:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
   2:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   ******************************************************************************
   3:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @file    stm32u0xx_ll_spi.h
   4:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @author  MCD Application Team
   5:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief   Header file of SPI LL module.
   6:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   ******************************************************************************
   7:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @attention
   8:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *
   9:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * Copyright (c) 2023 STMicroelectronics.
  10:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * All rights reserved.
  11:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *
  12:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * in the root directory of this software component.
  14:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *
  16:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   ******************************************************************************
  17:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  18:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  19:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #ifndef STM32U0xx_LL_SPI_H
  21:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define STM32U0xx_LL_SPI_H
  22:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  23:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #ifdef __cplusplus
  24:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** extern "C" {
  25:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #endif
  26:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  27:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #include "stm32u0xx.h"
  29:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  30:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @addtogroup STM32U0xx_LL_Driver
  31:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
  32:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  33:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  34:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #if defined (SPI1) || defined (SPI2) || defined (SPI3)
  35:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  36:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL SPI
  37:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
  38:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  39:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  40:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Private macros ------------------------------------------------------------*/
  43:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  44:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Exported types ------------------------------------------------------------*/
  45:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #if defined(USE_FULL_LL_DRIVER)
  46:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_ES_INIT SPI Exported Init structure
  47:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
  48:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  49:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  50:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
  51:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  SPI Init structures definition
  52:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  53:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** typedef struct
  54:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
  55:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t TransferDirection;       /*!< Specifies the SPI unidirectional or bidirectional data mod
  56:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_TRANSFER_M
  57:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 27


  58:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  59:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  60:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t Mode;                    /*!< Specifies the SPI mode (Master/Slave).
  61:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_MODE.
  62:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  63:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  64:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  65:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t DataWidth;               /*!< Specifies the SPI data width.
  66:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_DATAWIDTH.
  67:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  68:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  69:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  70:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t ClockPolarity;           /*!< Specifies the serial clock steady state.
  71:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_POLARITY.
  72:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  73:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  74:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  75:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t ClockPhase;              /*!< Specifies the clock active edge for the bit capture.
  76:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_PHASE.
  77:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  78:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  79:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  80:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t NSS;                     /*!< Specifies whether the NSS signal is managed by hardware (N
  81:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_NSS_MODE.
  82:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  83:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  84:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  85:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t BaudRate;                /*!< Specifies the BaudRate prescaler value which will be used 
  86:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_BAUDRATEPR
  87:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          @note The communication clock is derived from the master c
  88:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  89:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  90:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  91:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t BitOrder;                /*!< Specifies whether data transfers start from MSB or LSB bit
  92:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_BIT_ORDER.
  93:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  94:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  95:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  96:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t CRCCalculation;          /*!< Specifies if the CRC calculation is enabled or not.
  97:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_CRC_CALCUL
  98:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  99:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 100:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 101:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t CRCPoly;                 /*!< Specifies the polynomial used for the CRC calculation.
 102:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter must be a number between Min_Data = 0x00 an
 103:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 104:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 105:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 106:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** } LL_SPI_InitTypeDef;
 107:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 108:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 109:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 110:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 111:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #endif /* USE_FULL_LL_DRIVER */
 112:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 113:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Exported constants --------------------------------------------------------*/
 114:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Constants SPI Exported Constants
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 28


 115:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 116:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 117:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 118:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_GET_FLAG Get Flags Defines
 119:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief    Flags defines which can be used with LL_SPI_ReadReg function
 120:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 121:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 122:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_RXNE                     SPI_SR_RXNE               /*!< Rx buffer not empty flag 
 123:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_TXE                      SPI_SR_TXE                /*!< Tx buffer empty flag     
 124:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_BSY                      SPI_SR_BSY                /*!< Busy flag                
 125:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_CRCERR                   SPI_SR_CRCERR             /*!< CRC error flag           
 126:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_MODF                     SPI_SR_MODF               /*!< Mode fault flag          
 127:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_OVR                      SPI_SR_OVR                /*!< Overrun flag             
 128:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_FRE                      SPI_SR_FRE                /*!< TI mode frame format erro
 129:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 130:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 131:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 132:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 133:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_IT IT Defines
 134:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief    IT defines which can be used with LL_SPI_ReadReg and  LL_SPI_WriteReg functions
 135:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 136:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 137:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CR2_RXNEIE                  SPI_CR2_RXNEIE            /*!< Rx buffer not empty inter
 138:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CR2_TXEIE                   SPI_CR2_TXEIE             /*!< Tx buffer empty interrupt
 139:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CR2_ERRIE                   SPI_CR2_ERRIE             /*!< Error interrupt enable   
 140:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 141:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 142:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 143:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 144:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_MODE Operation Mode
 145:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 146:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 147:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_MODE_MASTER                 (SPI_CR1_MSTR | SPI_CR1_SSI)    /*!< Master configuratio
 148:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_MODE_SLAVE                  0x00000000U                     /*!< Slave configuration
 149:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 150:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 151:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 152:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 153:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_PROTOCOL Serial Protocol
 154:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 155:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 156:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_PROTOCOL_MOTOROLA           0x00000000U               /*!< Motorola mode. Used as de
 157:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_PROTOCOL_TI                 (SPI_CR2_FRF)             /*!< TI mode                  
 158:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 159:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 160:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 161:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 162:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_PHASE Clock Phase
 163:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 164:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 165:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_PHASE_1EDGE                 0x00000000U               /*!< First clock transition is
 166:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_PHASE_2EDGE                 (SPI_CR1_CPHA)            /*!< Second clock transition i
 167:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 168:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 169:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 170:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 171:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_POLARITY Clock Polarity
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 29


 172:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 173:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 174:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_POLARITY_LOW                0x00000000U               /*!< Clock to 0 when idle */
 175:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_POLARITY_HIGH               (SPI_CR1_CPOL)            /*!< Clock to 1 when idle */
 176:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 177:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 178:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 179:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 180:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_BAUDRATEPRESCALER Baud Rate Prescaler
 181:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 182:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 183:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV2      0x00000000U                                    /*!< Baud
 184:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV4      (SPI_CR1_BR_0)                                 /*!< Baud
 185:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV8      (SPI_CR1_BR_1)                                 /*!< Baud
 186:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV16     (SPI_CR1_BR_1 | SPI_CR1_BR_0)                  /*!< Baud
 187:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV32     (SPI_CR1_BR_2)                                 /*!< Baud
 188:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV64     (SPI_CR1_BR_2 | SPI_CR1_BR_0)                  /*!< Baud
 189:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV128    (SPI_CR1_BR_2 | SPI_CR1_BR_1)                  /*!< Baud
 190:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV256    (SPI_CR1_BR_2 | SPI_CR1_BR_1 | SPI_CR1_BR_0)   /*!< Baud
 191:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 192:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 193:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 194:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 195:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_BIT_ORDER Transmission Bit Order
 196:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 197:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 198:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_LSB_FIRST                   (SPI_CR1_LSBFIRST)        /*!< Data is transmitted/recei
 199:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_MSB_FIRST                   0x00000000U               /*!< Data is transmitted/recei
 200:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 201:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 202:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 203:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 204:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_TRANSFER_MODE Transfer Mode
 205:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 206:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 207:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_FULL_DUPLEX                 0x00000000U                          /*!< Full-Duplex mo
 208:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SIMPLEX_RX                  (SPI_CR1_RXONLY)                     /*!< Simplex Rx mod
 209:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_HALF_DUPLEX_RX              (SPI_CR1_BIDIMODE)                   /*!< Half-Duplex Rx
 210:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_HALF_DUPLEX_TX              (SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE)  /*!< Half-Duplex Tx
 211:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 212:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 213:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 214:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 215:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_NSS_MODE Slave Select Pin Mode
 216:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 217:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 218:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_NSS_SOFT                    (SPI_CR1_SSM)                     /*!< NSS managed inter
 219:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_NSS_HARD_INPUT              0x00000000U                       /*!< NSS pin used in I
 220:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_NSS_HARD_OUTPUT             (((uint32_t)SPI_CR2_SSOE << 16U)) /*!< NSS pin used in O
 221:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 222:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 223:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 224:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 225:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_DATAWIDTH Datawidth
 226:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 227:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 228:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_4BIT              (SPI_CR2_DS_0 | SPI_CR2_DS_1)                           
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 30


 229:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_5BIT              (SPI_CR2_DS_2)                                          
 230:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_6BIT              (SPI_CR2_DS_2 | SPI_CR2_DS_0)                           
 231:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_7BIT              (SPI_CR2_DS_2 | SPI_CR2_DS_1)                           
 232:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_8BIT              (SPI_CR2_DS_2 | SPI_CR2_DS_1 | SPI_CR2_DS_0)            
 233:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_9BIT              (SPI_CR2_DS_3)                                          
 234:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_10BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_0)                           
 235:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_11BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_1)                           
 236:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_12BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_1 | SPI_CR2_DS_0)            
 237:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_13BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2)                           
 238:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_14BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2 | SPI_CR2_DS_0)            
 239:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_15BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2 | SPI_CR2_DS_1)            
 240:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_16BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2 | SPI_CR2_DS_1 | SPI_CR2_DS
 241:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 242:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 243:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 244:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #if defined(USE_FULL_LL_DRIVER)
 245:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 246:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_CRC_CALCULATION CRC Calculation
 247:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 248:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 249:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CRCCALCULATION_DISABLE      0x00000000U               /*!< CRC calculation disabled 
 250:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CRCCALCULATION_ENABLE       (SPI_CR1_CRCEN)           /*!< CRC calculation enabled  
 251:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 252:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 253:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 254:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #endif /* USE_FULL_LL_DRIVER */
 255:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_CRC_LENGTH CRC Length
 257:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 258:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 259:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CRC_8BIT                    0x00000000U               /*!<  8-bit CRC length */
 260:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CRC_16BIT                   (SPI_CR1_CRCL)            /*!< 16-bit CRC length */
 261:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 262:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 263:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 264:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 265:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_RX_FIFO_TH RX FIFO Threshold
 266:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 267:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 268:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_TH_HALF             0x00000000U               /*!< RXNE event is generated i
 269:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_TH_QUARTER          (SPI_CR2_FRXTH)           /*!< RXNE event is generated i
 270:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 271:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 272:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 273:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 274:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_RX_FIFO RX FIFO Level
 275:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 276:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 277:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_EMPTY               0x00000000U                       /*!< FIFO reception em
 278:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_QUARTER_FULL        (SPI_SR_FRLVL_0)                  /*!< FIFO reception 1/
 279:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_HALF_FULL           (SPI_SR_FRLVL_1)                  /*!< FIFO reception 1/
 280:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_FULL                (SPI_SR_FRLVL_1 | SPI_SR_FRLVL_0) /*!< FIFO reception fu
 281:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 282:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 283:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 284:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 285:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_TX_FIFO TX FIFO Level
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 31


 286:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 287:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 288:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_EMPTY               0x00000000U                       /*!< FIFO transmission
 289:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_QUARTER_FULL        (SPI_SR_FTLVL_0)                  /*!< FIFO transmission
 290:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_HALF_FULL           (SPI_SR_FTLVL_1)                  /*!< FIFO transmission
 291:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_FULL                (SPI_SR_FTLVL_1 | SPI_SR_FTLVL_0) /*!< FIFO transmission
 292:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 293:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 294:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 295:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 296:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_DMA_PARITY DMA Parity
 297:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 298:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 299:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DMA_PARITY_EVEN             0x00000000U   /*!< Select DMA parity Even */
 300:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DMA_PARITY_ODD              0x00000001U   /*!< Select DMA parity Odd  */
 301:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 302:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 303:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 304:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 305:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 306:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 307:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 308:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 309:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 310:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Exported macro ------------------------------------------------------------*/
 311:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Macros SPI Exported Macros
 312:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 313:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 314:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 315:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EM_WRITE_READ Common Write and read registers Macros
 316:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 317:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 318:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 319:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 320:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Write a value in SPI register
 321:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __INSTANCE__ SPI Instance
 322:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __REG__ Register to be written
 323:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __VALUE__ Value to be written in the register
 324:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 325:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 326:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 327:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 328:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 329:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Read a value in SPI register
 330:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __INSTANCE__ SPI Instance
 331:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __REG__ Register to be read
 332:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Register value
 333:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 334:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 336:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 337:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 338:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 339:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 340:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 341:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 342:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 32


 343:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Exported functions --------------------------------------------------------*/
 344:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Functions SPI Exported Functions
 345:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 346:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 347:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 348:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_Configuration Configuration
 349:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 350:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 351:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 352:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 353:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable SPI peripheral
 354:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_Enable
 355:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 356:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 357:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 358:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_Enable(SPI_TypeDef *SPIx)
 359:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 360:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_SPE);
 361:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 362:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 363:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 364:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable SPI peripheral
 365:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   When disabling the SPI, follow the procedure described in the Reference Manual.
 366:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_Disable
 367:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 368:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 369:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 370:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_Disable(SPI_TypeDef *SPIx)
 371:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 372:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_SPE);
 373:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 374:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 375:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 376:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if SPI peripheral is enabled
 377:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_IsEnabled
 378:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 379:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 380:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 381:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabled(SPI_TypeDef *SPIx)
 382:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 383:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR1, SPI_CR1_SPE) == (SPI_CR1_SPE)) ? 1UL : 0UL);
 384:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 385:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 386:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 387:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set SPI operation mode to Master or Slave
 388:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 389:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          MSTR          LL_SPI_SetMode\n
 390:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          SSI           LL_SPI_SetMode
 391:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 392:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Mode This parameter can be one of the following values:
 393:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_MASTER
 394:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_SLAVE
 395:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 396:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 397:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetMode(SPI_TypeDef *SPIx, uint32_t Mode)
 398:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 399:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_MSTR | SPI_CR1_SSI, Mode);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 33


 400:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 401:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 402:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 403:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get SPI operation mode (Master or Slave)
 404:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          MSTR          LL_SPI_GetMode\n
 405:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          SSI           LL_SPI_GetMode
 406:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 407:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 408:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_MASTER
 409:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_SLAVE
 410:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 411:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetMode(SPI_TypeDef *SPIx)
 412:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 413:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_MSTR | SPI_CR1_SSI));
 414:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 415:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 416:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 417:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set serial protocol used
 418:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 419:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          FRF           LL_SPI_SetStandard
 420:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 421:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Standard This parameter can be one of the following values:
 422:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_MOTOROLA
 423:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_TI
 424:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 425:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 426:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetStandard(SPI_TypeDef *SPIx, uint32_t Standard)
 427:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 428:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_FRF, Standard);
 429:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 430:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 431:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 432:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get serial protocol used
 433:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          FRF           LL_SPI_GetStandard
 434:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 435:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 436:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_MOTOROLA
 437:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_TI
 438:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 439:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetStandard(SPI_TypeDef *SPIx)
 440:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 441:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_FRF));
 442:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 443:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 444:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 445:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set clock phase
 446:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 447:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         This bit is not used in SPI TI mode.
 448:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CPHA          LL_SPI_SetClockPhase
 449:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 450:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  ClockPhase This parameter can be one of the following values:
 451:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_1EDGE
 452:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_2EDGE
 453:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 454:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 455:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetClockPhase(SPI_TypeDef *SPIx, uint32_t ClockPhase)
 456:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 34


 457:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CPHA, ClockPhase);
 458:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 459:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 460:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 461:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get clock phase
 462:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CPHA          LL_SPI_GetClockPhase
 463:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 464:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 465:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_1EDGE
 466:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_2EDGE
 467:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 468:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetClockPhase(SPI_TypeDef *SPIx)
 469:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 470:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CPHA));
 471:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 472:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 473:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 474:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set clock polarity
 475:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 476:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         This bit is not used in SPI TI mode.
 477:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CPOL          LL_SPI_SetClockPolarity
 478:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 479:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 480:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_LOW
 481:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_HIGH
 482:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 483:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 484:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetClockPolarity(SPI_TypeDef *SPIx, uint32_t ClockPolarity)
 485:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 486:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CPOL, ClockPolarity);
 487:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 488:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 489:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 490:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get clock polarity
 491:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CPOL          LL_SPI_GetClockPolarity
 492:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 493:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 494:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_LOW
 495:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_HIGH
 496:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 497:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetClockPolarity(SPI_TypeDef *SPIx)
 498:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 499:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CPOL));
 500:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 501:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 502:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 503:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set baud rate prescaler
 504:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   These bits should not be changed when communication is ongoing. SPI BaudRate = fPCLK/Pr
 505:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          BR            LL_SPI_SetBaudRatePrescaler
 506:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 507:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  BaudRate This parameter can be one of the following values:
 508:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV2
 509:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV4
 510:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV8
 511:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV16
 512:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV32
 513:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV64
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 35


 514:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV128
 515:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV256
 516:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 517:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 518:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetBaudRatePrescaler(SPI_TypeDef *SPIx, uint32_t BaudRate)
 519:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 520:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_BR, BaudRate);
 521:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 522:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 523:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 524:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get baud rate prescaler
 525:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          BR            LL_SPI_GetBaudRatePrescaler
 526:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 527:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 528:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV2
 529:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV4
 530:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV8
 531:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV16
 532:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV32
 533:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV64
 534:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV128
 535:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV256
 536:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 537:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetBaudRatePrescaler(SPI_TypeDef *SPIx)
 538:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 539:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_BR));
 540:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 541:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 542:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 543:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set transfer bit order
 544:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 545:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          LSBFIRST      LL_SPI_SetTransferBitOrder
 546:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 547:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  BitOrder This parameter can be one of the following values:
 548:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_LSB_FIRST
 549:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MSB_FIRST
 550:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 551:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 552:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetTransferBitOrder(SPI_TypeDef *SPIx, uint32_t BitOrder)
 553:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 554:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_LSBFIRST, BitOrder);
 555:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 556:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 557:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 558:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get transfer bit order
 559:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          LSBFIRST      LL_SPI_GetTransferBitOrder
 560:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 561:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 562:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_LSB_FIRST
 563:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MSB_FIRST
 564:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 565:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTransferBitOrder(SPI_TypeDef *SPIx)
 566:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 567:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_LSBFIRST));
 568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 569:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 570:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 36


 571:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set transfer direction mode
 572:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   For Half-Duplex mode, Rx Direction is set by default.
 573:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         In master mode, the MOSI pin is used and in slave mode, the MISO pin is used for Half-D
 574:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          RXONLY        LL_SPI_SetTransferDirection\n
 575:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          BIDIMODE      LL_SPI_SetTransferDirection\n
 576:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          BIDIOE        LL_SPI_SetTransferDirection
 577:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 578:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  TransferDirection This parameter can be one of the following values:
 579:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_FULL_DUPLEX
 580:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_SIMPLEX_RX
 581:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_RX
 582:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_TX
 583:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 584:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 585:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetTransferDirection(SPI_TypeDef *SPIx, uint32_t TransferDirection)
 586:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 587:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_RXONLY | SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE, TransferDirection);
 588:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 589:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 590:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 591:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get transfer direction mode
 592:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          RXONLY        LL_SPI_GetTransferDirection\n
 593:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          BIDIMODE      LL_SPI_GetTransferDirection\n
 594:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          BIDIOE        LL_SPI_GetTransferDirection
 595:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 596:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 597:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_FULL_DUPLEX
 598:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_SIMPLEX_RX
 599:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_RX
 600:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_TX
 601:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 602:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTransferDirection(SPI_TypeDef *SPIx)
 603:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 604:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_RXONLY | SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE));
 605:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 606:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 607:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 608:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set frame data width
 609:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          DS            LL_SPI_SetDataWidth
 610:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 611:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  DataWidth This parameter can be one of the following values:
 612:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_4BIT
 613:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_5BIT
 614:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_6BIT
 615:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_7BIT
 616:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_8BIT
 617:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_9BIT
 618:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_10BIT
 619:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_11BIT
 620:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_12BIT
 621:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_13BIT
 622:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_14BIT
 623:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_15BIT
 624:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_16BIT
 625:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 626:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 627:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetDataWidth(SPI_TypeDef *SPIx, uint32_t DataWidth)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 37


 628:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 629:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_DS, DataWidth);
 630:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 631:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 632:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 633:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get frame data width
 634:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          DS            LL_SPI_GetDataWidth
 635:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 636:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 637:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_4BIT
 638:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_5BIT
 639:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_6BIT
 640:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_7BIT
 641:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_8BIT
 642:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_9BIT
 643:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_10BIT
 644:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_11BIT
 645:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_12BIT
 646:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_13BIT
 647:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_14BIT
 648:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_15BIT
 649:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_16BIT
 650:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 651:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetDataWidth(SPI_TypeDef *SPIx)
 652:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 653:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_DS));
 654:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 655:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 656:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 657:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set threshold of RXFIFO that triggers an RXNE event
 658:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          FRXTH         LL_SPI_SetRxFIFOThreshold
 659:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 660:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Threshold This parameter can be one of the following values:
 661:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_HALF
 662:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_QUARTER
 663:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 664:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 665:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetRxFIFOThreshold(SPI_TypeDef *SPIx, uint32_t Threshold)
 666:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 667:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_FRXTH, Threshold);
 668:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 669:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 670:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 671:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get threshold of RXFIFO that triggers an RXNE event
 672:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          FRXTH         LL_SPI_GetRxFIFOThreshold
 673:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 674:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 675:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_HALF
 676:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_QUARTER
 677:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 678:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetRxFIFOThreshold(SPI_TypeDef *SPIx)
 679:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 680:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_FRXTH));
 681:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 682:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 683:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 684:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 38


 685:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 686:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 687:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_CRC_Management CRC Management
 688:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 689:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 690:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 691:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 692:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable CRC
 693:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 694:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_EnableCRC
 695:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 696:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 697:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 698:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableCRC(SPI_TypeDef *SPIx)
 699:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 700:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_CRCEN);
 701:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 702:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 703:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 704:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable CRC
 705:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 706:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_DisableCRC
 707:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 708:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 709:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 710:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableCRC(SPI_TypeDef *SPIx)
 711:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 712:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_CRCEN);
 713:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 714:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 715:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 716:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if CRC is enabled
 717:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 718:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_IsEnabledCRC
 719:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 720:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 721:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 722:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledCRC(SPI_TypeDef *SPIx)
 723:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 724:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR1, SPI_CR1_CRCEN) == (SPI_CR1_CRCEN)) ? 1UL : 0UL);
 725:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 726:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 727:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 728:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set CRC Length
 729:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 730:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCL          LL_SPI_SetCRCWidth
 731:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 732:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  CRCLength This parameter can be one of the following values:
 733:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_8BIT
 734:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_16BIT
 735:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 736:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 737:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCWidth(SPI_TypeDef *SPIx, uint32_t CRCLength)
 738:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 739:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CRCL, CRCLength);
 740:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 741:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 39


 742:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 743:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get CRC Length
 744:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCL          LL_SPI_GetCRCWidth
 745:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 746:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 747:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_8BIT
 748:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_16BIT
 749:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 750:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetCRCWidth(SPI_TypeDef *SPIx)
 751:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 752:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CRCL));
 753:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 754:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 755:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 756:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set CRCNext to transfer CRC on the line
 757:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit has to be written as soon as the last data is written in the SPIx_DR register.
 758:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCNEXT       LL_SPI_SetCRCNext
 759:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 760:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 761:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 762:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCNext(SPI_TypeDef *SPIx)
 763:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 764:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_CRCNEXT);
 765:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 766:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 767:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 768:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set polynomial for CRC calculation
 769:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CRCPR        CRCPOLY       LL_SPI_SetCRCPolynomial
 770:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 771:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  CRCPoly This parameter must be a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 772:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 773:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 774:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCPolynomial(SPI_TypeDef *SPIx, uint32_t CRCPoly)
 775:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 776:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   WRITE_REG(SPIx->CRCPR, (uint16_t)CRCPoly);
 777:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 778:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 779:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 780:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get polynomial for CRC calculation
 781:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CRCPR        CRCPOLY       LL_SPI_GetCRCPolynomial
 782:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 783:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 784:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 785:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetCRCPolynomial(SPI_TypeDef *SPIx)
 786:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 787:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->CRCPR));
 788:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 789:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 790:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 791:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get Rx CRC
 792:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll RXCRCR       RXCRC         LL_SPI_GetRxCRC
 793:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 794:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 795:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 796:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetRxCRC(SPI_TypeDef *SPIx)
 797:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 798:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->RXCRCR));
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 40


 799:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 800:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 801:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 802:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get Tx CRC
 803:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll TXCRCR       TXCRC         LL_SPI_GetTxCRC
 804:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 805:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 806:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 807:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTxCRC(SPI_TypeDef *SPIx)
 808:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 809:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->TXCRCR));
 810:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 811:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 812:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 813:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 814:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 815:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 816:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_NSS_Management Slave Select Pin Management
 817:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 818:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 819:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 820:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 821:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set NSS mode
 822:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   LL_SPI_NSS_SOFT Mode is not used in SPI TI mode.
 823:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SSM           LL_SPI_SetNSSMode\n
 824:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          SSOE          LL_SPI_SetNSSMode
 825:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 826:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  NSS This parameter can be one of the following values:
 827:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_SOFT
 828:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_INPUT
 829:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_OUTPUT
 830:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 831:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 832:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetNSSMode(SPI_TypeDef *SPIx, uint32_t NSS)
 833:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 834:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_SSM,  NSS);
 835:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_SSOE, ((uint32_t)(NSS >> 16U)));
 836:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 837:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 838:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 839:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get NSS mode
 840:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SSM           LL_SPI_GetNSSMode\n
 841:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          SSOE          LL_SPI_GetNSSMode
 842:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 843:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 844:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_SOFT
 845:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_INPUT
 846:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_OUTPUT
 847:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 848:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetNSSMode(SPI_TypeDef *SPIx)
 849:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 850:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t Ssm  = (READ_BIT(SPIx->CR1, SPI_CR1_SSM));
 851:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t Ssoe = (READ_BIT(SPIx->CR2,  SPI_CR2_SSOE) << 16U);
 852:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (Ssm | Ssoe);
 853:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 854:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 855:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 41


 856:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable NSS pulse management
 857:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 858:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          NSSP          LL_SPI_EnableNSSPulseMgt
 859:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 860:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 861:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 862:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableNSSPulseMgt(SPI_TypeDef *SPIx)
 863:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 864:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_NSSP);
 865:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 866:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 867:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 868:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable NSS pulse management
 869:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 870:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          NSSP          LL_SPI_DisableNSSPulseMgt
 871:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 872:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 873:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 874:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableNSSPulseMgt(SPI_TypeDef *SPIx)
 875:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 876:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_NSSP);
 877:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 878:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 879:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 880:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if NSS pulse is enabled
 881:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 882:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          NSSP          LL_SPI_IsEnabledNSSPulse
 883:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 884:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 885:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 886:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledNSSPulse(SPI_TypeDef *SPIx)
 887:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 888:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_NSSP) == (SPI_CR2_NSSP)) ? 1UL : 0UL);
 889:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 890:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 891:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 892:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 893:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 894:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 895:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_FLAG_Management FLAG Management
 896:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 897:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 898:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 899:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 900:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if Rx buffer is not empty
 901:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           RXNE          LL_SPI_IsActiveFlag_RXNE
 902:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 903:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 904:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 905:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_RXNE(SPI_TypeDef *SPIx)
 906:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_RXNE) == (SPI_SR_RXNE)) ? 1UL : 0UL);
 908:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 909:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 910:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 911:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if Tx buffer is empty
 912:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           TXE           LL_SPI_IsActiveFlag_TXE
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 42


 913:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 914:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 915:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 916:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_TXE(SPI_TypeDef *SPIx)
  45              		.loc 2 916 26 discriminator 1 view .LVU4
  46              	.LBB11:
 917:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 918:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_TXE) == (SPI_SR_TXE)) ? 1UL : 0UL);
  47              		.loc 2 918 3 discriminator 1 view .LVU5
  48              		.loc 2 918 12 is_stmt 0 discriminator 1 view .LVU6
  49 0006 0D4B     		ldr	r3, .L8
  50 0008 9A68     		ldr	r2, [r3, #8]
  51 000a 0221     		movs	r1, #2
  52 000c 0B00     		movs	r3, r1
  53 000e 1340     		ands	r3, r2
  54              		.loc 2 918 66 discriminator 1 view .LVU7
  55 0010 1142     		tst	r1, r2
  56 0012 F6D0     		beq	.L2
  57              		.loc 2 918 66 view .LVU8
  58 0014 0123     		movs	r3, #1
  59 0016 F4E7     		b	.L2
  60              	.LVL3:
  61              	.L6:
  62              		.loc 2 918 66 view .LVU9
  63              	.LBE11:
  64              	.LBE10:
1383:Core/Src/AB1805.c ****     ;
1384:Core/Src/AB1805.c ****   LL_SPI_TransmitData8(SPI1, data);
  65              		.loc 1 1384 3 is_stmt 1 view .LVU10
  66              	.LBB12:
  67              	.LBI12:
 919:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 920:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 921:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 922:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get CRC error flag
 923:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           CRCERR        LL_SPI_IsActiveFlag_CRCERR
 924:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 925:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 926:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 927:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_CRCERR(SPI_TypeDef *SPIx)
 928:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 929:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_CRCERR) == (SPI_SR_CRCERR)) ? 1UL : 0UL);
 930:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 931:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 932:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 933:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get mode fault error flag
 934:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           MODF          LL_SPI_IsActiveFlag_MODF
 935:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 936:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 937:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 938:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_MODF(SPI_TypeDef *SPIx)
 939:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 940:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_MODF) == (SPI_SR_MODF)) ? 1UL : 0UL);
 941:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 942:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 943:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 944:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get overrun error flag
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 43


 945:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           OVR           LL_SPI_IsActiveFlag_OVR
 946:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 947:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 948:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 949:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_OVR(SPI_TypeDef *SPIx)
 950:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 951:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_OVR) == (SPI_SR_OVR)) ? 1UL : 0UL);
 952:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 953:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 954:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 955:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get busy flag
 956:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   The BSY flag is cleared under any one of the following conditions:
 957:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * -When the SPI is correctly disabled
 958:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * -When a fault is detected in Master mode (MODF bit set to 1)
 959:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * -In Master mode, when it finishes a data transmission and no new data is ready to be
 960:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * sent
 961:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * -In Slave mode, when the BSY flag is set to '0' for at least one SPI clock cycle between
 962:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * each data transfer.
 963:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           BSY           LL_SPI_IsActiveFlag_BSY
 964:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 965:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 966:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 967:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_BSY(SPI_TypeDef *SPIx)
 968:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 969:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_BSY) == (SPI_SR_BSY)) ? 1UL : 0UL);
 970:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 971:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 972:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 973:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get frame format error flag
 974:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           FRE           LL_SPI_IsActiveFlag_FRE
 975:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 976:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 977:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 978:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_FRE(SPI_TypeDef *SPIx)
 979:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 980:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_FRE) == (SPI_SR_FRE)) ? 1UL : 0UL);
 981:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 982:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 983:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 984:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get FIFO reception Level
 985:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           FRLVL         LL_SPI_GetRxFIFOLevel
 986:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 987:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 988:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_EMPTY
 989:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_QUARTER_FULL
 990:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_HALF_FULL
 991:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_FULL
 992:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 993:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetRxFIFOLevel(SPI_TypeDef *SPIx)
 994:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 995:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->SR, SPI_SR_FRLVL));
 996:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 997:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 998:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 999:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get FIFO Transmission Level
1000:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           FTLVL         LL_SPI_GetTxFIFOLevel
1001:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 44


1002:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
1003:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_TX_FIFO_EMPTY
1004:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_TX_FIFO_QUARTER_FULL
1005:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_TX_FIFO_HALF_FULL
1006:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_TX_FIFO_FULL
1007:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1008:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTxFIFOLevel(SPI_TypeDef *SPIx)
1009:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1010:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->SR, SPI_SR_FTLVL));
1011:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1012:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1013:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1014:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Clear CRC error flag
1015:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           CRCERR        LL_SPI_ClearFlag_CRCERR
1016:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1017:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1018:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1019:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_CRCERR(SPI_TypeDef *SPIx)
1020:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1021:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->SR, SPI_SR_CRCERR);
1022:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1023:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1024:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1025:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Clear mode fault error flag
1026:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   Clearing this flag is done by a read access to the SPIx_SR
1027:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         register followed by a write access to the SPIx_CR1 register
1028:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           MODF          LL_SPI_ClearFlag_MODF
1029:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1030:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1031:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1032:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_MODF(SPI_TypeDef *SPIx)
1033:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1034:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   __IO uint32_t tmpreg_sr;
1035:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   tmpreg_sr = SPIx->SR;
1036:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   (void) tmpreg_sr;
1037:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_SPE);
1038:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1039:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1040:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1041:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Clear overrun error flag
1042:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   Clearing this flag is done by a read access to the SPIx_DR
1043:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         register followed by a read access to the SPIx_SR register
1044:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           OVR           LL_SPI_ClearFlag_OVR
1045:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1046:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1047:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1048:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_OVR(SPI_TypeDef *SPIx)
1049:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1050:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   __IO uint32_t tmpreg;
1051:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   tmpreg = SPIx->DR;
1052:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   (void) tmpreg;
1053:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   tmpreg = SPIx->SR;
1054:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   (void) tmpreg;
1055:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1056:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1057:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1058:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Clear frame format error flag
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 45


1059:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   Clearing this flag is done by reading SPIx_SR register
1060:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           FRE           LL_SPI_ClearFlag_FRE
1061:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1062:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1063:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1064:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_FRE(SPI_TypeDef *SPIx)
1065:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1066:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   __IO uint32_t tmpreg;
1067:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   tmpreg = SPIx->SR;
1068:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   (void) tmpreg;
1069:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1070:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1071:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1072:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
1073:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1074:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1075:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_IT_Management Interrupt Management
1076:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
1077:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1078:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1079:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1080:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable error interrupt
1081:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit controls the generation of an interrupt when an error condition occurs (CRCERR
1082:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_EnableIT_ERR
1083:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1084:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1085:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1086:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_ERR(SPI_TypeDef *SPIx)
1087:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1088:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_ERRIE);
1089:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1090:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1091:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1092:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable Rx buffer not empty interrupt
1093:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_EnableIT_RXNE
1094:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1095:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1096:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1097:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_RXNE(SPI_TypeDef *SPIx)
1098:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1099:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_RXNEIE);
1100:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1101:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1102:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1103:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable Tx buffer empty interrupt
1104:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_EnableIT_TXE
1105:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1106:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1107:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1108:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_TXE(SPI_TypeDef *SPIx)
1109:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1110:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_TXEIE);
1111:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1112:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1113:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1114:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable error interrupt
1115:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit controls the generation of an interrupt when an error condition occurs (CRCERR
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 46


1116:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_DisableIT_ERR
1117:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1118:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1119:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1120:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_ERR(SPI_TypeDef *SPIx)
1121:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1122:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_ERRIE);
1123:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1124:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1125:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1126:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable Rx buffer not empty interrupt
1127:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_DisableIT_RXNE
1128:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1129:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1130:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1131:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_RXNE(SPI_TypeDef *SPIx)
1132:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1133:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_RXNEIE);
1134:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1135:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1136:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1137:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable Tx buffer empty interrupt
1138:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_DisableIT_TXE
1139:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1140:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1141:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1142:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_TXE(SPI_TypeDef *SPIx)
1143:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1144:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_TXEIE);
1145:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1146:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1147:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1148:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if error interrupt is enabled
1149:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_IsEnabledIT_ERR
1150:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1151:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1152:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1153:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_ERR(SPI_TypeDef *SPIx)
1154:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1155:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_ERRIE) == (SPI_CR2_ERRIE)) ? 1UL : 0UL);
1156:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1157:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1158:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1159:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if Rx buffer not empty interrupt is enabled
1160:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_IsEnabledIT_RXNE
1161:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1162:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1163:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1164:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_RXNE(SPI_TypeDef *SPIx)
1165:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1166:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_RXNEIE) == (SPI_CR2_RXNEIE)) ? 1UL : 0UL);
1167:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1168:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1169:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1170:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if Tx buffer empty interrupt
1171:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_IsEnabledIT_TXE
1172:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 47


1173:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1174:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1175:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_TXE(SPI_TypeDef *SPIx)
1176:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1177:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_TXEIE) == (SPI_CR2_TXEIE)) ? 1UL : 0UL);
1178:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1179:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1180:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1181:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
1182:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1183:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1184:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_DMA_Management DMA Management
1185:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
1186:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1187:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1188:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1189:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable DMA Rx
1190:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_EnableDMAReq_RX
1191:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1192:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1193:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1194:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableDMAReq_RX(SPI_TypeDef *SPIx)
1195:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1196:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_RXDMAEN);
1197:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1198:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1199:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1200:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable DMA Rx
1201:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_DisableDMAReq_RX
1202:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1203:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1204:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1205:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableDMAReq_RX(SPI_TypeDef *SPIx)
1206:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1207:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_RXDMAEN);
1208:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1209:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1210:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1211:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if DMA Rx is enabled
1212:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_IsEnabledDMAReq_RX
1213:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1214:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1215:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1216:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledDMAReq_RX(SPI_TypeDef *SPIx)
1217:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1218:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_RXDMAEN) == (SPI_CR2_RXDMAEN)) ? 1UL : 0UL);
1219:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1220:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1221:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1222:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable DMA Tx
1223:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_EnableDMAReq_TX
1224:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1225:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1226:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1227:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableDMAReq_TX(SPI_TypeDef *SPIx)
1228:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1229:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_TXDMAEN);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 48


1230:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1231:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1232:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1233:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable DMA Tx
1234:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_DisableDMAReq_TX
1235:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1236:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1237:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1238:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableDMAReq_TX(SPI_TypeDef *SPIx)
1239:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1240:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_TXDMAEN);
1241:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1242:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1243:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1244:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if DMA Tx is enabled
1245:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_IsEnabledDMAReq_TX
1246:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1247:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1248:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1249:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledDMAReq_TX(SPI_TypeDef *SPIx)
1250:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1251:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_TXDMAEN) == (SPI_CR2_TXDMAEN)) ? 1UL : 0UL);
1252:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1253:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1254:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1255:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set parity of  Last DMA reception
1256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          LDMARX        LL_SPI_SetDMAParity_RX
1257:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1258:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Parity This parameter can be one of the following values:
1259:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_ODD
1260:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_EVEN
1261:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1262:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1263:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetDMAParity_RX(SPI_TypeDef *SPIx, uint32_t Parity)
1264:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1265:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_LDMARX, (Parity << SPI_CR2_LDMARX_Pos));
1266:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1267:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1268:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1269:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get parity configuration for  Last DMA reception
1270:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          LDMARX        LL_SPI_GetDMAParity_RX
1271:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1272:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
1273:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_ODD
1274:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_EVEN
1275:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1276:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetDMAParity_RX(SPI_TypeDef *SPIx)
1277:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1278:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_LDMARX) >> SPI_CR2_LDMARX_Pos);
1279:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1280:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1281:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1282:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set parity of  Last DMA transmission
1283:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          LDMATX        LL_SPI_SetDMAParity_TX
1284:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1285:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Parity This parameter can be one of the following values:
1286:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_ODD
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 49


1287:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_EVEN
1288:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1289:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1290:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetDMAParity_TX(SPI_TypeDef *SPIx, uint32_t Parity)
1291:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1292:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_LDMATX, (Parity << SPI_CR2_LDMATX_Pos));
1293:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1294:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1295:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1296:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get parity configuration for Last DMA transmission
1297:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          LDMATX        LL_SPI_GetDMAParity_TX
1298:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1299:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
1300:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_ODD
1301:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_EVEN
1302:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1303:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetDMAParity_TX(SPI_TypeDef *SPIx)
1304:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1305:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_LDMATX) >> SPI_CR2_LDMATX_Pos);
1306:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1307:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1308:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1309:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get the data register address used for DMA transfer
1310:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_DMA_GetRegAddr
1311:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1312:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Address of data register
1313:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1314:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_DMA_GetRegAddr(SPI_TypeDef *SPIx)
1315:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1316:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t) &(SPIx->DR);
1317:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1318:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1319:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1320:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
1321:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1322:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1323:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_DATA_Management DATA Management
1324:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
1325:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1326:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1327:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1328:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Read 8-Bits in the data register
1329:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_ReceiveData8
1330:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1331:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval RxData Value between Min_Data=0x00 and Max_Data=0xFF
1332:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1333:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint8_t LL_SPI_ReceiveData8(SPI_TypeDef *SPIx)
1334:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (*((__IO uint8_t *)&SPIx->DR));
1336:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1337:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1338:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1339:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Read 16-Bits in the data register
1340:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_ReceiveData16
1341:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1342:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval RxData Value between Min_Data=0x00 and Max_Data=0xFFFF
1343:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 50


1344:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint16_t LL_SPI_ReceiveData16(SPI_TypeDef *SPIx)
1345:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1346:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint16_t)(READ_REG(SPIx->DR));
1347:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1348:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1349:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1350:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Write 8-Bits in the data register
1351:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_TransmitData8
1352:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1353:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  TxData Value between Min_Data=0x00 and Max_Data=0xFF
1354:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1355:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1356:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_TransmitData8(SPI_TypeDef *SPIx, uint8_t TxData)
  68              		.loc 2 1356 22 view .LVU11
  69              	.LBB13:
1357:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1358:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #if defined (__GNUC__)
1359:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   __IO uint8_t *spidr = ((__IO uint8_t *)&SPIx->DR);
  70              		.loc 2 1359 3 view .LVU12
1360:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *spidr = TxData;
  71              		.loc 2 1360 3 view .LVU13
  72              		.loc 2 1360 10 is_stmt 0 view .LVU14
  73 0018 084A     		ldr	r2, .L8
  74 001a 1073     		strb	r0, [r2, #12]
1361:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #else
1362:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *((__IO uint8_t *)&SPIx->DR) = TxData;
1363:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #endif /* __GNUC__ */
1364:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
  75              		.loc 2 1364 1 view .LVU15
  76 001c 01E0     		b	.L5
  77              	.LVL4:
  78              	.L4:
  79              		.loc 2 1364 1 view .LVU16
  80              	.LBE13:
  81              	.LBE12:
1385:Core/Src/AB1805.c **** 
1386:Core/Src/AB1805.c ****   while (LL_SPI_IsActiveFlag_RXNE(SPI1) == RESET)
  82              		.loc 1 1386 41 view .LVU17
  83 001e 0028     		cmp	r0, #0
  84 0020 08D1     		bne	.L7
  85              	.L5:
  86              		.loc 1 1386 41 is_stmt 1 discriminator 1 view .LVU18
  87              	.LVL5:
  88              	.LBB14:
  89              	.LBI14:
 905:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
  90              		.loc 2 905 26 discriminator 1 view .LVU19
  91              	.LBB15:
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
  92              		.loc 2 907 3 discriminator 1 view .LVU20
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
  93              		.loc 2 907 12 is_stmt 0 discriminator 1 view .LVU21
  94 0022 064A     		ldr	r2, .L8
  95              	.LVL6:
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
  96              		.loc 2 907 12 discriminator 1 view .LVU22
  97 0024 9268     		ldr	r2, [r2, #8]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 51


  98              	.LVL7:
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
  99              		.loc 2 907 12 discriminator 1 view .LVU23
 100 0026 0121     		movs	r1, #1
 101 0028 0800     		movs	r0, r1
 102 002a 1040     		ands	r0, r2
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 103              		.loc 2 907 68 discriminator 1 view .LVU24
 104 002c 1142     		tst	r1, r2
 105 002e F6D0     		beq	.L4
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 106              		.loc 2 907 68 view .LVU25
 107 0030 1800     		movs	r0, r3
 108 0032 F4E7     		b	.L4
 109              	.LVL8:
 110              	.L7:
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 111              		.loc 2 907 68 view .LVU26
 112              	.LBE15:
 113              	.LBE14:
1387:Core/Src/AB1805.c ****     ;
1388:Core/Src/AB1805.c ****   return LL_SPI_ReceiveData8(SPI1);
 114              		.loc 1 1388 3 is_stmt 1 view .LVU27
 115              	.LBB16:
 116              	.LBI16:
1333:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 117              		.loc 2 1333 25 view .LVU28
 118              	.LBB17:
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 119              		.loc 2 1335 3 view .LVU29
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 120              		.loc 2 1335 11 is_stmt 0 view .LVU30
 121 0034 014B     		ldr	r3, .L8
 122              	.LVL9:
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 123              		.loc 2 1335 11 view .LVU31
 124 0036 187B     		ldrb	r0, [r3, #12]
 125 0038 C0B2     		uxtb	r0, r0
 126              	.LVL10:
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 127              		.loc 2 1335 11 view .LVU32
 128              	.LBE17:
 129              	.LBE16:
1389:Core/Src/AB1805.c **** }
 130              		.loc 1 1389 1 view .LVU33
 131              		@ sp needed
 132 003a 7047     		bx	lr
 133              	.L9:
 134              		.align	2
 135              	.L8:
 136 003c 00300140 		.word	1073819648
 137              		.cfi_endproc
 138              	.LFE623:
 140              		.section	.text.read_rtc_register,"ax",%progbits
 141              		.align	1
 142              		.syntax unified
 143              		.code	16
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 52


 144              		.thumb_func
 146              	read_rtc_register:
 147              	.LVL11:
 148              	.LFB624:
1390:Core/Src/AB1805.c **** 
1391:Core/Src/AB1805.c **** inline static uint8_t read_rtc_register(uint8_t reg_addr)
1392:Core/Src/AB1805.c **** {
 149              		.loc 1 1392 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		.loc 1 1392 1 is_stmt 0 view .LVU35
 154 0000 10B5     		push	{r4, lr}
 155              	.LCFI0:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 4, -8
 158              		.cfi_offset 14, -4
1393:Core/Src/AB1805.c ****   uint8_t val;
 159              		.loc 1 1393 3 is_stmt 1 view .LVU36
1394:Core/Src/AB1805.c **** 
1395:Core/Src/AB1805.c ****   CSB_L();
 160              		.loc 1 1395 3 view .LVU37
 161 0002 A024     		movs	r4, #160
 162 0004 E405     		lsls	r4, r4, #23
 163 0006 8023     		movs	r3, #128
 164 0008 DB04     		lsls	r3, r3, #19
 165 000a A361     		str	r3, [r4, #24]
1396:Core/Src/AB1805.c ****   SPI1_SendByte(reg_addr);
 166              		.loc 1 1396 3 view .LVU38
 167 000c FFF7FEFF 		bl	SPI1_SendByte
 168              	.LVL12:
1397:Core/Src/AB1805.c ****   val = SPI1_SendByte(0x00); // Send DUMMY to read data
 169              		.loc 1 1397 3 view .LVU39
 170              		.loc 1 1397 9 is_stmt 0 view .LVU40
 171 0010 0020     		movs	r0, #0
 172 0012 FFF7FEFF 		bl	SPI1_SendByte
 173              	.LVL13:
1398:Core/Src/AB1805.c ****   CSB_H();
 174              		.loc 1 1398 3 is_stmt 1 view .LVU41
 175 0016 8023     		movs	r3, #128
 176 0018 DB00     		lsls	r3, r3, #3
 177 001a A361     		str	r3, [r4, #24]
1399:Core/Src/AB1805.c **** 
1400:Core/Src/AB1805.c ****   return val;
 178              		.loc 1 1400 3 view .LVU42
1401:Core/Src/AB1805.c **** }
 179              		.loc 1 1401 1 is_stmt 0 view .LVU43
 180              		@ sp needed
 181 001c 10BD     		pop	{r4, pc}
 182              		.cfi_endproc
 183              	.LFE624:
 185              		.section	.text.spi_select_slave,"ax",%progbits
 186              		.align	1
 187              		.global	spi_select_slave
 188              		.syntax unified
 189              		.code	16
 190              		.thumb_func
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 53


 192              	spi_select_slave:
 193              	.LVL14:
 194              	.LFB499:
  42:Core/Src/AB1805.c ****   if (select)
 195              		.loc 1 42 1 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
  43:Core/Src/AB1805.c ****   {
 200              		.loc 1 43 3 view .LVU45
  43:Core/Src/AB1805.c ****   {
 201              		.loc 1 43 6 is_stmt 0 view .LVU46
 202 0000 0028     		cmp	r0, #0
 203 0002 04D0     		beq	.L12
  45:Core/Src/AB1805.c ****   }
 204              		.loc 1 45 5 is_stmt 1 view .LVU47
 205 0004 044B     		ldr	r3, .L14
 206 0006 8022     		movs	r2, #128
 207 0008 D201     		lsls	r2, r2, #7
 208 000a 9A61     		str	r2, [r3, #24]
 209              	.L11:
  51:Core/Src/AB1805.c **** 
 210              		.loc 1 51 1 is_stmt 0 view .LVU48
 211              		@ sp needed
 212 000c 7047     		bx	lr
 213              	.L12:
  49:Core/Src/AB1805.c ****   }
 214              		.loc 1 49 5 is_stmt 1 view .LVU49
 215 000e 024B     		ldr	r3, .L14
 216 0010 8022     		movs	r2, #128
 217 0012 D205     		lsls	r2, r2, #23
 218 0014 9A61     		str	r2, [r3, #24]
  51:Core/Src/AB1805.c **** 
 219              		.loc 1 51 1 is_stmt 0 view .LVU50
 220 0016 F9E7     		b	.L11
 221              	.L15:
 222              		.align	2
 223              	.L14:
 224 0018 00040050 		.word	1342178304
 225              		.cfi_endproc
 226              	.LFE499:
 228              		.section	.text.write_rtc_register,"ax",%progbits
 229              		.align	1
 230              		.syntax unified
 231              		.code	16
 232              		.thumb_func
 234              	write_rtc_register:
 235              	.LVL15:
 236              	.LFB625:
1402:Core/Src/AB1805.c **** 
1403:Core/Src/AB1805.c **** // bool read(uint8_t offset, uint8_t *buf, uint8_t length)
1404:Core/Src/AB1805.c **** // {
1405:Core/Src/AB1805.c **** //   uint8_t address = AB1815_SPI_READ(offset);
1406:Core/Src/AB1805.c **** 
1407:Core/Src/AB1805.c **** //   spi_select_slave(0);
1408:Core/Src/AB1805.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 54


1409:Core/Src/AB1805.c **** //   unsigned int i = 0;
1410:Core/Src/AB1805.c **** //   if (!((SPI1)->CR1 & SPI_CR1_SPE))
1411:Core/Src/AB1805.c **** //   {
1412:Core/Src/AB1805.c **** //     SPI1->CR1 |= SPI_CR1_SPE;
1413:Core/Src/AB1805.c **** //   }
1414:Core/Src/AB1805.c **** 
1415:Core/Src/AB1805.c **** //   SPI1_SendByte(address);
1416:Core/Src/AB1805.c **** //   while (i < length)
1417:Core/Src/AB1805.c **** //   {
1418:Core/Src/AB1805.c **** //     buf[i++] = SPI1_SendByte(0x00); // Send DUMMY to read data
1419:Core/Src/AB1805.c **** //   }
1420:Core/Src/AB1805.c **** 
1421:Core/Src/AB1805.c **** //   spi_select_slave(1);
1422:Core/Src/AB1805.c **** //   return ab1815_status_e_OK;
1423:Core/Src/AB1805.c **** // };
1424:Core/Src/AB1805.c **** 
1425:Core/Src/AB1805.c **** uint8_t write_rtc_register(uint8_t offset, uint8_t buf)
1426:Core/Src/AB1805.c **** {
 237              		.loc 1 1426 1 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		.loc 1 1426 1 is_stmt 0 view .LVU52
 242 0000 70B5     		push	{r4, r5, r6, lr}
 243              	.LCFI1:
 244              		.cfi_def_cfa_offset 16
 245              		.cfi_offset 4, -16
 246              		.cfi_offset 5, -12
 247              		.cfi_offset 6, -8
 248              		.cfi_offset 14, -4
 249 0002 0D00     		movs	r5, r1
1427:Core/Src/AB1805.c ****   uint8_t address = AB1815_SPI_WRITE(offset);
 250              		.loc 1 1427 3 is_stmt 1 view .LVU53
 251              		.loc 1 1427 11 is_stmt 0 view .LVU54
 252 0004 8024     		movs	r4, #128
 253 0006 6442     		rsbs	r4, r4, #0
 254 0008 0443     		orrs	r4, r0
 255 000a E4B2     		uxtb	r4, r4
 256              	.LVL16:
1428:Core/Src/AB1805.c ****   spi_select_slave(0);
 257              		.loc 1 1428 3 is_stmt 1 view .LVU55
 258 000c 0020     		movs	r0, #0
 259              	.LVL17:
 260              		.loc 1 1428 3 is_stmt 0 view .LVU56
 261 000e FFF7FEFF 		bl	spi_select_slave
 262              	.LVL18:
1429:Core/Src/AB1805.c **** 
1430:Core/Src/AB1805.c ****   if (!((SPI1)->CR1 & SPI_CR1_SPE))
 263              		.loc 1 1430 3 is_stmt 1 view .LVU57
 264              		.loc 1 1430 15 is_stmt 0 view .LVU58
 265 0012 0C4B     		ldr	r3, .L19
 266 0014 1B68     		ldr	r3, [r3]
 267              		.loc 1 1430 6 view .LVU59
 268 0016 5B06     		lsls	r3, r3, #25
 269 0018 04D4     		bmi	.L17
1431:Core/Src/AB1805.c ****   {
1432:Core/Src/AB1805.c ****     SPI1->CR1 |= SPI_CR1_SPE;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 55


 270              		.loc 1 1432 5 is_stmt 1 view .LVU60
 271              		.loc 1 1432 9 is_stmt 0 view .LVU61
 272 001a 0A4A     		ldr	r2, .L19
 273 001c 1368     		ldr	r3, [r2]
 274              		.loc 1 1432 15 view .LVU62
 275 001e 4021     		movs	r1, #64
 276 0020 0B43     		orrs	r3, r1
 277 0022 1360     		str	r3, [r2]
 278              	.L17:
1433:Core/Src/AB1805.c ****   }
1434:Core/Src/AB1805.c ****   CSB_L();
 279              		.loc 1 1434 3 is_stmt 1 view .LVU63
 280 0024 A023     		movs	r3, #160
 281 0026 DB05     		lsls	r3, r3, #23
 282 0028 8022     		movs	r2, #128
 283 002a D204     		lsls	r2, r2, #19
 284 002c 9A61     		str	r2, [r3, #24]
1435:Core/Src/AB1805.c ****   SPI1_SendByte(address);
 285              		.loc 1 1435 3 view .LVU64
 286 002e 2000     		movs	r0, r4
 287 0030 FFF7FEFF 		bl	SPI1_SendByte
 288              	.LVL19:
1436:Core/Src/AB1805.c ****   SPI1_SendByte(buf); // Send Data to write
 289              		.loc 1 1436 3 view .LVU65
 290 0034 2800     		movs	r0, r5
 291 0036 FFF7FEFF 		bl	SPI1_SendByte
 292              	.LVL20:
1437:Core/Src/AB1805.c **** 
1438:Core/Src/AB1805.c ****   spi_select_slave(1); // set 1
 293              		.loc 1 1438 3 view .LVU66
 294 003a 0120     		movs	r0, #1
 295 003c FFF7FEFF 		bl	spi_select_slave
 296              	.LVL21:
1439:Core/Src/AB1805.c ****   return 1;
 297              		.loc 1 1439 3 view .LVU67
1440:Core/Src/AB1805.c **** };
 298              		.loc 1 1440 1 is_stmt 0 view .LVU68
 299 0040 0120     		movs	r0, #1
 300              		@ sp needed
 301              	.LVL22:
 302              		.loc 1 1440 1 view .LVU69
 303 0042 70BD     		pop	{r4, r5, r6, pc}
 304              	.L20:
 305              		.align	2
 306              	.L19:
 307 0044 00300140 		.word	1073819648
 308              		.cfi_endproc
 309              	.LFE625:
 311              		.section	.text.get_rtc_data,"ax",%progbits
 312              		.align	1
 313              		.global	get_rtc_data
 314              		.syntax unified
 315              		.code	16
 316              		.thumb_func
 318              	get_rtc_data:
 319              	.LVL23:
 320              	.LFB500:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 56


  54:Core/Src/AB1805.c ****   return (read_rtc_register(rtc_register) & register_mask);
 321              		.loc 1 54 1 is_stmt 1 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
  54:Core/Src/AB1805.c ****   return (read_rtc_register(rtc_register) & register_mask);
 325              		.loc 1 54 1 is_stmt 0 view .LVU71
 326 0000 10B5     		push	{r4, lr}
 327              	.LCFI2:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 4, -8
 330              		.cfi_offset 14, -4
 331 0002 0C00     		movs	r4, r1
  55:Core/Src/AB1805.c **** }
 332              		.loc 1 55 3 is_stmt 1 view .LVU72
  55:Core/Src/AB1805.c **** }
 333              		.loc 1 55 11 is_stmt 0 view .LVU73
 334 0004 FFF7FEFF 		bl	read_rtc_register
 335              	.LVL24:
  55:Core/Src/AB1805.c **** }
 336              		.loc 1 55 43 view .LVU74
 337 0008 2040     		ands	r0, r4
  56:Core/Src/AB1805.c **** 
 338              		.loc 1 56 1 view .LVU75
 339              		@ sp needed
 340 000a 10BD     		pop	{r4, pc}
 341              		.cfi_endproc
 342              	.LFE500:
 344              		.section	.text.get_hundredths,"ax",%progbits
 345              		.align	1
 346              		.global	get_hundredths
 347              		.syntax unified
 348              		.code	16
 349              		.thumb_func
 351              	get_hundredths:
 352              	.LFB501:
  59:Core/Src/AB1805.c ****   return get_rtc_data(HUNDRETH_REGISTER, 0xFF);
 353              		.loc 1 59 1 is_stmt 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357 0000 10B5     		push	{r4, lr}
 358              	.LCFI3:
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 4, -8
 361              		.cfi_offset 14, -4
  60:Core/Src/AB1805.c **** }
 362              		.loc 1 60 3 view .LVU77
  60:Core/Src/AB1805.c **** }
 363              		.loc 1 60 10 is_stmt 0 view .LVU78
 364 0002 FF21     		movs	r1, #255
 365 0004 0020     		movs	r0, #0
 366 0006 FFF7FEFF 		bl	get_rtc_data
 367              	.LVL25:
  61:Core/Src/AB1805.c **** 
 368              		.loc 1 61 1 view .LVU79
 369              		@ sp needed
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 57


 370 000a 10BD     		pop	{r4, pc}
 371              		.cfi_endproc
 372              	.LFE501:
 374              		.section	.text.get_second,"ax",%progbits
 375              		.align	1
 376              		.global	get_second
 377              		.syntax unified
 378              		.code	16
 379              		.thumb_func
 381              	get_second:
 382              	.LFB502:
  64:Core/Src/AB1805.c ****   return get_rtc_data(SECOND_REGISTER, SECOND_MASK);
 383              		.loc 1 64 1 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387 0000 10B5     		push	{r4, lr}
 388              	.LCFI4:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 4, -8
 391              		.cfi_offset 14, -4
  65:Core/Src/AB1805.c **** }
 392              		.loc 1 65 3 view .LVU81
  65:Core/Src/AB1805.c **** }
 393              		.loc 1 65 10 is_stmt 0 view .LVU82
 394 0002 7F21     		movs	r1, #127
 395 0004 0120     		movs	r0, #1
 396 0006 FFF7FEFF 		bl	get_rtc_data
 397              	.LVL26:
  66:Core/Src/AB1805.c **** 
 398              		.loc 1 66 1 view .LVU83
 399              		@ sp needed
 400 000a 10BD     		pop	{r4, pc}
 401              		.cfi_endproc
 402              	.LFE502:
 404              		.section	.text.get_minute,"ax",%progbits
 405              		.align	1
 406              		.global	get_minute
 407              		.syntax unified
 408              		.code	16
 409              		.thumb_func
 411              	get_minute:
 412              	.LFB503:
  69:Core/Src/AB1805.c ****   return get_rtc_data(MINUTE_REGISTER, MINUTE_MASK);
 413              		.loc 1 69 1 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417 0000 10B5     		push	{r4, lr}
 418              	.LCFI5:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 4, -8
 421              		.cfi_offset 14, -4
  70:Core/Src/AB1805.c **** }
 422              		.loc 1 70 3 view .LVU85
  70:Core/Src/AB1805.c **** }
 423              		.loc 1 70 10 is_stmt 0 view .LVU86
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 58


 424 0002 7F21     		movs	r1, #127
 425 0004 0220     		movs	r0, #2
 426 0006 FFF7FEFF 		bl	get_rtc_data
 427              	.LVL27:
  71:Core/Src/AB1805.c **** 
 428              		.loc 1 71 1 view .LVU87
 429              		@ sp needed
 430 000a 10BD     		pop	{r4, pc}
 431              		.cfi_endproc
 432              	.LFE503:
 434              		.section	.text.get_hour,"ax",%progbits
 435              		.align	1
 436              		.global	get_hour
 437              		.syntax unified
 438              		.code	16
 439              		.thumb_func
 441              	get_hour:
 442              	.LFB504:
  74:Core/Src/AB1805.c ****   return get_rtc_data(HOUR_REGISTER, HOUR_24_MASK);
 443              		.loc 1 74 1 is_stmt 1 view -0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447 0000 10B5     		push	{r4, lr}
 448              	.LCFI6:
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 4, -8
 451              		.cfi_offset 14, -4
  75:Core/Src/AB1805.c **** }
 452              		.loc 1 75 3 view .LVU89
  75:Core/Src/AB1805.c **** }
 453              		.loc 1 75 10 is_stmt 0 view .LVU90
 454 0002 3F21     		movs	r1, #63
 455 0004 0320     		movs	r0, #3
 456 0006 FFF7FEFF 		bl	get_rtc_data
 457              	.LVL28:
  76:Core/Src/AB1805.c **** 
 458              		.loc 1 76 1 view .LVU91
 459              		@ sp needed
 460 000a 10BD     		pop	{r4, pc}
 461              		.cfi_endproc
 462              	.LFE504:
 464              		.section	.text.get_weekday,"ax",%progbits
 465              		.align	1
 466              		.global	get_weekday
 467              		.syntax unified
 468              		.code	16
 469              		.thumb_func
 471              	get_weekday:
 472              	.LFB505:
  79:Core/Src/AB1805.c ****   return get_rtc_data(WEEKDAY_REGISTER, DAY_MASK);
 473              		.loc 1 79 1 is_stmt 1 view -0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477 0000 10B5     		push	{r4, lr}
 478              	.LCFI7:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 59


 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 4, -8
 481              		.cfi_offset 14, -4
  80:Core/Src/AB1805.c **** }
 482              		.loc 1 80 3 view .LVU93
  80:Core/Src/AB1805.c **** }
 483              		.loc 1 80 10 is_stmt 0 view .LVU94
 484 0002 0721     		movs	r1, #7
 485 0004 0720     		movs	r0, #7
 486 0006 FFF7FEFF 		bl	get_rtc_data
 487              	.LVL29:
  81:Core/Src/AB1805.c **** 
 488              		.loc 1 81 1 view .LVU95
 489              		@ sp needed
 490 000a 10BD     		pop	{r4, pc}
 491              		.cfi_endproc
 492              	.LFE505:
 494              		.section	.text.get_date,"ax",%progbits
 495              		.align	1
 496              		.global	get_date
 497              		.syntax unified
 498              		.code	16
 499              		.thumb_func
 501              	get_date:
 502              	.LFB506:
  84:Core/Src/AB1805.c ****   return get_rtc_data(DATE_REGISTER, DATE_MASK);
 503              		.loc 1 84 1 is_stmt 1 view -0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507 0000 10B5     		push	{r4, lr}
 508              	.LCFI8:
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 4, -8
 511              		.cfi_offset 14, -4
  85:Core/Src/AB1805.c **** }
 512              		.loc 1 85 3 view .LVU97
  85:Core/Src/AB1805.c **** }
 513              		.loc 1 85 10 is_stmt 0 view .LVU98
 514 0002 3F21     		movs	r1, #63
 515 0004 0420     		movs	r0, #4
 516 0006 FFF7FEFF 		bl	get_rtc_data
 517              	.LVL30:
  86:Core/Src/AB1805.c **** 
 518              		.loc 1 86 1 view .LVU99
 519              		@ sp needed
 520 000a 10BD     		pop	{r4, pc}
 521              		.cfi_endproc
 522              	.LFE506:
 524              		.section	.text.get_month,"ax",%progbits
 525              		.align	1
 526              		.global	get_month
 527              		.syntax unified
 528              		.code	16
 529              		.thumb_func
 531              	get_month:
 532              	.LFB507:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 60


  89:Core/Src/AB1805.c ****   return get_rtc_data(MONTH_REGISTER, MONTH_MASK);
 533              		.loc 1 89 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537 0000 10B5     		push	{r4, lr}
 538              	.LCFI9:
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 4, -8
 541              		.cfi_offset 14, -4
  90:Core/Src/AB1805.c **** }
 542              		.loc 1 90 3 view .LVU101
  90:Core/Src/AB1805.c **** }
 543              		.loc 1 90 10 is_stmt 0 view .LVU102
 544 0002 1F21     		movs	r1, #31
 545 0004 0520     		movs	r0, #5
 546 0006 FFF7FEFF 		bl	get_rtc_data
 547              	.LVL31:
  91:Core/Src/AB1805.c **** 
 548              		.loc 1 91 1 view .LVU103
 549              		@ sp needed
 550 000a 10BD     		pop	{r4, pc}
 551              		.cfi_endproc
 552              	.LFE507:
 554              		.section	.text.get_year,"ax",%progbits
 555              		.align	1
 556              		.global	get_year
 557              		.syntax unified
 558              		.code	16
 559              		.thumb_func
 561              	get_year:
 562              	.LFB508:
  94:Core/Src/AB1805.c ****   return get_rtc_data(YEAR_REGISTER, YEAR_MASK);
 563              		.loc 1 94 1 is_stmt 1 view -0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567 0000 10B5     		push	{r4, lr}
 568              	.LCFI10:
 569              		.cfi_def_cfa_offset 8
 570              		.cfi_offset 4, -8
 571              		.cfi_offset 14, -4
  95:Core/Src/AB1805.c **** }
 572              		.loc 1 95 3 view .LVU105
  95:Core/Src/AB1805.c **** }
 573              		.loc 1 95 10 is_stmt 0 view .LVU106
 574 0002 FF21     		movs	r1, #255
 575 0004 0620     		movs	r0, #6
 576 0006 FFF7FEFF 		bl	get_rtc_data
 577              	.LVL32:
  96:Core/Src/AB1805.c **** 
 578              		.loc 1 96 1 view .LVU107
 579              		@ sp needed
 580 000a 10BD     		pop	{r4, pc}
 581              		.cfi_endproc
 582              	.LFE508:
 584              		.section	.text.get_datetime,"ax",%progbits
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 61


 585              		.align	1
 586              		.global	get_datetime
 587              		.syntax unified
 588              		.code	16
 589              		.thumb_func
 591              	get_datetime:
 592              	.LFB509:
  99:Core/Src/AB1805.c ****   // rtc_check_valid();
 593              		.loc 1 99 1 is_stmt 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597 0000 10B5     		push	{r4, lr}
 598              	.LCFI11:
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 4, -8
 601              		.cfi_offset 14, -4
 102:Core/Src/AB1805.c ****   _minute = get_minute();
 602              		.loc 1 102 3 view .LVU109
 102:Core/Src/AB1805.c ****   _minute = get_minute();
 603              		.loc 1 102 13 is_stmt 0 view .LVU110
 604 0002 FFF7FEFF 		bl	get_second
 605              	.LVL33:
 102:Core/Src/AB1805.c ****   _minute = get_minute();
 606              		.loc 1 102 11 view .LVU111
 607 0006 0D4B     		ldr	r3, .L31
 608 0008 1870     		strb	r0, [r3]
 103:Core/Src/AB1805.c ****   _hour = get_hour();
 609              		.loc 1 103 3 is_stmt 1 view .LVU112
 103:Core/Src/AB1805.c ****   _hour = get_hour();
 610              		.loc 1 103 13 is_stmt 0 view .LVU113
 611 000a FFF7FEFF 		bl	get_minute
 612              	.LVL34:
 103:Core/Src/AB1805.c ****   _hour = get_hour();
 613              		.loc 1 103 11 view .LVU114
 614 000e 0C4B     		ldr	r3, .L31+4
 615 0010 1870     		strb	r0, [r3]
 104:Core/Src/AB1805.c ****   _weekday = get_weekday();
 616              		.loc 1 104 3 is_stmt 1 view .LVU115
 104:Core/Src/AB1805.c ****   _weekday = get_weekday();
 617              		.loc 1 104 11 is_stmt 0 view .LVU116
 618 0012 FFF7FEFF 		bl	get_hour
 619              	.LVL35:
 104:Core/Src/AB1805.c ****   _weekday = get_weekday();
 620              		.loc 1 104 9 view .LVU117
 621 0016 0B4B     		ldr	r3, .L31+8
 622 0018 1870     		strb	r0, [r3]
 105:Core/Src/AB1805.c ****   _date = get_date();
 623              		.loc 1 105 3 is_stmt 1 view .LVU118
 105:Core/Src/AB1805.c ****   _date = get_date();
 624              		.loc 1 105 14 is_stmt 0 view .LVU119
 625 001a FFF7FEFF 		bl	get_weekday
 626              	.LVL36:
 105:Core/Src/AB1805.c ****   _date = get_date();
 627              		.loc 1 105 12 view .LVU120
 628 001e 0A4B     		ldr	r3, .L31+12
 629 0020 1870     		strb	r0, [r3]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 62


 106:Core/Src/AB1805.c ****   _month = get_month();
 630              		.loc 1 106 3 is_stmt 1 view .LVU121
 106:Core/Src/AB1805.c ****   _month = get_month();
 631              		.loc 1 106 11 is_stmt 0 view .LVU122
 632 0022 FFF7FEFF 		bl	get_date
 633              	.LVL37:
 106:Core/Src/AB1805.c ****   _month = get_month();
 634              		.loc 1 106 9 view .LVU123
 635 0026 094B     		ldr	r3, .L31+16
 636 0028 1870     		strb	r0, [r3]
 107:Core/Src/AB1805.c ****   _year = get_year();
 637              		.loc 1 107 3 is_stmt 1 view .LVU124
 107:Core/Src/AB1805.c ****   _year = get_year();
 638              		.loc 1 107 12 is_stmt 0 view .LVU125
 639 002a FFF7FEFF 		bl	get_month
 640              	.LVL38:
 107:Core/Src/AB1805.c ****   _year = get_year();
 641              		.loc 1 107 10 view .LVU126
 642 002e 084B     		ldr	r3, .L31+20
 643 0030 1870     		strb	r0, [r3]
 108:Core/Src/AB1805.c **** }
 644              		.loc 1 108 3 is_stmt 1 view .LVU127
 108:Core/Src/AB1805.c **** }
 645              		.loc 1 108 11 is_stmt 0 view .LVU128
 646 0032 FFF7FEFF 		bl	get_year
 647              	.LVL39:
 108:Core/Src/AB1805.c **** }
 648              		.loc 1 108 9 view .LVU129
 649 0036 074B     		ldr	r3, .L31+24
 650 0038 1870     		strb	r0, [r3]
 109:Core/Src/AB1805.c **** 
 651              		.loc 1 109 1 view .LVU130
 652              		@ sp needed
 653 003a 10BD     		pop	{r4, pc}
 654              	.L32:
 655              		.align	2
 656              	.L31:
 657 003c 00000000 		.word	_second
 658 0040 00000000 		.word	_minute
 659 0044 00000000 		.word	_hour
 660 0048 00000000 		.word	_weekday
 661 004c 00000000 		.word	_date
 662 0050 00000000 		.word	_month
 663 0054 00000000 		.word	_year
 664              		.cfi_endproc
 665              	.LFE509:
 667              		.section	.text.get_second_alarm,"ax",%progbits
 668              		.align	1
 669              		.global	get_second_alarm
 670              		.syntax unified
 671              		.code	16
 672              		.thumb_func
 674              	get_second_alarm:
 675              	.LFB510:
 112:Core/Src/AB1805.c ****   _alarm_second = get_rtc_data(SECOND_ALARM_REGISTER, SECOND_ALARM_MASK);
 676              		.loc 1 112 1 is_stmt 1 view -0
 677              		.cfi_startproc
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 63


 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680 0000 10B5     		push	{r4, lr}
 681              	.LCFI12:
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 4, -8
 684              		.cfi_offset 14, -4
 113:Core/Src/AB1805.c ****   return _alarm_second;
 685              		.loc 1 113 3 view .LVU132
 113:Core/Src/AB1805.c ****   return _alarm_second;
 686              		.loc 1 113 19 is_stmt 0 view .LVU133
 687 0002 7F21     		movs	r1, #127
 688 0004 0920     		movs	r0, #9
 689 0006 FFF7FEFF 		bl	get_rtc_data
 690              	.LVL40:
 113:Core/Src/AB1805.c ****   return _alarm_second;
 691              		.loc 1 113 17 view .LVU134
 692 000a 024B     		ldr	r3, .L34
 693 000c 1870     		strb	r0, [r3]
 114:Core/Src/AB1805.c **** }
 694              		.loc 1 114 3 is_stmt 1 view .LVU135
 114:Core/Src/AB1805.c **** }
 695              		.loc 1 114 10 is_stmt 0 view .LVU136
 696 000e 1878     		ldrb	r0, [r3]
 697 0010 C0B2     		uxtb	r0, r0
 115:Core/Src/AB1805.c **** 
 698              		.loc 1 115 1 view .LVU137
 699              		@ sp needed
 700 0012 10BD     		pop	{r4, pc}
 701              	.L35:
 702              		.align	2
 703              	.L34:
 704 0014 00000000 		.word	_alarm_second
 705              		.cfi_endproc
 706              	.LFE510:
 708              		.section	.text.get_minute_alarm,"ax",%progbits
 709              		.align	1
 710              		.global	get_minute_alarm
 711              		.syntax unified
 712              		.code	16
 713              		.thumb_func
 715              	get_minute_alarm:
 716              	.LFB511:
 118:Core/Src/AB1805.c ****   _alarm_minute = get_rtc_data(MINUTE_ALARM_REGISTER, MINUTE_ALARM_MASK);
 717              		.loc 1 118 1 is_stmt 1 view -0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721 0000 10B5     		push	{r4, lr}
 722              	.LCFI13:
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 4, -8
 725              		.cfi_offset 14, -4
 119:Core/Src/AB1805.c ****   return _alarm_minute;
 726              		.loc 1 119 3 view .LVU139
 119:Core/Src/AB1805.c ****   return _alarm_minute;
 727              		.loc 1 119 19 is_stmt 0 view .LVU140
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 64


 728 0002 7F21     		movs	r1, #127
 729 0004 0A20     		movs	r0, #10
 730 0006 FFF7FEFF 		bl	get_rtc_data
 731              	.LVL41:
 119:Core/Src/AB1805.c ****   return _alarm_minute;
 732              		.loc 1 119 17 view .LVU141
 733 000a 024B     		ldr	r3, .L37
 734 000c 1870     		strb	r0, [r3]
 120:Core/Src/AB1805.c **** }
 735              		.loc 1 120 3 is_stmt 1 view .LVU142
 120:Core/Src/AB1805.c **** }
 736              		.loc 1 120 10 is_stmt 0 view .LVU143
 737 000e 1878     		ldrb	r0, [r3]
 738 0010 C0B2     		uxtb	r0, r0
 121:Core/Src/AB1805.c **** 
 739              		.loc 1 121 1 view .LVU144
 740              		@ sp needed
 741 0012 10BD     		pop	{r4, pc}
 742              	.L38:
 743              		.align	2
 744              	.L37:
 745 0014 00000000 		.word	_alarm_minute
 746              		.cfi_endproc
 747              	.LFE511:
 749              		.section	.text.get_hour_alarm,"ax",%progbits
 750              		.align	1
 751              		.global	get_hour_alarm
 752              		.syntax unified
 753              		.code	16
 754              		.thumb_func
 756              	get_hour_alarm:
 757              	.LFB512:
 124:Core/Src/AB1805.c ****   _alarm_hour = get_rtc_data(HOUR_ALARM_REGISTER, HOUR_24_ALARM_MASK);
 758              		.loc 1 124 1 is_stmt 1 view -0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762 0000 10B5     		push	{r4, lr}
 763              	.LCFI14:
 764              		.cfi_def_cfa_offset 8
 765              		.cfi_offset 4, -8
 766              		.cfi_offset 14, -4
 125:Core/Src/AB1805.c ****   return _alarm_hour;
 767              		.loc 1 125 3 view .LVU146
 125:Core/Src/AB1805.c ****   return _alarm_hour;
 768              		.loc 1 125 17 is_stmt 0 view .LVU147
 769 0002 3F21     		movs	r1, #63
 770 0004 0B20     		movs	r0, #11
 771 0006 FFF7FEFF 		bl	get_rtc_data
 772              	.LVL42:
 125:Core/Src/AB1805.c ****   return _alarm_hour;
 773              		.loc 1 125 15 view .LVU148
 774 000a 024B     		ldr	r3, .L40
 775 000c 1870     		strb	r0, [r3]
 126:Core/Src/AB1805.c **** }
 776              		.loc 1 126 3 is_stmt 1 view .LVU149
 126:Core/Src/AB1805.c **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 65


 777              		.loc 1 126 10 is_stmt 0 view .LVU150
 778 000e 1878     		ldrb	r0, [r3]
 779 0010 C0B2     		uxtb	r0, r0
 127:Core/Src/AB1805.c **** 
 780              		.loc 1 127 1 view .LVU151
 781              		@ sp needed
 782 0012 10BD     		pop	{r4, pc}
 783              	.L41:
 784              		.align	2
 785              	.L40:
 786 0014 00000000 		.word	_alarm_hour
 787              		.cfi_endproc
 788              	.LFE512:
 790              		.section	.text.get_weekday_alarm,"ax",%progbits
 791              		.align	1
 792              		.global	get_weekday_alarm
 793              		.syntax unified
 794              		.code	16
 795              		.thumb_func
 797              	get_weekday_alarm:
 798              	.LFB513:
 130:Core/Src/AB1805.c ****   _alarm_weekday = get_rtc_data(WEEKDAY_ALARM_REGISTER, WEEKDAY_ALARM_MASK);
 799              		.loc 1 130 1 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803 0000 10B5     		push	{r4, lr}
 804              	.LCFI15:
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 4, -8
 807              		.cfi_offset 14, -4
 131:Core/Src/AB1805.c ****   return _alarm_weekday;
 808              		.loc 1 131 3 view .LVU153
 131:Core/Src/AB1805.c ****   return _alarm_weekday;
 809              		.loc 1 131 20 is_stmt 0 view .LVU154
 810 0002 0721     		movs	r1, #7
 811 0004 0E20     		movs	r0, #14
 812 0006 FFF7FEFF 		bl	get_rtc_data
 813              	.LVL43:
 131:Core/Src/AB1805.c ****   return _alarm_weekday;
 814              		.loc 1 131 18 view .LVU155
 815 000a 024B     		ldr	r3, .L43
 816 000c 1870     		strb	r0, [r3]
 132:Core/Src/AB1805.c **** }
 817              		.loc 1 132 3 is_stmt 1 view .LVU156
 132:Core/Src/AB1805.c **** }
 818              		.loc 1 132 10 is_stmt 0 view .LVU157
 819 000e 1878     		ldrb	r0, [r3]
 820 0010 C0B2     		uxtb	r0, r0
 133:Core/Src/AB1805.c **** 
 821              		.loc 1 133 1 view .LVU158
 822              		@ sp needed
 823 0012 10BD     		pop	{r4, pc}
 824              	.L44:
 825              		.align	2
 826              	.L43:
 827 0014 00000000 		.word	_alarm_weekday
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 66


 828              		.cfi_endproc
 829              	.LFE513:
 831              		.section	.text.get_date_alarm,"ax",%progbits
 832              		.align	1
 833              		.global	get_date_alarm
 834              		.syntax unified
 835              		.code	16
 836              		.thumb_func
 838              	get_date_alarm:
 839              	.LFB514:
 136:Core/Src/AB1805.c ****   _alarm_date = get_rtc_data(DATE_ALARM_REGISTER, DATE_ALARM_MASK);
 840              		.loc 1 136 1 is_stmt 1 view -0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844 0000 10B5     		push	{r4, lr}
 845              	.LCFI16:
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 4, -8
 848              		.cfi_offset 14, -4
 137:Core/Src/AB1805.c ****   return _alarm_date;
 849              		.loc 1 137 3 view .LVU160
 137:Core/Src/AB1805.c ****   return _alarm_date;
 850              		.loc 1 137 17 is_stmt 0 view .LVU161
 851 0002 3F21     		movs	r1, #63
 852 0004 0C20     		movs	r0, #12
 853 0006 FFF7FEFF 		bl	get_rtc_data
 854              	.LVL44:
 137:Core/Src/AB1805.c ****   return _alarm_date;
 855              		.loc 1 137 15 view .LVU162
 856 000a 024B     		ldr	r3, .L46
 857 000c 1870     		strb	r0, [r3]
 138:Core/Src/AB1805.c **** }
 858              		.loc 1 138 3 is_stmt 1 view .LVU163
 138:Core/Src/AB1805.c **** }
 859              		.loc 1 138 10 is_stmt 0 view .LVU164
 860 000e 1878     		ldrb	r0, [r3]
 861 0010 C0B2     		uxtb	r0, r0
 139:Core/Src/AB1805.c **** 
 862              		.loc 1 139 1 view .LVU165
 863              		@ sp needed
 864 0012 10BD     		pop	{r4, pc}
 865              	.L47:
 866              		.align	2
 867              	.L46:
 868 0014 00000000 		.word	_alarm_date
 869              		.cfi_endproc
 870              	.LFE514:
 872              		.section	.text.get_month_alarm,"ax",%progbits
 873              		.align	1
 874              		.global	get_month_alarm
 875              		.syntax unified
 876              		.code	16
 877              		.thumb_func
 879              	get_month_alarm:
 880              	.LFB515:
 142:Core/Src/AB1805.c ****   _alarm_month = get_rtc_data(MONTH_ALARM_REGISTER, MONTH_ALARM_MASK);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 67


 881              		.loc 1 142 1 is_stmt 1 view -0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885 0000 10B5     		push	{r4, lr}
 886              	.LCFI17:
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 4, -8
 889              		.cfi_offset 14, -4
 143:Core/Src/AB1805.c ****   return _alarm_month;
 890              		.loc 1 143 3 view .LVU167
 143:Core/Src/AB1805.c ****   return _alarm_month;
 891              		.loc 1 143 18 is_stmt 0 view .LVU168
 892 0002 1F21     		movs	r1, #31
 893 0004 0D20     		movs	r0, #13
 894 0006 FFF7FEFF 		bl	get_rtc_data
 895              	.LVL45:
 143:Core/Src/AB1805.c ****   return _alarm_month;
 896              		.loc 1 143 16 view .LVU169
 897 000a 024B     		ldr	r3, .L49
 898 000c 1870     		strb	r0, [r3]
 144:Core/Src/AB1805.c **** }
 899              		.loc 1 144 3 is_stmt 1 view .LVU170
 144:Core/Src/AB1805.c **** }
 900              		.loc 1 144 10 is_stmt 0 view .LVU171
 901 000e 1878     		ldrb	r0, [r3]
 902 0010 C0B2     		uxtb	r0, r0
 145:Core/Src/AB1805.c **** 
 903              		.loc 1 145 1 view .LVU172
 904              		@ sp needed
 905 0012 10BD     		pop	{r4, pc}
 906              	.L50:
 907              		.align	2
 908              	.L49:
 909 0014 00000000 		.word	_alarm_month
 910              		.cfi_endproc
 911              	.LFE515:
 913              		.global	__aeabi_uidivmod
 914              		.section	.text.set_second,"ax",%progbits
 915              		.align	1
 916              		.global	set_second
 917              		.syntax unified
 918              		.code	16
 919              		.thumb_func
 921              	set_second:
 922              	.LVL46:
 923              	.LFB516:
 148:Core/Src/AB1805.c ****   _second = value % MAX_SECOND;
 924              		.loc 1 148 1 is_stmt 1 view -0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 148:Core/Src/AB1805.c ****   _second = value % MAX_SECOND;
 928              		.loc 1 148 1 is_stmt 0 view .LVU174
 929 0000 10B5     		push	{r4, lr}
 930              	.LCFI18:
 931              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 68


 932              		.cfi_offset 4, -8
 933              		.cfi_offset 14, -4
 149:Core/Src/AB1805.c ****   write_rtc_register(SECOND_REGISTER, _second);
 934              		.loc 1 149 3 is_stmt 1 view .LVU175
 149:Core/Src/AB1805.c ****   write_rtc_register(SECOND_REGISTER, _second);
 935              		.loc 1 149 11 is_stmt 0 view .LVU176
 936 0002 6021     		movs	r1, #96
 937 0004 FFF7FEFF 		bl	__aeabi_uidivmod
 938              	.LVL47:
 149:Core/Src/AB1805.c ****   write_rtc_register(SECOND_REGISTER, _second);
 939              		.loc 1 149 11 view .LVU177
 940 0008 C9B2     		uxtb	r1, r1
 941 000a 044B     		ldr	r3, .L52
 942 000c 1970     		strb	r1, [r3]
 150:Core/Src/AB1805.c **** }
 943              		.loc 1 150 3 is_stmt 1 view .LVU178
 944 000e 1978     		ldrb	r1, [r3]
 945 0010 C9B2     		uxtb	r1, r1
 946 0012 0120     		movs	r0, #1
 947 0014 FFF7FEFF 		bl	write_rtc_register
 948              	.LVL48:
 151:Core/Src/AB1805.c **** 
 949              		.loc 1 151 1 is_stmt 0 view .LVU179
 950              		@ sp needed
 951 0018 10BD     		pop	{r4, pc}
 952              	.L53:
 953 001a C046     		.align	2
 954              	.L52:
 955 001c 00000000 		.word	_second
 956              		.cfi_endproc
 957              	.LFE516:
 959              		.section	.text.set_minute,"ax",%progbits
 960              		.align	1
 961              		.global	set_minute
 962              		.syntax unified
 963              		.code	16
 964              		.thumb_func
 966              	set_minute:
 967              	.LVL49:
 968              	.LFB517:
 154:Core/Src/AB1805.c ****   _minute = value % MAX_MINUTE;
 969              		.loc 1 154 1 is_stmt 1 view -0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 154:Core/Src/AB1805.c ****   _minute = value % MAX_MINUTE;
 973              		.loc 1 154 1 is_stmt 0 view .LVU181
 974 0000 10B5     		push	{r4, lr}
 975              	.LCFI19:
 976              		.cfi_def_cfa_offset 8
 977              		.cfi_offset 4, -8
 978              		.cfi_offset 14, -4
 155:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_REGISTER, _minute);
 979              		.loc 1 155 3 is_stmt 1 view .LVU182
 155:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_REGISTER, _minute);
 980              		.loc 1 155 11 is_stmt 0 view .LVU183
 981 0002 6021     		movs	r1, #96
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 69


 982 0004 FFF7FEFF 		bl	__aeabi_uidivmod
 983              	.LVL50:
 155:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_REGISTER, _minute);
 984              		.loc 1 155 11 view .LVU184
 985 0008 C9B2     		uxtb	r1, r1
 986 000a 044B     		ldr	r3, .L55
 987 000c 1970     		strb	r1, [r3]
 156:Core/Src/AB1805.c **** }
 988              		.loc 1 156 3 is_stmt 1 view .LVU185
 989 000e 1978     		ldrb	r1, [r3]
 990 0010 C9B2     		uxtb	r1, r1
 991 0012 0220     		movs	r0, #2
 992 0014 FFF7FEFF 		bl	write_rtc_register
 993              	.LVL51:
 157:Core/Src/AB1805.c **** 
 994              		.loc 1 157 1 is_stmt 0 view .LVU186
 995              		@ sp needed
 996 0018 10BD     		pop	{r4, pc}
 997              	.L56:
 998 001a C046     		.align	2
 999              	.L55:
 1000 001c 00000000 		.word	_minute
 1001              		.cfi_endproc
 1002              	.LFE517:
 1004              		.section	.text.set_hour,"ax",%progbits
 1005              		.align	1
 1006              		.global	set_hour
 1007              		.syntax unified
 1008              		.code	16
 1009              		.thumb_func
 1011              	set_hour:
 1012              	.LVL52:
 1013              	.LFB518:
 160:Core/Src/AB1805.c ****   _hour = value % MAX_HOURS;
 1014              		.loc 1 160 1 is_stmt 1 view -0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 0
 1017              		@ frame_needed = 0, uses_anonymous_args = 0
 160:Core/Src/AB1805.c ****   _hour = value % MAX_HOURS;
 1018              		.loc 1 160 1 is_stmt 0 view .LVU188
 1019 0000 10B5     		push	{r4, lr}
 1020              	.LCFI20:
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 4, -8
 1023              		.cfi_offset 14, -4
 161:Core/Src/AB1805.c ****   write_rtc_register(HOUR_REGISTER, _hour);
 1024              		.loc 1 161 3 is_stmt 1 view .LVU189
 161:Core/Src/AB1805.c ****   write_rtc_register(HOUR_REGISTER, _hour);
 1025              		.loc 1 161 9 is_stmt 0 view .LVU190
 1026 0002 2421     		movs	r1, #36
 1027 0004 FFF7FEFF 		bl	__aeabi_uidivmod
 1028              	.LVL53:
 161:Core/Src/AB1805.c ****   write_rtc_register(HOUR_REGISTER, _hour);
 1029              		.loc 1 161 9 view .LVU191
 1030 0008 C9B2     		uxtb	r1, r1
 1031 000a 044B     		ldr	r3, .L58
 1032 000c 1970     		strb	r1, [r3]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 70


 162:Core/Src/AB1805.c **** }
 1033              		.loc 1 162 3 is_stmt 1 view .LVU192
 1034 000e 1978     		ldrb	r1, [r3]
 1035 0010 C9B2     		uxtb	r1, r1
 1036 0012 0320     		movs	r0, #3
 1037 0014 FFF7FEFF 		bl	write_rtc_register
 1038              	.LVL54:
 163:Core/Src/AB1805.c **** 
 1039              		.loc 1 163 1 is_stmt 0 view .LVU193
 1040              		@ sp needed
 1041 0018 10BD     		pop	{r4, pc}
 1042              	.L59:
 1043 001a C046     		.align	2
 1044              	.L58:
 1045 001c 00000000 		.word	_hour
 1046              		.cfi_endproc
 1047              	.LFE518:
 1049              		.section	.text.set_weekday,"ax",%progbits
 1050              		.align	1
 1051              		.global	set_weekday
 1052              		.syntax unified
 1053              		.code	16
 1054              		.thumb_func
 1056              	set_weekday:
 1057              	.LVL55:
 1058              	.LFB519:
 166:Core/Src/AB1805.c ****   _weekday = value % MAX_DAY;
 1059              		.loc 1 166 1 is_stmt 1 view -0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 166:Core/Src/AB1805.c ****   _weekday = value % MAX_DAY;
 1063              		.loc 1 166 1 is_stmt 0 view .LVU195
 1064 0000 10B5     		push	{r4, lr}
 1065              	.LCFI21:
 1066              		.cfi_def_cfa_offset 8
 1067              		.cfi_offset 4, -8
 1068              		.cfi_offset 14, -4
 167:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_REGISTER, _weekday);
 1069              		.loc 1 167 3 is_stmt 1 view .LVU196
 167:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_REGISTER, _weekday);
 1070              		.loc 1 167 20 is_stmt 0 view .LVU197
 1071 0002 0723     		movs	r3, #7
 1072 0004 0340     		ands	r3, r0
 167:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_REGISTER, _weekday);
 1073              		.loc 1 167 12 view .LVU198
 1074 0006 044A     		ldr	r2, .L61
 1075 0008 1370     		strb	r3, [r2]
 168:Core/Src/AB1805.c **** }
 1076              		.loc 1 168 3 is_stmt 1 view .LVU199
 1077 000a 1178     		ldrb	r1, [r2]
 1078 000c C9B2     		uxtb	r1, r1
 1079 000e 0720     		movs	r0, #7
 1080              	.LVL56:
 168:Core/Src/AB1805.c **** }
 1081              		.loc 1 168 3 is_stmt 0 view .LVU200
 1082 0010 FFF7FEFF 		bl	write_rtc_register
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 71


 1083              	.LVL57:
 169:Core/Src/AB1805.c **** 
 1084              		.loc 1 169 1 view .LVU201
 1085              		@ sp needed
 1086 0014 10BD     		pop	{r4, pc}
 1087              	.L62:
 1088 0016 C046     		.align	2
 1089              	.L61:
 1090 0018 00000000 		.word	_weekday
 1091              		.cfi_endproc
 1092              	.LFE519:
 1094              		.section	.text.set_date,"ax",%progbits
 1095              		.align	1
 1096              		.global	set_date
 1097              		.syntax unified
 1098              		.code	16
 1099              		.thumb_func
 1101              	set_date:
 1102              	.LVL58:
 1103              	.LFB520:
 172:Core/Src/AB1805.c ****   _date = value % MAX_DATE;
 1104              		.loc 1 172 1 is_stmt 1 view -0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 0
 1107              		@ frame_needed = 0, uses_anonymous_args = 0
 172:Core/Src/AB1805.c ****   _date = value % MAX_DATE;
 1108              		.loc 1 172 1 is_stmt 0 view .LVU203
 1109 0000 10B5     		push	{r4, lr}
 1110              	.LCFI22:
 1111              		.cfi_def_cfa_offset 8
 1112              		.cfi_offset 4, -8
 1113              		.cfi_offset 14, -4
 173:Core/Src/AB1805.c ****   write_rtc_register(DATE_REGISTER, _date);
 1114              		.loc 1 173 3 is_stmt 1 view .LVU204
 173:Core/Src/AB1805.c ****   write_rtc_register(DATE_REGISTER, _date);
 1115              		.loc 1 173 9 is_stmt 0 view .LVU205
 1116 0002 3221     		movs	r1, #50
 1117 0004 FFF7FEFF 		bl	__aeabi_uidivmod
 1118              	.LVL59:
 173:Core/Src/AB1805.c ****   write_rtc_register(DATE_REGISTER, _date);
 1119              		.loc 1 173 9 view .LVU206
 1120 0008 C9B2     		uxtb	r1, r1
 1121 000a 044B     		ldr	r3, .L64
 1122 000c 1970     		strb	r1, [r3]
 174:Core/Src/AB1805.c **** }
 1123              		.loc 1 174 3 is_stmt 1 view .LVU207
 1124 000e 1978     		ldrb	r1, [r3]
 1125 0010 C9B2     		uxtb	r1, r1
 1126 0012 0420     		movs	r0, #4
 1127 0014 FFF7FEFF 		bl	write_rtc_register
 1128              	.LVL60:
 175:Core/Src/AB1805.c **** 
 1129              		.loc 1 175 1 is_stmt 0 view .LVU208
 1130              		@ sp needed
 1131 0018 10BD     		pop	{r4, pc}
 1132              	.L65:
 1133 001a C046     		.align	2
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 72


 1134              	.L64:
 1135 001c 00000000 		.word	_date
 1136              		.cfi_endproc
 1137              	.LFE520:
 1139              		.section	.text.set_month,"ax",%progbits
 1140              		.align	1
 1141              		.global	set_month
 1142              		.syntax unified
 1143              		.code	16
 1144              		.thumb_func
 1146              	set_month:
 1147              	.LVL61:
 1148              	.LFB521:
 178:Core/Src/AB1805.c ****   _month = value % MAX_MONTH;
 1149              		.loc 1 178 1 is_stmt 1 view -0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 0, uses_anonymous_args = 0
 178:Core/Src/AB1805.c ****   _month = value % MAX_MONTH;
 1153              		.loc 1 178 1 is_stmt 0 view .LVU210
 1154 0000 10B5     		push	{r4, lr}
 1155              	.LCFI23:
 1156              		.cfi_def_cfa_offset 8
 1157              		.cfi_offset 4, -8
 1158              		.cfi_offset 14, -4
 179:Core/Src/AB1805.c ****   write_rtc_register(MONTH_REGISTER, _month);
 1159              		.loc 1 179 3 is_stmt 1 view .LVU211
 179:Core/Src/AB1805.c ****   write_rtc_register(MONTH_REGISTER, _month);
 1160              		.loc 1 179 10 is_stmt 0 view .LVU212
 1161 0002 1321     		movs	r1, #19
 1162 0004 FFF7FEFF 		bl	__aeabi_uidivmod
 1163              	.LVL62:
 179:Core/Src/AB1805.c ****   write_rtc_register(MONTH_REGISTER, _month);
 1164              		.loc 1 179 10 view .LVU213
 1165 0008 C9B2     		uxtb	r1, r1
 1166 000a 044B     		ldr	r3, .L67
 1167 000c 1970     		strb	r1, [r3]
 180:Core/Src/AB1805.c **** }
 1168              		.loc 1 180 3 is_stmt 1 view .LVU214
 1169 000e 1978     		ldrb	r1, [r3]
 1170 0010 C9B2     		uxtb	r1, r1
 1171 0012 0520     		movs	r0, #5
 1172 0014 FFF7FEFF 		bl	write_rtc_register
 1173              	.LVL63:
 181:Core/Src/AB1805.c **** 
 1174              		.loc 1 181 1 is_stmt 0 view .LVU215
 1175              		@ sp needed
 1176 0018 10BD     		pop	{r4, pc}
 1177              	.L68:
 1178 001a C046     		.align	2
 1179              	.L67:
 1180 001c 00000000 		.word	_month
 1181              		.cfi_endproc
 1182              	.LFE521:
 1184              		.section	.text.set_year,"ax",%progbits
 1185              		.align	1
 1186              		.global	set_year
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 73


 1187              		.syntax unified
 1188              		.code	16
 1189              		.thumb_func
 1191              	set_year:
 1192              	.LVL64:
 1193              	.LFB522:
 184:Core/Src/AB1805.c ****   _year = value % MAX_YEAR;
 1194              		.loc 1 184 1 is_stmt 1 view -0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 0
 1197              		@ frame_needed = 0, uses_anonymous_args = 0
 184:Core/Src/AB1805.c ****   _year = value % MAX_YEAR;
 1198              		.loc 1 184 1 is_stmt 0 view .LVU217
 1199 0000 10B5     		push	{r4, lr}
 1200              	.LCFI24:
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 4, -8
 1203              		.cfi_offset 14, -4
 1204 0002 0100     		movs	r1, r0
 185:Core/Src/AB1805.c ****   write_rtc_register(YEAR_REGISTER, value);
 1205              		.loc 1 185 3 is_stmt 1 view .LVU218
 185:Core/Src/AB1805.c ****   write_rtc_register(YEAR_REGISTER, value);
 1206              		.loc 1 185 9 is_stmt 0 view .LVU219
 1207 0004 024B     		ldr	r3, .L70
 1208 0006 1870     		strb	r0, [r3]
 186:Core/Src/AB1805.c **** }
 1209              		.loc 1 186 3 is_stmt 1 view .LVU220
 1210 0008 0620     		movs	r0, #6
 1211              	.LVL65:
 186:Core/Src/AB1805.c **** }
 1212              		.loc 1 186 3 is_stmt 0 view .LVU221
 1213 000a FFF7FEFF 		bl	write_rtc_register
 1214              	.LVL66:
 187:Core/Src/AB1805.c **** 
 1215              		.loc 1 187 1 view .LVU222
 1216              		@ sp needed
 1217 000e 10BD     		pop	{r4, pc}
 1218              	.L71:
 1219              		.align	2
 1220              	.L70:
 1221 0010 00000000 		.word	_year
 1222              		.cfi_endproc
 1223              	.LFE522:
 1225              		.section	.text.set_datetime,"ax",%progbits
 1226              		.align	1
 1227              		.global	set_datetime
 1228              		.syntax unified
 1229              		.code	16
 1230              		.thumb_func
 1232              	set_datetime:
 1233              	.LVL67:
 1234              	.LFB523:
 190:Core/Src/AB1805.c ****   set_year(year);
 1235              		.loc 1 190 1 is_stmt 1 view -0
 1236              		.cfi_startproc
 1237              		@ args = 12, pretend = 0, frame = 0
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 74


 190:Core/Src/AB1805.c ****   set_year(year);
 1239              		.loc 1 190 1 is_stmt 0 view .LVU224
 1240 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1241              	.LCFI25:
 1242              		.cfi_def_cfa_offset 24
 1243              		.cfi_offset 3, -24
 1244              		.cfi_offset 4, -20
 1245              		.cfi_offset 5, -16
 1246              		.cfi_offset 6, -12
 1247              		.cfi_offset 7, -8
 1248              		.cfi_offset 14, -4
 1249 0002 CE46     		mov	lr, r9
 1250 0004 4746     		mov	r7, r8
 1251 0006 80B5     		push	{r7, lr}
 1252              	.LCFI26:
 1253              		.cfi_def_cfa_offset 32
 1254              		.cfi_offset 8, -32
 1255              		.cfi_offset 9, -28
 1256 0008 0E00     		movs	r6, r1
 1257 000a 1500     		movs	r5, r2
 1258 000c 1C00     		movs	r4, r3
 1259 000e 08AB     		add	r3, sp, #32
 1260              	.LVL68:
 190:Core/Src/AB1805.c ****   set_year(year);
 1261              		.loc 1 190 1 view .LVU225
 1262 0010 1B78     		ldrb	r3, [r3]
 1263              	.LVL69:
 190:Core/Src/AB1805.c ****   set_year(year);
 1264              		.loc 1 190 1 view .LVU226
 1265 0012 9946     		mov	r9, r3
 1266 0014 09AB     		add	r3, sp, #36
 1267              	.LVL70:
 190:Core/Src/AB1805.c ****   set_year(year);
 1268              		.loc 1 190 1 view .LVU227
 1269 0016 1B78     		ldrb	r3, [r3]
 1270              	.LVL71:
 190:Core/Src/AB1805.c ****   set_year(year);
 1271              		.loc 1 190 1 view .LVU228
 1272 0018 9846     		mov	r8, r3
 1273 001a 0AAB     		add	r3, sp, #40
 1274              	.LVL72:
 190:Core/Src/AB1805.c ****   set_year(year);
 1275              		.loc 1 190 1 view .LVU229
 1276 001c 1F78     		ldrb	r7, [r3]
 191:Core/Src/AB1805.c ****   set_month(month);
 1277              		.loc 1 191 3 is_stmt 1 view .LVU230
 1278 001e FFF7FEFF 		bl	set_year
 1279              	.LVL73:
 192:Core/Src/AB1805.c ****   set_date(date);
 1280              		.loc 1 192 3 view .LVU231
 1281 0022 3000     		movs	r0, r6
 1282 0024 FFF7FEFF 		bl	set_month
 1283              	.LVL74:
 193:Core/Src/AB1805.c ****   set_weekday(weekday);
 1284              		.loc 1 193 3 view .LVU232
 1285 0028 2800     		movs	r0, r5
 1286 002a FFF7FEFF 		bl	set_date
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 75


 1287              	.LVL75:
 194:Core/Src/AB1805.c ****   set_hour(hour);
 1288              		.loc 1 194 3 view .LVU233
 1289 002e 2000     		movs	r0, r4
 1290 0030 FFF7FEFF 		bl	set_weekday
 1291              	.LVL76:
 195:Core/Src/AB1805.c ****   set_minute(minutes);
 1292              		.loc 1 195 3 view .LVU234
 1293 0034 4846     		mov	r0, r9
 1294 0036 FFF7FEFF 		bl	set_hour
 1295              	.LVL77:
 196:Core/Src/AB1805.c ****   set_second(seconds);
 1296              		.loc 1 196 3 view .LVU235
 1297 003a 4046     		mov	r0, r8
 1298 003c FFF7FEFF 		bl	set_minute
 1299              	.LVL78:
 197:Core/Src/AB1805.c **** }
 1300              		.loc 1 197 3 view .LVU236
 1301 0040 3800     		movs	r0, r7
 1302 0042 FFF7FEFF 		bl	set_second
 1303              	.LVL79:
 198:Core/Src/AB1805.c **** 
 1304              		.loc 1 198 1 is_stmt 0 view .LVU237
 1305              		@ sp needed
 1306 0046 C0BC     		pop	{r6, r7}
 1307 0048 B946     		mov	r9, r7
 1308 004a B046     		mov	r8, r6
 1309 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1310              		.cfi_endproc
 1311              	.LFE523:
 1313              		.section	.text.set_second_alarm,"ax",%progbits
 1314              		.align	1
 1315              		.global	set_second_alarm
 1316              		.syntax unified
 1317              		.code	16
 1318              		.thumb_func
 1320              	set_second_alarm:
 1321              	.LVL80:
 1322              	.LFB531:
 256:Core/Src/AB1805.c ****   _alarm_second = value % MAX_SECOND;
 1323              		.loc 1 256 1 is_stmt 1 view -0
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 0
 1326              		@ frame_needed = 0, uses_anonymous_args = 0
 256:Core/Src/AB1805.c ****   _alarm_second = value % MAX_SECOND;
 1327              		.loc 1 256 1 is_stmt 0 view .LVU239
 1328 0000 70B5     		push	{r4, r5, r6, lr}
 1329              	.LCFI27:
 1330              		.cfi_def_cfa_offset 16
 1331              		.cfi_offset 4, -16
 1332              		.cfi_offset 5, -12
 1333              		.cfi_offset 6, -8
 1334              		.cfi_offset 14, -4
 1335 0002 0400     		movs	r4, r0
 257:Core/Src/AB1805.c ****   write_rtc_register(SECOND_ALARM_REGISTER, _alarm_second);
 1336              		.loc 1 257 3 is_stmt 1 view .LVU240
 257:Core/Src/AB1805.c ****   write_rtc_register(SECOND_ALARM_REGISTER, _alarm_second);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 76


 1337              		.loc 1 257 17 is_stmt 0 view .LVU241
 1338 0004 6021     		movs	r1, #96
 1339 0006 FFF7FEFF 		bl	__aeabi_uidivmod
 1340              	.LVL81:
 257:Core/Src/AB1805.c ****   write_rtc_register(SECOND_ALARM_REGISTER, _alarm_second);
 1341              		.loc 1 257 17 view .LVU242
 1342 000a C9B2     		uxtb	r1, r1
 1343 000c 074D     		ldr	r5, .L74
 1344 000e 2970     		strb	r1, [r5]
 258:Core/Src/AB1805.c ****   _alarm_second = get_second_alarm();
 1345              		.loc 1 258 3 is_stmt 1 view .LVU243
 1346 0010 2978     		ldrb	r1, [r5]
 1347 0012 C9B2     		uxtb	r1, r1
 1348 0014 0920     		movs	r0, #9
 1349 0016 FFF7FEFF 		bl	write_rtc_register
 1350              	.LVL82:
 259:Core/Src/AB1805.c ****   return (value == _alarm_second);
 1351              		.loc 1 259 3 view .LVU244
 259:Core/Src/AB1805.c ****   return (value == _alarm_second);
 1352              		.loc 1 259 19 is_stmt 0 view .LVU245
 1353 001a FFF7FEFF 		bl	get_second_alarm
 1354              	.LVL83:
 259:Core/Src/AB1805.c ****   return (value == _alarm_second);
 1355              		.loc 1 259 17 view .LVU246
 1356 001e 2870     		strb	r0, [r5]
 260:Core/Src/AB1805.c **** }
 1357              		.loc 1 260 3 is_stmt 1 view .LVU247
 260:Core/Src/AB1805.c **** }
 1358              		.loc 1 260 17 is_stmt 0 view .LVU248
 1359 0020 2878     		ldrb	r0, [r5]
 1360 0022 001B     		subs	r0, r0, r4
 1361 0024 4342     		rsbs	r3, r0, #0
 1362 0026 5841     		adcs	r0, r0, r3
 1363 0028 C0B2     		uxtb	r0, r0
 261:Core/Src/AB1805.c **** 
 1364              		.loc 1 261 1 view .LVU249
 1365              		@ sp needed
 1366 002a 70BD     		pop	{r4, r5, r6, pc}
 1367              	.L75:
 1368              		.align	2
 1369              	.L74:
 1370 002c 00000000 		.word	_alarm_second
 1371              		.cfi_endproc
 1372              	.LFE531:
 1374              		.section	.text.set_minute_alarm,"ax",%progbits
 1375              		.align	1
 1376              		.global	set_minute_alarm
 1377              		.syntax unified
 1378              		.code	16
 1379              		.thumb_func
 1381              	set_minute_alarm:
 1382              	.LVL84:
 1383              	.LFB532:
 264:Core/Src/AB1805.c ****   _alarm_minute = value % MAX_MINUTE;
 1384              		.loc 1 264 1 is_stmt 1 view -0
 1385              		.cfi_startproc
 1386              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 77


 1387              		@ frame_needed = 0, uses_anonymous_args = 0
 264:Core/Src/AB1805.c ****   _alarm_minute = value % MAX_MINUTE;
 1388              		.loc 1 264 1 is_stmt 0 view .LVU251
 1389 0000 70B5     		push	{r4, r5, r6, lr}
 1390              	.LCFI28:
 1391              		.cfi_def_cfa_offset 16
 1392              		.cfi_offset 4, -16
 1393              		.cfi_offset 5, -12
 1394              		.cfi_offset 6, -8
 1395              		.cfi_offset 14, -4
 1396 0002 0400     		movs	r4, r0
 265:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_ALARM_REGISTER, _alarm_minute);
 1397              		.loc 1 265 3 is_stmt 1 view .LVU252
 265:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_ALARM_REGISTER, _alarm_minute);
 1398              		.loc 1 265 17 is_stmt 0 view .LVU253
 1399 0004 6021     		movs	r1, #96
 1400 0006 FFF7FEFF 		bl	__aeabi_uidivmod
 1401              	.LVL85:
 265:Core/Src/AB1805.c ****   write_rtc_register(MINUTE_ALARM_REGISTER, _alarm_minute);
 1402              		.loc 1 265 17 view .LVU254
 1403 000a C9B2     		uxtb	r1, r1
 1404 000c 074D     		ldr	r5, .L77
 1405 000e 2970     		strb	r1, [r5]
 266:Core/Src/AB1805.c ****   _alarm_minute = get_minute_alarm();
 1406              		.loc 1 266 3 is_stmt 1 view .LVU255
 1407 0010 2978     		ldrb	r1, [r5]
 1408 0012 C9B2     		uxtb	r1, r1
 1409 0014 0A20     		movs	r0, #10
 1410 0016 FFF7FEFF 		bl	write_rtc_register
 1411              	.LVL86:
 267:Core/Src/AB1805.c ****   return (value == _alarm_minute);
 1412              		.loc 1 267 3 view .LVU256
 267:Core/Src/AB1805.c ****   return (value == _alarm_minute);
 1413              		.loc 1 267 19 is_stmt 0 view .LVU257
 1414 001a FFF7FEFF 		bl	get_minute_alarm
 1415              	.LVL87:
 267:Core/Src/AB1805.c ****   return (value == _alarm_minute);
 1416              		.loc 1 267 17 view .LVU258
 1417 001e 2870     		strb	r0, [r5]
 268:Core/Src/AB1805.c **** }
 1418              		.loc 1 268 3 is_stmt 1 view .LVU259
 268:Core/Src/AB1805.c **** }
 1419              		.loc 1 268 17 is_stmt 0 view .LVU260
 1420 0020 2878     		ldrb	r0, [r5]
 1421 0022 001B     		subs	r0, r0, r4
 1422 0024 4342     		rsbs	r3, r0, #0
 1423 0026 5841     		adcs	r0, r0, r3
 1424 0028 C0B2     		uxtb	r0, r0
 269:Core/Src/AB1805.c **** 
 1425              		.loc 1 269 1 view .LVU261
 1426              		@ sp needed
 1427 002a 70BD     		pop	{r4, r5, r6, pc}
 1428              	.L78:
 1429              		.align	2
 1430              	.L77:
 1431 002c 00000000 		.word	_alarm_minute
 1432              		.cfi_endproc
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 78


 1433              	.LFE532:
 1435              		.section	.text.set_hour_alarm,"ax",%progbits
 1436              		.align	1
 1437              		.global	set_hour_alarm
 1438              		.syntax unified
 1439              		.code	16
 1440              		.thumb_func
 1442              	set_hour_alarm:
 1443              	.LVL88:
 1444              	.LFB533:
 272:Core/Src/AB1805.c ****   _alarm_hour = value % MAX_HOURS;
 1445              		.loc 1 272 1 is_stmt 1 view -0
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 0
 1448              		@ frame_needed = 0, uses_anonymous_args = 0
 272:Core/Src/AB1805.c ****   _alarm_hour = value % MAX_HOURS;
 1449              		.loc 1 272 1 is_stmt 0 view .LVU263
 1450 0000 70B5     		push	{r4, r5, r6, lr}
 1451              	.LCFI29:
 1452              		.cfi_def_cfa_offset 16
 1453              		.cfi_offset 4, -16
 1454              		.cfi_offset 5, -12
 1455              		.cfi_offset 6, -8
 1456              		.cfi_offset 14, -4
 1457 0002 0400     		movs	r4, r0
 273:Core/Src/AB1805.c ****   write_rtc_register(HOUR_ALARM_REGISTER, _alarm_hour);
 1458              		.loc 1 273 3 is_stmt 1 view .LVU264
 273:Core/Src/AB1805.c ****   write_rtc_register(HOUR_ALARM_REGISTER, _alarm_hour);
 1459              		.loc 1 273 15 is_stmt 0 view .LVU265
 1460 0004 2421     		movs	r1, #36
 1461 0006 FFF7FEFF 		bl	__aeabi_uidivmod
 1462              	.LVL89:
 273:Core/Src/AB1805.c ****   write_rtc_register(HOUR_ALARM_REGISTER, _alarm_hour);
 1463              		.loc 1 273 15 view .LVU266
 1464 000a C9B2     		uxtb	r1, r1
 1465 000c 074D     		ldr	r5, .L80
 1466 000e 2970     		strb	r1, [r5]
 274:Core/Src/AB1805.c ****   _alarm_hour = get_hour_alarm();
 1467              		.loc 1 274 3 is_stmt 1 view .LVU267
 1468 0010 2978     		ldrb	r1, [r5]
 1469 0012 C9B2     		uxtb	r1, r1
 1470 0014 0B20     		movs	r0, #11
 1471 0016 FFF7FEFF 		bl	write_rtc_register
 1472              	.LVL90:
 275:Core/Src/AB1805.c ****   return (value == _alarm_hour);
 1473              		.loc 1 275 3 view .LVU268
 275:Core/Src/AB1805.c ****   return (value == _alarm_hour);
 1474              		.loc 1 275 17 is_stmt 0 view .LVU269
 1475 001a FFF7FEFF 		bl	get_hour_alarm
 1476              	.LVL91:
 275:Core/Src/AB1805.c ****   return (value == _alarm_hour);
 1477              		.loc 1 275 15 view .LVU270
 1478 001e 2870     		strb	r0, [r5]
 276:Core/Src/AB1805.c **** }
 1479              		.loc 1 276 3 is_stmt 1 view .LVU271
 276:Core/Src/AB1805.c **** }
 1480              		.loc 1 276 17 is_stmt 0 view .LVU272
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 79


 1481 0020 2878     		ldrb	r0, [r5]
 1482 0022 001B     		subs	r0, r0, r4
 1483 0024 4342     		rsbs	r3, r0, #0
 1484 0026 5841     		adcs	r0, r0, r3
 1485 0028 C0B2     		uxtb	r0, r0
 277:Core/Src/AB1805.c **** 
 1486              		.loc 1 277 1 view .LVU273
 1487              		@ sp needed
 1488 002a 70BD     		pop	{r4, r5, r6, pc}
 1489              	.L81:
 1490              		.align	2
 1491              	.L80:
 1492 002c 00000000 		.word	_alarm_hour
 1493              		.cfi_endproc
 1494              	.LFE533:
 1496              		.section	.text.set_weekday_alarm,"ax",%progbits
 1497              		.align	1
 1498              		.global	set_weekday_alarm
 1499              		.syntax unified
 1500              		.code	16
 1501              		.thumb_func
 1503              	set_weekday_alarm:
 1504              	.LVL92:
 1505              	.LFB534:
 280:Core/Src/AB1805.c ****   _alarm_weekday = value % MAX_DAY;
 1506              		.loc 1 280 1 is_stmt 1 view -0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 0
 1509              		@ frame_needed = 0, uses_anonymous_args = 0
 280:Core/Src/AB1805.c ****   _alarm_weekday = value % MAX_DAY;
 1510              		.loc 1 280 1 is_stmt 0 view .LVU275
 1511 0000 70B5     		push	{r4, r5, r6, lr}
 1512              	.LCFI30:
 1513              		.cfi_def_cfa_offset 16
 1514              		.cfi_offset 4, -16
 1515              		.cfi_offset 5, -12
 1516              		.cfi_offset 6, -8
 1517              		.cfi_offset 14, -4
 1518 0002 0400     		movs	r4, r0
 281:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_ALARM_REGISTER, _alarm_weekday);
 1519              		.loc 1 281 3 is_stmt 1 view .LVU276
 281:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_ALARM_REGISTER, _alarm_weekday);
 1520              		.loc 1 281 26 is_stmt 0 view .LVU277
 1521 0004 0723     		movs	r3, #7
 1522 0006 0340     		ands	r3, r0
 281:Core/Src/AB1805.c ****   write_rtc_register(WEEKDAY_ALARM_REGISTER, _alarm_weekday);
 1523              		.loc 1 281 18 view .LVU278
 1524 0008 074D     		ldr	r5, .L83
 1525 000a 2B70     		strb	r3, [r5]
 282:Core/Src/AB1805.c ****   _alarm_weekday = get_weekday_alarm();
 1526              		.loc 1 282 3 is_stmt 1 view .LVU279
 1527 000c 2978     		ldrb	r1, [r5]
 1528 000e C9B2     		uxtb	r1, r1
 1529 0010 0E20     		movs	r0, #14
 1530              	.LVL93:
 282:Core/Src/AB1805.c ****   _alarm_weekday = get_weekday_alarm();
 1531              		.loc 1 282 3 is_stmt 0 view .LVU280
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 80


 1532 0012 FFF7FEFF 		bl	write_rtc_register
 1533              	.LVL94:
 283:Core/Src/AB1805.c ****   return (value == _alarm_weekday);
 1534              		.loc 1 283 3 is_stmt 1 view .LVU281
 283:Core/Src/AB1805.c ****   return (value == _alarm_weekday);
 1535              		.loc 1 283 20 is_stmt 0 view .LVU282
 1536 0016 FFF7FEFF 		bl	get_weekday_alarm
 1537              	.LVL95:
 283:Core/Src/AB1805.c ****   return (value == _alarm_weekday);
 1538              		.loc 1 283 18 view .LVU283
 1539 001a 2870     		strb	r0, [r5]
 284:Core/Src/AB1805.c **** }
 1540              		.loc 1 284 3 is_stmt 1 view .LVU284
 284:Core/Src/AB1805.c **** }
 1541              		.loc 1 284 17 is_stmt 0 view .LVU285
 1542 001c 2878     		ldrb	r0, [r5]
 1543 001e 001B     		subs	r0, r0, r4
 1544 0020 4342     		rsbs	r3, r0, #0
 1545 0022 5841     		adcs	r0, r0, r3
 1546 0024 C0B2     		uxtb	r0, r0
 285:Core/Src/AB1805.c **** 
 1547              		.loc 1 285 1 view .LVU286
 1548              		@ sp needed
 1549 0026 70BD     		pop	{r4, r5, r6, pc}
 1550              	.L84:
 1551              		.align	2
 1552              	.L83:
 1553 0028 00000000 		.word	_alarm_weekday
 1554              		.cfi_endproc
 1555              	.LFE534:
 1557              		.section	.text.set_date_alarm,"ax",%progbits
 1558              		.align	1
 1559              		.global	set_date_alarm
 1560              		.syntax unified
 1561              		.code	16
 1562              		.thumb_func
 1564              	set_date_alarm:
 1565              	.LVL96:
 1566              	.LFB535:
 288:Core/Src/AB1805.c ****   _alarm_date = value % MAX_DATE;
 1567              		.loc 1 288 1 is_stmt 1 view -0
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 0
 1570              		@ frame_needed = 0, uses_anonymous_args = 0
 288:Core/Src/AB1805.c ****   _alarm_date = value % MAX_DATE;
 1571              		.loc 1 288 1 is_stmt 0 view .LVU288
 1572 0000 70B5     		push	{r4, r5, r6, lr}
 1573              	.LCFI31:
 1574              		.cfi_def_cfa_offset 16
 1575              		.cfi_offset 4, -16
 1576              		.cfi_offset 5, -12
 1577              		.cfi_offset 6, -8
 1578              		.cfi_offset 14, -4
 1579 0002 0400     		movs	r4, r0
 289:Core/Src/AB1805.c ****   write_rtc_register(DATE_ALARM_REGISTER, _alarm_date);
 1580              		.loc 1 289 3 is_stmt 1 view .LVU289
 289:Core/Src/AB1805.c ****   write_rtc_register(DATE_ALARM_REGISTER, _alarm_date);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 81


 1581              		.loc 1 289 15 is_stmt 0 view .LVU290
 1582 0004 3221     		movs	r1, #50
 1583 0006 FFF7FEFF 		bl	__aeabi_uidivmod
 1584              	.LVL97:
 289:Core/Src/AB1805.c ****   write_rtc_register(DATE_ALARM_REGISTER, _alarm_date);
 1585              		.loc 1 289 15 view .LVU291
 1586 000a C9B2     		uxtb	r1, r1
 1587 000c 074D     		ldr	r5, .L86
 1588 000e 2970     		strb	r1, [r5]
 290:Core/Src/AB1805.c ****   _alarm_date = get_date_alarm();
 1589              		.loc 1 290 3 is_stmt 1 view .LVU292
 1590 0010 2978     		ldrb	r1, [r5]
 1591 0012 C9B2     		uxtb	r1, r1
 1592 0014 0C20     		movs	r0, #12
 1593 0016 FFF7FEFF 		bl	write_rtc_register
 1594              	.LVL98:
 291:Core/Src/AB1805.c ****   return (value == _alarm_date);
 1595              		.loc 1 291 3 view .LVU293
 291:Core/Src/AB1805.c ****   return (value == _alarm_date);
 1596              		.loc 1 291 17 is_stmt 0 view .LVU294
 1597 001a FFF7FEFF 		bl	get_date_alarm
 1598              	.LVL99:
 291:Core/Src/AB1805.c ****   return (value == _alarm_date);
 1599              		.loc 1 291 15 view .LVU295
 1600 001e 2870     		strb	r0, [r5]
 292:Core/Src/AB1805.c **** }
 1601              		.loc 1 292 3 is_stmt 1 view .LVU296
 292:Core/Src/AB1805.c **** }
 1602              		.loc 1 292 17 is_stmt 0 view .LVU297
 1603 0020 2878     		ldrb	r0, [r5]
 1604 0022 001B     		subs	r0, r0, r4
 1605 0024 4342     		rsbs	r3, r0, #0
 1606 0026 5841     		adcs	r0, r0, r3
 1607 0028 C0B2     		uxtb	r0, r0
 293:Core/Src/AB1805.c **** 
 1608              		.loc 1 293 1 view .LVU298
 1609              		@ sp needed
 1610 002a 70BD     		pop	{r4, r5, r6, pc}
 1611              	.L87:
 1612              		.align	2
 1613              	.L86:
 1614 002c 00000000 		.word	_alarm_date
 1615              		.cfi_endproc
 1616              	.LFE535:
 1618              		.section	.text.set_month_alarm,"ax",%progbits
 1619              		.align	1
 1620              		.global	set_month_alarm
 1621              		.syntax unified
 1622              		.code	16
 1623              		.thumb_func
 1625              	set_month_alarm:
 1626              	.LVL100:
 1627              	.LFB536:
 296:Core/Src/AB1805.c ****   _alarm_month = value % MAX_MONTH;
 1628              		.loc 1 296 1 is_stmt 1 view -0
 1629              		.cfi_startproc
 1630              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 82


 1631              		@ frame_needed = 0, uses_anonymous_args = 0
 296:Core/Src/AB1805.c ****   _alarm_month = value % MAX_MONTH;
 1632              		.loc 1 296 1 is_stmt 0 view .LVU300
 1633 0000 70B5     		push	{r4, r5, r6, lr}
 1634              	.LCFI32:
 1635              		.cfi_def_cfa_offset 16
 1636              		.cfi_offset 4, -16
 1637              		.cfi_offset 5, -12
 1638              		.cfi_offset 6, -8
 1639              		.cfi_offset 14, -4
 1640 0002 0400     		movs	r4, r0
 297:Core/Src/AB1805.c ****   write_rtc_register(MONTH_ALARM_REGISTER, _alarm_month);
 1641              		.loc 1 297 3 is_stmt 1 view .LVU301
 297:Core/Src/AB1805.c ****   write_rtc_register(MONTH_ALARM_REGISTER, _alarm_month);
 1642              		.loc 1 297 16 is_stmt 0 view .LVU302
 1643 0004 1321     		movs	r1, #19
 1644 0006 FFF7FEFF 		bl	__aeabi_uidivmod
 1645              	.LVL101:
 297:Core/Src/AB1805.c ****   write_rtc_register(MONTH_ALARM_REGISTER, _alarm_month);
 1646              		.loc 1 297 16 view .LVU303
 1647 000a C9B2     		uxtb	r1, r1
 1648 000c 074D     		ldr	r5, .L89
 1649 000e 2970     		strb	r1, [r5]
 298:Core/Src/AB1805.c ****   _alarm_month = get_month_alarm();
 1650              		.loc 1 298 3 is_stmt 1 view .LVU304
 1651 0010 2978     		ldrb	r1, [r5]
 1652 0012 C9B2     		uxtb	r1, r1
 1653 0014 0D20     		movs	r0, #13
 1654 0016 FFF7FEFF 		bl	write_rtc_register
 1655              	.LVL102:
 299:Core/Src/AB1805.c ****   return (value == _alarm_month);
 1656              		.loc 1 299 3 view .LVU305
 299:Core/Src/AB1805.c ****   return (value == _alarm_month);
 1657              		.loc 1 299 18 is_stmt 0 view .LVU306
 1658 001a FFF7FEFF 		bl	get_month_alarm
 1659              	.LVL103:
 299:Core/Src/AB1805.c ****   return (value == _alarm_month);
 1660              		.loc 1 299 16 view .LVU307
 1661 001e 2870     		strb	r0, [r5]
 300:Core/Src/AB1805.c **** }
 1662              		.loc 1 300 3 is_stmt 1 view .LVU308
 300:Core/Src/AB1805.c **** }
 1663              		.loc 1 300 17 is_stmt 0 view .LVU309
 1664 0020 2878     		ldrb	r0, [r5]
 1665 0022 001B     		subs	r0, r0, r4
 1666 0024 4342     		rsbs	r3, r0, #0
 1667 0026 5841     		adcs	r0, r0, r3
 1668 0028 C0B2     		uxtb	r0, r0
 301:Core/Src/AB1805.c **** 
 1669              		.loc 1 301 1 view .LVU310
 1670              		@ sp needed
 1671 002a 70BD     		pop	{r4, r5, r6, pc}
 1672              	.L90:
 1673              		.align	2
 1674              	.L89:
 1675 002c 00000000 		.word	_alarm_month
 1676              		.cfi_endproc
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 83


 1677              	.LFE536:
 1679              		.section	.text.get_date_time,"ax",%progbits
 1680              		.align	1
 1681              		.global	get_date_time
 1682              		.syntax unified
 1683              		.code	16
 1684              		.thumb_func
 1686              	get_date_time:
 1687              	.LFB537:
 346:Core/Src/AB1805.c ****   char *currPos;
 1688              		.loc 1 346 1 is_stmt 1 view -0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 0, uses_anonymous_args = 0
 1692 0000 70B5     		push	{r4, r5, r6, lr}
 1693              	.LCFI33:
 1694              		.cfi_def_cfa_offset 16
 1695              		.cfi_offset 4, -16
 1696              		.cfi_offset 5, -12
 1697              		.cfi_offset 6, -8
 1698              		.cfi_offset 14, -4
 347:Core/Src/AB1805.c ****   currPos = data_time_string;
 1699              		.loc 1 347 3 view .LVU312
 348:Core/Src/AB1805.c ****   *currPos = 0;
 1700              		.loc 1 348 3 view .LVU313
 1701              	.LVL104:
 349:Core/Src/AB1805.c ****   get_datetime();
 1702              		.loc 1 349 3 view .LVU314
 349:Core/Src/AB1805.c ****   get_datetime();
 1703              		.loc 1 349 12 is_stmt 0 view .LVU315
 1704 0002 2B4C     		ldr	r4, .L92
 1705 0004 0023     		movs	r3, #0
 1706 0006 2370     		strb	r3, [r4]
 350:Core/Src/AB1805.c **** 
 1707              		.loc 1 350 3 is_stmt 1 view .LVU316
 1708 0008 FFF7FEFF 		bl	get_datetime
 1709              	.LVL105:
 352:Core/Src/AB1805.c ****   currPos++;
 1710              		.loc 1 352 3 view .LVU317
 352:Core/Src/AB1805.c ****   currPos++;
 1711              		.loc 1 352 30 is_stmt 0 view .LVU318
 1712 000c 2949     		ldr	r1, .L92+4
 1713 000e 0A78     		ldrb	r2, [r1]
 1714 0010 1209     		lsrs	r2, r2, #4
 1715 0012 0F23     		movs	r3, #15
 1716 0014 1A40     		ands	r2, r3
 352:Core/Src/AB1805.c ****   currPos++;
 1717              		.loc 1 352 36 view .LVU319
 1718 0016 3032     		adds	r2, r2, #48
 352:Core/Src/AB1805.c ****   currPos++;
 1719              		.loc 1 352 12 view .LVU320
 1720 0018 2270     		strb	r2, [r4]
 353:Core/Src/AB1805.c ****   *currPos = (_date & 0x0F) + 0x30;
 1721              		.loc 1 353 3 is_stmt 1 view .LVU321
 1722              	.LVL106:
 354:Core/Src/AB1805.c ****   currPos++;
 1723              		.loc 1 354 3 view .LVU322
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 84


 354:Core/Src/AB1805.c ****   currPos++;
 1724              		.loc 1 354 21 is_stmt 0 view .LVU323
 1725 001a 0A78     		ldrb	r2, [r1]
 1726 001c 1A40     		ands	r2, r3
 354:Core/Src/AB1805.c ****   currPos++;
 1727              		.loc 1 354 29 view .LVU324
 1728 001e 3032     		adds	r2, r2, #48
 354:Core/Src/AB1805.c ****   currPos++;
 1729              		.loc 1 354 12 view .LVU325
 1730 0020 6270     		strb	r2, [r4, #1]
 355:Core/Src/AB1805.c **** 
 1731              		.loc 1 355 3 is_stmt 1 view .LVU326
 1732              	.LVL107:
 357:Core/Src/AB1805.c ****   currPos++;
 1733              		.loc 1 357 3 view .LVU327
 357:Core/Src/AB1805.c ****   currPos++;
 1734              		.loc 1 357 12 is_stmt 0 view .LVU328
 1735 0022 2F21     		movs	r1, #47
 1736 0024 A170     		strb	r1, [r4, #2]
 358:Core/Src/AB1805.c **** 
 1737              		.loc 1 358 3 is_stmt 1 view .LVU329
 1738              	.LVL108:
 360:Core/Src/AB1805.c ****   currPos++;
 1739              		.loc 1 360 3 view .LVU330
 360:Core/Src/AB1805.c ****   currPos++;
 1740              		.loc 1 360 31 is_stmt 0 view .LVU331
 1741 0026 2448     		ldr	r0, .L92+8
 1742 0028 0278     		ldrb	r2, [r0]
 1743 002a 1209     		lsrs	r2, r2, #4
 1744 002c 1A40     		ands	r2, r3
 360:Core/Src/AB1805.c ****   currPos++;
 1745              		.loc 1 360 37 view .LVU332
 1746 002e 3032     		adds	r2, r2, #48
 360:Core/Src/AB1805.c ****   currPos++;
 1747              		.loc 1 360 12 view .LVU333
 1748 0030 E270     		strb	r2, [r4, #3]
 361:Core/Src/AB1805.c ****   *currPos = (_month & 0x0F) + 0x30;
 1749              		.loc 1 361 3 is_stmt 1 view .LVU334
 1750              	.LVL109:
 362:Core/Src/AB1805.c ****   currPos++;
 1751              		.loc 1 362 3 view .LVU335
 362:Core/Src/AB1805.c ****   currPos++;
 1752              		.loc 1 362 22 is_stmt 0 view .LVU336
 1753 0032 0278     		ldrb	r2, [r0]
 1754 0034 1A40     		ands	r2, r3
 362:Core/Src/AB1805.c ****   currPos++;
 1755              		.loc 1 362 30 view .LVU337
 1756 0036 3032     		adds	r2, r2, #48
 362:Core/Src/AB1805.c ****   currPos++;
 1757              		.loc 1 362 12 view .LVU338
 1758 0038 2271     		strb	r2, [r4, #4]
 363:Core/Src/AB1805.c **** 
 1759              		.loc 1 363 3 is_stmt 1 view .LVU339
 1760              	.LVL110:
 365:Core/Src/AB1805.c ****   currPos++;
 1761              		.loc 1 365 3 view .LVU340
 365:Core/Src/AB1805.c ****   currPos++;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 85


 1762              		.loc 1 365 12 is_stmt 0 view .LVU341
 1763 003a 6171     		strb	r1, [r4, #5]
 366:Core/Src/AB1805.c **** 
 1764              		.loc 1 366 3 is_stmt 1 view .LVU342
 1765              	.LVL111:
 368:Core/Src/AB1805.c ****   currPos++;
 1766              		.loc 1 368 3 view .LVU343
 368:Core/Src/AB1805.c ****   currPos++;
 1767              		.loc 1 368 30 is_stmt 0 view .LVU344
 1768 003c 1F49     		ldr	r1, .L92+12
 1769 003e 0A78     		ldrb	r2, [r1]
 1770 0040 1209     		lsrs	r2, r2, #4
 1771 0042 1A40     		ands	r2, r3
 368:Core/Src/AB1805.c ****   currPos++;
 1772              		.loc 1 368 36 view .LVU345
 1773 0044 3032     		adds	r2, r2, #48
 368:Core/Src/AB1805.c ****   currPos++;
 1774              		.loc 1 368 12 view .LVU346
 1775 0046 A271     		strb	r2, [r4, #6]
 369:Core/Src/AB1805.c ****   *currPos = (_year & 0x0F) + 0x30;
 1776              		.loc 1 369 3 is_stmt 1 view .LVU347
 1777              	.LVL112:
 370:Core/Src/AB1805.c ****   currPos++;
 1778              		.loc 1 370 3 view .LVU348
 370:Core/Src/AB1805.c ****   currPos++;
 1779              		.loc 1 370 21 is_stmt 0 view .LVU349
 1780 0048 0A78     		ldrb	r2, [r1]
 1781 004a 1A40     		ands	r2, r3
 370:Core/Src/AB1805.c ****   currPos++;
 1782              		.loc 1 370 29 view .LVU350
 1783 004c 3032     		adds	r2, r2, #48
 370:Core/Src/AB1805.c ****   currPos++;
 1784              		.loc 1 370 12 view .LVU351
 1785 004e E271     		strb	r2, [r4, #7]
 371:Core/Src/AB1805.c **** 
 1786              		.loc 1 371 3 is_stmt 1 view .LVU352
 1787              	.LVL113:
 373:Core/Src/AB1805.c ****   currPos++;
 1788              		.loc 1 373 3 view .LVU353
 373:Core/Src/AB1805.c ****   currPos++;
 1789              		.loc 1 373 12 is_stmt 0 view .LVU354
 1790 0050 2021     		movs	r1, #32
 1791 0052 2172     		strb	r1, [r4, #8]
 374:Core/Src/AB1805.c **** 
 1792              		.loc 1 374 3 is_stmt 1 view .LVU355
 1793              	.LVL114:
 376:Core/Src/AB1805.c ****   currPos++;
 1794              		.loc 1 376 3 view .LVU356
 376:Core/Src/AB1805.c ****   currPos++;
 1795              		.loc 1 376 30 is_stmt 0 view .LVU357
 1796 0054 1A48     		ldr	r0, .L92+16
 1797 0056 0278     		ldrb	r2, [r0]
 1798 0058 1209     		lsrs	r2, r2, #4
 1799 005a 1A40     		ands	r2, r3
 376:Core/Src/AB1805.c ****   currPos++;
 1800              		.loc 1 376 36 view .LVU358
 1801 005c 3032     		adds	r2, r2, #48
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 86


 376:Core/Src/AB1805.c ****   currPos++;
 1802              		.loc 1 376 12 view .LVU359
 1803 005e 6272     		strb	r2, [r4, #9]
 377:Core/Src/AB1805.c ****   *currPos = (_hour & 0x0F) + 0x30;
 1804              		.loc 1 377 3 is_stmt 1 view .LVU360
 1805              	.LVL115:
 378:Core/Src/AB1805.c ****   currPos++;
 1806              		.loc 1 378 3 view .LVU361
 378:Core/Src/AB1805.c ****   currPos++;
 1807              		.loc 1 378 21 is_stmt 0 view .LVU362
 1808 0060 0278     		ldrb	r2, [r0]
 1809 0062 1A40     		ands	r2, r3
 378:Core/Src/AB1805.c ****   currPos++;
 1810              		.loc 1 378 29 view .LVU363
 1811 0064 3032     		adds	r2, r2, #48
 378:Core/Src/AB1805.c ****   currPos++;
 1812              		.loc 1 378 12 view .LVU364
 1813 0066 A272     		strb	r2, [r4, #10]
 379:Core/Src/AB1805.c **** 
 1814              		.loc 1 379 3 is_stmt 1 view .LVU365
 1815              	.LVL116:
 381:Core/Src/AB1805.c ****   currPos++;
 1816              		.loc 1 381 3 view .LVU366
 381:Core/Src/AB1805.c ****   currPos++;
 1817              		.loc 1 381 12 is_stmt 0 view .LVU367
 1818 0068 3A20     		movs	r0, #58
 1819 006a E072     		strb	r0, [r4, #11]
 382:Core/Src/AB1805.c **** 
 1820              		.loc 1 382 3 is_stmt 1 view .LVU368
 1821              	.LVL117:
 384:Core/Src/AB1805.c ****   currPos++;
 1822              		.loc 1 384 3 view .LVU369
 384:Core/Src/AB1805.c ****   currPos++;
 1823              		.loc 1 384 32 is_stmt 0 view .LVU370
 1824 006c 154D     		ldr	r5, .L92+20
 1825 006e 2A78     		ldrb	r2, [r5]
 1826 0070 1209     		lsrs	r2, r2, #4
 1827 0072 1A40     		ands	r2, r3
 384:Core/Src/AB1805.c ****   currPos++;
 1828              		.loc 1 384 38 view .LVU371
 1829 0074 3032     		adds	r2, r2, #48
 384:Core/Src/AB1805.c ****   currPos++;
 1830              		.loc 1 384 12 view .LVU372
 1831 0076 2273     		strb	r2, [r4, #12]
 385:Core/Src/AB1805.c ****   *currPos = (_minute & 0x0F) + 0x30;
 1832              		.loc 1 385 3 is_stmt 1 view .LVU373
 1833              	.LVL118:
 386:Core/Src/AB1805.c ****   currPos++;
 1834              		.loc 1 386 3 view .LVU374
 386:Core/Src/AB1805.c ****   currPos++;
 1835              		.loc 1 386 23 is_stmt 0 view .LVU375
 1836 0078 2A78     		ldrb	r2, [r5]
 1837 007a 1A40     		ands	r2, r3
 386:Core/Src/AB1805.c ****   currPos++;
 1838              		.loc 1 386 31 view .LVU376
 1839 007c 3032     		adds	r2, r2, #48
 386:Core/Src/AB1805.c ****   currPos++;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 87


 1840              		.loc 1 386 12 view .LVU377
 1841 007e 6273     		strb	r2, [r4, #13]
 387:Core/Src/AB1805.c **** 
 1842              		.loc 1 387 3 is_stmt 1 view .LVU378
 1843              	.LVL119:
 389:Core/Src/AB1805.c ****   currPos++;
 1844              		.loc 1 389 3 view .LVU379
 389:Core/Src/AB1805.c ****   currPos++;
 1845              		.loc 1 389 12 is_stmt 0 view .LVU380
 1846 0080 A073     		strb	r0, [r4, #14]
 390:Core/Src/AB1805.c **** 
 1847              		.loc 1 390 3 is_stmt 1 view .LVU381
 1848              	.LVL120:
 392:Core/Src/AB1805.c ****   currPos++;
 1849              		.loc 1 392 3 view .LVU382
 392:Core/Src/AB1805.c ****   currPos++;
 1850              		.loc 1 392 32 is_stmt 0 view .LVU383
 1851 0082 1148     		ldr	r0, .L92+24
 1852 0084 0278     		ldrb	r2, [r0]
 1853 0086 1209     		lsrs	r2, r2, #4
 1854 0088 1A40     		ands	r2, r3
 392:Core/Src/AB1805.c ****   currPos++;
 1855              		.loc 1 392 38 view .LVU384
 1856 008a 3032     		adds	r2, r2, #48
 392:Core/Src/AB1805.c ****   currPos++;
 1857              		.loc 1 392 12 view .LVU385
 1858 008c E273     		strb	r2, [r4, #15]
 393:Core/Src/AB1805.c ****   *currPos = (_second & 0x0F) + 0x30;
 1859              		.loc 1 393 3 is_stmt 1 view .LVU386
 1860              	.LVL121:
 394:Core/Src/AB1805.c ****   currPos++;
 1861              		.loc 1 394 3 view .LVU387
 394:Core/Src/AB1805.c ****   currPos++;
 1862              		.loc 1 394 23 is_stmt 0 view .LVU388
 1863 008e 0278     		ldrb	r2, [r0]
 1864 0090 1A40     		ands	r2, r3
 394:Core/Src/AB1805.c ****   currPos++;
 1865              		.loc 1 394 31 view .LVU389
 1866 0092 3032     		adds	r2, r2, #48
 394:Core/Src/AB1805.c ****   currPos++;
 1867              		.loc 1 394 12 view .LVU390
 1868 0094 2274     		strb	r2, [r4, #16]
 395:Core/Src/AB1805.c **** 
 1869              		.loc 1 395 3 is_stmt 1 view .LVU391
 1870              	.LVL122:
 397:Core/Src/AB1805.c ****   currPos++;
 1871              		.loc 1 397 3 view .LVU392
 397:Core/Src/AB1805.c ****   currPos++;
 1872              		.loc 1 397 12 is_stmt 0 view .LVU393
 1873 0096 6174     		strb	r1, [r4, #17]
 398:Core/Src/AB1805.c **** 
 1874              		.loc 1 398 3 is_stmt 1 view .LVU394
 1875              	.LVL123:
 400:Core/Src/AB1805.c ****   currPos++;
 1876              		.loc 1 400 3 view .LVU395
 400:Core/Src/AB1805.c ****   currPos++;
 1877              		.loc 1 400 35 is_stmt 0 view .LVU396
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 88


 1878 0098 0C49     		ldr	r1, .L92+28
 1879 009a 0A78     		ldrb	r2, [r1]
 1880 009c 1209     		lsrs	r2, r2, #4
 1881 009e 1A40     		ands	r2, r3
 400:Core/Src/AB1805.c ****   currPos++;
 1882              		.loc 1 400 41 view .LVU397
 1883 00a0 3032     		adds	r2, r2, #48
 400:Core/Src/AB1805.c ****   currPos++;
 1884              		.loc 1 400 12 view .LVU398
 1885 00a2 A274     		strb	r2, [r4, #18]
 401:Core/Src/AB1805.c ****   *currPos = (_hundredth & 0x0F) + 0x30;
 1886              		.loc 1 401 3 is_stmt 1 view .LVU399
 1887              	.LVL124:
 402:Core/Src/AB1805.c ****   currPos++;
 1888              		.loc 1 402 3 view .LVU400
 402:Core/Src/AB1805.c ****   currPos++;
 1889              		.loc 1 402 26 is_stmt 0 view .LVU401
 1890 00a4 0A78     		ldrb	r2, [r1]
 1891 00a6 1340     		ands	r3, r2
 402:Core/Src/AB1805.c ****   currPos++;
 1892              		.loc 1 402 34 view .LVU402
 1893 00a8 3033     		adds	r3, r3, #48
 402:Core/Src/AB1805.c ****   currPos++;
 1894              		.loc 1 402 12 view .LVU403
 1895 00aa E374     		strb	r3, [r4, #19]
 403:Core/Src/AB1805.c **** 
 1896              		.loc 1 403 3 is_stmt 1 view .LVU404
 1897              	.LVL125:
 405:Core/Src/AB1805.c **** }
 1898              		.loc 1 405 3 view .LVU405
 406:Core/Src/AB1805.c **** 
 1899              		.loc 1 406 1 is_stmt 0 view .LVU406
 1900 00ac 2000     		movs	r0, r4
 1901              		@ sp needed
 1902 00ae 70BD     		pop	{r4, r5, r6, pc}
 1903              	.L93:
 1904              		.align	2
 1905              	.L92:
 1906 00b0 00000000 		.word	data_time_string
 1907 00b4 00000000 		.word	_date
 1908 00b8 00000000 		.word	_month
 1909 00bc 00000000 		.word	_year
 1910 00c0 00000000 		.word	_hour
 1911 00c4 00000000 		.word	_minute
 1912 00c8 00000000 		.word	_second
 1913 00cc 00000000 		.word	_hundredth
 1914              		.cfi_endproc
 1915              	.LFE537:
 1917              		.section	.text.dec_hex,"ax",%progbits
 1918              		.align	1
 1919              		.global	dec_hex
 1920              		.syntax unified
 1921              		.code	16
 1922              		.thumb_func
 1924              	dec_hex:
 1925              	.LVL126:
 1926              	.LFB538:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 89


 409:Core/Src/AB1805.c ****   uint8_t ret;
 1927              		.loc 1 409 1 is_stmt 1 view -0
 1928              		.cfi_startproc
 1929              		@ args = 0, pretend = 0, frame = 0
 1930              		@ frame_needed = 0, uses_anonymous_args = 0
 1931              		@ link register save eliminated.
 410:Core/Src/AB1805.c ****   ret = (tens << 4) + digits;
 1932              		.loc 1 410 3 view .LVU408
 411:Core/Src/AB1805.c ****   return ret;
 1933              		.loc 1 411 3 view .LVU409
 411:Core/Src/AB1805.c ****   return ret;
 1934              		.loc 1 411 15 is_stmt 0 view .LVU410
 1935 0000 0001     		lsls	r0, r0, #4
 1936              	.LVL127:
 411:Core/Src/AB1805.c ****   return ret;
 1937              		.loc 1 411 15 view .LVU411
 1938 0002 C0B2     		uxtb	r0, r0
 411:Core/Src/AB1805.c ****   return ret;
 1939              		.loc 1 411 7 view .LVU412
 1940 0004 4018     		adds	r0, r0, r1
 1941 0006 C0B2     		uxtb	r0, r0
 1942              	.LVL128:
 412:Core/Src/AB1805.c **** }
 1943              		.loc 1 412 3 is_stmt 1 view .LVU413
 413:Core/Src/AB1805.c **** 
 1944              		.loc 1 413 1 is_stmt 0 view .LVU414
 1945              		@ sp needed
 1946 0008 7047     		bx	lr
 1947              		.cfi_endproc
 1948              	.LFE538:
 1950              		.section	.text.hex_dec,"ax",%progbits
 1951              		.align	1
 1952              		.global	hex_dec
 1953              		.syntax unified
 1954              		.code	16
 1955              		.thumb_func
 1957              	hex_dec:
 1958              	.LVL129:
 1959              	.LFB539:
 416:Core/Src/AB1805.c ****   uint8_t ret;
 1960              		.loc 1 416 1 is_stmt 1 view -0
 1961              		.cfi_startproc
 1962              		@ args = 0, pretend = 0, frame = 0
 1963              		@ frame_needed = 0, uses_anonymous_args = 0
 1964              		@ link register save eliminated.
 416:Core/Src/AB1805.c ****   uint8_t ret;
 1965              		.loc 1 416 1 is_stmt 0 view .LVU416
 1966 0000 0200     		movs	r2, r0
 417:Core/Src/AB1805.c ****   ret = ((hex >> 4) & 0xF * 10) + (hex & 0xF);
 1967              		.loc 1 417 3 is_stmt 1 view .LVU417
 418:Core/Src/AB1805.c ****   return ret;
 1968              		.loc 1 418 3 view .LVU418
 418:Core/Src/AB1805.c ****   return ret;
 1969              		.loc 1 418 21 is_stmt 0 view .LVU419
 1970 0002 0009     		lsrs	r0, r0, #4
 1971              	.LVL130:
 418:Core/Src/AB1805.c ****   return ret;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 90


 1972              		.loc 1 418 21 view .LVU420
 1973 0004 6923     		movs	r3, #105
 1974 0006 9843     		bics	r0, r3
 418:Core/Src/AB1805.c ****   return ret;
 1975              		.loc 1 418 40 view .LVU421
 1976 0008 0F21     		movs	r1, #15
 1977 000a 0A40     		ands	r2, r1
 418:Core/Src/AB1805.c ****   return ret;
 1978              		.loc 1 418 7 view .LVU422
 1979 000c 8018     		adds	r0, r0, r2
 1980              	.LVL131:
 419:Core/Src/AB1805.c **** }
 1981              		.loc 1 419 3 is_stmt 1 view .LVU423
 420:Core/Src/AB1805.c **** 
 1982              		.loc 1 420 1 is_stmt 0 view .LVU424
 1983              		@ sp needed
 1984 000e 7047     		bx	lr
 1985              		.cfi_endproc
 1986              	.LFE539:
 1988              		.section	.text.get_status,"ax",%progbits
 1989              		.align	1
 1990              		.global	get_status
 1991              		.syntax unified
 1992              		.code	16
 1993              		.thumb_func
 1995              	get_status:
 1996              	.LFB540:
 424:Core/Src/AB1805.c ****   _status = get_rtc_data(STATU_REGISTER, STATUS_READ_ALL_MASK);
 1997              		.loc 1 424 1 is_stmt 1 view -0
 1998              		.cfi_startproc
 1999              		@ args = 0, pretend = 0, frame = 0
 2000              		@ frame_needed = 0, uses_anonymous_args = 0
 2001 0000 10B5     		push	{r4, lr}
 2002              	.LCFI34:
 2003              		.cfi_def_cfa_offset 8
 2004              		.cfi_offset 4, -8
 2005              		.cfi_offset 14, -4
 425:Core/Src/AB1805.c ****   return _status;
 2006              		.loc 1 425 3 view .LVU426
 425:Core/Src/AB1805.c ****   return _status;
 2007              		.loc 1 425 13 is_stmt 0 view .LVU427
 2008 0002 FF21     		movs	r1, #255
 2009 0004 0F20     		movs	r0, #15
 2010 0006 FFF7FEFF 		bl	get_rtc_data
 2011              	.LVL132:
 425:Core/Src/AB1805.c ****   return _status;
 2012              		.loc 1 425 11 view .LVU428
 2013 000a 014B     		ldr	r3, .L97
 2014 000c 1870     		strb	r0, [r3]
 426:Core/Src/AB1805.c **** }
 2015              		.loc 1 426 3 is_stmt 1 view .LVU429
 427:Core/Src/AB1805.c **** 
 2016              		.loc 1 427 1 is_stmt 0 view .LVU430
 2017              		@ sp needed
 2018 000e 10BD     		pop	{r4, pc}
 2019              	.L98:
 2020              		.align	2
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 91


 2021              	.L97:
 2022 0010 00000000 		.word	_status
 2023              		.cfi_endproc
 2024              	.LFE540:
 2026              		.section	.text.get_CB_status,"ax",%progbits
 2027              		.align	1
 2028              		.global	get_CB_status
 2029              		.syntax unified
 2030              		.code	16
 2031              		.thumb_func
 2033              	get_CB_status:
 2034              	.LFB541:
 430:Core/Src/AB1805.c ****   get_status();
 2035              		.loc 1 430 1 is_stmt 1 view -0
 2036              		.cfi_startproc
 2037              		@ args = 0, pretend = 0, frame = 0
 2038              		@ frame_needed = 0, uses_anonymous_args = 0
 2039 0000 10B5     		push	{r4, lr}
 2040              	.LCFI35:
 2041              		.cfi_def_cfa_offset 8
 2042              		.cfi_offset 4, -8
 2043              		.cfi_offset 14, -4
 431:Core/Src/AB1805.c ****   return (_status & (STATUS_CB_MASK > 7));
 2044              		.loc 1 431 3 view .LVU432
 2045 0002 FFF7FEFF 		bl	get_status
 2046              	.LVL133:
 432:Core/Src/AB1805.c **** };
 2047              		.loc 1 432 3 view .LVU433
 432:Core/Src/AB1805.c **** };
 2048              		.loc 1 432 19 is_stmt 0 view .LVU434
 2049 0006 024B     		ldr	r3, .L100
 2050 0008 1B78     		ldrb	r3, [r3]
 2051 000a 0120     		movs	r0, #1
 2052 000c 1840     		ands	r0, r3
 433:Core/Src/AB1805.c **** 
 2053              		.loc 1 433 1 view .LVU435
 2054              		@ sp needed
 2055 000e 10BD     		pop	{r4, pc}
 2056              	.L101:
 2057              		.align	2
 2058              	.L100:
 2059 0010 00000000 		.word	_status
 2060              		.cfi_endproc
 2061              	.LFE541:
 2063              		.section	.text.get_BAT_status,"ax",%progbits
 2064              		.align	1
 2065              		.global	get_BAT_status
 2066              		.syntax unified
 2067              		.code	16
 2068              		.thumb_func
 2070              	get_BAT_status:
 2071              	.LFB542:
 436:Core/Src/AB1805.c ****   get_status();
 2072              		.loc 1 436 1 is_stmt 1 view -0
 2073              		.cfi_startproc
 2074              		@ args = 0, pretend = 0, frame = 0
 2075              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 92


 2076 0000 10B5     		push	{r4, lr}
 2077              	.LCFI36:
 2078              		.cfi_def_cfa_offset 8
 2079              		.cfi_offset 4, -8
 2080              		.cfi_offset 14, -4
 437:Core/Src/AB1805.c ****   return (_status & (STATUS_BAT_MASK > 6));
 2081              		.loc 1 437 3 view .LVU437
 2082 0002 FFF7FEFF 		bl	get_status
 2083              	.LVL134:
 438:Core/Src/AB1805.c **** };
 2084              		.loc 1 438 3 view .LVU438
 438:Core/Src/AB1805.c **** };
 2085              		.loc 1 438 19 is_stmt 0 view .LVU439
 2086 0006 024B     		ldr	r3, .L103
 2087 0008 1B78     		ldrb	r3, [r3]
 2088 000a 0120     		movs	r0, #1
 2089 000c 1840     		ands	r0, r3
 439:Core/Src/AB1805.c **** 
 2090              		.loc 1 439 1 view .LVU440
 2091              		@ sp needed
 2092 000e 10BD     		pop	{r4, pc}
 2093              	.L104:
 2094              		.align	2
 2095              	.L103:
 2096 0010 00000000 		.word	_status
 2097              		.cfi_endproc
 2098              	.LFE542:
 2100              		.section	.text.get_WDT_status,"ax",%progbits
 2101              		.align	1
 2102              		.global	get_WDT_status
 2103              		.syntax unified
 2104              		.code	16
 2105              		.thumb_func
 2107              	get_WDT_status:
 2108              	.LFB543:
 442:Core/Src/AB1805.c ****   get_status();
 2109              		.loc 1 442 1 is_stmt 1 view -0
 2110              		.cfi_startproc
 2111              		@ args = 0, pretend = 0, frame = 0
 2112              		@ frame_needed = 0, uses_anonymous_args = 0
 2113 0000 10B5     		push	{r4, lr}
 2114              	.LCFI37:
 2115              		.cfi_def_cfa_offset 8
 2116              		.cfi_offset 4, -8
 2117              		.cfi_offset 14, -4
 443:Core/Src/AB1805.c ****   return (_status & (STATUS_WDT_MASK > 5));
 2118              		.loc 1 443 3 view .LVU442
 2119 0002 FFF7FEFF 		bl	get_status
 2120              	.LVL135:
 444:Core/Src/AB1805.c **** };
 2121              		.loc 1 444 3 view .LVU443
 444:Core/Src/AB1805.c **** };
 2122              		.loc 1 444 19 is_stmt 0 view .LVU444
 2123 0006 024B     		ldr	r3, .L106
 2124 0008 1B78     		ldrb	r3, [r3]
 2125 000a 0120     		movs	r0, #1
 2126 000c 1840     		ands	r0, r3
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 93


 445:Core/Src/AB1805.c **** 
 2127              		.loc 1 445 1 view .LVU445
 2128              		@ sp needed
 2129 000e 10BD     		pop	{r4, pc}
 2130              	.L107:
 2131              		.align	2
 2132              	.L106:
 2133 0010 00000000 		.word	_status
 2134              		.cfi_endproc
 2135              	.LFE543:
 2137              		.section	.text.get_BL_status,"ax",%progbits
 2138              		.align	1
 2139              		.global	get_BL_status
 2140              		.syntax unified
 2141              		.code	16
 2142              		.thumb_func
 2144              	get_BL_status:
 2145              	.LFB544:
 448:Core/Src/AB1805.c ****   get_status();
 2146              		.loc 1 448 1 is_stmt 1 view -0
 2147              		.cfi_startproc
 2148              		@ args = 0, pretend = 0, frame = 0
 2149              		@ frame_needed = 0, uses_anonymous_args = 0
 2150 0000 10B5     		push	{r4, lr}
 2151              	.LCFI38:
 2152              		.cfi_def_cfa_offset 8
 2153              		.cfi_offset 4, -8
 2154              		.cfi_offset 14, -4
 449:Core/Src/AB1805.c ****   return (_status & (STATUS_BL_MASK > 4));
 2155              		.loc 1 449 3 view .LVU447
 2156 0002 FFF7FEFF 		bl	get_status
 2157              	.LVL136:
 450:Core/Src/AB1805.c **** };
 2158              		.loc 1 450 3 view .LVU448
 450:Core/Src/AB1805.c **** };
 2159              		.loc 1 450 19 is_stmt 0 view .LVU449
 2160 0006 024B     		ldr	r3, .L109
 2161 0008 1B78     		ldrb	r3, [r3]
 2162 000a 0120     		movs	r0, #1
 2163 000c 1840     		ands	r0, r3
 451:Core/Src/AB1805.c **** 
 2164              		.loc 1 451 1 view .LVU450
 2165              		@ sp needed
 2166 000e 10BD     		pop	{r4, pc}
 2167              	.L110:
 2168              		.align	2
 2169              	.L109:
 2170 0010 00000000 		.word	_status
 2171              		.cfi_endproc
 2172              	.LFE544:
 2174              		.section	.text.get_TIM_status,"ax",%progbits
 2175              		.align	1
 2176              		.global	get_TIM_status
 2177              		.syntax unified
 2178              		.code	16
 2179              		.thumb_func
 2181              	get_TIM_status:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 94


 2182              	.LFB545:
 454:Core/Src/AB1805.c ****   get_status();
 2183              		.loc 1 454 1 is_stmt 1 view -0
 2184              		.cfi_startproc
 2185              		@ args = 0, pretend = 0, frame = 0
 2186              		@ frame_needed = 0, uses_anonymous_args = 0
 2187 0000 10B5     		push	{r4, lr}
 2188              	.LCFI39:
 2189              		.cfi_def_cfa_offset 8
 2190              		.cfi_offset 4, -8
 2191              		.cfi_offset 14, -4
 455:Core/Src/AB1805.c ****   return (_status & (STATUS_TIM_MASK > 3));
 2192              		.loc 1 455 3 view .LVU452
 2193 0002 FFF7FEFF 		bl	get_status
 2194              	.LVL137:
 456:Core/Src/AB1805.c **** };
 2195              		.loc 1 456 3 view .LVU453
 456:Core/Src/AB1805.c **** };
 2196              		.loc 1 456 19 is_stmt 0 view .LVU454
 2197 0006 024B     		ldr	r3, .L112
 2198 0008 1B78     		ldrb	r3, [r3]
 2199 000a 0120     		movs	r0, #1
 2200 000c 1840     		ands	r0, r3
 457:Core/Src/AB1805.c **** 
 2201              		.loc 1 457 1 view .LVU455
 2202              		@ sp needed
 2203 000e 10BD     		pop	{r4, pc}
 2204              	.L113:
 2205              		.align	2
 2206              	.L112:
 2207 0010 00000000 		.word	_status
 2208              		.cfi_endproc
 2209              	.LFE545:
 2211              		.section	.text.get_ALM_status,"ax",%progbits
 2212              		.align	1
 2213              		.global	get_ALM_status
 2214              		.syntax unified
 2215              		.code	16
 2216              		.thumb_func
 2218              	get_ALM_status:
 2219              	.LFB546:
 460:Core/Src/AB1805.c ****   get_status();
 2220              		.loc 1 460 1 is_stmt 1 view -0
 2221              		.cfi_startproc
 2222              		@ args = 0, pretend = 0, frame = 0
 2223              		@ frame_needed = 0, uses_anonymous_args = 0
 2224 0000 10B5     		push	{r4, lr}
 2225              	.LCFI40:
 2226              		.cfi_def_cfa_offset 8
 2227              		.cfi_offset 4, -8
 2228              		.cfi_offset 14, -4
 461:Core/Src/AB1805.c ****   return (_status & (STATUS_ALM_MASK > 2));
 2229              		.loc 1 461 3 view .LVU457
 2230 0002 FFF7FEFF 		bl	get_status
 2231              	.LVL138:
 462:Core/Src/AB1805.c **** };
 2232              		.loc 1 462 3 view .LVU458
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 95


 462:Core/Src/AB1805.c **** };
 2233              		.loc 1 462 19 is_stmt 0 view .LVU459
 2234 0006 024B     		ldr	r3, .L115
 2235 0008 1B78     		ldrb	r3, [r3]
 2236 000a 0120     		movs	r0, #1
 2237 000c 1840     		ands	r0, r3
 463:Core/Src/AB1805.c **** 
 2238              		.loc 1 463 1 view .LVU460
 2239              		@ sp needed
 2240 000e 10BD     		pop	{r4, pc}
 2241              	.L116:
 2242              		.align	2
 2243              	.L115:
 2244 0010 00000000 		.word	_status
 2245              		.cfi_endproc
 2246              	.LFE546:
 2248              		.section	.text.get_EX2_status,"ax",%progbits
 2249              		.align	1
 2250              		.global	get_EX2_status
 2251              		.syntax unified
 2252              		.code	16
 2253              		.thumb_func
 2255              	get_EX2_status:
 2256              	.LFB547:
 466:Core/Src/AB1805.c ****   get_status();
 2257              		.loc 1 466 1 is_stmt 1 view -0
 2258              		.cfi_startproc
 2259              		@ args = 0, pretend = 0, frame = 0
 2260              		@ frame_needed = 0, uses_anonymous_args = 0
 2261 0000 10B5     		push	{r4, lr}
 2262              	.LCFI41:
 2263              		.cfi_def_cfa_offset 8
 2264              		.cfi_offset 4, -8
 2265              		.cfi_offset 14, -4
 467:Core/Src/AB1805.c ****   return (_status & (STATUS_EX2_MASK > 1));
 2266              		.loc 1 467 3 view .LVU462
 2267 0002 FFF7FEFF 		bl	get_status
 2268              	.LVL139:
 468:Core/Src/AB1805.c **** };
 2269              		.loc 1 468 3 view .LVU463
 468:Core/Src/AB1805.c **** };
 2270              		.loc 1 468 19 is_stmt 0 view .LVU464
 2271 0006 024B     		ldr	r3, .L118
 2272 0008 1B78     		ldrb	r3, [r3]
 2273 000a 0120     		movs	r0, #1
 2274 000c 1840     		ands	r0, r3
 469:Core/Src/AB1805.c **** 
 2275              		.loc 1 469 1 view .LVU465
 2276              		@ sp needed
 2277 000e 10BD     		pop	{r4, pc}
 2278              	.L119:
 2279              		.align	2
 2280              	.L118:
 2281 0010 00000000 		.word	_status
 2282              		.cfi_endproc
 2283              	.LFE547:
 2285              		.section	.text.get_EX1_status,"ax",%progbits
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 96


 2286              		.align	1
 2287              		.global	get_EX1_status
 2288              		.syntax unified
 2289              		.code	16
 2290              		.thumb_func
 2292              	get_EX1_status:
 2293              	.LFB548:
 472:Core/Src/AB1805.c ****   get_status();
 2294              		.loc 1 472 1 is_stmt 1 view -0
 2295              		.cfi_startproc
 2296              		@ args = 0, pretend = 0, frame = 0
 2297              		@ frame_needed = 0, uses_anonymous_args = 0
 2298 0000 10B5     		push	{r4, lr}
 2299              	.LCFI42:
 2300              		.cfi_def_cfa_offset 8
 2301              		.cfi_offset 4, -8
 2302              		.cfi_offset 14, -4
 473:Core/Src/AB1805.c ****   return (_status & (STATUS_EX1_MASK));
 2303              		.loc 1 473 3 view .LVU467
 2304 0002 FFF7FEFF 		bl	get_status
 2305              	.LVL140:
 474:Core/Src/AB1805.c **** };
 2306              		.loc 1 474 3 view .LVU468
 474:Core/Src/AB1805.c **** };
 2307              		.loc 1 474 19 is_stmt 0 view .LVU469
 2308 0006 024B     		ldr	r3, .L121
 2309 0008 1B78     		ldrb	r3, [r3]
 2310 000a 0120     		movs	r0, #1
 2311 000c 1840     		ands	r0, r3
 475:Core/Src/AB1805.c **** 
 2312              		.loc 1 475 1 view .LVU470
 2313              		@ sp needed
 2314 000e 10BD     		pop	{r4, pc}
 2315              	.L122:
 2316              		.align	2
 2317              	.L121:
 2318 0010 00000000 		.word	_status
 2319              		.cfi_endproc
 2320              	.LFE548:
 2322              		.section	.text.clean_CB_status,"ax",%progbits
 2323              		.align	1
 2324              		.global	clean_CB_status
 2325              		.syntax unified
 2326              		.code	16
 2327              		.thumb_func
 2329              	clean_CB_status:
 2330              	.LFB549:
 478:Core/Src/AB1805.c ****   uint8_t c1;
 2331              		.loc 1 478 1 is_stmt 1 view -0
 2332              		.cfi_startproc
 2333              		@ args = 0, pretend = 0, frame = 0
 2334              		@ frame_needed = 0, uses_anonymous_args = 0
 2335 0000 10B5     		push	{r4, lr}
 2336              	.LCFI43:
 2337              		.cfi_def_cfa_offset 8
 2338              		.cfi_offset 4, -8
 2339              		.cfi_offset 14, -4
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 97


 479:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2340              		.loc 1 479 3 view .LVU472
 480:Core/Src/AB1805.c ****   c1 &= ~STATUS_CB_MASK;
 2341              		.loc 1 480 3 view .LVU473
 480:Core/Src/AB1805.c ****   c1 &= ~STATUS_CB_MASK;
 2342              		.loc 1 480 8 is_stmt 0 view .LVU474
 2343 0002 0F20     		movs	r0, #15
 2344 0004 FFF7FEFF 		bl	read_rtc_register
 2345              	.LVL141:
 481:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2346              		.loc 1 481 3 is_stmt 1 view .LVU475
 481:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2347              		.loc 1 481 6 is_stmt 0 view .LVU476
 2348 0008 7F21     		movs	r1, #127
 2349 000a 0140     		ands	r1, r0
 2350              	.LVL142:
 482:Core/Src/AB1805.c ****   return 1;
 2351              		.loc 1 482 3 is_stmt 1 view .LVU477
 2352 000c 0F20     		movs	r0, #15
 2353 000e FFF7FEFF 		bl	write_rtc_register
 2354              	.LVL143:
 483:Core/Src/AB1805.c **** }
 2355              		.loc 1 483 3 view .LVU478
 484:Core/Src/AB1805.c **** 
 2356              		.loc 1 484 1 is_stmt 0 view .LVU479
 2357 0012 0120     		movs	r0, #1
 2358              		@ sp needed
 2359 0014 10BD     		pop	{r4, pc}
 2360              		.cfi_endproc
 2361              	.LFE549:
 2363              		.section	.text.clean_BAT_status,"ax",%progbits
 2364              		.align	1
 2365              		.global	clean_BAT_status
 2366              		.syntax unified
 2367              		.code	16
 2368              		.thumb_func
 2370              	clean_BAT_status:
 2371              	.LFB550:
 487:Core/Src/AB1805.c ****   uint8_t c1;
 2372              		.loc 1 487 1 is_stmt 1 view -0
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 0
 2375              		@ frame_needed = 0, uses_anonymous_args = 0
 2376 0000 10B5     		push	{r4, lr}
 2377              	.LCFI44:
 2378              		.cfi_def_cfa_offset 8
 2379              		.cfi_offset 4, -8
 2380              		.cfi_offset 14, -4
 488:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2381              		.loc 1 488 3 view .LVU481
 489:Core/Src/AB1805.c ****   c1 &= ~STATUS_BAT_MASK;
 2382              		.loc 1 489 3 view .LVU482
 489:Core/Src/AB1805.c ****   c1 &= ~STATUS_BAT_MASK;
 2383              		.loc 1 489 8 is_stmt 0 view .LVU483
 2384 0002 0F20     		movs	r0, #15
 2385 0004 FFF7FEFF 		bl	read_rtc_register
 2386              	.LVL144:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 98


 490:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2387              		.loc 1 490 3 is_stmt 1 view .LVU484
 490:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2388              		.loc 1 490 6 is_stmt 0 view .LVU485
 2389 0008 4023     		movs	r3, #64
 2390 000a 9843     		bics	r0, r3
 2391              	.LVL145:
 490:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2392              		.loc 1 490 6 view .LVU486
 2393 000c C1B2     		uxtb	r1, r0
 2394              	.LVL146:
 491:Core/Src/AB1805.c ****   return 1;
 2395              		.loc 1 491 3 is_stmt 1 view .LVU487
 2396 000e 0F20     		movs	r0, #15
 2397 0010 FFF7FEFF 		bl	write_rtc_register
 2398              	.LVL147:
 492:Core/Src/AB1805.c **** }
 2399              		.loc 1 492 3 view .LVU488
 493:Core/Src/AB1805.c **** 
 2400              		.loc 1 493 1 is_stmt 0 view .LVU489
 2401 0014 0120     		movs	r0, #1
 2402              		@ sp needed
 2403 0016 10BD     		pop	{r4, pc}
 2404              		.cfi_endproc
 2405              	.LFE550:
 2407              		.section	.text.clean_WDT_status,"ax",%progbits
 2408              		.align	1
 2409              		.global	clean_WDT_status
 2410              		.syntax unified
 2411              		.code	16
 2412              		.thumb_func
 2414              	clean_WDT_status:
 2415              	.LFB551:
 496:Core/Src/AB1805.c ****   uint8_t c1;
 2416              		.loc 1 496 1 is_stmt 1 view -0
 2417              		.cfi_startproc
 2418              		@ args = 0, pretend = 0, frame = 0
 2419              		@ frame_needed = 0, uses_anonymous_args = 0
 2420 0000 10B5     		push	{r4, lr}
 2421              	.LCFI45:
 2422              		.cfi_def_cfa_offset 8
 2423              		.cfi_offset 4, -8
 2424              		.cfi_offset 14, -4
 497:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2425              		.loc 1 497 3 view .LVU491
 498:Core/Src/AB1805.c ****   c1 &= ~STATUS_WDT_MASK;
 2426              		.loc 1 498 3 view .LVU492
 498:Core/Src/AB1805.c ****   c1 &= ~STATUS_WDT_MASK;
 2427              		.loc 1 498 8 is_stmt 0 view .LVU493
 2428 0002 0F20     		movs	r0, #15
 2429 0004 FFF7FEFF 		bl	read_rtc_register
 2430              	.LVL148:
 499:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2431              		.loc 1 499 3 is_stmt 1 view .LVU494
 499:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2432              		.loc 1 499 6 is_stmt 0 view .LVU495
 2433 0008 2023     		movs	r3, #32
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 99


 2434 000a 9843     		bics	r0, r3
 2435              	.LVL149:
 499:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2436              		.loc 1 499 6 view .LVU496
 2437 000c C1B2     		uxtb	r1, r0
 2438              	.LVL150:
 500:Core/Src/AB1805.c ****   return 1;
 2439              		.loc 1 500 3 is_stmt 1 view .LVU497
 2440 000e 0F20     		movs	r0, #15
 2441 0010 FFF7FEFF 		bl	write_rtc_register
 2442              	.LVL151:
 501:Core/Src/AB1805.c **** }
 2443              		.loc 1 501 3 view .LVU498
 502:Core/Src/AB1805.c **** 
 2444              		.loc 1 502 1 is_stmt 0 view .LVU499
 2445 0014 0120     		movs	r0, #1
 2446              		@ sp needed
 2447 0016 10BD     		pop	{r4, pc}
 2448              		.cfi_endproc
 2449              	.LFE551:
 2451              		.section	.text.clean_BL_status,"ax",%progbits
 2452              		.align	1
 2453              		.global	clean_BL_status
 2454              		.syntax unified
 2455              		.code	16
 2456              		.thumb_func
 2458              	clean_BL_status:
 2459              	.LFB552:
 505:Core/Src/AB1805.c ****   uint8_t c1;
 2460              		.loc 1 505 1 is_stmt 1 view -0
 2461              		.cfi_startproc
 2462              		@ args = 0, pretend = 0, frame = 0
 2463              		@ frame_needed = 0, uses_anonymous_args = 0
 2464 0000 10B5     		push	{r4, lr}
 2465              	.LCFI46:
 2466              		.cfi_def_cfa_offset 8
 2467              		.cfi_offset 4, -8
 2468              		.cfi_offset 14, -4
 506:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2469              		.loc 1 506 3 view .LVU501
 507:Core/Src/AB1805.c ****   c1 &= ~STATUS_BL_MASK;
 2470              		.loc 1 507 3 view .LVU502
 507:Core/Src/AB1805.c ****   c1 &= ~STATUS_BL_MASK;
 2471              		.loc 1 507 8 is_stmt 0 view .LVU503
 2472 0002 0F20     		movs	r0, #15
 2473 0004 FFF7FEFF 		bl	read_rtc_register
 2474              	.LVL152:
 508:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2475              		.loc 1 508 3 is_stmt 1 view .LVU504
 508:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2476              		.loc 1 508 6 is_stmt 0 view .LVU505
 2477 0008 1023     		movs	r3, #16
 2478 000a 9843     		bics	r0, r3
 2479              	.LVL153:
 508:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2480              		.loc 1 508 6 view .LVU506
 2481 000c C1B2     		uxtb	r1, r0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 100


 2482              	.LVL154:
 509:Core/Src/AB1805.c ****   return 1;
 2483              		.loc 1 509 3 is_stmt 1 view .LVU507
 2484 000e 0F20     		movs	r0, #15
 2485 0010 FFF7FEFF 		bl	write_rtc_register
 2486              	.LVL155:
 510:Core/Src/AB1805.c **** }
 2487              		.loc 1 510 3 view .LVU508
 511:Core/Src/AB1805.c **** 
 2488              		.loc 1 511 1 is_stmt 0 view .LVU509
 2489 0014 0120     		movs	r0, #1
 2490              		@ sp needed
 2491 0016 10BD     		pop	{r4, pc}
 2492              		.cfi_endproc
 2493              	.LFE552:
 2495              		.section	.text.clean_TIM_status,"ax",%progbits
 2496              		.align	1
 2497              		.global	clean_TIM_status
 2498              		.syntax unified
 2499              		.code	16
 2500              		.thumb_func
 2502              	clean_TIM_status:
 2503              	.LFB553:
 514:Core/Src/AB1805.c ****   uint8_t c1;
 2504              		.loc 1 514 1 is_stmt 1 view -0
 2505              		.cfi_startproc
 2506              		@ args = 0, pretend = 0, frame = 0
 2507              		@ frame_needed = 0, uses_anonymous_args = 0
 2508 0000 10B5     		push	{r4, lr}
 2509              	.LCFI47:
 2510              		.cfi_def_cfa_offset 8
 2511              		.cfi_offset 4, -8
 2512              		.cfi_offset 14, -4
 515:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2513              		.loc 1 515 3 view .LVU511
 516:Core/Src/AB1805.c ****   c1 &= ~STATUS_TIM_MASK;
 2514              		.loc 1 516 3 view .LVU512
 516:Core/Src/AB1805.c ****   c1 &= ~STATUS_TIM_MASK;
 2515              		.loc 1 516 8 is_stmt 0 view .LVU513
 2516 0002 0F20     		movs	r0, #15
 2517 0004 FFF7FEFF 		bl	read_rtc_register
 2518              	.LVL156:
 517:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2519              		.loc 1 517 3 is_stmt 1 view .LVU514
 517:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2520              		.loc 1 517 6 is_stmt 0 view .LVU515
 2521 0008 0823     		movs	r3, #8
 2522 000a 9843     		bics	r0, r3
 2523              	.LVL157:
 517:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2524              		.loc 1 517 6 view .LVU516
 2525 000c C1B2     		uxtb	r1, r0
 2526              	.LVL158:
 518:Core/Src/AB1805.c ****   return 1;
 2527              		.loc 1 518 3 is_stmt 1 view .LVU517
 2528 000e 0F20     		movs	r0, #15
 2529 0010 FFF7FEFF 		bl	write_rtc_register
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 101


 2530              	.LVL159:
 519:Core/Src/AB1805.c **** }
 2531              		.loc 1 519 3 view .LVU518
 520:Core/Src/AB1805.c **** 
 2532              		.loc 1 520 1 is_stmt 0 view .LVU519
 2533 0014 0120     		movs	r0, #1
 2534              		@ sp needed
 2535 0016 10BD     		pop	{r4, pc}
 2536              		.cfi_endproc
 2537              	.LFE553:
 2539              		.section	.text.clean_ALM_status,"ax",%progbits
 2540              		.align	1
 2541              		.global	clean_ALM_status
 2542              		.syntax unified
 2543              		.code	16
 2544              		.thumb_func
 2546              	clean_ALM_status:
 2547              	.LFB554:
 523:Core/Src/AB1805.c ****   uint8_t c1;
 2548              		.loc 1 523 1 is_stmt 1 view -0
 2549              		.cfi_startproc
 2550              		@ args = 0, pretend = 0, frame = 0
 2551              		@ frame_needed = 0, uses_anonymous_args = 0
 2552 0000 10B5     		push	{r4, lr}
 2553              	.LCFI48:
 2554              		.cfi_def_cfa_offset 8
 2555              		.cfi_offset 4, -8
 2556              		.cfi_offset 14, -4
 524:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2557              		.loc 1 524 3 view .LVU521
 525:Core/Src/AB1805.c ****   c1 &= ~STATUS_ALM_MASK;
 2558              		.loc 1 525 3 view .LVU522
 525:Core/Src/AB1805.c ****   c1 &= ~STATUS_ALM_MASK;
 2559              		.loc 1 525 8 is_stmt 0 view .LVU523
 2560 0002 0F20     		movs	r0, #15
 2561 0004 FFF7FEFF 		bl	read_rtc_register
 2562              	.LVL160:
 526:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2563              		.loc 1 526 3 is_stmt 1 view .LVU524
 526:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2564              		.loc 1 526 6 is_stmt 0 view .LVU525
 2565 0008 0423     		movs	r3, #4
 2566 000a 9843     		bics	r0, r3
 2567              	.LVL161:
 526:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2568              		.loc 1 526 6 view .LVU526
 2569 000c C1B2     		uxtb	r1, r0
 2570              	.LVL162:
 527:Core/Src/AB1805.c ****   return 1;
 2571              		.loc 1 527 3 is_stmt 1 view .LVU527
 2572 000e 0F20     		movs	r0, #15
 2573 0010 FFF7FEFF 		bl	write_rtc_register
 2574              	.LVL163:
 528:Core/Src/AB1805.c **** }
 2575              		.loc 1 528 3 view .LVU528
 529:Core/Src/AB1805.c **** 
 2576              		.loc 1 529 1 is_stmt 0 view .LVU529
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 102


 2577 0014 0120     		movs	r0, #1
 2578              		@ sp needed
 2579 0016 10BD     		pop	{r4, pc}
 2580              		.cfi_endproc
 2581              	.LFE554:
 2583              		.section	.text.clean_EX2_status,"ax",%progbits
 2584              		.align	1
 2585              		.global	clean_EX2_status
 2586              		.syntax unified
 2587              		.code	16
 2588              		.thumb_func
 2590              	clean_EX2_status:
 2591              	.LFB555:
 532:Core/Src/AB1805.c ****   uint8_t c1;
 2592              		.loc 1 532 1 is_stmt 1 view -0
 2593              		.cfi_startproc
 2594              		@ args = 0, pretend = 0, frame = 0
 2595              		@ frame_needed = 0, uses_anonymous_args = 0
 2596 0000 10B5     		push	{r4, lr}
 2597              	.LCFI49:
 2598              		.cfi_def_cfa_offset 8
 2599              		.cfi_offset 4, -8
 2600              		.cfi_offset 14, -4
 533:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2601              		.loc 1 533 3 view .LVU531
 534:Core/Src/AB1805.c ****   c1 &= ~STATUS_EX2_MASK;
 2602              		.loc 1 534 3 view .LVU532
 534:Core/Src/AB1805.c ****   c1 &= ~STATUS_EX2_MASK;
 2603              		.loc 1 534 8 is_stmt 0 view .LVU533
 2604 0002 0F20     		movs	r0, #15
 2605 0004 FFF7FEFF 		bl	read_rtc_register
 2606              	.LVL164:
 535:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2607              		.loc 1 535 3 is_stmt 1 view .LVU534
 535:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2608              		.loc 1 535 6 is_stmt 0 view .LVU535
 2609 0008 0223     		movs	r3, #2
 2610 000a 9843     		bics	r0, r3
 2611              	.LVL165:
 535:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2612              		.loc 1 535 6 view .LVU536
 2613 000c C1B2     		uxtb	r1, r0
 2614              	.LVL166:
 536:Core/Src/AB1805.c ****   return 1;
 2615              		.loc 1 536 3 is_stmt 1 view .LVU537
 2616 000e 0F20     		movs	r0, #15
 2617 0010 FFF7FEFF 		bl	write_rtc_register
 2618              	.LVL167:
 537:Core/Src/AB1805.c **** }
 2619              		.loc 1 537 3 view .LVU538
 538:Core/Src/AB1805.c **** 
 2620              		.loc 1 538 1 is_stmt 0 view .LVU539
 2621 0014 0120     		movs	r0, #1
 2622              		@ sp needed
 2623 0016 10BD     		pop	{r4, pc}
 2624              		.cfi_endproc
 2625              	.LFE555:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 103


 2627              		.section	.text.clean_EX1_status,"ax",%progbits
 2628              		.align	1
 2629              		.global	clean_EX1_status
 2630              		.syntax unified
 2631              		.code	16
 2632              		.thumb_func
 2634              	clean_EX1_status:
 2635              	.LFB556:
 541:Core/Src/AB1805.c ****   uint8_t c1;
 2636              		.loc 1 541 1 is_stmt 1 view -0
 2637              		.cfi_startproc
 2638              		@ args = 0, pretend = 0, frame = 0
 2639              		@ frame_needed = 0, uses_anonymous_args = 0
 2640 0000 10B5     		push	{r4, lr}
 2641              	.LCFI50:
 2642              		.cfi_def_cfa_offset 8
 2643              		.cfi_offset 4, -8
 2644              		.cfi_offset 14, -4
 542:Core/Src/AB1805.c ****   c1 = read_rtc_register(STATU_REGISTER);
 2645              		.loc 1 542 3 view .LVU541
 543:Core/Src/AB1805.c ****   c1 &= ~STATUS_EX1_MASK;
 2646              		.loc 1 543 3 view .LVU542
 543:Core/Src/AB1805.c ****   c1 &= ~STATUS_EX1_MASK;
 2647              		.loc 1 543 8 is_stmt 0 view .LVU543
 2648 0002 0F20     		movs	r0, #15
 2649 0004 FFF7FEFF 		bl	read_rtc_register
 2650              	.LVL168:
 544:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2651              		.loc 1 544 3 is_stmt 1 view .LVU544
 544:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2652              		.loc 1 544 6 is_stmt 0 view .LVU545
 2653 0008 0123     		movs	r3, #1
 2654 000a 9843     		bics	r0, r3
 2655              	.LVL169:
 544:Core/Src/AB1805.c ****   write_rtc_register(STATU_REGISTER, c1);
 2656              		.loc 1 544 6 view .LVU546
 2657 000c C1B2     		uxtb	r1, r0
 2658              	.LVL170:
 545:Core/Src/AB1805.c ****   return 1;
 2659              		.loc 1 545 3 is_stmt 1 view .LVU547
 2660 000e 0F20     		movs	r0, #15
 2661 0010 FFF7FEFF 		bl	write_rtc_register
 2662              	.LVL171:
 546:Core/Src/AB1805.c **** }
 2663              		.loc 1 546 3 view .LVU548
 547:Core/Src/AB1805.c **** 
 2664              		.loc 1 547 1 is_stmt 0 view .LVU549
 2665 0014 0120     		movs	r0, #1
 547:Core/Src/AB1805.c **** 
 2666              		.loc 1 547 1 view .LVU550
 2667              		@ sp needed
 2668 0016 10BD     		pop	{r4, pc}
 2669              		.cfi_endproc
 2670              	.LFE556:
 2672              		.section	.text.set_control1,"ax",%progbits
 2673              		.align	1
 2674              		.global	set_control1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 104


 2675              		.syntax unified
 2676              		.code	16
 2677              		.thumb_func
 2679              	set_control1:
 2680              	.LVL172:
 2681              	.LFB557:
 551:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, value);
 2682              		.loc 1 551 1 is_stmt 1 view -0
 2683              		.cfi_startproc
 2684              		@ args = 0, pretend = 0, frame = 0
 2685              		@ frame_needed = 0, uses_anonymous_args = 0
 551:Core/Src/AB1805.c ****   write_rtc_register(CONTROL1_REGISTER, value);
 2686              		.loc 1 551 1 is_stmt 0 view .LVU552
 2687 0000 10B5     		push	{r4, lr}
 2688              	.LCFI51:
 2689              		.cfi_def_cfa_offset 8
 2690              		.cfi_offset 4, -8
 2691              		.cfi_offset 14, -4
 2692 0002 0100     		movs	r1, r0
 552:Core/Src/AB1805.c ****   _control1 = read_rtc_register(CONTROL1_REGISTER);
 2693              		.loc 1 552 3 is_stmt 1 view .LVU553
 2694 0004 1020     		movs	r0, #16
 2695              	.LVL173:
 552:Core/Src/AB1805.c ****   _control1 = read_rtc_register(CONTROL1_REGISTER);
 2696              		.loc 1 552 3 is_stmt 0 view .LVU554
 2697 0006 FFF7FEFF 		bl	write_rtc_register
 2698              	.LVL174:
 553:Core/Src/AB1805.c ****   return _control1;
 2699              		.loc 1 553 3 is_stmt 1 view .LVU555
 553:Core/Src/AB1805.c ****   return _control1;
 2700              		.loc 1 553 15 is_stmt 0 view .LVU556
 2701 000a 1020     		movs	r0, #16
 2702 000c FFF7FEFF 		bl	read_rtc_register
 2703              	.LVL175:
 553:Core/Src/AB1805.c ****   return _control1;
 2704              		.loc 1 553 13 view .LVU557
 2705 0010 014B     		ldr	r3, .L132
 2706 0012 1870     		strb	r0, [r3]
 554:Core/Src/AB1805.c **** }
 2707              		.loc 1 554 3 is_stmt 1 view .LVU558
 555:Core/Src/AB1805.c **** 
 2708              		.loc 1 555 1 is_stmt 0 view .LVU559
 2709              		@ sp needed
 2710 0014 10BD     		pop	{r4, pc}
 2711              	.L133:
 2712 0016 C046     		.align	2
 2713              	.L132:
 2714 0018 00000000 		.word	_control1
 2715              		.cfi_endproc
 2716              	.LFE557:
 2718              		.section	.text.set_1224,"ax",%progbits
 2719              		.align	1
 2720              		.global	set_1224
 2721              		.syntax unified
 2722              		.code	16
 2723              		.thumb_func
 2725              	set_1224:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 105


 2726              	.LVL176:
 2727              	.LFB558:
 558:Core/Src/AB1805.c ****   uint8_t c1;
 2728              		.loc 1 558 1 is_stmt 1 view -0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 0
 2731              		@ frame_needed = 0, uses_anonymous_args = 0
 558:Core/Src/AB1805.c ****   uint8_t c1;
 2732              		.loc 1 558 1 is_stmt 0 view .LVU561
 2733 0000 10B5     		push	{r4, lr}
 2734              	.LCFI52:
 2735              		.cfi_def_cfa_offset 8
 2736              		.cfi_offset 4, -8
 2737              		.cfi_offset 14, -4
 2738 0002 0400     		movs	r4, r0
 559:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 2739              		.loc 1 559 3 is_stmt 1 view .LVU562
 560:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_1224_MASK;
 2740              		.loc 1 560 3 view .LVU563
 560:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_1224_MASK;
 2741              		.loc 1 560 8 is_stmt 0 view .LVU564
 2742 0004 1020     		movs	r0, #16
 2743              	.LVL177:
 560:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_1224_MASK;
 2744              		.loc 1 560 8 view .LVU565
 2745 0006 FFF7FEFF 		bl	read_rtc_register
 2746              	.LVL178:
 561:Core/Src/AB1805.c ****   if (value)
 2747              		.loc 1 561 3 is_stmt 1 view .LVU566
 561:Core/Src/AB1805.c ****   if (value)
 2748              		.loc 1 561 6 is_stmt 0 view .LVU567
 2749 000a 4023     		movs	r3, #64
 2750 000c 9843     		bics	r0, r3
 2751              	.LVL179:
 561:Core/Src/AB1805.c ****   if (value)
 2752              		.loc 1 561 6 view .LVU568
 2753 000e C1B2     		uxtb	r1, r0
 2754              	.LVL180:
 562:Core/Src/AB1805.c ****   {
 2755              		.loc 1 562 3 is_stmt 1 view .LVU569
 562:Core/Src/AB1805.c ****   {
 2756              		.loc 1 562 6 is_stmt 0 view .LVU570
 2757 0010 002C     		cmp	r4, #0
 2758 0012 01D0     		beq	.L135
 564:Core/Src/AB1805.c ****   }
 2759              		.loc 1 564 5 is_stmt 1 view .LVU571
 564:Core/Src/AB1805.c ****   }
 2760              		.loc 1 564 8 is_stmt 0 view .LVU572
 2761 0014 1943     		orrs	r1, r3
 2762              	.LVL181:
 564:Core/Src/AB1805.c ****   }
 2763              		.loc 1 564 8 view .LVU573
 2764 0016 C9B2     		uxtb	r1, r1
 2765              	.LVL182:
 2766              	.L135:
 566:Core/Src/AB1805.c ****   return 1;
 2767              		.loc 1 566 3 is_stmt 1 view .LVU574
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 106


 2768 0018 1020     		movs	r0, #16
 2769 001a FFF7FEFF 		bl	write_rtc_register
 2770              	.LVL183:
 567:Core/Src/AB1805.c **** }
 2771              		.loc 1 567 3 view .LVU575
 568:Core/Src/AB1805.c **** 
 2772              		.loc 1 568 1 is_stmt 0 view .LVU576
 2773 001e 0120     		movs	r0, #1
 2774              		@ sp needed
 2775 0020 10BD     		pop	{r4, pc}
 2776              		.cfi_endproc
 2777              	.LFE558:
 2779              		.section	.text.set_RSP,"ax",%progbits
 2780              		.align	1
 2781              		.global	set_RSP
 2782              		.syntax unified
 2783              		.code	16
 2784              		.thumb_func
 2786              	set_RSP:
 2787              	.LVL184:
 2788              	.LFB559:
 571:Core/Src/AB1805.c ****   uint8_t c1;
 2789              		.loc 1 571 1 is_stmt 1 view -0
 2790              		.cfi_startproc
 2791              		@ args = 0, pretend = 0, frame = 0
 2792              		@ frame_needed = 0, uses_anonymous_args = 0
 571:Core/Src/AB1805.c ****   uint8_t c1;
 2793              		.loc 1 571 1 is_stmt 0 view .LVU578
 2794 0000 10B5     		push	{r4, lr}
 2795              	.LCFI53:
 2796              		.cfi_def_cfa_offset 8
 2797              		.cfi_offset 4, -8
 2798              		.cfi_offset 14, -4
 2799 0002 0400     		movs	r4, r0
 572:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 2800              		.loc 1 572 3 is_stmt 1 view .LVU579
 573:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_RSP_MASK;
 2801              		.loc 1 573 3 view .LVU580
 573:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_RSP_MASK;
 2802              		.loc 1 573 8 is_stmt 0 view .LVU581
 2803 0004 1020     		movs	r0, #16
 2804              	.LVL185:
 573:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_RSP_MASK;
 2805              		.loc 1 573 8 view .LVU582
 2806 0006 FFF7FEFF 		bl	read_rtc_register
 2807              	.LVL186:
 574:Core/Src/AB1805.c ****   if (value)
 2808              		.loc 1 574 3 is_stmt 1 view .LVU583
 574:Core/Src/AB1805.c ****   if (value)
 2809              		.loc 1 574 6 is_stmt 0 view .LVU584
 2810 000a 0823     		movs	r3, #8
 2811 000c 9843     		bics	r0, r3
 2812              	.LVL187:
 574:Core/Src/AB1805.c ****   if (value)
 2813              		.loc 1 574 6 view .LVU585
 2814 000e C1B2     		uxtb	r1, r0
 2815              	.LVL188:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 107


 575:Core/Src/AB1805.c ****   {
 2816              		.loc 1 575 3 is_stmt 1 view .LVU586
 575:Core/Src/AB1805.c ****   {
 2817              		.loc 1 575 6 is_stmt 0 view .LVU587
 2818 0010 002C     		cmp	r4, #0
 2819 0012 01D0     		beq	.L137
 577:Core/Src/AB1805.c ****   }
 2820              		.loc 1 577 5 is_stmt 1 view .LVU588
 577:Core/Src/AB1805.c ****   }
 2821              		.loc 1 577 8 is_stmt 0 view .LVU589
 2822 0014 1943     		orrs	r1, r3
 2823              	.LVL189:
 577:Core/Src/AB1805.c ****   }
 2824              		.loc 1 577 8 view .LVU590
 2825 0016 C9B2     		uxtb	r1, r1
 2826              	.LVL190:
 2827              	.L137:
 579:Core/Src/AB1805.c ****   return 1;
 2828              		.loc 1 579 3 is_stmt 1 view .LVU591
 2829 0018 1020     		movs	r0, #16
 2830 001a FFF7FEFF 		bl	write_rtc_register
 2831              	.LVL191:
 580:Core/Src/AB1805.c **** }
 2832              		.loc 1 580 3 view .LVU592
 581:Core/Src/AB1805.c **** 
 2833              		.loc 1 581 1 is_stmt 0 view .LVU593
 2834 001e 0120     		movs	r0, #1
 2835              		@ sp needed
 2836 0020 10BD     		pop	{r4, pc}
 2837              		.cfi_endproc
 2838              	.LFE559:
 2840              		.section	.text.set_ARST,"ax",%progbits
 2841              		.align	1
 2842              		.global	set_ARST
 2843              		.syntax unified
 2844              		.code	16
 2845              		.thumb_func
 2847              	set_ARST:
 2848              	.LVL192:
 2849              	.LFB560:
 584:Core/Src/AB1805.c ****   uint8_t c1;
 2850              		.loc 1 584 1 is_stmt 1 view -0
 2851              		.cfi_startproc
 2852              		@ args = 0, pretend = 0, frame = 0
 2853              		@ frame_needed = 0, uses_anonymous_args = 0
 584:Core/Src/AB1805.c ****   uint8_t c1;
 2854              		.loc 1 584 1 is_stmt 0 view .LVU595
 2855 0000 10B5     		push	{r4, lr}
 2856              	.LCFI54:
 2857              		.cfi_def_cfa_offset 8
 2858              		.cfi_offset 4, -8
 2859              		.cfi_offset 14, -4
 2860 0002 0400     		movs	r4, r0
 585:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 2861              		.loc 1 585 3 is_stmt 1 view .LVU596
 586:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_ARST_MASK;
 2862              		.loc 1 586 3 view .LVU597
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 108


 586:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_ARST_MASK;
 2863              		.loc 1 586 8 is_stmt 0 view .LVU598
 2864 0004 1020     		movs	r0, #16
 2865              	.LVL193:
 586:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_ARST_MASK;
 2866              		.loc 1 586 8 view .LVU599
 2867 0006 FFF7FEFF 		bl	read_rtc_register
 2868              	.LVL194:
 587:Core/Src/AB1805.c ****   if (value)
 2869              		.loc 1 587 3 is_stmt 1 view .LVU600
 587:Core/Src/AB1805.c ****   if (value)
 2870              		.loc 1 587 6 is_stmt 0 view .LVU601
 2871 000a 0423     		movs	r3, #4
 2872 000c 9843     		bics	r0, r3
 2873              	.LVL195:
 587:Core/Src/AB1805.c ****   if (value)
 2874              		.loc 1 587 6 view .LVU602
 2875 000e C1B2     		uxtb	r1, r0
 2876              	.LVL196:
 588:Core/Src/AB1805.c ****   {
 2877              		.loc 1 588 3 is_stmt 1 view .LVU603
 588:Core/Src/AB1805.c ****   {
 2878              		.loc 1 588 6 is_stmt 0 view .LVU604
 2879 0010 002C     		cmp	r4, #0
 2880 0012 01D0     		beq	.L139
 590:Core/Src/AB1805.c ****   }
 2881              		.loc 1 590 5 is_stmt 1 view .LVU605
 590:Core/Src/AB1805.c ****   }
 2882              		.loc 1 590 8 is_stmt 0 view .LVU606
 2883 0014 1943     		orrs	r1, r3
 2884              	.LVL197:
 590:Core/Src/AB1805.c ****   }
 2885              		.loc 1 590 8 view .LVU607
 2886 0016 C9B2     		uxtb	r1, r1
 2887              	.LVL198:
 2888              	.L139:
 592:Core/Src/AB1805.c ****   return 1;
 2889              		.loc 1 592 3 is_stmt 1 view .LVU608
 2890 0018 1020     		movs	r0, #16
 2891 001a FFF7FEFF 		bl	write_rtc_register
 2892              	.LVL199:
 593:Core/Src/AB1805.c **** }
 2893              		.loc 1 593 3 view .LVU609
 594:Core/Src/AB1805.c **** 
 2894              		.loc 1 594 1 is_stmt 0 view .LVU610
 2895 001e 0120     		movs	r0, #1
 2896              		@ sp needed
 2897 0020 10BD     		pop	{r4, pc}
 2898              		.cfi_endproc
 2899              	.LFE560:
 2901              		.section	.text.set_PWR2,"ax",%progbits
 2902              		.align	1
 2903              		.global	set_PWR2
 2904              		.syntax unified
 2905              		.code	16
 2906              		.thumb_func
 2908              	set_PWR2:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 109


 2909              	.LVL200:
 2910              	.LFB561:
 597:Core/Src/AB1805.c ****   uint8_t c1;
 2911              		.loc 1 597 1 is_stmt 1 view -0
 2912              		.cfi_startproc
 2913              		@ args = 0, pretend = 0, frame = 0
 2914              		@ frame_needed = 0, uses_anonymous_args = 0
 597:Core/Src/AB1805.c ****   uint8_t c1;
 2915              		.loc 1 597 1 is_stmt 0 view .LVU612
 2916 0000 10B5     		push	{r4, lr}
 2917              	.LCFI55:
 2918              		.cfi_def_cfa_offset 8
 2919              		.cfi_offset 4, -8
 2920              		.cfi_offset 14, -4
 2921 0002 0400     		movs	r4, r0
 598:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 2922              		.loc 1 598 3 is_stmt 1 view .LVU613
 599:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_PWR2_MASK;
 2923              		.loc 1 599 3 view .LVU614
 599:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_PWR2_MASK;
 2924              		.loc 1 599 8 is_stmt 0 view .LVU615
 2925 0004 1020     		movs	r0, #16
 2926              	.LVL201:
 599:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_PWR2_MASK;
 2927              		.loc 1 599 8 view .LVU616
 2928 0006 FFF7FEFF 		bl	read_rtc_register
 2929              	.LVL202:
 600:Core/Src/AB1805.c ****   if (value)
 2930              		.loc 1 600 3 is_stmt 1 view .LVU617
 600:Core/Src/AB1805.c ****   if (value)
 2931              		.loc 1 600 6 is_stmt 0 view .LVU618
 2932 000a 0223     		movs	r3, #2
 2933 000c 9843     		bics	r0, r3
 2934              	.LVL203:
 600:Core/Src/AB1805.c ****   if (value)
 2935              		.loc 1 600 6 view .LVU619
 2936 000e C1B2     		uxtb	r1, r0
 2937              	.LVL204:
 601:Core/Src/AB1805.c ****   {
 2938              		.loc 1 601 3 is_stmt 1 view .LVU620
 601:Core/Src/AB1805.c ****   {
 2939              		.loc 1 601 6 is_stmt 0 view .LVU621
 2940 0010 002C     		cmp	r4, #0
 2941 0012 01D0     		beq	.L141
 603:Core/Src/AB1805.c ****   }
 2942              		.loc 1 603 5 is_stmt 1 view .LVU622
 603:Core/Src/AB1805.c ****   }
 2943              		.loc 1 603 8 is_stmt 0 view .LVU623
 2944 0014 1943     		orrs	r1, r3
 2945              	.LVL205:
 603:Core/Src/AB1805.c ****   }
 2946              		.loc 1 603 8 view .LVU624
 2947 0016 C9B2     		uxtb	r1, r1
 2948              	.LVL206:
 2949              	.L141:
 605:Core/Src/AB1805.c ****   return 1;
 2950              		.loc 1 605 3 is_stmt 1 view .LVU625
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 110


 2951 0018 1020     		movs	r0, #16
 2952 001a FFF7FEFF 		bl	write_rtc_register
 2953              	.LVL207:
 606:Core/Src/AB1805.c **** }
 2954              		.loc 1 606 3 view .LVU626
 607:Core/Src/AB1805.c **** 
 2955              		.loc 1 607 1 is_stmt 0 view .LVU627
 2956 001e 0120     		movs	r0, #1
 2957              		@ sp needed
 2958 0020 10BD     		pop	{r4, pc}
 2959              		.cfi_endproc
 2960              	.LFE561:
 2962              		.section	.text.set_WRTC,"ax",%progbits
 2963              		.align	1
 2964              		.global	set_WRTC
 2965              		.syntax unified
 2966              		.code	16
 2967              		.thumb_func
 2969              	set_WRTC:
 2970              	.LVL208:
 2971              	.LFB562:
 610:Core/Src/AB1805.c ****   uint8_t c1;
 2972              		.loc 1 610 1 is_stmt 1 view -0
 2973              		.cfi_startproc
 2974              		@ args = 0, pretend = 0, frame = 0
 2975              		@ frame_needed = 0, uses_anonymous_args = 0
 610:Core/Src/AB1805.c ****   uint8_t c1;
 2976              		.loc 1 610 1 is_stmt 0 view .LVU629
 2977 0000 10B5     		push	{r4, lr}
 2978              	.LCFI56:
 2979              		.cfi_def_cfa_offset 8
 2980              		.cfi_offset 4, -8
 2981              		.cfi_offset 14, -4
 2982 0002 0400     		movs	r4, r0
 611:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL1_REGISTER);
 2983              		.loc 1 611 3 is_stmt 1 view .LVU630
 612:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_WRTC_MASK;
 2984              		.loc 1 612 3 view .LVU631
 612:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_WRTC_MASK;
 2985              		.loc 1 612 8 is_stmt 0 view .LVU632
 2986 0004 1020     		movs	r0, #16
 2987              	.LVL209:
 612:Core/Src/AB1805.c ****   c1 &= ~CONTROL1_WRTC_MASK;
 2988              		.loc 1 612 8 view .LVU633
 2989 0006 FFF7FEFF 		bl	read_rtc_register
 2990              	.LVL210:
 613:Core/Src/AB1805.c ****   if (value)
 2991              		.loc 1 613 3 is_stmt 1 view .LVU634
 613:Core/Src/AB1805.c ****   if (value)
 2992              		.loc 1 613 6 is_stmt 0 view .LVU635
 2993 000a 0123     		movs	r3, #1
 2994 000c 9843     		bics	r0, r3
 2995              	.LVL211:
 613:Core/Src/AB1805.c ****   if (value)
 2996              		.loc 1 613 6 view .LVU636
 2997 000e C1B2     		uxtb	r1, r0
 2998              	.LVL212:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 111


 614:Core/Src/AB1805.c ****   {
 2999              		.loc 1 614 3 is_stmt 1 view .LVU637
 614:Core/Src/AB1805.c ****   {
 3000              		.loc 1 614 6 is_stmt 0 view .LVU638
 3001 0010 002C     		cmp	r4, #0
 3002 0012 01D0     		beq	.L143
 616:Core/Src/AB1805.c ****   }
 3003              		.loc 1 616 5 is_stmt 1 view .LVU639
 616:Core/Src/AB1805.c ****   }
 3004              		.loc 1 616 8 is_stmt 0 view .LVU640
 3005 0014 1943     		orrs	r1, r3
 3006              	.LVL213:
 616:Core/Src/AB1805.c ****   }
 3007              		.loc 1 616 8 view .LVU641
 3008 0016 C9B2     		uxtb	r1, r1
 3009              	.LVL214:
 3010              	.L143:
 618:Core/Src/AB1805.c ****   return 1;
 3011              		.loc 1 618 3 is_stmt 1 view .LVU642
 3012 0018 1020     		movs	r0, #16
 3013 001a FFF7FEFF 		bl	write_rtc_register
 3014              	.LVL215:
 619:Core/Src/AB1805.c **** }
 3015              		.loc 1 619 3 view .LVU643
 620:Core/Src/AB1805.c **** 
 3016              		.loc 1 620 1 is_stmt 0 view .LVU644
 3017 001e 0120     		movs	r0, #1
 3018              		@ sp needed
 3019 0020 10BD     		pop	{r4, pc}
 3020              		.cfi_endproc
 3021              	.LFE562:
 3023              		.section	.text.get_interrupt,"ax",%progbits
 3024              		.align	1
 3025              		.global	get_interrupt
 3026              		.syntax unified
 3027              		.code	16
 3028              		.thumb_func
 3030              	get_interrupt:
 3031              	.LFB563:
 624:Core/Src/AB1805.c ****   _interrupt = read_rtc_register(INT_MASK_REGISTER);
 3032              		.loc 1 624 1 is_stmt 1 view -0
 3033              		.cfi_startproc
 3034              		@ args = 0, pretend = 0, frame = 0
 3035              		@ frame_needed = 0, uses_anonymous_args = 0
 3036 0000 10B5     		push	{r4, lr}
 3037              	.LCFI57:
 3038              		.cfi_def_cfa_offset 8
 3039              		.cfi_offset 4, -8
 3040              		.cfi_offset 14, -4
 625:Core/Src/AB1805.c ****   return _interrupt;
 3041              		.loc 1 625 3 view .LVU646
 625:Core/Src/AB1805.c ****   return _interrupt;
 3042              		.loc 1 625 16 is_stmt 0 view .LVU647
 3043 0002 1220     		movs	r0, #18
 3044 0004 FFF7FEFF 		bl	read_rtc_register
 3045              	.LVL216:
 625:Core/Src/AB1805.c ****   return _interrupt;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 112


 3046              		.loc 1 625 14 view .LVU648
 3047 0008 014B     		ldr	r3, .L145
 3048 000a 1870     		strb	r0, [r3]
 626:Core/Src/AB1805.c **** }
 3049              		.loc 1 626 3 is_stmt 1 view .LVU649
 627:Core/Src/AB1805.c **** 
 3050              		.loc 1 627 1 is_stmt 0 view .LVU650
 3051              		@ sp needed
 3052 000c 10BD     		pop	{r4, pc}
 3053              	.L146:
 3054 000e C046     		.align	2
 3055              	.L145:
 3056 0010 00000000 		.word	_interrupt
 3057              		.cfi_endproc
 3058              	.LFE563:
 3060              		.section	.text.get_BLIE_interrupt,"ax",%progbits
 3061              		.align	1
 3062              		.global	get_BLIE_interrupt
 3063              		.syntax unified
 3064              		.code	16
 3065              		.thumb_func
 3067              	get_BLIE_interrupt:
 3068              	.LFB564:
 630:Core/Src/AB1805.c ****   get_status();
 3069              		.loc 1 630 1 is_stmt 1 view -0
 3070              		.cfi_startproc
 3071              		@ args = 0, pretend = 0, frame = 0
 3072              		@ frame_needed = 0, uses_anonymous_args = 0
 3073 0000 10B5     		push	{r4, lr}
 3074              	.LCFI58:
 3075              		.cfi_def_cfa_offset 8
 3076              		.cfi_offset 4, -8
 3077              		.cfi_offset 14, -4
 631:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_BL_MASK > 4));
 3078              		.loc 1 631 3 view .LVU652
 3079 0002 FFF7FEFF 		bl	get_status
 3080              	.LVL217:
 632:Core/Src/AB1805.c **** };
 3081              		.loc 1 632 3 view .LVU653
 632:Core/Src/AB1805.c **** };
 3082              		.loc 1 632 22 is_stmt 0 view .LVU654
 3083 0006 024B     		ldr	r3, .L148
 3084 0008 1B78     		ldrb	r3, [r3]
 3085 000a 0120     		movs	r0, #1
 3086 000c 1840     		ands	r0, r3
 633:Core/Src/AB1805.c **** 
 3087              		.loc 1 633 1 view .LVU655
 3088              		@ sp needed
 3089 000e 10BD     		pop	{r4, pc}
 3090              	.L149:
 3091              		.align	2
 3092              	.L148:
 3093 0010 00000000 		.word	_interrupt
 3094              		.cfi_endproc
 3095              	.LFE564:
 3097              		.section	.text.get_TIE_interrupt,"ax",%progbits
 3098              		.align	1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 113


 3099              		.global	get_TIE_interrupt
 3100              		.syntax unified
 3101              		.code	16
 3102              		.thumb_func
 3104              	get_TIE_interrupt:
 3105              	.LFB565:
 636:Core/Src/AB1805.c ****   get_status();
 3106              		.loc 1 636 1 is_stmt 1 view -0
 3107              		.cfi_startproc
 3108              		@ args = 0, pretend = 0, frame = 0
 3109              		@ frame_needed = 0, uses_anonymous_args = 0
 3110 0000 10B5     		push	{r4, lr}
 3111              	.LCFI59:
 3112              		.cfi_def_cfa_offset 8
 3113              		.cfi_offset 4, -8
 3114              		.cfi_offset 14, -4
 637:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_TIM_MASK > 3));
 3115              		.loc 1 637 3 view .LVU657
 3116 0002 FFF7FEFF 		bl	get_status
 3117              	.LVL218:
 638:Core/Src/AB1805.c **** };
 3118              		.loc 1 638 3 view .LVU658
 638:Core/Src/AB1805.c **** };
 3119              		.loc 1 638 22 is_stmt 0 view .LVU659
 3120 0006 024B     		ldr	r3, .L151
 3121 0008 1B78     		ldrb	r3, [r3]
 3122 000a 0120     		movs	r0, #1
 3123 000c 1840     		ands	r0, r3
 639:Core/Src/AB1805.c **** 
 3124              		.loc 1 639 1 view .LVU660
 3125              		@ sp needed
 3126 000e 10BD     		pop	{r4, pc}
 3127              	.L152:
 3128              		.align	2
 3129              	.L151:
 3130 0010 00000000 		.word	_interrupt
 3131              		.cfi_endproc
 3132              	.LFE565:
 3134              		.section	.text.get_AIE_interrupt,"ax",%progbits
 3135              		.align	1
 3136              		.global	get_AIE_interrupt
 3137              		.syntax unified
 3138              		.code	16
 3139              		.thumb_func
 3141              	get_AIE_interrupt:
 3142              	.LFB566:
 642:Core/Src/AB1805.c ****   get_status();
 3143              		.loc 1 642 1 is_stmt 1 view -0
 3144              		.cfi_startproc
 3145              		@ args = 0, pretend = 0, frame = 0
 3146              		@ frame_needed = 0, uses_anonymous_args = 0
 3147 0000 10B5     		push	{r4, lr}
 3148              	.LCFI60:
 3149              		.cfi_def_cfa_offset 8
 3150              		.cfi_offset 4, -8
 3151              		.cfi_offset 14, -4
 643:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_ALM_MASK > 2));
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 114


 3152              		.loc 1 643 3 view .LVU662
 3153 0002 FFF7FEFF 		bl	get_status
 3154              	.LVL219:
 644:Core/Src/AB1805.c **** };
 3155              		.loc 1 644 3 view .LVU663
 644:Core/Src/AB1805.c **** };
 3156              		.loc 1 644 22 is_stmt 0 view .LVU664
 3157 0006 024B     		ldr	r3, .L154
 3158 0008 1B78     		ldrb	r3, [r3]
 3159 000a 0120     		movs	r0, #1
 3160 000c 1840     		ands	r0, r3
 645:Core/Src/AB1805.c **** 
 3161              		.loc 1 645 1 view .LVU665
 3162              		@ sp needed
 3163 000e 10BD     		pop	{r4, pc}
 3164              	.L155:
 3165              		.align	2
 3166              	.L154:
 3167 0010 00000000 		.word	_interrupt
 3168              		.cfi_endproc
 3169              	.LFE566:
 3171              		.section	.text.get_EX2E_interrupt,"ax",%progbits
 3172              		.align	1
 3173              		.global	get_EX2E_interrupt
 3174              		.syntax unified
 3175              		.code	16
 3176              		.thumb_func
 3178              	get_EX2E_interrupt:
 3179              	.LFB567:
 648:Core/Src/AB1805.c ****   get_status();
 3180              		.loc 1 648 1 is_stmt 1 view -0
 3181              		.cfi_startproc
 3182              		@ args = 0, pretend = 0, frame = 0
 3183              		@ frame_needed = 0, uses_anonymous_args = 0
 3184 0000 10B5     		push	{r4, lr}
 3185              	.LCFI61:
 3186              		.cfi_def_cfa_offset 8
 3187              		.cfi_offset 4, -8
 3188              		.cfi_offset 14, -4
 649:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_EX2_MASK > 1));
 3189              		.loc 1 649 3 view .LVU667
 3190 0002 FFF7FEFF 		bl	get_status
 3191              	.LVL220:
 650:Core/Src/AB1805.c **** };
 3192              		.loc 1 650 3 view .LVU668
 650:Core/Src/AB1805.c **** };
 3193              		.loc 1 650 22 is_stmt 0 view .LVU669
 3194 0006 024B     		ldr	r3, .L157
 3195 0008 1B78     		ldrb	r3, [r3]
 3196 000a 0120     		movs	r0, #1
 3197 000c 1840     		ands	r0, r3
 651:Core/Src/AB1805.c **** 
 3198              		.loc 1 651 1 view .LVU670
 3199              		@ sp needed
 3200 000e 10BD     		pop	{r4, pc}
 3201              	.L158:
 3202              		.align	2
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 115


 3203              	.L157:
 3204 0010 00000000 		.word	_interrupt
 3205              		.cfi_endproc
 3206              	.LFE567:
 3208              		.section	.text.get_EX1E_interrupt,"ax",%progbits
 3209              		.align	1
 3210              		.global	get_EX1E_interrupt
 3211              		.syntax unified
 3212              		.code	16
 3213              		.thumb_func
 3215              	get_EX1E_interrupt:
 3216              	.LFB568:
 654:Core/Src/AB1805.c ****   get_status();
 3217              		.loc 1 654 1 is_stmt 1 view -0
 3218              		.cfi_startproc
 3219              		@ args = 0, pretend = 0, frame = 0
 3220              		@ frame_needed = 0, uses_anonymous_args = 0
 3221 0000 10B5     		push	{r4, lr}
 3222              	.LCFI62:
 3223              		.cfi_def_cfa_offset 8
 3224              		.cfi_offset 4, -8
 3225              		.cfi_offset 14, -4
 655:Core/Src/AB1805.c ****   return (_interrupt & (STATUS_EX1_MASK));
 3226              		.loc 1 655 3 view .LVU672
 3227 0002 FFF7FEFF 		bl	get_status
 3228              	.LVL221:
 656:Core/Src/AB1805.c **** };
 3229              		.loc 1 656 3 view .LVU673
 656:Core/Src/AB1805.c **** };
 3230              		.loc 1 656 22 is_stmt 0 view .LVU674
 3231 0006 024B     		ldr	r3, .L160
 3232 0008 1B78     		ldrb	r3, [r3]
 3233 000a 0120     		movs	r0, #1
 3234 000c 1840     		ands	r0, r3
 657:Core/Src/AB1805.c **** 
 3235              		.loc 1 657 1 view .LVU675
 3236              		@ sp needed
 3237 000e 10BD     		pop	{r4, pc}
 3238              	.L161:
 3239              		.align	2
 3240              	.L160:
 3241 0010 00000000 		.word	_interrupt
 3242              		.cfi_endproc
 3243              	.LFE568:
 3245              		.section	.text.set_interrupt,"ax",%progbits
 3246              		.align	1
 3247              		.global	set_interrupt
 3248              		.syntax unified
 3249              		.code	16
 3250              		.thumb_func
 3252              	set_interrupt:
 3253              	.LVL222:
 3254              	.LFB569:
 660:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, value);
 3255              		.loc 1 660 1 is_stmt 1 view -0
 3256              		.cfi_startproc
 3257              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 116


 3258              		@ frame_needed = 0, uses_anonymous_args = 0
 660:Core/Src/AB1805.c ****   write_rtc_register(INT_MASK_REGISTER, value);
 3259              		.loc 1 660 1 is_stmt 0 view .LVU677
 3260 0000 10B5     		push	{r4, lr}
 3261              	.LCFI63:
 3262              		.cfi_def_cfa_offset 8
 3263              		.cfi_offset 4, -8
 3264              		.cfi_offset 14, -4
 3265 0002 0100     		movs	r1, r0
 661:Core/Src/AB1805.c ****   _interrupt = read_rtc_register(INT_MASK_REGISTER);
 3266              		.loc 1 661 3 is_stmt 1 view .LVU678
 3267 0004 1220     		movs	r0, #18
 3268              	.LVL223:
 661:Core/Src/AB1805.c ****   _interrupt = read_rtc_register(INT_MASK_REGISTER);
 3269              		.loc 1 661 3 is_stmt 0 view .LVU679
 3270 0006 FFF7FEFF 		bl	write_rtc_register
 3271              	.LVL224:
 662:Core/Src/AB1805.c ****   return _interrupt;
 3272              		.loc 1 662 3 is_stmt 1 view .LVU680
 662:Core/Src/AB1805.c ****   return _interrupt;
 3273              		.loc 1 662 16 is_stmt 0 view .LVU681
 3274 000a 1220     		movs	r0, #18
 3275 000c FFF7FEFF 		bl	read_rtc_register
 3276              	.LVL225:
 662:Core/Src/AB1805.c ****   return _interrupt;
 3277              		.loc 1 662 14 view .LVU682
 3278 0010 014B     		ldr	r3, .L163
 3279 0012 1870     		strb	r0, [r3]
 663:Core/Src/AB1805.c **** }
 3280              		.loc 1 663 3 is_stmt 1 view .LVU683
 664:Core/Src/AB1805.c **** 
 3281              		.loc 1 664 1 is_stmt 0 view .LVU684
 3282              		@ sp needed
 3283 0014 10BD     		pop	{r4, pc}
 3284              	.L164:
 3285 0016 C046     		.align	2
 3286              	.L163:
 3287 0018 00000000 		.word	_interrupt
 3288              		.cfi_endproc
 3289              	.LFE569:
 3291              		.section	.text.set_BLIE_interrupt,"ax",%progbits
 3292              		.align	1
 3293              		.global	set_BLIE_interrupt
 3294              		.syntax unified
 3295              		.code	16
 3296              		.thumb_func
 3298              	set_BLIE_interrupt:
 3299              	.LVL226:
 3300              	.LFB570:
 667:Core/Src/AB1805.c ****   uint8_t c1;
 3301              		.loc 1 667 1 is_stmt 1 view -0
 3302              		.cfi_startproc
 3303              		@ args = 0, pretend = 0, frame = 0
 3304              		@ frame_needed = 0, uses_anonymous_args = 0
 667:Core/Src/AB1805.c ****   uint8_t c1;
 3305              		.loc 1 667 1 is_stmt 0 view .LVU686
 3306 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 117


 3307              	.LCFI64:
 3308              		.cfi_def_cfa_offset 8
 3309              		.cfi_offset 4, -8
 3310              		.cfi_offset 14, -4
 3311 0002 0400     		movs	r4, r0
 668:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 3312              		.loc 1 668 3 is_stmt 1 view .LVU687
 669:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_BLIE_MASK;
 3313              		.loc 1 669 3 view .LVU688
 669:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_BLIE_MASK;
 3314              		.loc 1 669 8 is_stmt 0 view .LVU689
 3315 0004 1220     		movs	r0, #18
 3316              	.LVL227:
 669:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_BLIE_MASK;
 3317              		.loc 1 669 8 view .LVU690
 3318 0006 FFF7FEFF 		bl	read_rtc_register
 3319              	.LVL228:
 670:Core/Src/AB1805.c ****   if (value)
 3320              		.loc 1 670 3 is_stmt 1 view .LVU691
 670:Core/Src/AB1805.c ****   if (value)
 3321              		.loc 1 670 6 is_stmt 0 view .LVU692
 3322 000a 1023     		movs	r3, #16
 3323 000c 9843     		bics	r0, r3
 3324              	.LVL229:
 670:Core/Src/AB1805.c ****   if (value)
 3325              		.loc 1 670 6 view .LVU693
 3326 000e C1B2     		uxtb	r1, r0
 3327              	.LVL230:
 671:Core/Src/AB1805.c ****   {
 3328              		.loc 1 671 3 is_stmt 1 view .LVU694
 671:Core/Src/AB1805.c ****   {
 3329              		.loc 1 671 6 is_stmt 0 view .LVU695
 3330 0010 002C     		cmp	r4, #0
 3331 0012 01D0     		beq	.L166
 673:Core/Src/AB1805.c ****   }
 3332              		.loc 1 673 5 is_stmt 1 view .LVU696
 673:Core/Src/AB1805.c ****   }
 3333              		.loc 1 673 8 is_stmt 0 view .LVU697
 3334 0014 1943     		orrs	r1, r3
 3335              	.LVL231:
 673:Core/Src/AB1805.c ****   }
 3336              		.loc 1 673 8 view .LVU698
 3337 0016 C9B2     		uxtb	r1, r1
 3338              	.LVL232:
 3339              	.L166:
 675:Core/Src/AB1805.c ****   return 1;
 3340              		.loc 1 675 3 is_stmt 1 view .LVU699
 3341 0018 1220     		movs	r0, #18
 3342 001a FFF7FEFF 		bl	write_rtc_register
 3343              	.LVL233:
 676:Core/Src/AB1805.c **** }
 3344              		.loc 1 676 3 view .LVU700
 677:Core/Src/AB1805.c **** 
 3345              		.loc 1 677 1 is_stmt 0 view .LVU701
 3346 001e 0120     		movs	r0, #1
 3347              		@ sp needed
 3348 0020 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 118


 3349              		.cfi_endproc
 3350              	.LFE570:
 3352              		.section	.text.set_TIE_interrupt,"ax",%progbits
 3353              		.align	1
 3354              		.global	set_TIE_interrupt
 3355              		.syntax unified
 3356              		.code	16
 3357              		.thumb_func
 3359              	set_TIE_interrupt:
 3360              	.LVL234:
 3361              	.LFB571:
 680:Core/Src/AB1805.c ****   uint8_t c1;
 3362              		.loc 1 680 1 is_stmt 1 view -0
 3363              		.cfi_startproc
 3364              		@ args = 0, pretend = 0, frame = 0
 3365              		@ frame_needed = 0, uses_anonymous_args = 0
 680:Core/Src/AB1805.c ****   uint8_t c1;
 3366              		.loc 1 680 1 is_stmt 0 view .LVU703
 3367 0000 10B5     		push	{r4, lr}
 3368              	.LCFI65:
 3369              		.cfi_def_cfa_offset 8
 3370              		.cfi_offset 4, -8
 3371              		.cfi_offset 14, -4
 3372 0002 0400     		movs	r4, r0
 681:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 3373              		.loc 1 681 3 is_stmt 1 view .LVU704
 682:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_TIE_MASK;
 3374              		.loc 1 682 3 view .LVU705
 682:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_TIE_MASK;
 3375              		.loc 1 682 8 is_stmt 0 view .LVU706
 3376 0004 1220     		movs	r0, #18
 3377              	.LVL235:
 682:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_TIE_MASK;
 3378              		.loc 1 682 8 view .LVU707
 3379 0006 FFF7FEFF 		bl	read_rtc_register
 3380              	.LVL236:
 683:Core/Src/AB1805.c ****   if (value)
 3381              		.loc 1 683 3 is_stmt 1 view .LVU708
 683:Core/Src/AB1805.c ****   if (value)
 3382              		.loc 1 683 6 is_stmt 0 view .LVU709
 3383 000a 0823     		movs	r3, #8
 3384 000c 9843     		bics	r0, r3
 3385              	.LVL237:
 683:Core/Src/AB1805.c ****   if (value)
 3386              		.loc 1 683 6 view .LVU710
 3387 000e C1B2     		uxtb	r1, r0
 3388              	.LVL238:
 684:Core/Src/AB1805.c ****   {
 3389              		.loc 1 684 3 is_stmt 1 view .LVU711
 684:Core/Src/AB1805.c ****   {
 3390              		.loc 1 684 6 is_stmt 0 view .LVU712
 3391 0010 002C     		cmp	r4, #0
 3392 0012 01D0     		beq	.L168
 686:Core/Src/AB1805.c ****   }
 3393              		.loc 1 686 5 is_stmt 1 view .LVU713
 686:Core/Src/AB1805.c ****   }
 3394              		.loc 1 686 8 is_stmt 0 view .LVU714
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 119


 3395 0014 1943     		orrs	r1, r3
 3396              	.LVL239:
 686:Core/Src/AB1805.c ****   }
 3397              		.loc 1 686 8 view .LVU715
 3398 0016 C9B2     		uxtb	r1, r1
 3399              	.LVL240:
 3400              	.L168:
 688:Core/Src/AB1805.c ****   return 1;
 3401              		.loc 1 688 3 is_stmt 1 view .LVU716
 3402 0018 1220     		movs	r0, #18
 3403 001a FFF7FEFF 		bl	write_rtc_register
 3404              	.LVL241:
 689:Core/Src/AB1805.c **** }
 3405              		.loc 1 689 3 view .LVU717
 690:Core/Src/AB1805.c **** 
 3406              		.loc 1 690 1 is_stmt 0 view .LVU718
 3407 001e 0120     		movs	r0, #1
 3408              		@ sp needed
 3409 0020 10BD     		pop	{r4, pc}
 3410              		.cfi_endproc
 3411              	.LFE571:
 3413              		.section	.text.set_AIE_interrupt,"ax",%progbits
 3414              		.align	1
 3415              		.global	set_AIE_interrupt
 3416              		.syntax unified
 3417              		.code	16
 3418              		.thumb_func
 3420              	set_AIE_interrupt:
 3421              	.LVL242:
 3422              	.LFB572:
 693:Core/Src/AB1805.c ****   uint8_t c1;
 3423              		.loc 1 693 1 is_stmt 1 view -0
 3424              		.cfi_startproc
 3425              		@ args = 0, pretend = 0, frame = 0
 3426              		@ frame_needed = 0, uses_anonymous_args = 0
 693:Core/Src/AB1805.c ****   uint8_t c1;
 3427              		.loc 1 693 1 is_stmt 0 view .LVU720
 3428 0000 10B5     		push	{r4, lr}
 3429              	.LCFI66:
 3430              		.cfi_def_cfa_offset 8
 3431              		.cfi_offset 4, -8
 3432              		.cfi_offset 14, -4
 3433 0002 0400     		movs	r4, r0
 694:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 3434              		.loc 1 694 3 is_stmt 1 view .LVU721
 695:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_AIE_MASK;
 3435              		.loc 1 695 3 view .LVU722
 695:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_AIE_MASK;
 3436              		.loc 1 695 8 is_stmt 0 view .LVU723
 3437 0004 1220     		movs	r0, #18
 3438              	.LVL243:
 695:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_AIE_MASK;
 3439              		.loc 1 695 8 view .LVU724
 3440 0006 FFF7FEFF 		bl	read_rtc_register
 3441              	.LVL244:
 696:Core/Src/AB1805.c ****   if (value)
 3442              		.loc 1 696 3 is_stmt 1 view .LVU725
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 120


 696:Core/Src/AB1805.c ****   if (value)
 3443              		.loc 1 696 6 is_stmt 0 view .LVU726
 3444 000a 0423     		movs	r3, #4
 3445 000c 9843     		bics	r0, r3
 3446              	.LVL245:
 696:Core/Src/AB1805.c ****   if (value)
 3447              		.loc 1 696 6 view .LVU727
 3448 000e C1B2     		uxtb	r1, r0
 3449              	.LVL246:
 697:Core/Src/AB1805.c ****   {
 3450              		.loc 1 697 3 is_stmt 1 view .LVU728
 697:Core/Src/AB1805.c ****   {
 3451              		.loc 1 697 6 is_stmt 0 view .LVU729
 3452 0010 002C     		cmp	r4, #0
 3453 0012 01D0     		beq	.L170
 699:Core/Src/AB1805.c ****   }
 3454              		.loc 1 699 5 is_stmt 1 view .LVU730
 699:Core/Src/AB1805.c ****   }
 3455              		.loc 1 699 8 is_stmt 0 view .LVU731
 3456 0014 1943     		orrs	r1, r3
 3457              	.LVL247:
 699:Core/Src/AB1805.c ****   }
 3458              		.loc 1 699 8 view .LVU732
 3459 0016 C9B2     		uxtb	r1, r1
 3460              	.LVL248:
 3461              	.L170:
 701:Core/Src/AB1805.c ****   return 1;
 3462              		.loc 1 701 3 is_stmt 1 view .LVU733
 3463 0018 1220     		movs	r0, #18
 3464 001a FFF7FEFF 		bl	write_rtc_register
 3465              	.LVL249:
 702:Core/Src/AB1805.c **** }
 3466              		.loc 1 702 3 view .LVU734
 703:Core/Src/AB1805.c **** 
 3467              		.loc 1 703 1 is_stmt 0 view .LVU735
 3468 001e 0120     		movs	r0, #1
 3469              		@ sp needed
 3470 0020 10BD     		pop	{r4, pc}
 3471              		.cfi_endproc
 3472              	.LFE572:
 3474              		.section	.text.set_EX1E_interrupt,"ax",%progbits
 3475              		.align	1
 3476              		.global	set_EX1E_interrupt
 3477              		.syntax unified
 3478              		.code	16
 3479              		.thumb_func
 3481              	set_EX1E_interrupt:
 3482              	.LVL250:
 3483              	.LFB573:
 706:Core/Src/AB1805.c ****   uint8_t c1;
 3484              		.loc 1 706 1 is_stmt 1 view -0
 3485              		.cfi_startproc
 3486              		@ args = 0, pretend = 0, frame = 0
 3487              		@ frame_needed = 0, uses_anonymous_args = 0
 706:Core/Src/AB1805.c ****   uint8_t c1;
 3488              		.loc 1 706 1 is_stmt 0 view .LVU737
 3489 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 121


 3490              	.LCFI67:
 3491              		.cfi_def_cfa_offset 8
 3492              		.cfi_offset 4, -8
 3493              		.cfi_offset 14, -4
 3494 0002 0400     		movs	r4, r0
 707:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 3495              		.loc 1 707 3 is_stmt 1 view .LVU738
 708:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX1E_MASK;
 3496              		.loc 1 708 3 view .LVU739
 708:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX1E_MASK;
 3497              		.loc 1 708 8 is_stmt 0 view .LVU740
 3498 0004 1220     		movs	r0, #18
 3499              	.LVL251:
 708:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX1E_MASK;
 3500              		.loc 1 708 8 view .LVU741
 3501 0006 FFF7FEFF 		bl	read_rtc_register
 3502              	.LVL252:
 709:Core/Src/AB1805.c ****   if (value)
 3503              		.loc 1 709 3 is_stmt 1 view .LVU742
 709:Core/Src/AB1805.c ****   if (value)
 3504              		.loc 1 709 6 is_stmt 0 view .LVU743
 3505 000a 0123     		movs	r3, #1
 3506 000c 9843     		bics	r0, r3
 3507              	.LVL253:
 709:Core/Src/AB1805.c ****   if (value)
 3508              		.loc 1 709 6 view .LVU744
 3509 000e C1B2     		uxtb	r1, r0
 3510              	.LVL254:
 710:Core/Src/AB1805.c ****   {
 3511              		.loc 1 710 3 is_stmt 1 view .LVU745
 710:Core/Src/AB1805.c ****   {
 3512              		.loc 1 710 6 is_stmt 0 view .LVU746
 3513 0010 002C     		cmp	r4, #0
 3514 0012 01D0     		beq	.L172
 712:Core/Src/AB1805.c ****   }
 3515              		.loc 1 712 5 is_stmt 1 view .LVU747
 712:Core/Src/AB1805.c ****   }
 3516              		.loc 1 712 8 is_stmt 0 view .LVU748
 3517 0014 1943     		orrs	r1, r3
 3518              	.LVL255:
 712:Core/Src/AB1805.c ****   }
 3519              		.loc 1 712 8 view .LVU749
 3520 0016 C9B2     		uxtb	r1, r1
 3521              	.LVL256:
 3522              	.L172:
 714:Core/Src/AB1805.c ****   return 1;
 3523              		.loc 1 714 3 is_stmt 1 view .LVU750
 3524 0018 1220     		movs	r0, #18
 3525 001a FFF7FEFF 		bl	write_rtc_register
 3526              	.LVL257:
 715:Core/Src/AB1805.c **** }
 3527              		.loc 1 715 3 view .LVU751
 716:Core/Src/AB1805.c **** 
 3528              		.loc 1 716 1 is_stmt 0 view .LVU752
 3529 001e 0120     		movs	r0, #1
 3530              		@ sp needed
 3531 0020 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 122


 3532              		.cfi_endproc
 3533              	.LFE573:
 3535              		.section	.text.set_EX2E_interrupt,"ax",%progbits
 3536              		.align	1
 3537              		.global	set_EX2E_interrupt
 3538              		.syntax unified
 3539              		.code	16
 3540              		.thumb_func
 3542              	set_EX2E_interrupt:
 3543              	.LVL258:
 3544              	.LFB574:
 719:Core/Src/AB1805.c ****   uint8_t c1;
 3545              		.loc 1 719 1 is_stmt 1 view -0
 3546              		.cfi_startproc
 3547              		@ args = 0, pretend = 0, frame = 0
 3548              		@ frame_needed = 0, uses_anonymous_args = 0
 719:Core/Src/AB1805.c ****   uint8_t c1;
 3549              		.loc 1 719 1 is_stmt 0 view .LVU754
 3550 0000 10B5     		push	{r4, lr}
 3551              	.LCFI68:
 3552              		.cfi_def_cfa_offset 8
 3553              		.cfi_offset 4, -8
 3554              		.cfi_offset 14, -4
 3555 0002 0400     		movs	r4, r0
 720:Core/Src/AB1805.c ****   c1 = read_rtc_register(INT_MASK_REGISTER);
 3556              		.loc 1 720 3 is_stmt 1 view .LVU755
 721:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX2E_MASK;
 3557              		.loc 1 721 3 view .LVU756
 721:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX2E_MASK;
 3558              		.loc 1 721 8 is_stmt 0 view .LVU757
 3559 0004 1220     		movs	r0, #18
 3560              	.LVL259:
 721:Core/Src/AB1805.c ****   c1 &= ~INTERRUPT_EX2E_MASK;
 3561              		.loc 1 721 8 view .LVU758
 3562 0006 FFF7FEFF 		bl	read_rtc_register
 3563              	.LVL260:
 722:Core/Src/AB1805.c ****   if (value)
 3564              		.loc 1 722 3 is_stmt 1 view .LVU759
 722:Core/Src/AB1805.c ****   if (value)
 3565              		.loc 1 722 6 is_stmt 0 view .LVU760
 3566 000a 0223     		movs	r3, #2
 3567 000c 9843     		bics	r0, r3
 3568              	.LVL261:
 722:Core/Src/AB1805.c ****   if (value)
 3569              		.loc 1 722 6 view .LVU761
 3570 000e C1B2     		uxtb	r1, r0
 3571              	.LVL262:
 723:Core/Src/AB1805.c ****   {
 3572              		.loc 1 723 3 is_stmt 1 view .LVU762
 723:Core/Src/AB1805.c ****   {
 3573              		.loc 1 723 6 is_stmt 0 view .LVU763
 3574 0010 002C     		cmp	r4, #0
 3575 0012 01D0     		beq	.L174
 725:Core/Src/AB1805.c ****   }
 3576              		.loc 1 725 5 is_stmt 1 view .LVU764
 725:Core/Src/AB1805.c ****   }
 3577              		.loc 1 725 8 is_stmt 0 view .LVU765
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 123


 3578 0014 1943     		orrs	r1, r3
 3579              	.LVL263:
 725:Core/Src/AB1805.c ****   }
 3580              		.loc 1 725 8 view .LVU766
 3581 0016 C9B2     		uxtb	r1, r1
 3582              	.LVL264:
 3583              	.L174:
 727:Core/Src/AB1805.c ****   return 1;
 3584              		.loc 1 727 3 is_stmt 1 view .LVU767
 3585 0018 1220     		movs	r0, #18
 3586 001a FFF7FEFF 		bl	write_rtc_register
 3587              	.LVL265:
 728:Core/Src/AB1805.c **** }
 3588              		.loc 1 728 3 view .LVU768
 729:Core/Src/AB1805.c **** 
 3589              		.loc 1 729 1 is_stmt 0 view .LVU769
 3590 001e 0120     		movs	r0, #1
 3591              		@ sp needed
 3592 0020 10BD     		pop	{r4, pc}
 3593              		.cfi_endproc
 3594              	.LFE574:
 3596              		.section	.text.get_control2,"ax",%progbits
 3597              		.align	1
 3598              		.global	get_control2
 3599              		.syntax unified
 3600              		.code	16
 3601              		.thumb_func
 3603              	get_control2:
 3604              	.LFB575:
 733:Core/Src/AB1805.c ****   _control2 = read_rtc_register(CONTROL2_REGISTER);
 3605              		.loc 1 733 1 is_stmt 1 view -0
 3606              		.cfi_startproc
 3607              		@ args = 0, pretend = 0, frame = 0
 3608              		@ frame_needed = 0, uses_anonymous_args = 0
 3609 0000 10B5     		push	{r4, lr}
 3610              	.LCFI69:
 3611              		.cfi_def_cfa_offset 8
 3612              		.cfi_offset 4, -8
 3613              		.cfi_offset 14, -4
 734:Core/Src/AB1805.c ****   return _control2;
 3614              		.loc 1 734 3 view .LVU771
 734:Core/Src/AB1805.c ****   return _control2;
 3615              		.loc 1 734 15 is_stmt 0 view .LVU772
 3616 0002 1120     		movs	r0, #17
 3617 0004 FFF7FEFF 		bl	read_rtc_register
 3618              	.LVL266:
 734:Core/Src/AB1805.c ****   return _control2;
 3619              		.loc 1 734 13 view .LVU773
 3620 0008 014B     		ldr	r3, .L176
 3621 000a 1870     		strb	r0, [r3]
 735:Core/Src/AB1805.c **** }
 3622              		.loc 1 735 3 is_stmt 1 view .LVU774
 736:Core/Src/AB1805.c **** 
 3623              		.loc 1 736 1 is_stmt 0 view .LVU775
 3624              		@ sp needed
 3625 000c 10BD     		pop	{r4, pc}
 3626              	.L177:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 124


 3627 000e C046     		.align	2
 3628              	.L176:
 3629 0010 00000000 		.word	_control2
 3630              		.cfi_endproc
 3631              	.LFE575:
 3633              		.section	.text.get_RS1E_control2,"ax",%progbits
 3634              		.align	1
 3635              		.global	get_RS1E_control2
 3636              		.syntax unified
 3637              		.code	16
 3638              		.thumb_func
 3640              	get_RS1E_control2:
 3641              	.LFB576:
 739:Core/Src/AB1805.c ****   get_control2();
 3642              		.loc 1 739 1 is_stmt 1 view -0
 3643              		.cfi_startproc
 3644              		@ args = 0, pretend = 0, frame = 0
 3645              		@ frame_needed = 0, uses_anonymous_args = 0
 3646 0000 10B5     		push	{r4, lr}
 3647              	.LCFI70:
 3648              		.cfi_def_cfa_offset 8
 3649              		.cfi_offset 4, -8
 3650              		.cfi_offset 14, -4
 740:Core/Src/AB1805.c ****   return (_control2 & (CONTROL2_RS1E_MASK > 5));
 3651              		.loc 1 740 3 view .LVU777
 3652 0002 FFF7FEFF 		bl	get_control2
 3653              	.LVL267:
 741:Core/Src/AB1805.c **** };
 3654              		.loc 1 741 3 view .LVU778
 741:Core/Src/AB1805.c **** };
 3655              		.loc 1 741 21 is_stmt 0 view .LVU779
 3656 0006 024B     		ldr	r3, .L179
 3657 0008 1B78     		ldrb	r3, [r3]
 3658 000a 0120     		movs	r0, #1
 3659 000c 1840     		ands	r0, r3
 742:Core/Src/AB1805.c **** 
 3660              		.loc 1 742 1 view .LVU780
 3661              		@ sp needed
 3662 000e 10BD     		pop	{r4, pc}
 3663              	.L180:
 3664              		.align	2
 3665              	.L179:
 3666 0010 00000000 		.word	_control2
 3667              		.cfi_endproc
 3668              	.LFE576:
 3670              		.section	.text.get_OUT2S_control2,"ax",%progbits
 3671              		.align	1
 3672              		.global	get_OUT2S_control2
 3673              		.syntax unified
 3674              		.code	16
 3675              		.thumb_func
 3677              	get_OUT2S_control2:
 3678              	.LFB577:
 745:Core/Src/AB1805.c ****   get_control2();
 3679              		.loc 1 745 1 is_stmt 1 view -0
 3680              		.cfi_startproc
 3681              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 125


 3682              		@ frame_needed = 0, uses_anonymous_args = 0
 3683 0000 10B5     		push	{r4, lr}
 3684              	.LCFI71:
 3685              		.cfi_def_cfa_offset 8
 3686              		.cfi_offset 4, -8
 3687              		.cfi_offset 14, -4
 746:Core/Src/AB1805.c ****   return (_control2 & (CONTROL2_OUT2S_MASK > 2));
 3688              		.loc 1 746 3 view .LVU782
 3689 0002 FFF7FEFF 		bl	get_control2
 3690              	.LVL268:
 747:Core/Src/AB1805.c **** };
 3691              		.loc 1 747 3 view .LVU783
 747:Core/Src/AB1805.c **** };
 3692              		.loc 1 747 21 is_stmt 0 view .LVU784
 3693 0006 024B     		ldr	r3, .L182
 3694 0008 1B78     		ldrb	r3, [r3]
 3695 000a 0120     		movs	r0, #1
 3696 000c 1840     		ands	r0, r3
 748:Core/Src/AB1805.c **** 
 3697              		.loc 1 748 1 view .LVU785
 3698              		@ sp needed
 3699 000e 10BD     		pop	{r4, pc}
 3700              	.L183:
 3701              		.align	2
 3702              	.L182:
 3703 0010 00000000 		.word	_control2
 3704              		.cfi_endproc
 3705              	.LFE577:
 3707              		.section	.text.get_OUT1S_control2,"ax",%progbits
 3708              		.align	1
 3709              		.global	get_OUT1S_control2
 3710              		.syntax unified
 3711              		.code	16
 3712              		.thumb_func
 3714              	get_OUT1S_control2:
 3715              	.LFB578:
 751:Core/Src/AB1805.c ****   get_control2();
 3716              		.loc 1 751 1 is_stmt 1 view -0
 3717              		.cfi_startproc
 3718              		@ args = 0, pretend = 0, frame = 0
 3719              		@ frame_needed = 0, uses_anonymous_args = 0
 3720 0000 10B5     		push	{r4, lr}
 3721              	.LCFI72:
 3722              		.cfi_def_cfa_offset 8
 3723              		.cfi_offset 4, -8
 3724              		.cfi_offset 14, -4
 752:Core/Src/AB1805.c ****   return (_control2 & (CONTROL2_OUT1S_MASK));
 3725              		.loc 1 752 3 view .LVU787
 3726 0002 FFF7FEFF 		bl	get_control2
 3727              	.LVL269:
 753:Core/Src/AB1805.c **** };
 3728              		.loc 1 753 3 view .LVU788
 753:Core/Src/AB1805.c **** };
 3729              		.loc 1 753 21 is_stmt 0 view .LVU789
 3730 0006 024B     		ldr	r3, .L185
 3731 0008 1B78     		ldrb	r3, [r3]
 3732 000a 0320     		movs	r0, #3
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 126


 3733 000c 1840     		ands	r0, r3
 754:Core/Src/AB1805.c **** 
 3734              		.loc 1 754 1 view .LVU790
 3735              		@ sp needed
 3736 000e 10BD     		pop	{r4, pc}
 3737              	.L186:
 3738              		.align	2
 3739              	.L185:
 3740 0010 00000000 		.word	_control2
 3741              		.cfi_endproc
 3742              	.LFE578:
 3744              		.section	.text.set_control2,"ax",%progbits
 3745              		.align	1
 3746              		.global	set_control2
 3747              		.syntax unified
 3748              		.code	16
 3749              		.thumb_func
 3751              	set_control2:
 3752              	.LVL270:
 3753              	.LFB579:
 757:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, value);
 3754              		.loc 1 757 1 is_stmt 1 view -0
 3755              		.cfi_startproc
 3756              		@ args = 0, pretend = 0, frame = 0
 3757              		@ frame_needed = 0, uses_anonymous_args = 0
 757:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, value);
 3758              		.loc 1 757 1 is_stmt 0 view .LVU792
 3759 0000 10B5     		push	{r4, lr}
 3760              	.LCFI73:
 3761              		.cfi_def_cfa_offset 8
 3762              		.cfi_offset 4, -8
 3763              		.cfi_offset 14, -4
 3764 0002 0100     		movs	r1, r0
 758:Core/Src/AB1805.c ****   _control2 = read_rtc_register(CONTROL2_REGISTER);
 3765              		.loc 1 758 3 is_stmt 1 view .LVU793
 3766 0004 1120     		movs	r0, #17
 3767              	.LVL271:
 758:Core/Src/AB1805.c ****   _control2 = read_rtc_register(CONTROL2_REGISTER);
 3768              		.loc 1 758 3 is_stmt 0 view .LVU794
 3769 0006 FFF7FEFF 		bl	write_rtc_register
 3770              	.LVL272:
 759:Core/Src/AB1805.c ****   return _control2;
 3771              		.loc 1 759 3 is_stmt 1 view .LVU795
 759:Core/Src/AB1805.c ****   return _control2;
 3772              		.loc 1 759 15 is_stmt 0 view .LVU796
 3773 000a 1120     		movs	r0, #17
 3774 000c FFF7FEFF 		bl	read_rtc_register
 3775              	.LVL273:
 759:Core/Src/AB1805.c ****   return _control2;
 3776              		.loc 1 759 13 view .LVU797
 3777 0010 014B     		ldr	r3, .L188
 3778 0012 1870     		strb	r0, [r3]
 760:Core/Src/AB1805.c **** }
 3779              		.loc 1 760 3 is_stmt 1 view .LVU798
 761:Core/Src/AB1805.c **** 
 3780              		.loc 1 761 1 is_stmt 0 view .LVU799
 3781              		@ sp needed
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 127


 3782 0014 10BD     		pop	{r4, pc}
 3783              	.L189:
 3784 0016 C046     		.align	2
 3785              	.L188:
 3786 0018 00000000 		.word	_control2
 3787              		.cfi_endproc
 3788              	.LFE579:
 3790              		.section	.text.set_RS1E_control2,"ax",%progbits
 3791              		.align	1
 3792              		.global	set_RS1E_control2
 3793              		.syntax unified
 3794              		.code	16
 3795              		.thumb_func
 3797              	set_RS1E_control2:
 3798              	.LVL274:
 3799              	.LFB580:
 764:Core/Src/AB1805.c ****   uint8_t c1;
 3800              		.loc 1 764 1 is_stmt 1 view -0
 3801              		.cfi_startproc
 3802              		@ args = 0, pretend = 0, frame = 0
 3803              		@ frame_needed = 0, uses_anonymous_args = 0
 764:Core/Src/AB1805.c ****   uint8_t c1;
 3804              		.loc 1 764 1 is_stmt 0 view .LVU801
 3805 0000 70B5     		push	{r4, r5, r6, lr}
 3806              	.LCFI74:
 3807              		.cfi_def_cfa_offset 16
 3808              		.cfi_offset 4, -16
 3809              		.cfi_offset 5, -12
 3810              		.cfi_offset 6, -8
 3811              		.cfi_offset 14, -4
 3812 0002 0500     		movs	r5, r0
 765:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL2_REGISTER);
 3813              		.loc 1 765 3 is_stmt 1 view .LVU802
 766:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_RS1E_MASK;
 3814              		.loc 1 766 3 view .LVU803
 766:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_RS1E_MASK;
 3815              		.loc 1 766 8 is_stmt 0 view .LVU804
 3816 0004 1120     		movs	r0, #17
 3817              	.LVL275:
 766:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_RS1E_MASK;
 3818              		.loc 1 766 8 view .LVU805
 3819 0006 FFF7FEFF 		bl	read_rtc_register
 3820              	.LVL276:
 767:Core/Src/AB1805.c ****   if (value)
 3821              		.loc 1 767 3 is_stmt 1 view .LVU806
 767:Core/Src/AB1805.c ****   if (value)
 3822              		.loc 1 767 6 is_stmt 0 view .LVU807
 3823 000a 2023     		movs	r3, #32
 3824 000c 9843     		bics	r0, r3
 3825              	.LVL277:
 767:Core/Src/AB1805.c ****   if (value)
 3826              		.loc 1 767 6 view .LVU808
 3827 000e C4B2     		uxtb	r4, r0
 3828              	.LVL278:
 768:Core/Src/AB1805.c ****   {
 3829              		.loc 1 768 3 is_stmt 1 view .LVU809
 768:Core/Src/AB1805.c ****   {
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 128


 3830              		.loc 1 768 6 is_stmt 0 view .LVU810
 3831 0010 002D     		cmp	r5, #0
 3832 0012 01D0     		beq	.L191
 770:Core/Src/AB1805.c ****   }
 3833              		.loc 1 770 5 is_stmt 1 view .LVU811
 770:Core/Src/AB1805.c ****   }
 3834              		.loc 1 770 8 is_stmt 0 view .LVU812
 3835 0014 1C43     		orrs	r4, r3
 3836              	.LVL279:
 770:Core/Src/AB1805.c ****   }
 3837              		.loc 1 770 8 view .LVU813
 3838 0016 E4B2     		uxtb	r4, r4
 3839              	.LVL280:
 3840              	.L191:
 772:Core/Src/AB1805.c ****   return c1;
 3841              		.loc 1 772 3 is_stmt 1 view .LVU814
 3842 0018 2100     		movs	r1, r4
 3843 001a 1120     		movs	r0, #17
 3844 001c FFF7FEFF 		bl	write_rtc_register
 3845              	.LVL281:
 773:Core/Src/AB1805.c **** }
 3846              		.loc 1 773 3 view .LVU815
 774:Core/Src/AB1805.c **** 
 3847              		.loc 1 774 1 is_stmt 0 view .LVU816
 3848 0020 2000     		movs	r0, r4
 3849              		@ sp needed
 3850              	.LVL282:
 774:Core/Src/AB1805.c **** 
 3851              		.loc 1 774 1 view .LVU817
 3852 0022 70BD     		pop	{r4, r5, r6, pc}
 3853              		.cfi_endproc
 3854              	.LFE580:
 3856              		.section	.text.set_OUT2S_control2,"ax",%progbits
 3857              		.align	1
 3858              		.global	set_OUT2S_control2
 3859              		.syntax unified
 3860              		.code	16
 3861              		.thumb_func
 3863              	set_OUT2S_control2:
 3864              	.LVL283:
 3865              	.LFB581:
 777:Core/Src/AB1805.c ****   uint8_t c1;
 3866              		.loc 1 777 1 is_stmt 1 view -0
 3867              		.cfi_startproc
 3868              		@ args = 0, pretend = 0, frame = 0
 3869              		@ frame_needed = 0, uses_anonymous_args = 0
 777:Core/Src/AB1805.c ****   uint8_t c1;
 3870              		.loc 1 777 1 is_stmt 0 view .LVU819
 3871 0000 70B5     		push	{r4, r5, r6, lr}
 3872              	.LCFI75:
 3873              		.cfi_def_cfa_offset 16
 3874              		.cfi_offset 4, -16
 3875              		.cfi_offset 5, -12
 3876              		.cfi_offset 6, -8
 3877              		.cfi_offset 14, -4
 3878 0002 0500     		movs	r5, r0
 778:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL2_REGISTER);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 129


 3879              		.loc 1 778 3 is_stmt 1 view .LVU820
 779:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT2S_MASK;
 3880              		.loc 1 779 3 view .LVU821
 779:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT2S_MASK;
 3881              		.loc 1 779 8 is_stmt 0 view .LVU822
 3882 0004 1120     		movs	r0, #17
 3883              	.LVL284:
 779:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT2S_MASK;
 3884              		.loc 1 779 8 view .LVU823
 3885 0006 FFF7FEFF 		bl	read_rtc_register
 3886              	.LVL285:
 780:Core/Src/AB1805.c ****   c1 |= (value << 2) & CONTROL2_OUT2S_MASK;
 3887              		.loc 1 780 3 is_stmt 1 view .LVU824
 780:Core/Src/AB1805.c ****   c1 |= (value << 2) & CONTROL2_OUT2S_MASK;
 3888              		.loc 1 780 6 is_stmt 0 view .LVU825
 3889 000a 1C23     		movs	r3, #28
 3890 000c 9843     		bics	r0, r3
 3891              	.LVL286:
 780:Core/Src/AB1805.c ****   c1 |= (value << 2) & CONTROL2_OUT2S_MASK;
 3892              		.loc 1 780 6 view .LVU826
 3893 000e C4B2     		uxtb	r4, r0
 3894              	.LVL287:
 781:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 3895              		.loc 1 781 3 is_stmt 1 view .LVU827
 781:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 3896              		.loc 1 781 16 is_stmt 0 view .LVU828
 3897 0010 AD00     		lsls	r5, r5, #2
 781:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 3898              		.loc 1 781 22 view .LVU829
 3899 0012 2B40     		ands	r3, r5
 781:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 3900              		.loc 1 781 6 view .LVU830
 3901 0014 1C43     		orrs	r4, r3
 3902              	.LVL288:
 782:Core/Src/AB1805.c ****   return c1;
 3903              		.loc 1 782 3 is_stmt 1 view .LVU831
 3904 0016 2100     		movs	r1, r4
 3905 0018 1120     		movs	r0, #17
 3906 001a FFF7FEFF 		bl	write_rtc_register
 3907              	.LVL289:
 783:Core/Src/AB1805.c **** }
 3908              		.loc 1 783 3 view .LVU832
 784:Core/Src/AB1805.c **** 
 3909              		.loc 1 784 1 is_stmt 0 view .LVU833
 3910 001e 2000     		movs	r0, r4
 3911              		@ sp needed
 3912              	.LVL290:
 784:Core/Src/AB1805.c **** 
 3913              		.loc 1 784 1 view .LVU834
 3914 0020 70BD     		pop	{r4, r5, r6, pc}
 3915              		.cfi_endproc
 3916              	.LFE581:
 3918              		.section	.text.set_OUT1S_control2,"ax",%progbits
 3919              		.align	1
 3920              		.global	set_OUT1S_control2
 3921              		.syntax unified
 3922              		.code	16
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 130


 3923              		.thumb_func
 3925              	set_OUT1S_control2:
 3926              	.LVL291:
 3927              	.LFB582:
 787:Core/Src/AB1805.c ****   uint8_t c1;
 3928              		.loc 1 787 1 is_stmt 1 view -0
 3929              		.cfi_startproc
 3930              		@ args = 0, pretend = 0, frame = 0
 3931              		@ frame_needed = 0, uses_anonymous_args = 0
 787:Core/Src/AB1805.c ****   uint8_t c1;
 3932              		.loc 1 787 1 is_stmt 0 view .LVU836
 3933 0000 70B5     		push	{r4, r5, r6, lr}
 3934              	.LCFI76:
 3935              		.cfi_def_cfa_offset 16
 3936              		.cfi_offset 4, -16
 3937              		.cfi_offset 5, -12
 3938              		.cfi_offset 6, -8
 3939              		.cfi_offset 14, -4
 3940 0002 0500     		movs	r5, r0
 788:Core/Src/AB1805.c ****   c1 = read_rtc_register(CONTROL2_REGISTER);
 3941              		.loc 1 788 3 is_stmt 1 view .LVU837
 789:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT1S_MASK;
 3942              		.loc 1 789 3 view .LVU838
 789:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT1S_MASK;
 3943              		.loc 1 789 8 is_stmt 0 view .LVU839
 3944 0004 1120     		movs	r0, #17
 3945              	.LVL292:
 789:Core/Src/AB1805.c ****   c1 &= ~CONTROL2_OUT1S_MASK;
 3946              		.loc 1 789 8 view .LVU840
 3947 0006 FFF7FEFF 		bl	read_rtc_register
 3948              	.LVL293:
 790:Core/Src/AB1805.c ****   c1 |= (value)&CONTROL2_OUT1S_MASK;
 3949              		.loc 1 790 3 is_stmt 1 view .LVU841
 790:Core/Src/AB1805.c ****   c1 |= (value)&CONTROL2_OUT1S_MASK;
 3950              		.loc 1 790 6 is_stmt 0 view .LVU842
 3951 000a 0323     		movs	r3, #3
 3952 000c 9843     		bics	r0, r3
 3953              	.LVL294:
 790:Core/Src/AB1805.c ****   c1 |= (value)&CONTROL2_OUT1S_MASK;
 3954              		.loc 1 790 6 view .LVU843
 3955 000e C4B2     		uxtb	r4, r0
 3956              	.LVL295:
 791:Core/Src/AB1805.c ****   write_rtc_register(CONTROL2_REGISTER, c1);
 3957              		.loc 1 791 3 is_stmt 1 view .LVU844
 3958 0010 0320     		movs	r0, #3
 3959 0012 2840     		ands	r0, r5
 3960 0014 0443     		orrs	r4, r0
 3961              	.LVL296:
 792:Core/Src/AB1805.c ****   return c1;
 3962              		.loc 1 792 3 view .LVU845
 3963 0016 2100     		movs	r1, r4
 3964 0018 1120     		movs	r0, #17
 3965 001a FFF7FEFF 		bl	write_rtc_register
 3966              	.LVL297:
 793:Core/Src/AB1805.c **** }
 3967              		.loc 1 793 3 view .LVU846
 794:Core/Src/AB1805.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 131


 3968              		.loc 1 794 1 is_stmt 0 view .LVU847
 3969 001e 2000     		movs	r0, r4
 3970              		@ sp needed
 3971              	.LVL298:
 794:Core/Src/AB1805.c **** 
 3972              		.loc 1 794 1 view .LVU848
 3973 0020 70BD     		pop	{r4, r5, r6, pc}
 3974              		.cfi_endproc
 3975              	.LFE582:
 3977              		.section	.text.get_sleep,"ax",%progbits
 3978              		.align	1
 3979              		.global	get_sleep
 3980              		.syntax unified
 3981              		.code	16
 3982              		.thumb_func
 3984              	get_sleep:
 3985              	.LFB583:
 798:Core/Src/AB1805.c ****   _sleep_mode = read_rtc_register(SLEEP_CONTROL_REGISTER);
 3986              		.loc 1 798 1 is_stmt 1 view -0
 3987              		.cfi_startproc
 3988              		@ args = 0, pretend = 0, frame = 0
 3989              		@ frame_needed = 0, uses_anonymous_args = 0
 3990 0000 10B5     		push	{r4, lr}
 3991              	.LCFI77:
 3992              		.cfi_def_cfa_offset 8
 3993              		.cfi_offset 4, -8
 3994              		.cfi_offset 14, -4
 799:Core/Src/AB1805.c ****   return _sleep_mode;
 3995              		.loc 1 799 3 view .LVU850
 799:Core/Src/AB1805.c ****   return _sleep_mode;
 3996              		.loc 1 799 17 is_stmt 0 view .LVU851
 3997 0002 1720     		movs	r0, #23
 3998 0004 FFF7FEFF 		bl	read_rtc_register
 3999              	.LVL299:
 799:Core/Src/AB1805.c ****   return _sleep_mode;
 4000              		.loc 1 799 15 view .LVU852
 4001 0008 014B     		ldr	r3, .L195
 4002 000a 1870     		strb	r0, [r3]
 800:Core/Src/AB1805.c **** }
 4003              		.loc 1 800 3 is_stmt 1 view .LVU853
 801:Core/Src/AB1805.c **** 
 4004              		.loc 1 801 1 is_stmt 0 view .LVU854
 4005              		@ sp needed
 4006 000c 10BD     		pop	{r4, pc}
 4007              	.L196:
 4008 000e C046     		.align	2
 4009              	.L195:
 4010 0010 00000000 		.word	_sleep_mode
 4011              		.cfi_endproc
 4012              	.LFE583:
 4014              		.section	.text.get_SLP_sleep,"ax",%progbits
 4015              		.align	1
 4016              		.global	get_SLP_sleep
 4017              		.syntax unified
 4018              		.code	16
 4019              		.thumb_func
 4021              	get_SLP_sleep:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 132


 4022              	.LFB584:
 804:Core/Src/AB1805.c ****   get_sleep();
 4023              		.loc 1 804 1 is_stmt 1 view -0
 4024              		.cfi_startproc
 4025              		@ args = 0, pretend = 0, frame = 0
 4026              		@ frame_needed = 0, uses_anonymous_args = 0
 4027 0000 10B5     		push	{r4, lr}
 4028              	.LCFI78:
 4029              		.cfi_def_cfa_offset 8
 4030              		.cfi_offset 4, -8
 4031              		.cfi_offset 14, -4
 805:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLP_MASK > 7));
 4032              		.loc 1 805 3 view .LVU856
 4033 0002 FFF7FEFF 		bl	get_sleep
 4034              	.LVL300:
 806:Core/Src/AB1805.c **** };
 4035              		.loc 1 806 3 view .LVU857
 806:Core/Src/AB1805.c **** };
 4036              		.loc 1 806 23 is_stmt 0 view .LVU858
 4037 0006 024B     		ldr	r3, .L198
 4038 0008 1B78     		ldrb	r3, [r3]
 4039 000a 0120     		movs	r0, #1
 4040 000c 1840     		ands	r0, r3
 807:Core/Src/AB1805.c **** 
 4041              		.loc 1 807 1 view .LVU859
 4042              		@ sp needed
 4043 000e 10BD     		pop	{r4, pc}
 4044              	.L199:
 4045              		.align	2
 4046              	.L198:
 4047 0010 00000000 		.word	_sleep_mode
 4048              		.cfi_endproc
 4049              	.LFE584:
 4051              		.section	.text.get_SLRES_sleep,"ax",%progbits
 4052              		.align	1
 4053              		.global	get_SLRES_sleep
 4054              		.syntax unified
 4055              		.code	16
 4056              		.thumb_func
 4058              	get_SLRES_sleep:
 4059              	.LFB585:
 810:Core/Src/AB1805.c ****   get_sleep();
 4060              		.loc 1 810 1 is_stmt 1 view -0
 4061              		.cfi_startproc
 4062              		@ args = 0, pretend = 0, frame = 0
 4063              		@ frame_needed = 0, uses_anonymous_args = 0
 4064 0000 10B5     		push	{r4, lr}
 4065              	.LCFI79:
 4066              		.cfi_def_cfa_offset 8
 4067              		.cfi_offset 4, -8
 4068              		.cfi_offset 14, -4
 811:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLRES_MASK > 6));
 4069              		.loc 1 811 3 view .LVU861
 4070 0002 FFF7FEFF 		bl	get_sleep
 4071              	.LVL301:
 812:Core/Src/AB1805.c **** };
 4072              		.loc 1 812 3 view .LVU862
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 133


 812:Core/Src/AB1805.c **** };
 4073              		.loc 1 812 23 is_stmt 0 view .LVU863
 4074 0006 024B     		ldr	r3, .L201
 4075 0008 1B78     		ldrb	r3, [r3]
 4076 000a 0120     		movs	r0, #1
 4077 000c 1840     		ands	r0, r3
 813:Core/Src/AB1805.c **** 
 4078              		.loc 1 813 1 view .LVU864
 4079              		@ sp needed
 4080 000e 10BD     		pop	{r4, pc}
 4081              	.L202:
 4082              		.align	2
 4083              	.L201:
 4084 0010 00000000 		.word	_sleep_mode
 4085              		.cfi_endproc
 4086              	.LFE585:
 4088              		.section	.text.get_EX2P_sleep,"ax",%progbits
 4089              		.align	1
 4090              		.global	get_EX2P_sleep
 4091              		.syntax unified
 4092              		.code	16
 4093              		.thumb_func
 4095              	get_EX2P_sleep:
 4096              	.LFB586:
 816:Core/Src/AB1805.c ****   get_sleep();
 4097              		.loc 1 816 1 is_stmt 1 view -0
 4098              		.cfi_startproc
 4099              		@ args = 0, pretend = 0, frame = 0
 4100              		@ frame_needed = 0, uses_anonymous_args = 0
 4101 0000 10B5     		push	{r4, lr}
 4102              	.LCFI80:
 4103              		.cfi_def_cfa_offset 8
 4104              		.cfi_offset 4, -8
 4105              		.cfi_offset 14, -4
 817:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_EX2P_MASK > 5));
 4106              		.loc 1 817 3 view .LVU866
 4107 0002 FFF7FEFF 		bl	get_sleep
 4108              	.LVL302:
 818:Core/Src/AB1805.c **** };
 4109              		.loc 1 818 3 view .LVU867
 818:Core/Src/AB1805.c **** };
 4110              		.loc 1 818 23 is_stmt 0 view .LVU868
 4111 0006 024B     		ldr	r3, .L204
 4112 0008 1B78     		ldrb	r3, [r3]
 4113 000a 0120     		movs	r0, #1
 4114 000c 1840     		ands	r0, r3
 819:Core/Src/AB1805.c **** 
 4115              		.loc 1 819 1 view .LVU869
 4116              		@ sp needed
 4117 000e 10BD     		pop	{r4, pc}
 4118              	.L205:
 4119              		.align	2
 4120              	.L204:
 4121 0010 00000000 		.word	_sleep_mode
 4122              		.cfi_endproc
 4123              	.LFE586:
 4125              		.section	.text.get_EX1P_sleep,"ax",%progbits
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 134


 4126              		.align	1
 4127              		.global	get_EX1P_sleep
 4128              		.syntax unified
 4129              		.code	16
 4130              		.thumb_func
 4132              	get_EX1P_sleep:
 4133              	.LFB587:
 822:Core/Src/AB1805.c ****   get_sleep();
 4134              		.loc 1 822 1 is_stmt 1 view -0
 4135              		.cfi_startproc
 4136              		@ args = 0, pretend = 0, frame = 0
 4137              		@ frame_needed = 0, uses_anonymous_args = 0
 4138 0000 10B5     		push	{r4, lr}
 4139              	.LCFI81:
 4140              		.cfi_def_cfa_offset 8
 4141              		.cfi_offset 4, -8
 4142              		.cfi_offset 14, -4
 823:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_EX1P_MASK > 4));
 4143              		.loc 1 823 3 view .LVU871
 4144 0002 FFF7FEFF 		bl	get_sleep
 4145              	.LVL303:
 824:Core/Src/AB1805.c **** };
 4146              		.loc 1 824 3 view .LVU872
 824:Core/Src/AB1805.c **** };
 4147              		.loc 1 824 23 is_stmt 0 view .LVU873
 4148 0006 024B     		ldr	r3, .L207
 4149 0008 1B78     		ldrb	r3, [r3]
 4150 000a 0120     		movs	r0, #1
 4151 000c 1840     		ands	r0, r3
 825:Core/Src/AB1805.c **** 
 4152              		.loc 1 825 1 view .LVU874
 4153              		@ sp needed
 4154 000e 10BD     		pop	{r4, pc}
 4155              	.L208:
 4156              		.align	2
 4157              	.L207:
 4158 0010 00000000 		.word	_sleep_mode
 4159              		.cfi_endproc
 4160              	.LFE587:
 4162              		.section	.text.get_SLST_sleep,"ax",%progbits
 4163              		.align	1
 4164              		.global	get_SLST_sleep
 4165              		.syntax unified
 4166              		.code	16
 4167              		.thumb_func
 4169              	get_SLST_sleep:
 4170              	.LFB588:
 828:Core/Src/AB1805.c ****   get_sleep();
 4171              		.loc 1 828 1 is_stmt 1 view -0
 4172              		.cfi_startproc
 4173              		@ args = 0, pretend = 0, frame = 0
 4174              		@ frame_needed = 0, uses_anonymous_args = 0
 4175 0000 10B5     		push	{r4, lr}
 4176              	.LCFI82:
 4177              		.cfi_def_cfa_offset 8
 4178              		.cfi_offset 4, -8
 4179              		.cfi_offset 14, -4
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 135


 829:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLST_MASK > 3));
 4180              		.loc 1 829 3 view .LVU876
 4181 0002 FFF7FEFF 		bl	get_sleep
 4182              	.LVL304:
 830:Core/Src/AB1805.c **** };
 4183              		.loc 1 830 3 view .LVU877
 830:Core/Src/AB1805.c **** };
 4184              		.loc 1 830 23 is_stmt 0 view .LVU878
 4185 0006 024B     		ldr	r3, .L210
 4186 0008 1B78     		ldrb	r3, [r3]
 4187 000a 0120     		movs	r0, #1
 4188 000c 1840     		ands	r0, r3
 831:Core/Src/AB1805.c **** 
 4189              		.loc 1 831 1 view .LVU879
 4190              		@ sp needed
 4191 000e 10BD     		pop	{r4, pc}
 4192              	.L211:
 4193              		.align	2
 4194              	.L210:
 4195 0010 00000000 		.word	_sleep_mode
 4196              		.cfi_endproc
 4197              	.LFE588:
 4199              		.section	.text.get_SLTO_sleep,"ax",%progbits
 4200              		.align	1
 4201              		.global	get_SLTO_sleep
 4202              		.syntax unified
 4203              		.code	16
 4204              		.thumb_func
 4206              	get_SLTO_sleep:
 4207              	.LFB589:
 834:Core/Src/AB1805.c ****   get_sleep();
 4208              		.loc 1 834 1 is_stmt 1 view -0
 4209              		.cfi_startproc
 4210              		@ args = 0, pretend = 0, frame = 0
 4211              		@ frame_needed = 0, uses_anonymous_args = 0
 4212 0000 10B5     		push	{r4, lr}
 4213              	.LCFI83:
 4214              		.cfi_def_cfa_offset 8
 4215              		.cfi_offset 4, -8
 4216              		.cfi_offset 14, -4
 835:Core/Src/AB1805.c ****   return (_sleep_mode & (SLEEP_CONTROL_SLTO_MASK));
 4217              		.loc 1 835 3 view .LVU881
 4218 0002 FFF7FEFF 		bl	get_sleep
 4219              	.LVL305:
 836:Core/Src/AB1805.c **** };
 4220              		.loc 1 836 3 view .LVU882
 836:Core/Src/AB1805.c **** };
 4221              		.loc 1 836 23 is_stmt 0 view .LVU883
 4222 0006 024B     		ldr	r3, .L213
 4223 0008 1B78     		ldrb	r3, [r3]
 4224 000a 0720     		movs	r0, #7
 4225 000c 1840     		ands	r0, r3
 837:Core/Src/AB1805.c **** 
 4226              		.loc 1 837 1 view .LVU884
 4227              		@ sp needed
 4228 000e 10BD     		pop	{r4, pc}
 4229              	.L214:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 136


 4230              		.align	2
 4231              	.L213:
 4232 0010 00000000 		.word	_sleep_mode
 4233              		.cfi_endproc
 4234              	.LFE589:
 4236              		.section	.text.set_sleep,"ax",%progbits
 4237              		.align	1
 4238              		.global	set_sleep
 4239              		.syntax unified
 4240              		.code	16
 4241              		.thumb_func
 4243              	set_sleep:
 4244              	.LVL306:
 4245              	.LFB590:
 840:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, value);
 4246              		.loc 1 840 1 is_stmt 1 view -0
 4247              		.cfi_startproc
 4248              		@ args = 0, pretend = 0, frame = 0
 4249              		@ frame_needed = 0, uses_anonymous_args = 0
 840:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, value);
 4250              		.loc 1 840 1 is_stmt 0 view .LVU886
 4251 0000 10B5     		push	{r4, lr}
 4252              	.LCFI84:
 4253              		.cfi_def_cfa_offset 8
 4254              		.cfi_offset 4, -8
 4255              		.cfi_offset 14, -4
 4256 0002 0100     		movs	r1, r0
 841:Core/Src/AB1805.c ****   _sleep_mode = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4257              		.loc 1 841 3 is_stmt 1 view .LVU887
 4258 0004 1720     		movs	r0, #23
 4259              	.LVL307:
 841:Core/Src/AB1805.c ****   _sleep_mode = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4260              		.loc 1 841 3 is_stmt 0 view .LVU888
 4261 0006 FFF7FEFF 		bl	write_rtc_register
 4262              	.LVL308:
 842:Core/Src/AB1805.c ****   return _sleep_mode;
 4263              		.loc 1 842 3 is_stmt 1 view .LVU889
 842:Core/Src/AB1805.c ****   return _sleep_mode;
 4264              		.loc 1 842 17 is_stmt 0 view .LVU890
 4265 000a 1720     		movs	r0, #23
 4266 000c FFF7FEFF 		bl	read_rtc_register
 4267              	.LVL309:
 842:Core/Src/AB1805.c ****   return _sleep_mode;
 4268              		.loc 1 842 15 view .LVU891
 4269 0010 014B     		ldr	r3, .L216
 4270 0012 1870     		strb	r0, [r3]
 843:Core/Src/AB1805.c **** }
 4271              		.loc 1 843 3 is_stmt 1 view .LVU892
 844:Core/Src/AB1805.c **** 
 4272              		.loc 1 844 1 is_stmt 0 view .LVU893
 4273              		@ sp needed
 4274 0014 10BD     		pop	{r4, pc}
 4275              	.L217:
 4276 0016 C046     		.align	2
 4277              	.L216:
 4278 0018 00000000 		.word	_sleep_mode
 4279              		.cfi_endproc
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 137


 4280              	.LFE590:
 4282              		.section	.text.set_SLP_sleep,"ax",%progbits
 4283              		.align	1
 4284              		.global	set_SLP_sleep
 4285              		.syntax unified
 4286              		.code	16
 4287              		.thumb_func
 4289              	set_SLP_sleep:
 4290              	.LVL310:
 4291              	.LFB591:
 847:Core/Src/AB1805.c ****   uint8_t c1;
 4292              		.loc 1 847 1 is_stmt 1 view -0
 4293              		.cfi_startproc
 4294              		@ args = 0, pretend = 0, frame = 0
 4295              		@ frame_needed = 0, uses_anonymous_args = 0
 847:Core/Src/AB1805.c ****   uint8_t c1;
 4296              		.loc 1 847 1 is_stmt 0 view .LVU895
 4297 0000 70B5     		push	{r4, r5, r6, lr}
 4298              	.LCFI85:
 4299              		.cfi_def_cfa_offset 16
 4300              		.cfi_offset 4, -16
 4301              		.cfi_offset 5, -12
 4302              		.cfi_offset 6, -8
 4303              		.cfi_offset 14, -4
 4304 0002 0500     		movs	r5, r0
 848:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4305              		.loc 1 848 3 is_stmt 1 view .LVU896
 849:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLP_MASK;
 4306              		.loc 1 849 3 view .LVU897
 849:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLP_MASK;
 4307              		.loc 1 849 8 is_stmt 0 view .LVU898
 4308 0004 1720     		movs	r0, #23
 4309              	.LVL311:
 849:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLP_MASK;
 4310              		.loc 1 849 8 view .LVU899
 4311 0006 FFF7FEFF 		bl	read_rtc_register
 4312              	.LVL312:
 850:Core/Src/AB1805.c ****   if (value)
 4313              		.loc 1 850 3 is_stmt 1 view .LVU900
 850:Core/Src/AB1805.c ****   if (value)
 4314              		.loc 1 850 6 is_stmt 0 view .LVU901
 4315 000a 7F24     		movs	r4, #127
 4316 000c 0440     		ands	r4, r0
 4317              	.LVL313:
 851:Core/Src/AB1805.c ****   {
 4318              		.loc 1 851 3 is_stmt 1 view .LVU902
 851:Core/Src/AB1805.c ****   {
 4319              		.loc 1 851 6 is_stmt 0 view .LVU903
 4320 000e 002D     		cmp	r5, #0
 4321 0010 03D0     		beq	.L219
 853:Core/Src/AB1805.c ****   }
 4322              		.loc 1 853 5 is_stmt 1 view .LVU904
 853:Core/Src/AB1805.c ****   }
 4323              		.loc 1 853 8 is_stmt 0 view .LVU905
 4324 0012 8023     		movs	r3, #128
 4325 0014 5B42     		rsbs	r3, r3, #0
 4326 0016 1C43     		orrs	r4, r3
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 138


 4327              	.LVL314:
 853:Core/Src/AB1805.c ****   }
 4328              		.loc 1 853 8 view .LVU906
 4329 0018 E4B2     		uxtb	r4, r4
 4330              	.LVL315:
 4331              	.L219:
 855:Core/Src/AB1805.c ****   return c1;
 4332              		.loc 1 855 3 is_stmt 1 view .LVU907
 4333 001a 2100     		movs	r1, r4
 4334 001c 1720     		movs	r0, #23
 4335 001e FFF7FEFF 		bl	write_rtc_register
 4336              	.LVL316:
 856:Core/Src/AB1805.c **** }
 4337              		.loc 1 856 3 view .LVU908
 857:Core/Src/AB1805.c **** 
 4338              		.loc 1 857 1 is_stmt 0 view .LVU909
 4339 0022 2000     		movs	r0, r4
 4340              		@ sp needed
 4341              	.LVL317:
 857:Core/Src/AB1805.c **** 
 4342              		.loc 1 857 1 view .LVU910
 4343 0024 70BD     		pop	{r4, r5, r6, pc}
 4344              		.cfi_endproc
 4345              	.LFE591:
 4347              		.section	.text.set_SLRES_sleep,"ax",%progbits
 4348              		.align	1
 4349              		.global	set_SLRES_sleep
 4350              		.syntax unified
 4351              		.code	16
 4352              		.thumb_func
 4354              	set_SLRES_sleep:
 4355              	.LVL318:
 4356              	.LFB592:
 860:Core/Src/AB1805.c ****   uint8_t c1;
 4357              		.loc 1 860 1 is_stmt 1 view -0
 4358              		.cfi_startproc
 4359              		@ args = 0, pretend = 0, frame = 0
 4360              		@ frame_needed = 0, uses_anonymous_args = 0
 860:Core/Src/AB1805.c ****   uint8_t c1;
 4361              		.loc 1 860 1 is_stmt 0 view .LVU912
 4362 0000 70B5     		push	{r4, r5, r6, lr}
 4363              	.LCFI86:
 4364              		.cfi_def_cfa_offset 16
 4365              		.cfi_offset 4, -16
 4366              		.cfi_offset 5, -12
 4367              		.cfi_offset 6, -8
 4368              		.cfi_offset 14, -4
 4369 0002 0500     		movs	r5, r0
 861:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4370              		.loc 1 861 3 is_stmt 1 view .LVU913
 862:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLRES_MASK;
 4371              		.loc 1 862 3 view .LVU914
 862:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLRES_MASK;
 4372              		.loc 1 862 8 is_stmt 0 view .LVU915
 4373 0004 1720     		movs	r0, #23
 4374              	.LVL319:
 862:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLRES_MASK;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 139


 4375              		.loc 1 862 8 view .LVU916
 4376 0006 FFF7FEFF 		bl	read_rtc_register
 4377              	.LVL320:
 863:Core/Src/AB1805.c ****   if (value)
 4378              		.loc 1 863 3 is_stmt 1 view .LVU917
 863:Core/Src/AB1805.c ****   if (value)
 4379              		.loc 1 863 6 is_stmt 0 view .LVU918
 4380 000a 4023     		movs	r3, #64
 4381 000c 9843     		bics	r0, r3
 4382              	.LVL321:
 863:Core/Src/AB1805.c ****   if (value)
 4383              		.loc 1 863 6 view .LVU919
 4384 000e C4B2     		uxtb	r4, r0
 4385              	.LVL322:
 864:Core/Src/AB1805.c ****   {
 4386              		.loc 1 864 3 is_stmt 1 view .LVU920
 864:Core/Src/AB1805.c ****   {
 4387              		.loc 1 864 6 is_stmt 0 view .LVU921
 4388 0010 002D     		cmp	r5, #0
 4389 0012 01D0     		beq	.L221
 866:Core/Src/AB1805.c ****   }
 4390              		.loc 1 866 5 is_stmt 1 view .LVU922
 866:Core/Src/AB1805.c ****   }
 4391              		.loc 1 866 8 is_stmt 0 view .LVU923
 4392 0014 1C43     		orrs	r4, r3
 4393              	.LVL323:
 866:Core/Src/AB1805.c ****   }
 4394              		.loc 1 866 8 view .LVU924
 4395 0016 E4B2     		uxtb	r4, r4
 4396              	.LVL324:
 4397              	.L221:
 868:Core/Src/AB1805.c ****   return c1;
 4398              		.loc 1 868 3 is_stmt 1 view .LVU925
 4399 0018 2100     		movs	r1, r4
 4400 001a 1720     		movs	r0, #23
 4401 001c FFF7FEFF 		bl	write_rtc_register
 4402              	.LVL325:
 869:Core/Src/AB1805.c **** }
 4403              		.loc 1 869 3 view .LVU926
 870:Core/Src/AB1805.c **** 
 4404              		.loc 1 870 1 is_stmt 0 view .LVU927
 4405 0020 2000     		movs	r0, r4
 4406              		@ sp needed
 4407              	.LVL326:
 870:Core/Src/AB1805.c **** 
 4408              		.loc 1 870 1 view .LVU928
 4409 0022 70BD     		pop	{r4, r5, r6, pc}
 4410              		.cfi_endproc
 4411              	.LFE592:
 4413              		.section	.text.set_EX2P_sleep,"ax",%progbits
 4414              		.align	1
 4415              		.global	set_EX2P_sleep
 4416              		.syntax unified
 4417              		.code	16
 4418              		.thumb_func
 4420              	set_EX2P_sleep:
 4421              	.LVL327:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 140


 4422              	.LFB593:
 873:Core/Src/AB1805.c ****   uint8_t c1;
 4423              		.loc 1 873 1 is_stmt 1 view -0
 4424              		.cfi_startproc
 4425              		@ args = 0, pretend = 0, frame = 0
 4426              		@ frame_needed = 0, uses_anonymous_args = 0
 873:Core/Src/AB1805.c ****   uint8_t c1;
 4427              		.loc 1 873 1 is_stmt 0 view .LVU930
 4428 0000 70B5     		push	{r4, r5, r6, lr}
 4429              	.LCFI87:
 4430              		.cfi_def_cfa_offset 16
 4431              		.cfi_offset 4, -16
 4432              		.cfi_offset 5, -12
 4433              		.cfi_offset 6, -8
 4434              		.cfi_offset 14, -4
 4435 0002 0500     		movs	r5, r0
 874:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4436              		.loc 1 874 3 is_stmt 1 view .LVU931
 875:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX2P_MASK;
 4437              		.loc 1 875 3 view .LVU932
 875:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX2P_MASK;
 4438              		.loc 1 875 8 is_stmt 0 view .LVU933
 4439 0004 1720     		movs	r0, #23
 4440              	.LVL328:
 875:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX2P_MASK;
 4441              		.loc 1 875 8 view .LVU934
 4442 0006 FFF7FEFF 		bl	read_rtc_register
 4443              	.LVL329:
 876:Core/Src/AB1805.c ****   if (value)
 4444              		.loc 1 876 3 is_stmt 1 view .LVU935
 876:Core/Src/AB1805.c ****   if (value)
 4445              		.loc 1 876 6 is_stmt 0 view .LVU936
 4446 000a 2023     		movs	r3, #32
 4447 000c 9843     		bics	r0, r3
 4448              	.LVL330:
 876:Core/Src/AB1805.c ****   if (value)
 4449              		.loc 1 876 6 view .LVU937
 4450 000e C4B2     		uxtb	r4, r0
 4451              	.LVL331:
 877:Core/Src/AB1805.c ****   {
 4452              		.loc 1 877 3 is_stmt 1 view .LVU938
 877:Core/Src/AB1805.c ****   {
 4453              		.loc 1 877 6 is_stmt 0 view .LVU939
 4454 0010 002D     		cmp	r5, #0
 4455 0012 01D0     		beq	.L223
 879:Core/Src/AB1805.c ****   }
 4456              		.loc 1 879 5 is_stmt 1 view .LVU940
 879:Core/Src/AB1805.c ****   }
 4457              		.loc 1 879 8 is_stmt 0 view .LVU941
 4458 0014 1C43     		orrs	r4, r3
 4459              	.LVL332:
 879:Core/Src/AB1805.c ****   }
 4460              		.loc 1 879 8 view .LVU942
 4461 0016 E4B2     		uxtb	r4, r4
 4462              	.LVL333:
 4463              	.L223:
 881:Core/Src/AB1805.c ****   return c1;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 141


 4464              		.loc 1 881 3 is_stmt 1 view .LVU943
 4465 0018 2100     		movs	r1, r4
 4466 001a 1720     		movs	r0, #23
 4467 001c FFF7FEFF 		bl	write_rtc_register
 4468              	.LVL334:
 882:Core/Src/AB1805.c **** }
 4469              		.loc 1 882 3 view .LVU944
 883:Core/Src/AB1805.c **** 
 4470              		.loc 1 883 1 is_stmt 0 view .LVU945
 4471 0020 2000     		movs	r0, r4
 4472              		@ sp needed
 4473              	.LVL335:
 883:Core/Src/AB1805.c **** 
 4474              		.loc 1 883 1 view .LVU946
 4475 0022 70BD     		pop	{r4, r5, r6, pc}
 4476              		.cfi_endproc
 4477              	.LFE593:
 4479              		.section	.text.set_EX1P_sleep,"ax",%progbits
 4480              		.align	1
 4481              		.global	set_EX1P_sleep
 4482              		.syntax unified
 4483              		.code	16
 4484              		.thumb_func
 4486              	set_EX1P_sleep:
 4487              	.LVL336:
 4488              	.LFB594:
 886:Core/Src/AB1805.c ****   uint8_t c1;
 4489              		.loc 1 886 1 is_stmt 1 view -0
 4490              		.cfi_startproc
 4491              		@ args = 0, pretend = 0, frame = 0
 4492              		@ frame_needed = 0, uses_anonymous_args = 0
 886:Core/Src/AB1805.c ****   uint8_t c1;
 4493              		.loc 1 886 1 is_stmt 0 view .LVU948
 4494 0000 70B5     		push	{r4, r5, r6, lr}
 4495              	.LCFI88:
 4496              		.cfi_def_cfa_offset 16
 4497              		.cfi_offset 4, -16
 4498              		.cfi_offset 5, -12
 4499              		.cfi_offset 6, -8
 4500              		.cfi_offset 14, -4
 4501 0002 0500     		movs	r5, r0
 887:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4502              		.loc 1 887 3 is_stmt 1 view .LVU949
 888:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX1P_MASK;
 4503              		.loc 1 888 3 view .LVU950
 888:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX1P_MASK;
 4504              		.loc 1 888 8 is_stmt 0 view .LVU951
 4505 0004 1720     		movs	r0, #23
 4506              	.LVL337:
 888:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_EX1P_MASK;
 4507              		.loc 1 888 8 view .LVU952
 4508 0006 FFF7FEFF 		bl	read_rtc_register
 4509              	.LVL338:
 889:Core/Src/AB1805.c ****   if (value)
 4510              		.loc 1 889 3 is_stmt 1 view .LVU953
 889:Core/Src/AB1805.c ****   if (value)
 4511              		.loc 1 889 6 is_stmt 0 view .LVU954
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 142


 4512 000a 1023     		movs	r3, #16
 4513 000c 9843     		bics	r0, r3
 4514              	.LVL339:
 889:Core/Src/AB1805.c ****   if (value)
 4515              		.loc 1 889 6 view .LVU955
 4516 000e C4B2     		uxtb	r4, r0
 4517              	.LVL340:
 890:Core/Src/AB1805.c ****   {
 4518              		.loc 1 890 3 is_stmt 1 view .LVU956
 890:Core/Src/AB1805.c ****   {
 4519              		.loc 1 890 6 is_stmt 0 view .LVU957
 4520 0010 002D     		cmp	r5, #0
 4521 0012 01D0     		beq	.L225
 892:Core/Src/AB1805.c ****   }
 4522              		.loc 1 892 5 is_stmt 1 view .LVU958
 892:Core/Src/AB1805.c ****   }
 4523              		.loc 1 892 8 is_stmt 0 view .LVU959
 4524 0014 1C43     		orrs	r4, r3
 4525              	.LVL341:
 892:Core/Src/AB1805.c ****   }
 4526              		.loc 1 892 8 view .LVU960
 4527 0016 E4B2     		uxtb	r4, r4
 4528              	.LVL342:
 4529              	.L225:
 894:Core/Src/AB1805.c ****   return c1;
 4530              		.loc 1 894 3 is_stmt 1 view .LVU961
 4531 0018 2100     		movs	r1, r4
 4532 001a 1720     		movs	r0, #23
 4533 001c FFF7FEFF 		bl	write_rtc_register
 4534              	.LVL343:
 895:Core/Src/AB1805.c **** }
 4535              		.loc 1 895 3 view .LVU962
 896:Core/Src/AB1805.c **** 
 4536              		.loc 1 896 1 is_stmt 0 view .LVU963
 4537 0020 2000     		movs	r0, r4
 4538              		@ sp needed
 4539              	.LVL344:
 896:Core/Src/AB1805.c **** 
 4540              		.loc 1 896 1 view .LVU964
 4541 0022 70BD     		pop	{r4, r5, r6, pc}
 4542              		.cfi_endproc
 4543              	.LFE594:
 4545              		.section	.text.clean_SLST_sleep,"ax",%progbits
 4546              		.align	1
 4547              		.global	clean_SLST_sleep
 4548              		.syntax unified
 4549              		.code	16
 4550              		.thumb_func
 4552              	clean_SLST_sleep:
 4553              	.LFB595:
 899:Core/Src/AB1805.c ****   uint8_t c1;
 4554              		.loc 1 899 1 is_stmt 1 view -0
 4555              		.cfi_startproc
 4556              		@ args = 0, pretend = 0, frame = 0
 4557              		@ frame_needed = 0, uses_anonymous_args = 0
 4558 0000 10B5     		push	{r4, lr}
 4559              	.LCFI89:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 143


 4560              		.cfi_def_cfa_offset 8
 4561              		.cfi_offset 4, -8
 4562              		.cfi_offset 14, -4
 900:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4563              		.loc 1 900 3 view .LVU966
 901:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLST_MASK;
 4564              		.loc 1 901 3 view .LVU967
 901:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLST_MASK;
 4565              		.loc 1 901 8 is_stmt 0 view .LVU968
 4566 0002 1720     		movs	r0, #23
 4567 0004 FFF7FEFF 		bl	read_rtc_register
 4568              	.LVL345:
 902:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 4569              		.loc 1 902 3 is_stmt 1 view .LVU969
 902:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 4570              		.loc 1 902 6 is_stmt 0 view .LVU970
 4571 0008 0823     		movs	r3, #8
 4572 000a 9843     		bics	r0, r3
 4573              	.LVL346:
 902:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 4574              		.loc 1 902 6 view .LVU971
 4575 000c C4B2     		uxtb	r4, r0
 4576              	.LVL347:
 903:Core/Src/AB1805.c ****   return c1;
 4577              		.loc 1 903 3 is_stmt 1 view .LVU972
 4578 000e 2100     		movs	r1, r4
 4579 0010 1720     		movs	r0, #23
 4580 0012 FFF7FEFF 		bl	write_rtc_register
 4581              	.LVL348:
 904:Core/Src/AB1805.c **** }
 4582              		.loc 1 904 3 view .LVU973
 905:Core/Src/AB1805.c **** 
 4583              		.loc 1 905 1 is_stmt 0 view .LVU974
 4584 0016 2000     		movs	r0, r4
 4585              		@ sp needed
 4586              	.LVL349:
 905:Core/Src/AB1805.c **** 
 4587              		.loc 1 905 1 view .LVU975
 4588 0018 10BD     		pop	{r4, pc}
 4589              		.cfi_endproc
 4590              	.LFE595:
 4592              		.section	.text.set_SLTO_sleep,"ax",%progbits
 4593              		.align	1
 4594              		.global	set_SLTO_sleep
 4595              		.syntax unified
 4596              		.code	16
 4597              		.thumb_func
 4599              	set_SLTO_sleep:
 4600              	.LVL350:
 4601              	.LFB596:
 908:Core/Src/AB1805.c ****   uint8_t c1;
 4602              		.loc 1 908 1 is_stmt 1 view -0
 4603              		.cfi_startproc
 4604              		@ args = 0, pretend = 0, frame = 0
 4605              		@ frame_needed = 0, uses_anonymous_args = 0
 908:Core/Src/AB1805.c ****   uint8_t c1;
 4606              		.loc 1 908 1 is_stmt 0 view .LVU977
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 144


 4607 0000 70B5     		push	{r4, r5, r6, lr}
 4608              	.LCFI90:
 4609              		.cfi_def_cfa_offset 16
 4610              		.cfi_offset 4, -16
 4611              		.cfi_offset 5, -12
 4612              		.cfi_offset 6, -8
 4613              		.cfi_offset 14, -4
 4614 0002 0500     		movs	r5, r0
 909:Core/Src/AB1805.c ****   c1 = read_rtc_register(SLEEP_CONTROL_REGISTER);
 4615              		.loc 1 909 3 is_stmt 1 view .LVU978
 910:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLTO_MASK;
 4616              		.loc 1 910 3 view .LVU979
 910:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLTO_MASK;
 4617              		.loc 1 910 8 is_stmt 0 view .LVU980
 4618 0004 1720     		movs	r0, #23
 4619              	.LVL351:
 910:Core/Src/AB1805.c ****   c1 &= ~SLEEP_CONTROL_SLTO_MASK;
 4620              		.loc 1 910 8 view .LVU981
 4621 0006 FFF7FEFF 		bl	read_rtc_register
 4622              	.LVL352:
 911:Core/Src/AB1805.c ****   c1 |= value;
 4623              		.loc 1 911 3 is_stmt 1 view .LVU982
 911:Core/Src/AB1805.c ****   c1 |= value;
 4624              		.loc 1 911 6 is_stmt 0 view .LVU983
 4625 000a 0723     		movs	r3, #7
 4626 000c 9843     		bics	r0, r3
 4627              	.LVL353:
 911:Core/Src/AB1805.c ****   c1 |= value;
 4628              		.loc 1 911 6 view .LVU984
 4629 000e C4B2     		uxtb	r4, r0
 4630              	.LVL354:
 912:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 4631              		.loc 1 912 3 is_stmt 1 view .LVU985
 912:Core/Src/AB1805.c ****   write_rtc_register(SLEEP_CONTROL_REGISTER, c1);
 4632              		.loc 1 912 6 is_stmt 0 view .LVU986
 4633 0010 2C43     		orrs	r4, r5
 4634              	.LVL355:
 913:Core/Src/AB1805.c ****   return c1;
 4635              		.loc 1 913 3 is_stmt 1 view .LVU987
 4636 0012 2100     		movs	r1, r4
 4637 0014 1720     		movs	r0, #23
 4638 0016 FFF7FEFF 		bl	write_rtc_register
 4639              	.LVL356:
 914:Core/Src/AB1805.c **** }
 4640              		.loc 1 914 3 view .LVU988
 915:Core/Src/AB1805.c **** 
 4641              		.loc 1 915 1 is_stmt 0 view .LVU989
 4642 001a 2000     		movs	r0, r4
 4643              		@ sp needed
 4644              	.LVL357:
 915:Core/Src/AB1805.c **** 
 4645              		.loc 1 915 1 view .LVU990
 4646 001c 70BD     		pop	{r4, r5, r6, pc}
 4647              		.cfi_endproc
 4648              	.LFE596:
 4650              		.section	.text.get_time_control,"ax",%progbits
 4651              		.align	1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 145


 4652              		.global	get_time_control
 4653              		.syntax unified
 4654              		.code	16
 4655              		.thumb_func
 4657              	get_time_control:
 4658              	.LFB597:
 919:Core/Src/AB1805.c ****   _timer_control_mode = read_rtc_register(TIMER_CONTROL_REGISTER);
 4659              		.loc 1 919 1 is_stmt 1 view -0
 4660              		.cfi_startproc
 4661              		@ args = 0, pretend = 0, frame = 0
 4662              		@ frame_needed = 0, uses_anonymous_args = 0
 4663 0000 10B5     		push	{r4, lr}
 4664              	.LCFI91:
 4665              		.cfi_def_cfa_offset 8
 4666              		.cfi_offset 4, -8
 4667              		.cfi_offset 14, -4
 920:Core/Src/AB1805.c ****   return _timer_control_mode;
 4668              		.loc 1 920 3 view .LVU992
 920:Core/Src/AB1805.c ****   return _timer_control_mode;
 4669              		.loc 1 920 25 is_stmt 0 view .LVU993
 4670 0002 1820     		movs	r0, #24
 4671 0004 FFF7FEFF 		bl	read_rtc_register
 4672              	.LVL358:
 920:Core/Src/AB1805.c ****   return _timer_control_mode;
 4673              		.loc 1 920 23 view .LVU994
 4674 0008 014B     		ldr	r3, .L229
 4675 000a 1870     		strb	r0, [r3]
 921:Core/Src/AB1805.c **** }
 4676              		.loc 1 921 3 is_stmt 1 view .LVU995
 922:Core/Src/AB1805.c **** 
 4677              		.loc 1 922 1 is_stmt 0 view .LVU996
 4678              		@ sp needed
 4679 000c 10BD     		pop	{r4, pc}
 4680              	.L230:
 4681 000e C046     		.align	2
 4682              	.L229:
 4683 0010 00000000 		.word	_timer_control_mode
 4684              		.cfi_endproc
 4685              	.LFE597:
 4687              		.section	.text.get_TE_time_control,"ax",%progbits
 4688              		.align	1
 4689              		.global	get_TE_time_control
 4690              		.syntax unified
 4691              		.code	16
 4692              		.thumb_func
 4694              	get_TE_time_control:
 4695              	.LFB598:
 925:Core/Src/AB1805.c ****   get_time_control();
 4696              		.loc 1 925 1 is_stmt 1 view -0
 4697              		.cfi_startproc
 4698              		@ args = 0, pretend = 0, frame = 0
 4699              		@ frame_needed = 0, uses_anonymous_args = 0
 4700 0000 10B5     		push	{r4, lr}
 4701              	.LCFI92:
 4702              		.cfi_def_cfa_offset 8
 4703              		.cfi_offset 4, -8
 4704              		.cfi_offset 14, -4
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 146


 926:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TE_MASK > 7));
 4705              		.loc 1 926 3 view .LVU998
 4706 0002 FFF7FEFF 		bl	get_time_control
 4707              	.LVL359:
 927:Core/Src/AB1805.c **** };
 4708              		.loc 1 927 3 view .LVU999
 927:Core/Src/AB1805.c **** };
 4709              		.loc 1 927 31 is_stmt 0 view .LVU1000
 4710 0006 024B     		ldr	r3, .L232
 4711 0008 1B78     		ldrb	r3, [r3]
 4712 000a 0120     		movs	r0, #1
 4713 000c 1840     		ands	r0, r3
 928:Core/Src/AB1805.c **** 
 4714              		.loc 1 928 1 view .LVU1001
 4715              		@ sp needed
 4716 000e 10BD     		pop	{r4, pc}
 4717              	.L233:
 4718              		.align	2
 4719              	.L232:
 4720 0010 00000000 		.word	_timer_control_mode
 4721              		.cfi_endproc
 4722              	.LFE598:
 4724              		.section	.text.get_TM_time_control,"ax",%progbits
 4725              		.align	1
 4726              		.global	get_TM_time_control
 4727              		.syntax unified
 4728              		.code	16
 4729              		.thumb_func
 4731              	get_TM_time_control:
 4732              	.LFB599:
 931:Core/Src/AB1805.c ****   get_time_control();
 4733              		.loc 1 931 1 is_stmt 1 view -0
 4734              		.cfi_startproc
 4735              		@ args = 0, pretend = 0, frame = 0
 4736              		@ frame_needed = 0, uses_anonymous_args = 0
 4737 0000 10B5     		push	{r4, lr}
 4738              	.LCFI93:
 4739              		.cfi_def_cfa_offset 8
 4740              		.cfi_offset 4, -8
 4741              		.cfi_offset 14, -4
 932:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TM_MASK > 6));
 4742              		.loc 1 932 3 view .LVU1003
 4743 0002 FFF7FEFF 		bl	get_time_control
 4744              	.LVL360:
 933:Core/Src/AB1805.c **** };
 4745              		.loc 1 933 3 view .LVU1004
 933:Core/Src/AB1805.c **** };
 4746              		.loc 1 933 31 is_stmt 0 view .LVU1005
 4747 0006 024B     		ldr	r3, .L235
 4748 0008 1B78     		ldrb	r3, [r3]
 4749 000a 0120     		movs	r0, #1
 4750 000c 1840     		ands	r0, r3
 934:Core/Src/AB1805.c **** 
 4751              		.loc 1 934 1 view .LVU1006
 4752              		@ sp needed
 4753 000e 10BD     		pop	{r4, pc}
 4754              	.L236:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 147


 4755              		.align	2
 4756              	.L235:
 4757 0010 00000000 		.word	_timer_control_mode
 4758              		.cfi_endproc
 4759              	.LFE599:
 4761              		.section	.text.get_TRPT_time_control,"ax",%progbits
 4762              		.align	1
 4763              		.global	get_TRPT_time_control
 4764              		.syntax unified
 4765              		.code	16
 4766              		.thumb_func
 4768              	get_TRPT_time_control:
 4769              	.LFB600:
 937:Core/Src/AB1805.c ****   get_time_control();
 4770              		.loc 1 937 1 is_stmt 1 view -0
 4771              		.cfi_startproc
 4772              		@ args = 0, pretend = 0, frame = 0
 4773              		@ frame_needed = 0, uses_anonymous_args = 0
 4774 0000 10B5     		push	{r4, lr}
 4775              	.LCFI94:
 4776              		.cfi_def_cfa_offset 8
 4777              		.cfi_offset 4, -8
 4778              		.cfi_offset 14, -4
 938:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TRPT_MASK > 5));
 4779              		.loc 1 938 3 view .LVU1008
 4780 0002 FFF7FEFF 		bl	get_time_control
 4781              	.LVL361:
 939:Core/Src/AB1805.c **** };
 4782              		.loc 1 939 3 view .LVU1009
 939:Core/Src/AB1805.c **** };
 4783              		.loc 1 939 31 is_stmt 0 view .LVU1010
 4784 0006 024B     		ldr	r3, .L238
 4785 0008 1B78     		ldrb	r3, [r3]
 4786 000a 0120     		movs	r0, #1
 4787 000c 1840     		ands	r0, r3
 940:Core/Src/AB1805.c **** 
 4788              		.loc 1 940 1 view .LVU1011
 4789              		@ sp needed
 4790 000e 10BD     		pop	{r4, pc}
 4791              	.L239:
 4792              		.align	2
 4793              	.L238:
 4794 0010 00000000 		.word	_timer_control_mode
 4795              		.cfi_endproc
 4796              	.LFE600:
 4798              		.section	.text.get_RPT_time_control,"ax",%progbits
 4799              		.align	1
 4800              		.global	get_RPT_time_control
 4801              		.syntax unified
 4802              		.code	16
 4803              		.thumb_func
 4805              	get_RPT_time_control:
 4806              	.LFB601:
 943:Core/Src/AB1805.c ****   get_time_control();
 4807              		.loc 1 943 1 is_stmt 1 view -0
 4808              		.cfi_startproc
 4809              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 148


 4810              		@ frame_needed = 0, uses_anonymous_args = 0
 4811 0000 10B5     		push	{r4, lr}
 4812              	.LCFI95:
 4813              		.cfi_def_cfa_offset 8
 4814              		.cfi_offset 4, -8
 4815              		.cfi_offset 14, -4
 944:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_RPT_MASK > 2));
 4816              		.loc 1 944 3 view .LVU1013
 4817 0002 FFF7FEFF 		bl	get_time_control
 4818              	.LVL362:
 945:Core/Src/AB1805.c **** };
 4819              		.loc 1 945 3 view .LVU1014
 945:Core/Src/AB1805.c **** };
 4820              		.loc 1 945 31 is_stmt 0 view .LVU1015
 4821 0006 024B     		ldr	r3, .L241
 4822 0008 1B78     		ldrb	r3, [r3]
 4823 000a 0120     		movs	r0, #1
 4824 000c 1840     		ands	r0, r3
 946:Core/Src/AB1805.c **** 
 4825              		.loc 1 946 1 view .LVU1016
 4826              		@ sp needed
 4827 000e 10BD     		pop	{r4, pc}
 4828              	.L242:
 4829              		.align	2
 4830              	.L241:
 4831 0010 00000000 		.word	_timer_control_mode
 4832              		.cfi_endproc
 4833              	.LFE601:
 4835              		.section	.text.get_TFS_time_control,"ax",%progbits
 4836              		.align	1
 4837              		.global	get_TFS_time_control
 4838              		.syntax unified
 4839              		.code	16
 4840              		.thumb_func
 4842              	get_TFS_time_control:
 4843              	.LFB602:
 949:Core/Src/AB1805.c ****   get_time_control();
 4844              		.loc 1 949 1 is_stmt 1 view -0
 4845              		.cfi_startproc
 4846              		@ args = 0, pretend = 0, frame = 0
 4847              		@ frame_needed = 0, uses_anonymous_args = 0
 4848 0000 10B5     		push	{r4, lr}
 4849              	.LCFI96:
 4850              		.cfi_def_cfa_offset 8
 4851              		.cfi_offset 4, -8
 4852              		.cfi_offset 14, -4
 950:Core/Src/AB1805.c ****   return (_timer_control_mode & (TIMER_CONTROL_TFS_MASK));
 4853              		.loc 1 950 3 view .LVU1018
 4854 0002 FFF7FEFF 		bl	get_time_control
 4855              	.LVL363:
 951:Core/Src/AB1805.c **** };
 4856              		.loc 1 951 3 view .LVU1019
 951:Core/Src/AB1805.c **** };
 4857              		.loc 1 951 31 is_stmt 0 view .LVU1020
 4858 0006 024B     		ldr	r3, .L244
 4859 0008 1B78     		ldrb	r3, [r3]
 4860 000a 0320     		movs	r0, #3
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 149


 4861 000c 1840     		ands	r0, r3
 952:Core/Src/AB1805.c **** 
 4862              		.loc 1 952 1 view .LVU1021
 4863              		@ sp needed
 4864 000e 10BD     		pop	{r4, pc}
 4865              	.L245:
 4866              		.align	2
 4867              	.L244:
 4868 0010 00000000 		.word	_timer_control_mode
 4869              		.cfi_endproc
 4870              	.LFE602:
 4872              		.section	.text.set_time_control,"ax",%progbits
 4873              		.align	1
 4874              		.global	set_time_control
 4875              		.syntax unified
 4876              		.code	16
 4877              		.thumb_func
 4879              	set_time_control:
 4880              	.LVL364:
 4881              	.LFB603:
 955:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, value);
 4882              		.loc 1 955 1 is_stmt 1 view -0
 4883              		.cfi_startproc
 4884              		@ args = 0, pretend = 0, frame = 0
 4885              		@ frame_needed = 0, uses_anonymous_args = 0
 955:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, value);
 4886              		.loc 1 955 1 is_stmt 0 view .LVU1023
 4887 0000 10B5     		push	{r4, lr}
 4888              	.LCFI97:
 4889              		.cfi_def_cfa_offset 8
 4890              		.cfi_offset 4, -8
 4891              		.cfi_offset 14, -4
 4892 0002 0100     		movs	r1, r0
 956:Core/Src/AB1805.c ****   _timer_control_mode = read_rtc_register(TIMER_CONTROL_REGISTER);
 4893              		.loc 1 956 3 is_stmt 1 view .LVU1024
 4894 0004 1820     		movs	r0, #24
 4895              	.LVL365:
 956:Core/Src/AB1805.c ****   _timer_control_mode = read_rtc_register(TIMER_CONTROL_REGISTER);
 4896              		.loc 1 956 3 is_stmt 0 view .LVU1025
 4897 0006 FFF7FEFF 		bl	write_rtc_register
 4898              	.LVL366:
 957:Core/Src/AB1805.c ****   return _timer_control_mode;
 4899              		.loc 1 957 3 is_stmt 1 view .LVU1026
 957:Core/Src/AB1805.c ****   return _timer_control_mode;
 4900              		.loc 1 957 25 is_stmt 0 view .LVU1027
 4901 000a 1820     		movs	r0, #24
 4902 000c FFF7FEFF 		bl	read_rtc_register
 4903              	.LVL367:
 957:Core/Src/AB1805.c ****   return _timer_control_mode;
 4904              		.loc 1 957 23 view .LVU1028
 4905 0010 014B     		ldr	r3, .L247
 4906 0012 1870     		strb	r0, [r3]
 958:Core/Src/AB1805.c **** }
 4907              		.loc 1 958 3 is_stmt 1 view .LVU1029
 959:Core/Src/AB1805.c **** 
 4908              		.loc 1 959 1 is_stmt 0 view .LVU1030
 4909              		@ sp needed
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 150


 4910 0014 10BD     		pop	{r4, pc}
 4911              	.L248:
 4912 0016 C046     		.align	2
 4913              	.L247:
 4914 0018 00000000 		.word	_timer_control_mode
 4915              		.cfi_endproc
 4916              	.LFE603:
 4918              		.section	.text.set_TE_time_control,"ax",%progbits
 4919              		.align	1
 4920              		.global	set_TE_time_control
 4921              		.syntax unified
 4922              		.code	16
 4923              		.thumb_func
 4925              	set_TE_time_control:
 4926              	.LVL368:
 4927              	.LFB604:
 962:Core/Src/AB1805.c ****   uint8_t c1;
 4928              		.loc 1 962 1 is_stmt 1 view -0
 4929              		.cfi_startproc
 4930              		@ args = 0, pretend = 0, frame = 0
 4931              		@ frame_needed = 0, uses_anonymous_args = 0
 962:Core/Src/AB1805.c ****   uint8_t c1;
 4932              		.loc 1 962 1 is_stmt 0 view .LVU1032
 4933 0000 70B5     		push	{r4, r5, r6, lr}
 4934              	.LCFI98:
 4935              		.cfi_def_cfa_offset 16
 4936              		.cfi_offset 4, -16
 4937              		.cfi_offset 5, -12
 4938              		.cfi_offset 6, -8
 4939              		.cfi_offset 14, -4
 4940 0002 0500     		movs	r5, r0
 963:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 4941              		.loc 1 963 3 is_stmt 1 view .LVU1033
 964:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TE_MASK;
 4942              		.loc 1 964 3 view .LVU1034
 964:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TE_MASK;
 4943              		.loc 1 964 8 is_stmt 0 view .LVU1035
 4944 0004 1820     		movs	r0, #24
 4945              	.LVL369:
 964:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TE_MASK;
 4946              		.loc 1 964 8 view .LVU1036
 4947 0006 FFF7FEFF 		bl	read_rtc_register
 4948              	.LVL370:
 965:Core/Src/AB1805.c ****   if (value)
 4949              		.loc 1 965 3 is_stmt 1 view .LVU1037
 965:Core/Src/AB1805.c ****   if (value)
 4950              		.loc 1 965 6 is_stmt 0 view .LVU1038
 4951 000a 7F24     		movs	r4, #127
 4952 000c 0440     		ands	r4, r0
 4953              	.LVL371:
 966:Core/Src/AB1805.c ****   {
 4954              		.loc 1 966 3 is_stmt 1 view .LVU1039
 966:Core/Src/AB1805.c ****   {
 4955              		.loc 1 966 6 is_stmt 0 view .LVU1040
 4956 000e 002D     		cmp	r5, #0
 4957 0010 03D0     		beq	.L250
 968:Core/Src/AB1805.c ****   }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 151


 4958              		.loc 1 968 5 is_stmt 1 view .LVU1041
 968:Core/Src/AB1805.c ****   }
 4959              		.loc 1 968 8 is_stmt 0 view .LVU1042
 4960 0012 8023     		movs	r3, #128
 4961 0014 5B42     		rsbs	r3, r3, #0
 4962 0016 1C43     		orrs	r4, r3
 4963              	.LVL372:
 968:Core/Src/AB1805.c ****   }
 4964              		.loc 1 968 8 view .LVU1043
 4965 0018 E4B2     		uxtb	r4, r4
 4966              	.LVL373:
 4967              	.L250:
 970:Core/Src/AB1805.c ****   return c1;
 4968              		.loc 1 970 3 is_stmt 1 view .LVU1044
 4969 001a 2100     		movs	r1, r4
 4970 001c 1820     		movs	r0, #24
 4971 001e FFF7FEFF 		bl	write_rtc_register
 4972              	.LVL374:
 971:Core/Src/AB1805.c **** }
 4973              		.loc 1 971 3 view .LVU1045
 972:Core/Src/AB1805.c **** 
 4974              		.loc 1 972 1 is_stmt 0 view .LVU1046
 4975 0022 2000     		movs	r0, r4
 4976              		@ sp needed
 4977              	.LVL375:
 972:Core/Src/AB1805.c **** 
 4978              		.loc 1 972 1 view .LVU1047
 4979 0024 70BD     		pop	{r4, r5, r6, pc}
 4980              		.cfi_endproc
 4981              	.LFE604:
 4983              		.section	.text.set_TM_time_control,"ax",%progbits
 4984              		.align	1
 4985              		.global	set_TM_time_control
 4986              		.syntax unified
 4987              		.code	16
 4988              		.thumb_func
 4990              	set_TM_time_control:
 4991              	.LVL376:
 4992              	.LFB605:
 975:Core/Src/AB1805.c ****   uint8_t c1;
 4993              		.loc 1 975 1 is_stmt 1 view -0
 4994              		.cfi_startproc
 4995              		@ args = 0, pretend = 0, frame = 0
 4996              		@ frame_needed = 0, uses_anonymous_args = 0
 975:Core/Src/AB1805.c ****   uint8_t c1;
 4997              		.loc 1 975 1 is_stmt 0 view .LVU1049
 4998 0000 70B5     		push	{r4, r5, r6, lr}
 4999              	.LCFI99:
 5000              		.cfi_def_cfa_offset 16
 5001              		.cfi_offset 4, -16
 5002              		.cfi_offset 5, -12
 5003              		.cfi_offset 6, -8
 5004              		.cfi_offset 14, -4
 5005 0002 0500     		movs	r5, r0
 976:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 5006              		.loc 1 976 3 is_stmt 1 view .LVU1050
 977:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TM_MASK;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 152


 5007              		.loc 1 977 3 view .LVU1051
 977:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TM_MASK;
 5008              		.loc 1 977 8 is_stmt 0 view .LVU1052
 5009 0004 1820     		movs	r0, #24
 5010              	.LVL377:
 977:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TM_MASK;
 5011              		.loc 1 977 8 view .LVU1053
 5012 0006 FFF7FEFF 		bl	read_rtc_register
 5013              	.LVL378:
 978:Core/Src/AB1805.c ****   if (value)
 5014              		.loc 1 978 3 is_stmt 1 view .LVU1054
 978:Core/Src/AB1805.c ****   if (value)
 5015              		.loc 1 978 6 is_stmt 0 view .LVU1055
 5016 000a 4023     		movs	r3, #64
 5017 000c 9843     		bics	r0, r3
 5018              	.LVL379:
 978:Core/Src/AB1805.c ****   if (value)
 5019              		.loc 1 978 6 view .LVU1056
 5020 000e C4B2     		uxtb	r4, r0
 5021              	.LVL380:
 979:Core/Src/AB1805.c ****   {
 5022              		.loc 1 979 3 is_stmt 1 view .LVU1057
 979:Core/Src/AB1805.c ****   {
 5023              		.loc 1 979 6 is_stmt 0 view .LVU1058
 5024 0010 002D     		cmp	r5, #0
 5025 0012 01D0     		beq	.L252
 981:Core/Src/AB1805.c ****   }
 5026              		.loc 1 981 5 is_stmt 1 view .LVU1059
 981:Core/Src/AB1805.c ****   }
 5027              		.loc 1 981 8 is_stmt 0 view .LVU1060
 5028 0014 1C43     		orrs	r4, r3
 5029              	.LVL381:
 981:Core/Src/AB1805.c ****   }
 5030              		.loc 1 981 8 view .LVU1061
 5031 0016 E4B2     		uxtb	r4, r4
 5032              	.LVL382:
 5033              	.L252:
 983:Core/Src/AB1805.c ****   return c1;
 5034              		.loc 1 983 3 is_stmt 1 view .LVU1062
 5035 0018 2100     		movs	r1, r4
 5036 001a 1820     		movs	r0, #24
 5037 001c FFF7FEFF 		bl	write_rtc_register
 5038              	.LVL383:
 984:Core/Src/AB1805.c **** }
 5039              		.loc 1 984 3 view .LVU1063
 985:Core/Src/AB1805.c **** 
 5040              		.loc 1 985 1 is_stmt 0 view .LVU1064
 5041 0020 2000     		movs	r0, r4
 5042              		@ sp needed
 5043              	.LVL384:
 985:Core/Src/AB1805.c **** 
 5044              		.loc 1 985 1 view .LVU1065
 5045 0022 70BD     		pop	{r4, r5, r6, pc}
 5046              		.cfi_endproc
 5047              	.LFE605:
 5049              		.section	.text.set_TRPT_time_control,"ax",%progbits
 5050              		.align	1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 153


 5051              		.global	set_TRPT_time_control
 5052              		.syntax unified
 5053              		.code	16
 5054              		.thumb_func
 5056              	set_TRPT_time_control:
 5057              	.LVL385:
 5058              	.LFB606:
 988:Core/Src/AB1805.c ****   uint8_t c1;
 5059              		.loc 1 988 1 is_stmt 1 view -0
 5060              		.cfi_startproc
 5061              		@ args = 0, pretend = 0, frame = 0
 5062              		@ frame_needed = 0, uses_anonymous_args = 0
 988:Core/Src/AB1805.c ****   uint8_t c1;
 5063              		.loc 1 988 1 is_stmt 0 view .LVU1067
 5064 0000 70B5     		push	{r4, r5, r6, lr}
 5065              	.LCFI100:
 5066              		.cfi_def_cfa_offset 16
 5067              		.cfi_offset 4, -16
 5068              		.cfi_offset 5, -12
 5069              		.cfi_offset 6, -8
 5070              		.cfi_offset 14, -4
 5071 0002 0500     		movs	r5, r0
 989:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 5072              		.loc 1 989 3 is_stmt 1 view .LVU1068
 990:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TRPT_MASK;
 5073              		.loc 1 990 3 view .LVU1069
 990:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TRPT_MASK;
 5074              		.loc 1 990 8 is_stmt 0 view .LVU1070
 5075 0004 1820     		movs	r0, #24
 5076              	.LVL386:
 990:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TRPT_MASK;
 5077              		.loc 1 990 8 view .LVU1071
 5078 0006 FFF7FEFF 		bl	read_rtc_register
 5079              	.LVL387:
 991:Core/Src/AB1805.c ****   if (value)
 5080              		.loc 1 991 3 is_stmt 1 view .LVU1072
 991:Core/Src/AB1805.c ****   if (value)
 5081              		.loc 1 991 6 is_stmt 0 view .LVU1073
 5082 000a 2023     		movs	r3, #32
 5083 000c 9843     		bics	r0, r3
 5084              	.LVL388:
 991:Core/Src/AB1805.c ****   if (value)
 5085              		.loc 1 991 6 view .LVU1074
 5086 000e C4B2     		uxtb	r4, r0
 5087              	.LVL389:
 992:Core/Src/AB1805.c ****   {
 5088              		.loc 1 992 3 is_stmt 1 view .LVU1075
 992:Core/Src/AB1805.c ****   {
 5089              		.loc 1 992 6 is_stmt 0 view .LVU1076
 5090 0010 002D     		cmp	r5, #0
 5091 0012 01D0     		beq	.L254
 994:Core/Src/AB1805.c ****   }
 5092              		.loc 1 994 5 is_stmt 1 view .LVU1077
 994:Core/Src/AB1805.c ****   }
 5093              		.loc 1 994 8 is_stmt 0 view .LVU1078
 5094 0014 1C43     		orrs	r4, r3
 5095              	.LVL390:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 154


 994:Core/Src/AB1805.c ****   }
 5096              		.loc 1 994 8 view .LVU1079
 5097 0016 E4B2     		uxtb	r4, r4
 5098              	.LVL391:
 5099              	.L254:
 996:Core/Src/AB1805.c ****   return c1;
 5100              		.loc 1 996 3 is_stmt 1 view .LVU1080
 5101 0018 2100     		movs	r1, r4
 5102 001a 1820     		movs	r0, #24
 5103 001c FFF7FEFF 		bl	write_rtc_register
 5104              	.LVL392:
 997:Core/Src/AB1805.c **** }
 5105              		.loc 1 997 3 view .LVU1081
 998:Core/Src/AB1805.c **** 
 5106              		.loc 1 998 1 is_stmt 0 view .LVU1082
 5107 0020 2000     		movs	r0, r4
 5108              		@ sp needed
 5109              	.LVL393:
 998:Core/Src/AB1805.c **** 
 5110              		.loc 1 998 1 view .LVU1083
 5111 0022 70BD     		pop	{r4, r5, r6, pc}
 5112              		.cfi_endproc
 5113              	.LFE606:
 5115              		.section	.text.set_RPT_time_control,"ax",%progbits
 5116              		.align	1
 5117              		.global	set_RPT_time_control
 5118              		.syntax unified
 5119              		.code	16
 5120              		.thumb_func
 5122              	set_RPT_time_control:
 5123              	.LVL394:
 5124              	.LFB607:
1001:Core/Src/AB1805.c ****   uint8_t c1;
 5125              		.loc 1 1001 1 is_stmt 1 view -0
 5126              		.cfi_startproc
 5127              		@ args = 0, pretend = 0, frame = 0
 5128              		@ frame_needed = 0, uses_anonymous_args = 0
1001:Core/Src/AB1805.c ****   uint8_t c1;
 5129              		.loc 1 1001 1 is_stmt 0 view .LVU1085
 5130 0000 70B5     		push	{r4, r5, r6, lr}
 5131              	.LCFI101:
 5132              		.cfi_def_cfa_offset 16
 5133              		.cfi_offset 4, -16
 5134              		.cfi_offset 5, -12
 5135              		.cfi_offset 6, -8
 5136              		.cfi_offset 14, -4
 5137 0002 0500     		movs	r5, r0
1002:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 5138              		.loc 1 1002 3 is_stmt 1 view .LVU1086
1003:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_RPT_MASK;
 5139              		.loc 1 1003 3 view .LVU1087
1003:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_RPT_MASK;
 5140              		.loc 1 1003 8 is_stmt 0 view .LVU1088
 5141 0004 1820     		movs	r0, #24
 5142              	.LVL395:
1003:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_RPT_MASK;
 5143              		.loc 1 1003 8 view .LVU1089
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 155


 5144 0006 FFF7FEFF 		bl	read_rtc_register
 5145              	.LVL396:
1004:Core/Src/AB1805.c ****   c1 |= (value << 2) & TIMER_CONTROL_RPT_MASK;
 5146              		.loc 1 1004 3 is_stmt 1 view .LVU1090
1004:Core/Src/AB1805.c ****   c1 |= (value << 2) & TIMER_CONTROL_RPT_MASK;
 5147              		.loc 1 1004 6 is_stmt 0 view .LVU1091
 5148 000a 1C23     		movs	r3, #28
 5149 000c 9843     		bics	r0, r3
 5150              	.LVL397:
1004:Core/Src/AB1805.c ****   c1 |= (value << 2) & TIMER_CONTROL_RPT_MASK;
 5151              		.loc 1 1004 6 view .LVU1092
 5152 000e C4B2     		uxtb	r4, r0
 5153              	.LVL398:
1005:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 5154              		.loc 1 1005 3 is_stmt 1 view .LVU1093
1005:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 5155              		.loc 1 1005 16 is_stmt 0 view .LVU1094
 5156 0010 AD00     		lsls	r5, r5, #2
1005:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 5157              		.loc 1 1005 22 view .LVU1095
 5158 0012 2B40     		ands	r3, r5
1005:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 5159              		.loc 1 1005 6 view .LVU1096
 5160 0014 1C43     		orrs	r4, r3
 5161              	.LVL399:
1006:Core/Src/AB1805.c ****   return c1;
 5162              		.loc 1 1006 3 is_stmt 1 view .LVU1097
 5163 0016 2100     		movs	r1, r4
 5164 0018 1820     		movs	r0, #24
 5165 001a FFF7FEFF 		bl	write_rtc_register
 5166              	.LVL400:
1007:Core/Src/AB1805.c **** }
 5167              		.loc 1 1007 3 view .LVU1098
1008:Core/Src/AB1805.c **** 
 5168              		.loc 1 1008 1 is_stmt 0 view .LVU1099
 5169 001e 2000     		movs	r0, r4
 5170              		@ sp needed
 5171              	.LVL401:
1008:Core/Src/AB1805.c **** 
 5172              		.loc 1 1008 1 view .LVU1100
 5173 0020 70BD     		pop	{r4, r5, r6, pc}
 5174              		.cfi_endproc
 5175              	.LFE607:
 5177              		.section	.text.set_datetime_alarm_month,"ax",%progbits
 5178              		.align	1
 5179              		.global	set_datetime_alarm_month
 5180              		.syntax unified
 5181              		.code	16
 5182              		.thumb_func
 5184              	set_datetime_alarm_month:
 5185              	.LVL402:
 5186              	.LFB524:
 201:Core/Src/AB1805.c ****   set_month_alarm(month);
 5187              		.loc 1 201 1 is_stmt 1 view -0
 5188              		.cfi_startproc
 5189              		@ args = 4, pretend = 0, frame = 0
 5190              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 156


 201:Core/Src/AB1805.c ****   set_month_alarm(month);
 5191              		.loc 1 201 1 is_stmt 0 view .LVU1102
 5192 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5193              	.LCFI102:
 5194              		.cfi_def_cfa_offset 24
 5195              		.cfi_offset 3, -24
 5196              		.cfi_offset 4, -20
 5197              		.cfi_offset 5, -16
 5198              		.cfi_offset 6, -12
 5199              		.cfi_offset 7, -8
 5200              		.cfi_offset 14, -4
 5201 0002 0E00     		movs	r6, r1
 5202 0004 1500     		movs	r5, r2
 5203 0006 1C00     		movs	r4, r3
 5204 0008 06AB     		add	r3, sp, #24
 5205              	.LVL403:
 201:Core/Src/AB1805.c ****   set_month_alarm(month);
 5206              		.loc 1 201 1 view .LVU1103
 5207 000a 1F78     		ldrb	r7, [r3]
 202:Core/Src/AB1805.c ****   set_date_alarm(date);
 5208              		.loc 1 202 3 is_stmt 1 view .LVU1104
 5209 000c FFF7FEFF 		bl	set_month_alarm
 5210              	.LVL404:
 203:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 5211              		.loc 1 203 3 view .LVU1105
 5212 0010 3000     		movs	r0, r6
 5213 0012 FFF7FEFF 		bl	set_date_alarm
 5214              	.LVL405:
 204:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 5215              		.loc 1 204 3 view .LVU1106
 5216 0016 2800     		movs	r0, r5
 5217 0018 FFF7FEFF 		bl	set_hour_alarm
 5218              	.LVL406:
 205:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 5219              		.loc 1 205 3 view .LVU1107
 5220 001c 2000     		movs	r0, r4
 5221 001e FFF7FEFF 		bl	set_minute_alarm
 5222              	.LVL407:
 206:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_YEAR);
 5223              		.loc 1 206 3 view .LVU1108
 5224 0022 3800     		movs	r0, r7
 5225 0024 FFF7FEFF 		bl	set_second_alarm
 5226              	.LVL408:
 207:Core/Src/AB1805.c **** }
 5227              		.loc 1 207 3 view .LVU1109
 5228 0028 0120     		movs	r0, #1
 5229 002a FFF7FEFF 		bl	set_RPT_time_control
 5230              	.LVL409:
 208:Core/Src/AB1805.c **** 
 5231              		.loc 1 208 1 is_stmt 0 view .LVU1110
 5232              		@ sp needed
 5233 002e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5234              		.cfi_endproc
 5235              	.LFE524:
 5237              		.section	.text.set_datetime_alarm_date,"ax",%progbits
 5238              		.align	1
 5239              		.global	set_datetime_alarm_date
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 157


 5240              		.syntax unified
 5241              		.code	16
 5242              		.thumb_func
 5244              	set_datetime_alarm_date:
 5245              	.LVL410:
 5246              	.LFB525:
 211:Core/Src/AB1805.c ****   set_date_alarm(date);
 5247              		.loc 1 211 1 is_stmt 1 view -0
 5248              		.cfi_startproc
 5249              		@ args = 0, pretend = 0, frame = 0
 5250              		@ frame_needed = 0, uses_anonymous_args = 0
 211:Core/Src/AB1805.c ****   set_date_alarm(date);
 5251              		.loc 1 211 1 is_stmt 0 view .LVU1112
 5252 0000 70B5     		push	{r4, r5, r6, lr}
 5253              	.LCFI103:
 5254              		.cfi_def_cfa_offset 16
 5255              		.cfi_offset 4, -16
 5256              		.cfi_offset 5, -12
 5257              		.cfi_offset 6, -8
 5258              		.cfi_offset 14, -4
 5259 0002 0E00     		movs	r6, r1
 5260 0004 1500     		movs	r5, r2
 5261 0006 1C00     		movs	r4, r3
 212:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 5262              		.loc 1 212 3 is_stmt 1 view .LVU1113
 5263 0008 FFF7FEFF 		bl	set_date_alarm
 5264              	.LVL411:
 213:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 5265              		.loc 1 213 3 view .LVU1114
 5266 000c 3000     		movs	r0, r6
 5267 000e FFF7FEFF 		bl	set_hour_alarm
 5268              	.LVL412:
 214:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 5269              		.loc 1 214 3 view .LVU1115
 5270 0012 2800     		movs	r0, r5
 5271 0014 FFF7FEFF 		bl	set_minute_alarm
 5272              	.LVL413:
 215:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_MONTH);
 5273              		.loc 1 215 3 view .LVU1116
 5274 0018 2000     		movs	r0, r4
 5275 001a FFF7FEFF 		bl	set_second_alarm
 5276              	.LVL414:
 216:Core/Src/AB1805.c **** }
 5277              		.loc 1 216 3 view .LVU1117
 5278 001e 0220     		movs	r0, #2
 5279 0020 FFF7FEFF 		bl	set_RPT_time_control
 5280              	.LVL415:
 217:Core/Src/AB1805.c **** 
 5281              		.loc 1 217 1 is_stmt 0 view .LVU1118
 5282              		@ sp needed
 5283 0024 70BD     		pop	{r4, r5, r6, pc}
 5284              		.cfi_endproc
 5285              	.LFE525:
 5287              		.section	.text.set_week_alarm,"ax",%progbits
 5288              		.align	1
 5289              		.global	set_week_alarm
 5290              		.syntax unified
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 158


 5291              		.code	16
 5292              		.thumb_func
 5294              	set_week_alarm:
 5295              	.LVL416:
 5296              	.LFB526:
 220:Core/Src/AB1805.c ****   set_weekday_alarm(weekday);
 5297              		.loc 1 220 1 is_stmt 1 view -0
 5298              		.cfi_startproc
 5299              		@ args = 0, pretend = 0, frame = 0
 5300              		@ frame_needed = 0, uses_anonymous_args = 0
 220:Core/Src/AB1805.c ****   set_weekday_alarm(weekday);
 5301              		.loc 1 220 1 is_stmt 0 view .LVU1120
 5302 0000 70B5     		push	{r4, r5, r6, lr}
 5303              	.LCFI104:
 5304              		.cfi_def_cfa_offset 16
 5305              		.cfi_offset 4, -16
 5306              		.cfi_offset 5, -12
 5307              		.cfi_offset 6, -8
 5308              		.cfi_offset 14, -4
 5309 0002 0E00     		movs	r6, r1
 5310 0004 1500     		movs	r5, r2
 5311 0006 1C00     		movs	r4, r3
 221:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 5312              		.loc 1 221 3 is_stmt 1 view .LVU1121
 5313 0008 FFF7FEFF 		bl	set_weekday_alarm
 5314              	.LVL417:
 222:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 5315              		.loc 1 222 3 view .LVU1122
 5316 000c 3000     		movs	r0, r6
 5317 000e FFF7FEFF 		bl	set_hour_alarm
 5318              	.LVL418:
 223:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 5319              		.loc 1 223 3 view .LVU1123
 5320 0012 2800     		movs	r0, r5
 5321 0014 FFF7FEFF 		bl	set_minute_alarm
 5322              	.LVL419:
 224:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_WEEK);
 5323              		.loc 1 224 3 view .LVU1124
 5324 0018 2000     		movs	r0, r4
 5325 001a FFF7FEFF 		bl	set_second_alarm
 5326              	.LVL420:
 225:Core/Src/AB1805.c **** }
 5327              		.loc 1 225 3 view .LVU1125
 5328 001e 0320     		movs	r0, #3
 5329 0020 FFF7FEFF 		bl	set_RPT_time_control
 5330              	.LVL421:
 226:Core/Src/AB1805.c **** 
 5331              		.loc 1 226 1 is_stmt 0 view .LVU1126
 5332              		@ sp needed
 5333 0024 70BD     		pop	{r4, r5, r6, pc}
 5334              		.cfi_endproc
 5335              	.LFE526:
 5337              		.section	.text.set_datetime_alarm_hour,"ax",%progbits
 5338              		.align	1
 5339              		.global	set_datetime_alarm_hour
 5340              		.syntax unified
 5341              		.code	16
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 159


 5342              		.thumb_func
 5344              	set_datetime_alarm_hour:
 5345              	.LVL422:
 5346              	.LFB527:
 229:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 5347              		.loc 1 229 1 is_stmt 1 view -0
 5348              		.cfi_startproc
 5349              		@ args = 0, pretend = 0, frame = 0
 5350              		@ frame_needed = 0, uses_anonymous_args = 0
 229:Core/Src/AB1805.c ****   set_hour_alarm(hour);
 5351              		.loc 1 229 1 is_stmt 0 view .LVU1128
 5352 0000 70B5     		push	{r4, r5, r6, lr}
 5353              	.LCFI105:
 5354              		.cfi_def_cfa_offset 16
 5355              		.cfi_offset 4, -16
 5356              		.cfi_offset 5, -12
 5357              		.cfi_offset 6, -8
 5358              		.cfi_offset 14, -4
 5359 0002 0D00     		movs	r5, r1
 5360 0004 1400     		movs	r4, r2
 230:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 5361              		.loc 1 230 3 is_stmt 1 view .LVU1129
 5362 0006 FFF7FEFF 		bl	set_hour_alarm
 5363              	.LVL423:
 231:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 5364              		.loc 1 231 3 view .LVU1130
 5365 000a 2800     		movs	r0, r5
 5366 000c FFF7FEFF 		bl	set_minute_alarm
 5367              	.LVL424:
 232:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_DAY);
 5368              		.loc 1 232 3 view .LVU1131
 5369 0010 2000     		movs	r0, r4
 5370 0012 FFF7FEFF 		bl	set_second_alarm
 5371              	.LVL425:
 233:Core/Src/AB1805.c **** }
 5372              		.loc 1 233 3 view .LVU1132
 5373 0016 0420     		movs	r0, #4
 5374 0018 FFF7FEFF 		bl	set_RPT_time_control
 5375              	.LVL426:
 234:Core/Src/AB1805.c **** 
 5376              		.loc 1 234 1 is_stmt 0 view .LVU1133
 5377              		@ sp needed
 5378 001c 70BD     		pop	{r4, r5, r6, pc}
 5379              		.cfi_endproc
 5380              	.LFE527:
 5382              		.section	.text.set_datetime_alarm_minutes,"ax",%progbits
 5383              		.align	1
 5384              		.global	set_datetime_alarm_minutes
 5385              		.syntax unified
 5386              		.code	16
 5387              		.thumb_func
 5389              	set_datetime_alarm_minutes:
 5390              	.LVL427:
 5391              	.LFB528:
 237:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 5392              		.loc 1 237 1 is_stmt 1 view -0
 5393              		.cfi_startproc
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 160


 5394              		@ args = 0, pretend = 0, frame = 0
 5395              		@ frame_needed = 0, uses_anonymous_args = 0
 237:Core/Src/AB1805.c ****   set_minute_alarm(minutes);
 5396              		.loc 1 237 1 is_stmt 0 view .LVU1135
 5397 0000 10B5     		push	{r4, lr}
 5398              	.LCFI106:
 5399              		.cfi_def_cfa_offset 8
 5400              		.cfi_offset 4, -8
 5401              		.cfi_offset 14, -4
 5402 0002 0C00     		movs	r4, r1
 238:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 5403              		.loc 1 238 3 is_stmt 1 view .LVU1136
 5404 0004 FFF7FEFF 		bl	set_minute_alarm
 5405              	.LVL428:
 239:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_HOUR);
 5406              		.loc 1 239 3 view .LVU1137
 5407 0008 2000     		movs	r0, r4
 5408 000a FFF7FEFF 		bl	set_second_alarm
 5409              	.LVL429:
 240:Core/Src/AB1805.c **** }
 5410              		.loc 1 240 3 view .LVU1138
 5411 000e 0520     		movs	r0, #5
 5412 0010 FFF7FEFF 		bl	set_RPT_time_control
 5413              	.LVL430:
 241:Core/Src/AB1805.c **** 
 5414              		.loc 1 241 1 is_stmt 0 view .LVU1139
 5415              		@ sp needed
 5416 0014 10BD     		pop	{r4, pc}
 5417              		.cfi_endproc
 5418              	.LFE528:
 5420              		.section	.text.set_datetime_alarm_seconds,"ax",%progbits
 5421              		.align	1
 5422              		.global	set_datetime_alarm_seconds
 5423              		.syntax unified
 5424              		.code	16
 5425              		.thumb_func
 5427              	set_datetime_alarm_seconds:
 5428              	.LVL431:
 5429              	.LFB529:
 244:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 5430              		.loc 1 244 1 is_stmt 1 view -0
 5431              		.cfi_startproc
 5432              		@ args = 0, pretend = 0, frame = 0
 5433              		@ frame_needed = 0, uses_anonymous_args = 0
 244:Core/Src/AB1805.c ****   set_second_alarm(seconds);
 5434              		.loc 1 244 1 is_stmt 0 view .LVU1141
 5435 0000 10B5     		push	{r4, lr}
 5436              	.LCFI107:
 5437              		.cfi_def_cfa_offset 8
 5438              		.cfi_offset 4, -8
 5439              		.cfi_offset 14, -4
 245:Core/Src/AB1805.c ****   set_RPT_time_control(TIMER_CONTROL_RPT_ONCE_PER_MINUTE);
 5440              		.loc 1 245 3 is_stmt 1 view .LVU1142
 5441 0002 FFF7FEFF 		bl	set_second_alarm
 5442              	.LVL432:
 246:Core/Src/AB1805.c **** }
 5443              		.loc 1 246 3 view .LVU1143
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 161


 5444 0006 0620     		movs	r0, #6
 5445 0008 FFF7FEFF 		bl	set_RPT_time_control
 5446              	.LVL433:
 247:Core/Src/AB1805.c **** 
 5447              		.loc 1 247 1 is_stmt 0 view .LVU1144
 5448              		@ sp needed
 5449 000c 10BD     		pop	{r4, pc}
 5450              		.cfi_endproc
 5451              	.LFE529:
 5453              		.section	.text.set_once_second_alarm,"ax",%progbits
 5454              		.align	1
 5455              		.global	set_once_second_alarm
 5456              		.syntax unified
 5457              		.code	16
 5458              		.thumb_func
 5460              	set_once_second_alarm:
 5461              	.LVL434:
 5462              	.LFB530:
 250:Core/Src/AB1805.c ****   // set_second_alarm(seconds);
 5463              		.loc 1 250 1 is_stmt 1 view -0
 5464              		.cfi_startproc
 5465              		@ args = 0, pretend = 0, frame = 0
 5466              		@ frame_needed = 0, uses_anonymous_args = 0
 250:Core/Src/AB1805.c ****   // set_second_alarm(seconds);
 5467              		.loc 1 250 1 is_stmt 0 view .LVU1146
 5468 0000 10B5     		push	{r4, lr}
 5469              	.LCFI108:
 5470              		.cfi_def_cfa_offset 8
 5471              		.cfi_offset 4, -8
 5472              		.cfi_offset 14, -4
 252:Core/Src/AB1805.c **** }
 5473              		.loc 1 252 3 is_stmt 1 view .LVU1147
 5474 0002 0720     		movs	r0, #7
 5475              	.LVL435:
 252:Core/Src/AB1805.c **** }
 5476              		.loc 1 252 3 is_stmt 0 view .LVU1148
 5477 0004 FFF7FEFF 		bl	set_RPT_time_control
 5478              	.LVL436:
 253:Core/Src/AB1805.c **** 
 5479              		.loc 1 253 1 view .LVU1149
 5480              		@ sp needed
 5481 0008 10BD     		pop	{r4, pc}
 5482              		.cfi_endproc
 5483              	.LFE530:
 5485              		.section	.text.set_TFS_time_control,"ax",%progbits
 5486              		.align	1
 5487              		.global	set_TFS_time_control
 5488              		.syntax unified
 5489              		.code	16
 5490              		.thumb_func
 5492              	set_TFS_time_control:
 5493              	.LVL437:
 5494              	.LFB608:
1011:Core/Src/AB1805.c ****   uint8_t c1;
 5495              		.loc 1 1011 1 is_stmt 1 view -0
 5496              		.cfi_startproc
 5497              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 162


 5498              		@ frame_needed = 0, uses_anonymous_args = 0
1011:Core/Src/AB1805.c ****   uint8_t c1;
 5499              		.loc 1 1011 1 is_stmt 0 view .LVU1151
 5500 0000 70B5     		push	{r4, r5, r6, lr}
 5501              	.LCFI109:
 5502              		.cfi_def_cfa_offset 16
 5503              		.cfi_offset 4, -16
 5504              		.cfi_offset 5, -12
 5505              		.cfi_offset 6, -8
 5506              		.cfi_offset 14, -4
 5507 0002 0500     		movs	r5, r0
1012:Core/Src/AB1805.c ****   c1 = read_rtc_register(TIMER_CONTROL_REGISTER);
 5508              		.loc 1 1012 3 is_stmt 1 view .LVU1152
1013:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TFS_MASK;
 5509              		.loc 1 1013 3 view .LVU1153
1013:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TFS_MASK;
 5510              		.loc 1 1013 8 is_stmt 0 view .LVU1154
 5511 0004 1820     		movs	r0, #24
 5512              	.LVL438:
1013:Core/Src/AB1805.c ****   c1 &= ~TIMER_CONTROL_TFS_MASK;
 5513              		.loc 1 1013 8 view .LVU1155
 5514 0006 FFF7FEFF 		bl	read_rtc_register
 5515              	.LVL439:
1014:Core/Src/AB1805.c ****   c1 |= value;
 5516              		.loc 1 1014 3 is_stmt 1 view .LVU1156
1014:Core/Src/AB1805.c ****   c1 |= value;
 5517              		.loc 1 1014 6 is_stmt 0 view .LVU1157
 5518 000a 0323     		movs	r3, #3
 5519 000c 9843     		bics	r0, r3
 5520              	.LVL440:
1014:Core/Src/AB1805.c ****   c1 |= value;
 5521              		.loc 1 1014 6 view .LVU1158
 5522 000e C4B2     		uxtb	r4, r0
 5523              	.LVL441:
1015:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 5524              		.loc 1 1015 3 is_stmt 1 view .LVU1159
1015:Core/Src/AB1805.c ****   write_rtc_register(TIMER_CONTROL_REGISTER, c1);
 5525              		.loc 1 1015 6 is_stmt 0 view .LVU1160
 5526 0010 2C43     		orrs	r4, r5
 5527              	.LVL442:
1016:Core/Src/AB1805.c ****   return c1;
 5528              		.loc 1 1016 3 is_stmt 1 view .LVU1161
 5529 0012 2100     		movs	r1, r4
 5530 0014 1820     		movs	r0, #24
 5531 0016 FFF7FEFF 		bl	write_rtc_register
 5532              	.LVL443:
1017:Core/Src/AB1805.c **** }
 5533              		.loc 1 1017 3 view .LVU1162
1018:Core/Src/AB1805.c **** 
 5534              		.loc 1 1018 1 is_stmt 0 view .LVU1163
 5535 001a 2000     		movs	r0, r4
 5536              		@ sp needed
 5537              	.LVL444:
1018:Core/Src/AB1805.c **** 
 5538              		.loc 1 1018 1 view .LVU1164
 5539 001c 70BD     		pop	{r4, r5, r6, pc}
 5540              		.cfi_endproc
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 163


 5541              	.LFE608:
 5543              		.section	.text.get_outcontrol,"ax",%progbits
 5544              		.align	1
 5545              		.global	get_outcontrol
 5546              		.syntax unified
 5547              		.code	16
 5548              		.thumb_func
 5550              	get_outcontrol:
 5551              	.LFB609:
1022:Core/Src/AB1805.c ****   _outcontrol = read_rtc_register(OCTRL_REGISTER);
 5552              		.loc 1 1022 1 is_stmt 1 view -0
 5553              		.cfi_startproc
 5554              		@ args = 0, pretend = 0, frame = 0
 5555              		@ frame_needed = 0, uses_anonymous_args = 0
 5556 0000 10B5     		push	{r4, lr}
 5557              	.LCFI110:
 5558              		.cfi_def_cfa_offset 8
 5559              		.cfi_offset 4, -8
 5560              		.cfi_offset 14, -4
1023:Core/Src/AB1805.c ****   return _outcontrol;
 5561              		.loc 1 1023 3 view .LVU1166
1023:Core/Src/AB1805.c ****   return _outcontrol;
 5562              		.loc 1 1023 17 is_stmt 0 view .LVU1167
 5563 0002 3020     		movs	r0, #48
 5564 0004 FFF7FEFF 		bl	read_rtc_register
 5565              	.LVL445:
1023:Core/Src/AB1805.c ****   return _outcontrol;
 5566              		.loc 1 1023 15 view .LVU1168
 5567 0008 014B     		ldr	r3, .L265
 5568 000a 1870     		strb	r0, [r3]
1024:Core/Src/AB1805.c **** }
 5569              		.loc 1 1024 3 is_stmt 1 view .LVU1169
1025:Core/Src/AB1805.c **** 
 5570              		.loc 1 1025 1 is_stmt 0 view .LVU1170
 5571              		@ sp needed
 5572 000c 10BD     		pop	{r4, pc}
 5573              	.L266:
 5574 000e C046     		.align	2
 5575              	.L265:
 5576 0010 00000000 		.word	_outcontrol
 5577              		.cfi_endproc
 5578              	.LFE609:
 5580              		.section	.text.get_outcontrol_mask,"ax",%progbits
 5581              		.align	1
 5582              		.global	get_outcontrol_mask
 5583              		.syntax unified
 5584              		.code	16
 5585              		.thumb_func
 5587              	get_outcontrol_mask:
 5588              	.LVL446:
 5589              	.LFB610:
1028:Core/Src/AB1805.c ****   uint8_t ret;
 5590              		.loc 1 1028 1 is_stmt 1 view -0
 5591              		.cfi_startproc
 5592              		@ args = 0, pretend = 0, frame = 0
 5593              		@ frame_needed = 0, uses_anonymous_args = 0
1028:Core/Src/AB1805.c ****   uint8_t ret;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 164


 5594              		.loc 1 1028 1 is_stmt 0 view .LVU1172
 5595 0000 10B5     		push	{r4, lr}
 5596              	.LCFI111:
 5597              		.cfi_def_cfa_offset 8
 5598              		.cfi_offset 4, -8
 5599              		.cfi_offset 14, -4
 5600 0002 0400     		movs	r4, r0
1029:Core/Src/AB1805.c ****   ret = get_outcontrol() & mask;
 5601              		.loc 1 1029 3 is_stmt 1 view .LVU1173
1030:Core/Src/AB1805.c ****   switch (mask)
 5602              		.loc 1 1030 3 view .LVU1174
1030:Core/Src/AB1805.c ****   switch (mask)
 5603              		.loc 1 1030 9 is_stmt 0 view .LVU1175
 5604 0004 FFF7FEFF 		bl	get_outcontrol
 5605              	.LVL447:
1030:Core/Src/AB1805.c ****   switch (mask)
 5606              		.loc 1 1030 7 view .LVU1176
 5607 0008 2040     		ands	r0, r4
 5608              	.LVL448:
1031:Core/Src/AB1805.c ****   {
 5609              		.loc 1 1031 3 is_stmt 1 view .LVU1177
 5610 000a 202C     		cmp	r4, #32
 5611 000c 07D8     		bhi	.L268
 5612 000e 002C     		cmp	r4, #0
 5613 0010 17D0     		beq	.L269
 5614 0012 202C     		cmp	r4, #32
 5615 0014 15D8     		bhi	.L269
 5616 0016 A400     		lsls	r4, r4, #2
 5617 0018 0B4B     		ldr	r3, .L278
 5618 001a 1B59     		ldr	r3, [r3, r4]
 5619 001c 9F46     		mov	pc, r3
 5620              		.section	.rodata.get_outcontrol_mask,"a",%progbits
 5621              		.align	2
 5622              	.L271:
 5623 0000 42000000 		.word	.L269
 5624 0004 28000000 		.word	.L276
 5625 0008 3E000000 		.word	.L275
 5626 000c 42000000 		.word	.L269
 5627 0010 3A000000 		.word	.L274
 5628 0014 42000000 		.word	.L269
 5629 0018 42000000 		.word	.L269
 5630 001c 42000000 		.word	.L269
 5631 0020 36000000 		.word	.L273
 5632 0024 42000000 		.word	.L269
 5633 0028 42000000 		.word	.L269
 5634 002c 42000000 		.word	.L269
 5635 0030 42000000 		.word	.L269
 5636 0034 42000000 		.word	.L269
 5637 0038 42000000 		.word	.L269
 5638 003c 42000000 		.word	.L269
 5639 0040 32000000 		.word	.L272
 5640 0044 42000000 		.word	.L269
 5641 0048 42000000 		.word	.L269
 5642 004c 42000000 		.word	.L269
 5643 0050 42000000 		.word	.L269
 5644 0054 42000000 		.word	.L269
 5645 0058 42000000 		.word	.L269
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 165


 5646 005c 42000000 		.word	.L269
 5647 0060 42000000 		.word	.L269
 5648 0064 42000000 		.word	.L269
 5649 0068 42000000 		.word	.L269
 5650 006c 42000000 		.word	.L269
 5651 0070 42000000 		.word	.L269
 5652 0074 42000000 		.word	.L269
 5653 0078 42000000 		.word	.L269
 5654 007c 42000000 		.word	.L269
 5655 0080 2E000000 		.word	.L270
 5656              		.section	.text.get_outcontrol_mask
 5657              	.L268:
 5658 001e 402C     		cmp	r4, #64
 5659 0020 03D0     		beq	.L277
 5660 0022 802C     		cmp	r4, #128
 5661 0024 0DD1     		bne	.L269
1034:Core/Src/AB1805.c ****     break;
 5662              		.loc 1 1034 5 view .LVU1178
1034:Core/Src/AB1805.c ****     break;
 5663              		.loc 1 1034 9 is_stmt 0 view .LVU1179
 5664 0026 C009     		lsrs	r0, r0, #7
 5665              	.LVL449:
1035:Core/Src/AB1805.c ****   case OCTRL_EXBM_MASK:
 5666              		.loc 1 1035 5 is_stmt 1 view .LVU1180
 5667              	.L276:
1060:Core/Src/AB1805.c **** }
 5668              		.loc 1 1060 3 view .LVU1181
1061:Core/Src/AB1805.c **** 
 5669              		.loc 1 1061 1 is_stmt 0 view .LVU1182
 5670              		@ sp needed
 5671 0028 10BD     		pop	{r4, pc}
 5672              	.L277:
1037:Core/Src/AB1805.c ****     break;
 5673              		.loc 1 1037 5 is_stmt 1 view .LVU1183
1037:Core/Src/AB1805.c ****     break;
 5674              		.loc 1 1037 9 is_stmt 0 view .LVU1184
 5675 002a 8009     		lsrs	r0, r0, #6
 5676              	.LVL450:
1038:Core/Src/AB1805.c ****   case OCTRL_WDDS_MASK:
 5677              		.loc 1 1038 5 is_stmt 1 view .LVU1185
 5678 002c FCE7     		b	.L276
 5679              	.L270:
1040:Core/Src/AB1805.c ****     break;
 5680              		.loc 1 1040 5 view .LVU1186
1040:Core/Src/AB1805.c ****     break;
 5681              		.loc 1 1040 9 is_stmt 0 view .LVU1187
 5682 002e 4009     		lsrs	r0, r0, #5
 5683              	.LVL451:
1041:Core/Src/AB1805.c ****   case OCTRL_EXDS_MASK:
 5684              		.loc 1 1041 5 is_stmt 1 view .LVU1188
 5685 0030 FAE7     		b	.L276
 5686              	.L272:
1043:Core/Src/AB1805.c ****     break;
 5687              		.loc 1 1043 5 view .LVU1189
1043:Core/Src/AB1805.c ****     break;
 5688              		.loc 1 1043 9 is_stmt 0 view .LVU1190
 5689 0032 0009     		lsrs	r0, r0, #4
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 166


 5690              	.LVL452:
1044:Core/Src/AB1805.c ****   case OCTRL_RSEN_MASK:
 5691              		.loc 1 1044 5 is_stmt 1 view .LVU1191
 5692 0034 F8E7     		b	.L276
 5693              	.L273:
1046:Core/Src/AB1805.c ****     break;
 5694              		.loc 1 1046 5 view .LVU1192
1046:Core/Src/AB1805.c ****     break;
 5695              		.loc 1 1046 9 is_stmt 0 view .LVU1193
 5696 0036 C008     		lsrs	r0, r0, #3
 5697              	.LVL453:
1047:Core/Src/AB1805.c ****   case OCTRL_O4EN_MASK:
 5698              		.loc 1 1047 5 is_stmt 1 view .LVU1194
 5699 0038 F6E7     		b	.L276
 5700              	.L274:
1049:Core/Src/AB1805.c ****     break;
 5701              		.loc 1 1049 5 view .LVU1195
1049:Core/Src/AB1805.c ****     break;
 5702              		.loc 1 1049 9 is_stmt 0 view .LVU1196
 5703 003a 8008     		lsrs	r0, r0, #2
 5704              	.LVL454:
1050:Core/Src/AB1805.c ****   case OCTRL_O3EN_MASK:
 5705              		.loc 1 1050 5 is_stmt 1 view .LVU1197
 5706 003c F4E7     		b	.L276
 5707              	.L275:
1052:Core/Src/AB1805.c ****     break;
 5708              		.loc 1 1052 5 view .LVU1198
1052:Core/Src/AB1805.c ****     break;
 5709              		.loc 1 1052 9 is_stmt 0 view .LVU1199
 5710 003e 4008     		lsrs	r0, r0, #1
 5711              	.LVL455:
1053:Core/Src/AB1805.c ****   case OCTRL_O1EN_MASK:
 5712              		.loc 1 1053 5 is_stmt 1 view .LVU1200
 5713 0040 F2E7     		b	.L276
 5714              	.L269:
1058:Core/Src/AB1805.c ****   }
 5715              		.loc 1 1058 5 view .LVU1201
1058:Core/Src/AB1805.c ****   }
 5716              		.loc 1 1058 9 is_stmt 0 view .LVU1202
 5717 0042 024B     		ldr	r3, .L278+4
 5718 0044 1878     		ldrb	r0, [r3]
 5719              	.LVL456:
1058:Core/Src/AB1805.c ****   }
 5720              		.loc 1 1058 9 view .LVU1203
 5721 0046 EFE7     		b	.L276
 5722              	.L279:
 5723              		.align	2
 5724              	.L278:
 5725 0048 00000000 		.word	.L271
 5726 004c 00000000 		.word	_outcontrol
 5727              		.cfi_endproc
 5728              	.LFE610:
 5730              		.section	.text.set_outcontrol_value,"ax",%progbits
 5731              		.align	1
 5732              		.global	set_outcontrol_value
 5733              		.syntax unified
 5734              		.code	16
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 167


 5735              		.thumb_func
 5737              	set_outcontrol_value:
 5738              	.LVL457:
 5739              	.LFB611:
1064:Core/Src/AB1805.c ****   write_rtc_register(OCTRL_REGISTER, value);
 5740              		.loc 1 1064 1 is_stmt 1 view -0
 5741              		.cfi_startproc
 5742              		@ args = 0, pretend = 0, frame = 0
 5743              		@ frame_needed = 0, uses_anonymous_args = 0
1064:Core/Src/AB1805.c ****   write_rtc_register(OCTRL_REGISTER, value);
 5744              		.loc 1 1064 1 is_stmt 0 view .LVU1205
 5745 0000 10B5     		push	{r4, lr}
 5746              	.LCFI112:
 5747              		.cfi_def_cfa_offset 8
 5748              		.cfi_offset 4, -8
 5749              		.cfi_offset 14, -4
 5750 0002 0100     		movs	r1, r0
1065:Core/Src/AB1805.c ****   _outcontrol = read_rtc_register(OCTRL_REGISTER);
 5751              		.loc 1 1065 3 is_stmt 1 view .LVU1206
 5752 0004 3020     		movs	r0, #48
 5753              	.LVL458:
1065:Core/Src/AB1805.c ****   _outcontrol = read_rtc_register(OCTRL_REGISTER);
 5754              		.loc 1 1065 3 is_stmt 0 view .LVU1207
 5755 0006 FFF7FEFF 		bl	write_rtc_register
 5756              	.LVL459:
1066:Core/Src/AB1805.c ****   return _outcontrol;
 5757              		.loc 1 1066 3 is_stmt 1 view .LVU1208
1066:Core/Src/AB1805.c ****   return _outcontrol;
 5758              		.loc 1 1066 17 is_stmt 0 view .LVU1209
 5759 000a 3020     		movs	r0, #48
 5760 000c FFF7FEFF 		bl	read_rtc_register
 5761              	.LVL460:
1066:Core/Src/AB1805.c ****   return _outcontrol;
 5762              		.loc 1 1066 15 view .LVU1210
 5763 0010 014B     		ldr	r3, .L281
 5764 0012 1870     		strb	r0, [r3]
1067:Core/Src/AB1805.c **** }
 5765              		.loc 1 1067 3 is_stmt 1 view .LVU1211
1068:Core/Src/AB1805.c **** 
 5766              		.loc 1 1068 1 is_stmt 0 view .LVU1212
 5767              		@ sp needed
 5768 0014 10BD     		pop	{r4, pc}
 5769              	.L282:
 5770 0016 C046     		.align	2
 5771              	.L281:
 5772 0018 00000000 		.word	_outcontrol
 5773              		.cfi_endproc
 5774              	.LFE611:
 5776              		.section	.text.set_outcontrol_value_mask,"ax",%progbits
 5777              		.align	1
 5778              		.global	set_outcontrol_value_mask
 5779              		.syntax unified
 5780              		.code	16
 5781              		.thumb_func
 5783              	set_outcontrol_value_mask:
 5784              	.LVL461:
 5785              	.LFB612:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 168


1071:Core/Src/AB1805.c ****   uint8_t c1;
 5786              		.loc 1 1071 1 is_stmt 1 view -0
 5787              		.cfi_startproc
 5788              		@ args = 0, pretend = 0, frame = 0
 5789              		@ frame_needed = 0, uses_anonymous_args = 0
1071:Core/Src/AB1805.c ****   uint8_t c1;
 5790              		.loc 1 1071 1 is_stmt 0 view .LVU1214
 5791 0000 70B5     		push	{r4, r5, r6, lr}
 5792              	.LCFI113:
 5793              		.cfi_def_cfa_offset 16
 5794              		.cfi_offset 4, -16
 5795              		.cfi_offset 5, -12
 5796              		.cfi_offset 6, -8
 5797              		.cfi_offset 14, -4
 5798 0002 0500     		movs	r5, r0
 5799 0004 0C00     		movs	r4, r1
1072:Core/Src/AB1805.c ****   c1 = get_outcontrol();
 5800              		.loc 1 1072 3 is_stmt 1 view .LVU1215
1073:Core/Src/AB1805.c ****   switch (mask)
 5801              		.loc 1 1073 3 view .LVU1216
1073:Core/Src/AB1805.c ****   switch (mask)
 5802              		.loc 1 1073 8 is_stmt 0 view .LVU1217
 5803 0006 FFF7FEFF 		bl	get_outcontrol
 5804              	.LVL462:
1074:Core/Src/AB1805.c ****   {
 5805              		.loc 1 1074 3 is_stmt 1 view .LVU1218
 5806 000a 202C     		cmp	r4, #32
 5807 000c 07D8     		bhi	.L284
 5808 000e 002C     		cmp	r4, #0
 5809 0010 0ED0     		beq	.L285
 5810 0012 202C     		cmp	r4, #32
 5811 0014 0CD8     		bhi	.L285
 5812 0016 A400     		lsls	r4, r4, #2
 5813 0018 224B     		ldr	r3, .L294
 5814 001a 1B59     		ldr	r3, [r3, r4]
 5815 001c 9F46     		mov	pc, r3
 5816              		.section	.rodata.set_outcontrol_value_mask,"a",%progbits
 5817              		.align	2
 5818              	.L287:
 5819 0000 30000000 		.word	.L285
 5820 0004 98000000 		.word	.L292
 5821 0008 88000000 		.word	.L291
 5822 000c 30000000 		.word	.L285
 5823 0010 78000000 		.word	.L290
 5824 0014 30000000 		.word	.L285
 5825 0018 30000000 		.word	.L285
 5826 001c 30000000 		.word	.L285
 5827 0020 68000000 		.word	.L289
 5828 0024 30000000 		.word	.L285
 5829 0028 30000000 		.word	.L285
 5830 002c 30000000 		.word	.L285
 5831 0030 30000000 		.word	.L285
 5832 0034 30000000 		.word	.L285
 5833 0038 30000000 		.word	.L285
 5834 003c 30000000 		.word	.L285
 5835 0040 58000000 		.word	.L288
 5836 0044 30000000 		.word	.L285
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 169


 5837 0048 30000000 		.word	.L285
 5838 004c 30000000 		.word	.L285
 5839 0050 30000000 		.word	.L285
 5840 0054 30000000 		.word	.L285
 5841 0058 30000000 		.word	.L285
 5842 005c 30000000 		.word	.L285
 5843 0060 30000000 		.word	.L285
 5844 0064 30000000 		.word	.L285
 5845 0068 30000000 		.word	.L285
 5846 006c 30000000 		.word	.L285
 5847 0070 30000000 		.word	.L285
 5848 0074 30000000 		.word	.L285
 5849 0078 30000000 		.word	.L285
 5850 007c 30000000 		.word	.L285
 5851 0080 48000000 		.word	.L286
 5852              		.section	.text.set_outcontrol_value_mask
 5853              	.L284:
 5854 001e 402C     		cmp	r4, #64
 5855 0020 0AD0     		beq	.L293
 5856 0022 802C     		cmp	r4, #128
 5857 0024 04D1     		bne	.L285
1077:Core/Src/AB1805.c ****     c1 |= (value << 7) & OCTRL_WDBM_MASK;
 5858              		.loc 1 1077 5 view .LVU1219
1077:Core/Src/AB1805.c ****     c1 |= (value << 7) & OCTRL_WDBM_MASK;
 5859              		.loc 1 1077 8 is_stmt 0 view .LVU1220
 5860 0026 7F23     		movs	r3, #127
 5861 0028 0340     		ands	r3, r0
 5862              	.LVL463:
1078:Core/Src/AB1805.c ****     break;
 5863              		.loc 1 1078 5 is_stmt 1 view .LVU1221
1078:Core/Src/AB1805.c ****     break;
 5864              		.loc 1 1078 18 is_stmt 0 view .LVU1222
 5865 002a ED01     		lsls	r5, r5, #7
1078:Core/Src/AB1805.c ****     break;
 5866              		.loc 1 1078 8 view .LVU1223
 5867 002c 1D43     		orrs	r5, r3
 5868 002e EDB2     		uxtb	r5, r5
 5869              	.LVL464:
1079:Core/Src/AB1805.c ****   case OCTRL_EXBM_MASK:
 5870              		.loc 1 1079 5 is_stmt 1 view .LVU1224
 5871              	.L285:
1115:Core/Src/AB1805.c **** }
 5872              		.loc 1 1115 3 view .LVU1225
1115:Core/Src/AB1805.c **** }
 5873              		.loc 1 1115 10 is_stmt 0 view .LVU1226
 5874 0030 2800     		movs	r0, r5
 5875 0032 FFF7FEFF 		bl	set_outcontrol_value
 5876              	.LVL465:
1116:Core/Src/AB1805.c **** 
 5877              		.loc 1 1116 1 view .LVU1227
 5878              		@ sp needed
 5879              	.LVL466:
1116:Core/Src/AB1805.c **** 
 5880              		.loc 1 1116 1 view .LVU1228
 5881 0036 70BD     		pop	{r4, r5, r6, pc}
 5882              	.LVL467:
 5883              	.L293:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 170


1081:Core/Src/AB1805.c ****     c1 |= (value << 6) & OCTRL_EXBM_MASK;
 5884              		.loc 1 1081 5 is_stmt 1 view .LVU1229
1081:Core/Src/AB1805.c ****     c1 |= (value << 6) & OCTRL_EXBM_MASK;
 5885              		.loc 1 1081 8 is_stmt 0 view .LVU1230
 5886 0038 4023     		movs	r3, #64
 5887 003a 9843     		bics	r0, r3
 5888              	.LVL468:
1081:Core/Src/AB1805.c ****     c1 |= (value << 6) & OCTRL_EXBM_MASK;
 5889              		.loc 1 1081 8 view .LVU1231
 5890 003c C0B2     		uxtb	r0, r0
 5891              	.LVL469:
1082:Core/Src/AB1805.c ****     break;
 5892              		.loc 1 1082 5 is_stmt 1 view .LVU1232
1082:Core/Src/AB1805.c ****     break;
 5893              		.loc 1 1082 18 is_stmt 0 view .LVU1233
 5894 003e AB01     		lsls	r3, r5, #6
1082:Core/Src/AB1805.c ****     break;
 5895              		.loc 1 1082 24 view .LVU1234
 5896 0040 4025     		movs	r5, #64
 5897 0042 1D40     		ands	r5, r3
1082:Core/Src/AB1805.c ****     break;
 5898              		.loc 1 1082 8 view .LVU1235
 5899 0044 0543     		orrs	r5, r0
 5900              	.LVL470:
1083:Core/Src/AB1805.c ****   case OCTRL_WDDS_MASK:
 5901              		.loc 1 1083 5 is_stmt 1 view .LVU1236
 5902 0046 F3E7     		b	.L285
 5903              	.LVL471:
 5904              	.L286:
1085:Core/Src/AB1805.c ****     c1 |= (value << 5) & OCTRL_WDDS_MASK;
 5905              		.loc 1 1085 5 view .LVU1237
1085:Core/Src/AB1805.c ****     c1 |= (value << 5) & OCTRL_WDDS_MASK;
 5906              		.loc 1 1085 8 is_stmt 0 view .LVU1238
 5907 0048 2023     		movs	r3, #32
 5908 004a 9843     		bics	r0, r3
 5909              	.LVL472:
1085:Core/Src/AB1805.c ****     c1 |= (value << 5) & OCTRL_WDDS_MASK;
 5910              		.loc 1 1085 8 view .LVU1239
 5911 004c C0B2     		uxtb	r0, r0
 5912              	.LVL473:
1086:Core/Src/AB1805.c ****     break;
 5913              		.loc 1 1086 5 is_stmt 1 view .LVU1240
1086:Core/Src/AB1805.c ****     break;
 5914              		.loc 1 1086 18 is_stmt 0 view .LVU1241
 5915 004e 6B01     		lsls	r3, r5, #5
1086:Core/Src/AB1805.c ****     break;
 5916              		.loc 1 1086 24 view .LVU1242
 5917 0050 2025     		movs	r5, #32
 5918 0052 1D40     		ands	r5, r3
1086:Core/Src/AB1805.c ****     break;
 5919              		.loc 1 1086 8 view .LVU1243
 5920 0054 0543     		orrs	r5, r0
 5921              	.LVL474:
1087:Core/Src/AB1805.c ****   case OCTRL_EXDS_MASK:
 5922              		.loc 1 1087 5 is_stmt 1 view .LVU1244
 5923 0056 EBE7     		b	.L285
 5924              	.LVL475:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 171


 5925              	.L288:
1089:Core/Src/AB1805.c ****     c1 |= (value << 4) & OCTRL_EXDS_MASK;
 5926              		.loc 1 1089 5 view .LVU1245
1089:Core/Src/AB1805.c ****     c1 |= (value << 4) & OCTRL_EXDS_MASK;
 5927              		.loc 1 1089 8 is_stmt 0 view .LVU1246
 5928 0058 1023     		movs	r3, #16
 5929 005a 9843     		bics	r0, r3
 5930              	.LVL476:
1089:Core/Src/AB1805.c ****     c1 |= (value << 4) & OCTRL_EXDS_MASK;
 5931              		.loc 1 1089 8 view .LVU1247
 5932 005c C0B2     		uxtb	r0, r0
 5933              	.LVL477:
1090:Core/Src/AB1805.c ****     break;
 5934              		.loc 1 1090 5 is_stmt 1 view .LVU1248
1090:Core/Src/AB1805.c ****     break;
 5935              		.loc 1 1090 18 is_stmt 0 view .LVU1249
 5936 005e 2B01     		lsls	r3, r5, #4
1090:Core/Src/AB1805.c ****     break;
 5937              		.loc 1 1090 24 view .LVU1250
 5938 0060 1025     		movs	r5, #16
 5939 0062 1D40     		ands	r5, r3
1090:Core/Src/AB1805.c ****     break;
 5940              		.loc 1 1090 8 view .LVU1251
 5941 0064 0543     		orrs	r5, r0
 5942              	.LVL478:
1091:Core/Src/AB1805.c ****   case OCTRL_RSEN_MASK:
 5943              		.loc 1 1091 5 is_stmt 1 view .LVU1252
 5944 0066 E3E7     		b	.L285
 5945              	.LVL479:
 5946              	.L289:
1093:Core/Src/AB1805.c ****     c1 |= (value << 3) & OCTRL_RSEN_MASK;
 5947              		.loc 1 1093 5 view .LVU1253
1093:Core/Src/AB1805.c ****     c1 |= (value << 3) & OCTRL_RSEN_MASK;
 5948              		.loc 1 1093 8 is_stmt 0 view .LVU1254
 5949 0068 0823     		movs	r3, #8
 5950 006a 9843     		bics	r0, r3
 5951              	.LVL480:
1093:Core/Src/AB1805.c ****     c1 |= (value << 3) & OCTRL_RSEN_MASK;
 5952              		.loc 1 1093 8 view .LVU1255
 5953 006c C0B2     		uxtb	r0, r0
 5954              	.LVL481:
1094:Core/Src/AB1805.c ****     break;
 5955              		.loc 1 1094 5 is_stmt 1 view .LVU1256
1094:Core/Src/AB1805.c ****     break;
 5956              		.loc 1 1094 18 is_stmt 0 view .LVU1257
 5957 006e EB00     		lsls	r3, r5, #3
1094:Core/Src/AB1805.c ****     break;
 5958              		.loc 1 1094 24 view .LVU1258
 5959 0070 0825     		movs	r5, #8
 5960 0072 1D40     		ands	r5, r3
1094:Core/Src/AB1805.c ****     break;
 5961              		.loc 1 1094 8 view .LVU1259
 5962 0074 0543     		orrs	r5, r0
 5963              	.LVL482:
1095:Core/Src/AB1805.c ****   case OCTRL_O4EN_MASK:
 5964              		.loc 1 1095 5 is_stmt 1 view .LVU1260
 5965 0076 DBE7     		b	.L285
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 172


 5966              	.LVL483:
 5967              	.L290:
1097:Core/Src/AB1805.c ****     c1 |= (value << 2) & OCTRL_O4EN_MASK;
 5968              		.loc 1 1097 5 view .LVU1261
1097:Core/Src/AB1805.c ****     c1 |= (value << 2) & OCTRL_O4EN_MASK;
 5969              		.loc 1 1097 8 is_stmt 0 view .LVU1262
 5970 0078 0423     		movs	r3, #4
 5971 007a 9843     		bics	r0, r3
 5972              	.LVL484:
1097:Core/Src/AB1805.c ****     c1 |= (value << 2) & OCTRL_O4EN_MASK;
 5973              		.loc 1 1097 8 view .LVU1263
 5974 007c C0B2     		uxtb	r0, r0
 5975              	.LVL485:
1098:Core/Src/AB1805.c ****     break;
 5976              		.loc 1 1098 5 is_stmt 1 view .LVU1264
1098:Core/Src/AB1805.c ****     break;
 5977              		.loc 1 1098 18 is_stmt 0 view .LVU1265
 5978 007e AB00     		lsls	r3, r5, #2
1098:Core/Src/AB1805.c ****     break;
 5979              		.loc 1 1098 24 view .LVU1266
 5980 0080 0425     		movs	r5, #4
 5981 0082 1D40     		ands	r5, r3
1098:Core/Src/AB1805.c ****     break;
 5982              		.loc 1 1098 8 view .LVU1267
 5983 0084 0543     		orrs	r5, r0
 5984              	.LVL486:
1099:Core/Src/AB1805.c ****   case OCTRL_O3EN_MASK:
 5985              		.loc 1 1099 5 is_stmt 1 view .LVU1268
 5986 0086 D3E7     		b	.L285
 5987              	.LVL487:
 5988              	.L291:
1101:Core/Src/AB1805.c ****     c1 |= (value << 1) & OCTRL_O3EN_MASK;
 5989              		.loc 1 1101 5 view .LVU1269
1101:Core/Src/AB1805.c ****     c1 |= (value << 1) & OCTRL_O3EN_MASK;
 5990              		.loc 1 1101 8 is_stmt 0 view .LVU1270
 5991 0088 0223     		movs	r3, #2
 5992 008a 9843     		bics	r0, r3
 5993              	.LVL488:
1101:Core/Src/AB1805.c ****     c1 |= (value << 1) & OCTRL_O3EN_MASK;
 5994              		.loc 1 1101 8 view .LVU1271
 5995 008c C0B2     		uxtb	r0, r0
 5996              	.LVL489:
1102:Core/Src/AB1805.c ****     break;
 5997              		.loc 1 1102 5 is_stmt 1 view .LVU1272
1102:Core/Src/AB1805.c ****     break;
 5998              		.loc 1 1102 18 is_stmt 0 view .LVU1273
 5999 008e 6B00     		lsls	r3, r5, #1
1102:Core/Src/AB1805.c ****     break;
 6000              		.loc 1 1102 24 view .LVU1274
 6001 0090 0225     		movs	r5, #2
 6002 0092 1D40     		ands	r5, r3
1102:Core/Src/AB1805.c ****     break;
 6003              		.loc 1 1102 8 view .LVU1275
 6004 0094 0543     		orrs	r5, r0
 6005              	.LVL490:
1103:Core/Src/AB1805.c ****   case OCTRL_O1EN_MASK:
 6006              		.loc 1 1103 5 is_stmt 1 view .LVU1276
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 173


 6007 0096 CBE7     		b	.L285
 6008              	.LVL491:
 6009              	.L292:
1105:Core/Src/AB1805.c ****     c1 |= (value)&OCTRL_O1EN_MASK;
 6010              		.loc 1 1105 5 view .LVU1277
1105:Core/Src/AB1805.c ****     c1 |= (value)&OCTRL_O1EN_MASK;
 6011              		.loc 1 1105 8 is_stmt 0 view .LVU1278
 6012 0098 0123     		movs	r3, #1
 6013 009a 9843     		bics	r0, r3
 6014              	.LVL492:
1105:Core/Src/AB1805.c ****     c1 |= (value)&OCTRL_O1EN_MASK;
 6015              		.loc 1 1105 8 view .LVU1279
 6016 009c C0B2     		uxtb	r0, r0
 6017              	.LVL493:
1106:Core/Src/AB1805.c ****     break;
 6018              		.loc 1 1106 5 is_stmt 1 view .LVU1280
 6019 009e 1D40     		ands	r5, r3
 6020 00a0 0543     		orrs	r5, r0
 6021              	.LVL494:
1107:Core/Src/AB1805.c ****   case CCTRL_SLEEP_MODE_MASK:
 6022              		.loc 1 1107 5 view .LVU1281
 6023 00a2 C5E7     		b	.L285
 6024              	.L295:
 6025              		.align	2
 6026              	.L294:
 6027 00a4 00000000 		.word	.L287
 6028              		.cfi_endproc
 6029              	.LFE612:
 6031              		.section	.text.get_osc_control,"ax",%progbits
 6032              		.align	1
 6033              		.global	get_osc_control
 6034              		.syntax unified
 6035              		.code	16
 6036              		.thumb_func
 6038              	get_osc_control:
 6039              	.LFB613:
1120:Core/Src/AB1805.c ****   _osc_control = read_rtc_register(OSC_CONTROL_REGISTER);
 6040              		.loc 1 1120 1 view -0
 6041              		.cfi_startproc
 6042              		@ args = 0, pretend = 0, frame = 0
 6043              		@ frame_needed = 0, uses_anonymous_args = 0
 6044 0000 10B5     		push	{r4, lr}
 6045              	.LCFI114:
 6046              		.cfi_def_cfa_offset 8
 6047              		.cfi_offset 4, -8
 6048              		.cfi_offset 14, -4
1121:Core/Src/AB1805.c ****   return _osc_control;
 6049              		.loc 1 1121 3 view .LVU1283
1121:Core/Src/AB1805.c ****   return _osc_control;
 6050              		.loc 1 1121 18 is_stmt 0 view .LVU1284
 6051 0002 1C20     		movs	r0, #28
 6052 0004 FFF7FEFF 		bl	read_rtc_register
 6053              	.LVL495:
1121:Core/Src/AB1805.c ****   return _osc_control;
 6054              		.loc 1 1121 16 view .LVU1285
 6055 0008 014B     		ldr	r3, .L297
 6056 000a 1870     		strb	r0, [r3]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 174


1122:Core/Src/AB1805.c **** }
 6057              		.loc 1 1122 3 is_stmt 1 view .LVU1286
1123:Core/Src/AB1805.c **** 
 6058              		.loc 1 1123 1 is_stmt 0 view .LVU1287
 6059              		@ sp needed
 6060 000c 10BD     		pop	{r4, pc}
 6061              	.L298:
 6062 000e C046     		.align	2
 6063              	.L297:
 6064 0010 00000000 		.word	_osc_control
 6065              		.cfi_endproc
 6066              	.LFE613:
 6068              		.section	.text.get_osc_control_mask,"ax",%progbits
 6069              		.align	1
 6070              		.global	get_osc_control_mask
 6071              		.syntax unified
 6072              		.code	16
 6073              		.thumb_func
 6075              	get_osc_control_mask:
 6076              	.LVL496:
 6077              	.LFB614:
1126:Core/Src/AB1805.c ****   uint8_t ret;
 6078              		.loc 1 1126 1 is_stmt 1 view -0
 6079              		.cfi_startproc
 6080              		@ args = 0, pretend = 0, frame = 0
 6081              		@ frame_needed = 0, uses_anonymous_args = 0
1126:Core/Src/AB1805.c ****   uint8_t ret;
 6082              		.loc 1 1126 1 is_stmt 0 view .LVU1289
 6083 0000 10B5     		push	{r4, lr}
 6084              	.LCFI115:
 6085              		.cfi_def_cfa_offset 8
 6086              		.cfi_offset 4, -8
 6087              		.cfi_offset 14, -4
 6088 0002 0400     		movs	r4, r0
1127:Core/Src/AB1805.c ****   ret = get_osc_control() & mask;
 6089              		.loc 1 1127 3 is_stmt 1 view .LVU1290
1128:Core/Src/AB1805.c ****   switch (mask)
 6090              		.loc 1 1128 3 view .LVU1291
1128:Core/Src/AB1805.c ****   switch (mask)
 6091              		.loc 1 1128 9 is_stmt 0 view .LVU1292
 6092 0004 FFF7FEFF 		bl	get_osc_control
 6093              	.LVL497:
1128:Core/Src/AB1805.c ****   switch (mask)
 6094              		.loc 1 1128 7 view .LVU1293
 6095 0008 2040     		ands	r0, r4
 6096              	.LVL498:
1129:Core/Src/AB1805.c ****   {
 6097              		.loc 1 1129 3 is_stmt 1 view .LVU1294
 6098 000a 102C     		cmp	r4, #16
 6099 000c 07D8     		bhi	.L300
 6100 000e 002C     		cmp	r4, #0
 6101 0010 15D0     		beq	.L301
 6102 0012 102C     		cmp	r4, #16
 6103 0014 13D8     		bhi	.L301
 6104 0016 A400     		lsls	r4, r4, #2
 6105 0018 0A4B     		ldr	r3, .L309
 6106 001a 1B59     		ldr	r3, [r3, r4]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 175


 6107 001c 9F46     		mov	pc, r3
 6108              		.section	.rodata.get_osc_control_mask,"a",%progbits
 6109              		.align	2
 6110              	.L303:
 6111 0000 3E000000 		.word	.L301
 6112 0004 28000000 		.word	.L307
 6113 0008 3A000000 		.word	.L306
 6114 000c 3E000000 		.word	.L301
 6115 0010 36000000 		.word	.L305
 6116 0014 3E000000 		.word	.L301
 6117 0018 3E000000 		.word	.L301
 6118 001c 3E000000 		.word	.L301
 6119 0020 32000000 		.word	.L304
 6120 0024 3E000000 		.word	.L301
 6121 0028 3E000000 		.word	.L301
 6122 002c 3E000000 		.word	.L301
 6123 0030 3E000000 		.word	.L301
 6124 0034 3E000000 		.word	.L301
 6125 0038 3E000000 		.word	.L301
 6126 003c 3E000000 		.word	.L301
 6127 0040 2E000000 		.word	.L302
 6128              		.section	.text.get_osc_control_mask
 6129              	.L300:
 6130 001e 602C     		cmp	r4, #96
 6131 0020 03D0     		beq	.L308
 6132 0022 802C     		cmp	r4, #128
 6133 0024 0BD1     		bne	.L301
1132:Core/Src/AB1805.c ****     break;
 6134              		.loc 1 1132 5 view .LVU1295
1132:Core/Src/AB1805.c ****     break;
 6135              		.loc 1 1132 9 is_stmt 0 view .LVU1296
 6136 0026 C009     		lsrs	r0, r0, #7
 6137              	.LVL499:
1133:Core/Src/AB1805.c ****   case OSC_CONTROL_ACAL_MASK:
 6138              		.loc 1 1133 5 is_stmt 1 view .LVU1297
 6139              	.L307:
1155:Core/Src/AB1805.c **** }
 6140              		.loc 1 1155 3 view .LVU1298
1156:Core/Src/AB1805.c **** 
 6141              		.loc 1 1156 1 is_stmt 0 view .LVU1299
 6142              		@ sp needed
 6143 0028 10BD     		pop	{r4, pc}
 6144              	.L308:
1135:Core/Src/AB1805.c ****     break;
 6145              		.loc 1 1135 5 is_stmt 1 view .LVU1300
1135:Core/Src/AB1805.c ****     break;
 6146              		.loc 1 1135 9 is_stmt 0 view .LVU1301
 6147 002a 4009     		lsrs	r0, r0, #5
 6148              	.LVL500:
1136:Core/Src/AB1805.c ****   case OSC_CONTROL_AOS_MASK:
 6149              		.loc 1 1136 5 is_stmt 1 view .LVU1302
 6150 002c FCE7     		b	.L307
 6151              	.L302:
1138:Core/Src/AB1805.c ****     break;
 6152              		.loc 1 1138 5 view .LVU1303
1138:Core/Src/AB1805.c ****     break;
 6153              		.loc 1 1138 9 is_stmt 0 view .LVU1304
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 176


 6154 002e 0009     		lsrs	r0, r0, #4
 6155              	.LVL501:
1139:Core/Src/AB1805.c ****   case OSC_CONTROL_FOS_MASK:
 6156              		.loc 1 1139 5 is_stmt 1 view .LVU1305
 6157 0030 FAE7     		b	.L307
 6158              	.L304:
1141:Core/Src/AB1805.c ****     break;
 6159              		.loc 1 1141 5 view .LVU1306
1141:Core/Src/AB1805.c ****     break;
 6160              		.loc 1 1141 9 is_stmt 0 view .LVU1307
 6161 0032 C008     		lsrs	r0, r0, #3
 6162              	.LVL502:
1142:Core/Src/AB1805.c ****   case OSC_CONTROL_PWGT_MASK:
 6163              		.loc 1 1142 5 is_stmt 1 view .LVU1308
 6164 0034 F8E7     		b	.L307
 6165              	.L305:
1144:Core/Src/AB1805.c ****     break;
 6166              		.loc 1 1144 5 view .LVU1309
1144:Core/Src/AB1805.c ****     break;
 6167              		.loc 1 1144 9 is_stmt 0 view .LVU1310
 6168 0036 8008     		lsrs	r0, r0, #2
 6169              	.LVL503:
1145:Core/Src/AB1805.c ****   case OSC_CONTROL_OFIE_MASK:
 6170              		.loc 1 1145 5 is_stmt 1 view .LVU1311
 6171 0038 F6E7     		b	.L307
 6172              	.L306:
1147:Core/Src/AB1805.c ****     break;
 6173              		.loc 1 1147 5 view .LVU1312
1147:Core/Src/AB1805.c ****     break;
 6174              		.loc 1 1147 9 is_stmt 0 view .LVU1313
 6175 003a 4008     		lsrs	r0, r0, #1
 6176              	.LVL504:
1148:Core/Src/AB1805.c ****   case OSC_CONTROL_ACIE_MASK:
 6177              		.loc 1 1148 5 is_stmt 1 view .LVU1314
 6178 003c F4E7     		b	.L307
 6179              	.L301:
1153:Core/Src/AB1805.c ****   }
 6180              		.loc 1 1153 5 view .LVU1315
1153:Core/Src/AB1805.c ****   }
 6181              		.loc 1 1153 9 is_stmt 0 view .LVU1316
 6182 003e 024B     		ldr	r3, .L309+4
 6183 0040 1878     		ldrb	r0, [r3]
 6184              	.LVL505:
1153:Core/Src/AB1805.c ****   }
 6185              		.loc 1 1153 9 view .LVU1317
 6186 0042 F1E7     		b	.L307
 6187              	.L310:
 6188              		.align	2
 6189              	.L309:
 6190 0044 00000000 		.word	.L303
 6191 0048 00000000 		.word	_osc_control
 6192              		.cfi_endproc
 6193              	.LFE614:
 6195              		.section	.text.set_osc_control_value,"ax",%progbits
 6196              		.align	1
 6197              		.global	set_osc_control_value
 6198              		.syntax unified
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 177


 6199              		.code	16
 6200              		.thumb_func
 6202              	set_osc_control_value:
 6203              	.LVL506:
 6204              	.LFB615:
1159:Core/Src/AB1805.c ****   write_rtc_register(OSC_CONTROL_REGISTER, value);
 6205              		.loc 1 1159 1 is_stmt 1 view -0
 6206              		.cfi_startproc
 6207              		@ args = 0, pretend = 0, frame = 0
 6208              		@ frame_needed = 0, uses_anonymous_args = 0
1159:Core/Src/AB1805.c ****   write_rtc_register(OSC_CONTROL_REGISTER, value);
 6209              		.loc 1 1159 1 is_stmt 0 view .LVU1319
 6210 0000 10B5     		push	{r4, lr}
 6211              	.LCFI116:
 6212              		.cfi_def_cfa_offset 8
 6213              		.cfi_offset 4, -8
 6214              		.cfi_offset 14, -4
 6215 0002 0100     		movs	r1, r0
1160:Core/Src/AB1805.c ****   _osc_control = read_rtc_register(OSC_CONTROL_REGISTER);
 6216              		.loc 1 1160 3 is_stmt 1 view .LVU1320
 6217 0004 1C20     		movs	r0, #28
 6218              	.LVL507:
1160:Core/Src/AB1805.c ****   _osc_control = read_rtc_register(OSC_CONTROL_REGISTER);
 6219              		.loc 1 1160 3 is_stmt 0 view .LVU1321
 6220 0006 FFF7FEFF 		bl	write_rtc_register
 6221              	.LVL508:
1161:Core/Src/AB1805.c ****   return _osc_control;
 6222              		.loc 1 1161 3 is_stmt 1 view .LVU1322
1161:Core/Src/AB1805.c ****   return _osc_control;
 6223              		.loc 1 1161 18 is_stmt 0 view .LVU1323
 6224 000a 1C20     		movs	r0, #28
 6225 000c FFF7FEFF 		bl	read_rtc_register
 6226              	.LVL509:
1161:Core/Src/AB1805.c ****   return _osc_control;
 6227              		.loc 1 1161 16 view .LVU1324
 6228 0010 014B     		ldr	r3, .L312
 6229 0012 1870     		strb	r0, [r3]
1162:Core/Src/AB1805.c **** }
 6230              		.loc 1 1162 3 is_stmt 1 view .LVU1325
1163:Core/Src/AB1805.c **** 
 6231              		.loc 1 1163 1 is_stmt 0 view .LVU1326
 6232              		@ sp needed
 6233 0014 10BD     		pop	{r4, pc}
 6234              	.L313:
 6235 0016 C046     		.align	2
 6236              	.L312:
 6237 0018 00000000 		.word	_osc_control
 6238              		.cfi_endproc
 6239              	.LFE615:
 6241              		.section	.text.set_osc_control_value_mask,"ax",%progbits
 6242              		.align	1
 6243              		.global	set_osc_control_value_mask
 6244              		.syntax unified
 6245              		.code	16
 6246              		.thumb_func
 6248              	set_osc_control_value_mask:
 6249              	.LVL510:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 178


 6250              	.LFB616:
1166:Core/Src/AB1805.c ****   uint8_t c1;
 6251              		.loc 1 1166 1 is_stmt 1 view -0
 6252              		.cfi_startproc
 6253              		@ args = 0, pretend = 0, frame = 0
 6254              		@ frame_needed = 0, uses_anonymous_args = 0
1166:Core/Src/AB1805.c ****   uint8_t c1;
 6255              		.loc 1 1166 1 is_stmt 0 view .LVU1328
 6256 0000 70B5     		push	{r4, r5, r6, lr}
 6257              	.LCFI117:
 6258              		.cfi_def_cfa_offset 16
 6259              		.cfi_offset 4, -16
 6260              		.cfi_offset 5, -12
 6261              		.cfi_offset 6, -8
 6262              		.cfi_offset 14, -4
 6263 0002 0500     		movs	r5, r0
 6264 0004 0C00     		movs	r4, r1
1167:Core/Src/AB1805.c ****   c1 = get_osc_control();
 6265              		.loc 1 1167 3 is_stmt 1 view .LVU1329
1168:Core/Src/AB1805.c ****   switch (mask)
 6266              		.loc 1 1168 3 view .LVU1330
1168:Core/Src/AB1805.c ****   switch (mask)
 6267              		.loc 1 1168 8 is_stmt 0 view .LVU1331
 6268 0006 FFF7FEFF 		bl	get_osc_control
 6269              	.LVL511:
1169:Core/Src/AB1805.c ****   {
 6270              		.loc 1 1169 3 is_stmt 1 view .LVU1332
 6271 000a 102C     		cmp	r4, #16
 6272 000c 07D8     		bhi	.L315
 6273 000e 002C     		cmp	r4, #0
 6274 0010 0ED0     		beq	.L316
 6275 0012 102C     		cmp	r4, #16
 6276 0014 0CD8     		bhi	.L316
 6277 0016 A400     		lsls	r4, r4, #2
 6278 0018 1E4B     		ldr	r3, .L324
 6279 001a 1B59     		ldr	r3, [r3, r4]
 6280 001c 9F46     		mov	pc, r3
 6281              		.section	.rodata.set_osc_control_value_mask,"a",%progbits
 6282              		.align	2
 6283              	.L318:
 6284 0000 30000000 		.word	.L316
 6285 0004 88000000 		.word	.L322
 6286 0008 78000000 		.word	.L321
 6287 000c 30000000 		.word	.L316
 6288 0010 68000000 		.word	.L320
 6289 0014 30000000 		.word	.L316
 6290 0018 30000000 		.word	.L316
 6291 001c 30000000 		.word	.L316
 6292 0020 58000000 		.word	.L319
 6293 0024 30000000 		.word	.L316
 6294 0028 30000000 		.word	.L316
 6295 002c 30000000 		.word	.L316
 6296 0030 30000000 		.word	.L316
 6297 0034 30000000 		.word	.L316
 6298 0038 30000000 		.word	.L316
 6299 003c 30000000 		.word	.L316
 6300 0040 48000000 		.word	.L317
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 179


 6301              		.section	.text.set_osc_control_value_mask
 6302              	.L315:
 6303 001e 602C     		cmp	r4, #96
 6304 0020 0AD0     		beq	.L323
 6305 0022 802C     		cmp	r4, #128
 6306 0024 04D1     		bne	.L316
1172:Core/Src/AB1805.c ****     c1 |= (value << 7) & OSC_CONTROL_OSEL_MASK;
 6307              		.loc 1 1172 5 view .LVU1333
1172:Core/Src/AB1805.c ****     c1 |= (value << 7) & OSC_CONTROL_OSEL_MASK;
 6308              		.loc 1 1172 8 is_stmt 0 view .LVU1334
 6309 0026 7F23     		movs	r3, #127
 6310 0028 0340     		ands	r3, r0
 6311              	.LVL512:
1173:Core/Src/AB1805.c ****     break;
 6312              		.loc 1 1173 5 is_stmt 1 view .LVU1335
1173:Core/Src/AB1805.c ****     break;
 6313              		.loc 1 1173 18 is_stmt 0 view .LVU1336
 6314 002a ED01     		lsls	r5, r5, #7
1173:Core/Src/AB1805.c ****     break;
 6315              		.loc 1 1173 8 view .LVU1337
 6316 002c 1D43     		orrs	r5, r3
 6317 002e EDB2     		uxtb	r5, r5
 6318              	.LVL513:
1174:Core/Src/AB1805.c ****   case OSC_CONTROL_ACAL_MASK:
 6319              		.loc 1 1174 5 is_stmt 1 view .LVU1338
 6320              	.L316:
1202:Core/Src/AB1805.c **** }
 6321              		.loc 1 1202 3 view .LVU1339
1202:Core/Src/AB1805.c **** }
 6322              		.loc 1 1202 10 is_stmt 0 view .LVU1340
 6323 0030 2800     		movs	r0, r5
 6324 0032 FFF7FEFF 		bl	set_osc_control_value
 6325              	.LVL514:
1203:Core/Src/AB1805.c **** 
 6326              		.loc 1 1203 1 view .LVU1341
 6327              		@ sp needed
 6328              	.LVL515:
1203:Core/Src/AB1805.c **** 
 6329              		.loc 1 1203 1 view .LVU1342
 6330 0036 70BD     		pop	{r4, r5, r6, pc}
 6331              	.LVL516:
 6332              	.L323:
1176:Core/Src/AB1805.c ****     c1 |= (value << 5) & OSC_CONTROL_ACAL_MASK;
 6333              		.loc 1 1176 5 is_stmt 1 view .LVU1343
1176:Core/Src/AB1805.c ****     c1 |= (value << 5) & OSC_CONTROL_ACAL_MASK;
 6334              		.loc 1 1176 8 is_stmt 0 view .LVU1344
 6335 0038 6023     		movs	r3, #96
 6336 003a 9843     		bics	r0, r3
 6337              	.LVL517:
1176:Core/Src/AB1805.c ****     c1 |= (value << 5) & OSC_CONTROL_ACAL_MASK;
 6338              		.loc 1 1176 8 view .LVU1345
 6339 003c C0B2     		uxtb	r0, r0
 6340              	.LVL518:
1177:Core/Src/AB1805.c ****     break;
 6341              		.loc 1 1177 5 is_stmt 1 view .LVU1346
1177:Core/Src/AB1805.c ****     break;
 6342              		.loc 1 1177 18 is_stmt 0 view .LVU1347
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 180


 6343 003e 6B01     		lsls	r3, r5, #5
1177:Core/Src/AB1805.c ****     break;
 6344              		.loc 1 1177 24 view .LVU1348
 6345 0040 6025     		movs	r5, #96
 6346 0042 1D40     		ands	r5, r3
1177:Core/Src/AB1805.c ****     break;
 6347              		.loc 1 1177 8 view .LVU1349
 6348 0044 0543     		orrs	r5, r0
 6349              	.LVL519:
1178:Core/Src/AB1805.c ****   case OSC_CONTROL_AOS_MASK:
 6350              		.loc 1 1178 5 is_stmt 1 view .LVU1350
 6351 0046 F3E7     		b	.L316
 6352              	.LVL520:
 6353              	.L317:
1180:Core/Src/AB1805.c ****     c1 |= (value << 4) & OSC_CONTROL_AOS_MASK;
 6354              		.loc 1 1180 5 view .LVU1351
1180:Core/Src/AB1805.c ****     c1 |= (value << 4) & OSC_CONTROL_AOS_MASK;
 6355              		.loc 1 1180 8 is_stmt 0 view .LVU1352
 6356 0048 1023     		movs	r3, #16
 6357 004a 9843     		bics	r0, r3
 6358              	.LVL521:
1180:Core/Src/AB1805.c ****     c1 |= (value << 4) & OSC_CONTROL_AOS_MASK;
 6359              		.loc 1 1180 8 view .LVU1353
 6360 004c C0B2     		uxtb	r0, r0
 6361              	.LVL522:
1181:Core/Src/AB1805.c ****     break;
 6362              		.loc 1 1181 5 is_stmt 1 view .LVU1354
1181:Core/Src/AB1805.c ****     break;
 6363              		.loc 1 1181 18 is_stmt 0 view .LVU1355
 6364 004e 2B01     		lsls	r3, r5, #4
1181:Core/Src/AB1805.c ****     break;
 6365              		.loc 1 1181 24 view .LVU1356
 6366 0050 1025     		movs	r5, #16
 6367 0052 1D40     		ands	r5, r3
1181:Core/Src/AB1805.c ****     break;
 6368              		.loc 1 1181 8 view .LVU1357
 6369 0054 0543     		orrs	r5, r0
 6370              	.LVL523:
1182:Core/Src/AB1805.c ****   case OSC_CONTROL_FOS_MASK:
 6371              		.loc 1 1182 5 is_stmt 1 view .LVU1358
 6372 0056 EBE7     		b	.L316
 6373              	.LVL524:
 6374              	.L319:
1184:Core/Src/AB1805.c ****     c1 |= (value << 3) & OSC_CONTROL_FOS_MASK;
 6375              		.loc 1 1184 5 view .LVU1359
1184:Core/Src/AB1805.c ****     c1 |= (value << 3) & OSC_CONTROL_FOS_MASK;
 6376              		.loc 1 1184 8 is_stmt 0 view .LVU1360
 6377 0058 0823     		movs	r3, #8
 6378 005a 9843     		bics	r0, r3
 6379              	.LVL525:
1184:Core/Src/AB1805.c ****     c1 |= (value << 3) & OSC_CONTROL_FOS_MASK;
 6380              		.loc 1 1184 8 view .LVU1361
 6381 005c C0B2     		uxtb	r0, r0
 6382              	.LVL526:
1185:Core/Src/AB1805.c ****     break;
 6383              		.loc 1 1185 5 is_stmt 1 view .LVU1362
1185:Core/Src/AB1805.c ****     break;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 181


 6384              		.loc 1 1185 18 is_stmt 0 view .LVU1363
 6385 005e EB00     		lsls	r3, r5, #3
1185:Core/Src/AB1805.c ****     break;
 6386              		.loc 1 1185 24 view .LVU1364
 6387 0060 0825     		movs	r5, #8
 6388 0062 1D40     		ands	r5, r3
1185:Core/Src/AB1805.c ****     break;
 6389              		.loc 1 1185 8 view .LVU1365
 6390 0064 0543     		orrs	r5, r0
 6391              	.LVL527:
1186:Core/Src/AB1805.c ****   case OSC_CONTROL_PWGT_MASK:
 6392              		.loc 1 1186 5 is_stmt 1 view .LVU1366
 6393 0066 E3E7     		b	.L316
 6394              	.LVL528:
 6395              	.L320:
1188:Core/Src/AB1805.c ****     c1 |= (value << 2) & OSC_CONTROL_PWGT_MASK;
 6396              		.loc 1 1188 5 view .LVU1367
1188:Core/Src/AB1805.c ****     c1 |= (value << 2) & OSC_CONTROL_PWGT_MASK;
 6397              		.loc 1 1188 8 is_stmt 0 view .LVU1368
 6398 0068 0423     		movs	r3, #4
 6399 006a 9843     		bics	r0, r3
 6400              	.LVL529:
1188:Core/Src/AB1805.c ****     c1 |= (value << 2) & OSC_CONTROL_PWGT_MASK;
 6401              		.loc 1 1188 8 view .LVU1369
 6402 006c C0B2     		uxtb	r0, r0
 6403              	.LVL530:
1189:Core/Src/AB1805.c ****     break;
 6404              		.loc 1 1189 5 is_stmt 1 view .LVU1370
1189:Core/Src/AB1805.c ****     break;
 6405              		.loc 1 1189 18 is_stmt 0 view .LVU1371
 6406 006e AB00     		lsls	r3, r5, #2
1189:Core/Src/AB1805.c ****     break;
 6407              		.loc 1 1189 24 view .LVU1372
 6408 0070 0425     		movs	r5, #4
 6409 0072 1D40     		ands	r5, r3
1189:Core/Src/AB1805.c ****     break;
 6410              		.loc 1 1189 8 view .LVU1373
 6411 0074 0543     		orrs	r5, r0
 6412              	.LVL531:
1190:Core/Src/AB1805.c ****   case OSC_CONTROL_OFIE_MASK:
 6413              		.loc 1 1190 5 is_stmt 1 view .LVU1374
 6414 0076 DBE7     		b	.L316
 6415              	.LVL532:
 6416              	.L321:
1192:Core/Src/AB1805.c ****     c1 |= (value << 1) & OSC_CONTROL_OFIE_MASK;
 6417              		.loc 1 1192 5 view .LVU1375
1192:Core/Src/AB1805.c ****     c1 |= (value << 1) & OSC_CONTROL_OFIE_MASK;
 6418              		.loc 1 1192 8 is_stmt 0 view .LVU1376
 6419 0078 0223     		movs	r3, #2
 6420 007a 9843     		bics	r0, r3
 6421              	.LVL533:
1192:Core/Src/AB1805.c ****     c1 |= (value << 1) & OSC_CONTROL_OFIE_MASK;
 6422              		.loc 1 1192 8 view .LVU1377
 6423 007c C0B2     		uxtb	r0, r0
 6424              	.LVL534:
1193:Core/Src/AB1805.c ****     break;
 6425              		.loc 1 1193 5 is_stmt 1 view .LVU1378
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 182


1193:Core/Src/AB1805.c ****     break;
 6426              		.loc 1 1193 18 is_stmt 0 view .LVU1379
 6427 007e 6B00     		lsls	r3, r5, #1
1193:Core/Src/AB1805.c ****     break;
 6428              		.loc 1 1193 24 view .LVU1380
 6429 0080 0225     		movs	r5, #2
 6430 0082 1D40     		ands	r5, r3
1193:Core/Src/AB1805.c ****     break;
 6431              		.loc 1 1193 8 view .LVU1381
 6432 0084 0543     		orrs	r5, r0
 6433              	.LVL535:
1194:Core/Src/AB1805.c ****   case OSC_CONTROL_ACIE_MASK:
 6434              		.loc 1 1194 5 is_stmt 1 view .LVU1382
 6435 0086 D3E7     		b	.L316
 6436              	.LVL536:
 6437              	.L322:
1196:Core/Src/AB1805.c ****     c1 |= (value)&OSC_CONTROL_ACIE_MASK;
 6438              		.loc 1 1196 5 view .LVU1383
1196:Core/Src/AB1805.c ****     c1 |= (value)&OSC_CONTROL_ACIE_MASK;
 6439              		.loc 1 1196 8 is_stmt 0 view .LVU1384
 6440 0088 0123     		movs	r3, #1
 6441 008a 9843     		bics	r0, r3
 6442              	.LVL537:
1196:Core/Src/AB1805.c ****     c1 |= (value)&OSC_CONTROL_ACIE_MASK;
 6443              		.loc 1 1196 8 view .LVU1385
 6444 008c C0B2     		uxtb	r0, r0
 6445              	.LVL538:
1197:Core/Src/AB1805.c ****     break;
 6446              		.loc 1 1197 5 is_stmt 1 view .LVU1386
 6447 008e 1D40     		ands	r5, r3
 6448 0090 0543     		orrs	r5, r0
 6449              	.LVL539:
1198:Core/Src/AB1805.c ****   default:
 6450              		.loc 1 1198 5 view .LVU1387
 6451 0092 CDE7     		b	.L316
 6452              	.L325:
 6453              		.align	2
 6454              	.L324:
 6455 0094 00000000 		.word	.L318
 6456              		.cfi_endproc
 6457              	.LFE616:
 6459              		.section	.text.get_WDT_register,"ax",%progbits
 6460              		.align	1
 6461              		.global	get_WDT_register
 6462              		.syntax unified
 6463              		.code	16
 6464              		.thumb_func
 6466              	get_WDT_register:
 6467              	.LFB617:
1207:Core/Src/AB1805.c ****   _wdt_register = read_rtc_register(WDT_REGISTER);
 6468              		.loc 1 1207 1 view -0
 6469              		.cfi_startproc
 6470              		@ args = 0, pretend = 0, frame = 0
 6471              		@ frame_needed = 0, uses_anonymous_args = 0
 6472 0000 10B5     		push	{r4, lr}
 6473              	.LCFI118:
 6474              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 183


 6475              		.cfi_offset 4, -8
 6476              		.cfi_offset 14, -4
1208:Core/Src/AB1805.c ****   return _wdt_register;
 6477              		.loc 1 1208 3 view .LVU1389
1208:Core/Src/AB1805.c ****   return _wdt_register;
 6478              		.loc 1 1208 19 is_stmt 0 view .LVU1390
 6479 0002 1B20     		movs	r0, #27
 6480 0004 FFF7FEFF 		bl	read_rtc_register
 6481              	.LVL540:
1208:Core/Src/AB1805.c ****   return _wdt_register;
 6482              		.loc 1 1208 17 view .LVU1391
 6483 0008 014B     		ldr	r3, .L327
 6484 000a 1870     		strb	r0, [r3]
1209:Core/Src/AB1805.c **** }
 6485              		.loc 1 1209 3 is_stmt 1 view .LVU1392
1210:Core/Src/AB1805.c **** 
 6486              		.loc 1 1210 1 is_stmt 0 view .LVU1393
 6487              		@ sp needed
 6488 000c 10BD     		pop	{r4, pc}
 6489              	.L328:
 6490 000e C046     		.align	2
 6491              	.L327:
 6492 0010 00000000 		.word	_wdt_register
 6493              		.cfi_endproc
 6494              	.LFE617:
 6496              		.section	.text.get_WDT_register_mask,"ax",%progbits
 6497              		.align	1
 6498              		.global	get_WDT_register_mask
 6499              		.syntax unified
 6500              		.code	16
 6501              		.thumb_func
 6503              	get_WDT_register_mask:
 6504              	.LVL541:
 6505              	.LFB618:
1213:Core/Src/AB1805.c ****   uint8_t ret;
 6506              		.loc 1 1213 1 is_stmt 1 view -0
 6507              		.cfi_startproc
 6508              		@ args = 0, pretend = 0, frame = 0
 6509              		@ frame_needed = 0, uses_anonymous_args = 0
1213:Core/Src/AB1805.c ****   uint8_t ret;
 6510              		.loc 1 1213 1 is_stmt 0 view .LVU1395
 6511 0000 10B5     		push	{r4, lr}
 6512              	.LCFI119:
 6513              		.cfi_def_cfa_offset 8
 6514              		.cfi_offset 4, -8
 6515              		.cfi_offset 14, -4
 6516 0002 0400     		movs	r4, r0
1214:Core/Src/AB1805.c ****   ret = get_WDT_register() & mask;
 6517              		.loc 1 1214 3 is_stmt 1 view .LVU1396
1215:Core/Src/AB1805.c ****   switch (mask)
 6518              		.loc 1 1215 3 view .LVU1397
1215:Core/Src/AB1805.c ****   switch (mask)
 6519              		.loc 1 1215 9 is_stmt 0 view .LVU1398
 6520 0004 FFF7FEFF 		bl	get_WDT_register
 6521              	.LVL542:
1215:Core/Src/AB1805.c ****   switch (mask)
 6522              		.loc 1 1215 7 view .LVU1399
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 184


 6523 0008 2040     		ands	r0, r4
 6524              	.LVL543:
1216:Core/Src/AB1805.c ****   {
 6525              		.loc 1 1216 3 is_stmt 1 view .LVU1400
 6526 000a 7C2C     		cmp	r4, #124
 6527 000c 08D0     		beq	.L330
 6528 000e 802C     		cmp	r4, #128
 6529 0010 04D0     		beq	.L331
 6530 0012 032C     		cmp	r4, #3
 6531 0014 03D0     		beq	.L332
1228:Core/Src/AB1805.c ****   }
 6532              		.loc 1 1228 5 view .LVU1401
1228:Core/Src/AB1805.c ****   }
 6533              		.loc 1 1228 9 is_stmt 0 view .LVU1402
 6534 0016 034B     		ldr	r3, .L335
 6535 0018 1878     		ldrb	r0, [r3]
 6536              	.LVL544:
1228:Core/Src/AB1805.c ****   }
 6537              		.loc 1 1228 9 view .LVU1403
 6538 001a 00E0     		b	.L332
 6539              	.L331:
1219:Core/Src/AB1805.c ****     break;
 6540              		.loc 1 1219 5 is_stmt 1 view .LVU1404
1219:Core/Src/AB1805.c ****     break;
 6541              		.loc 1 1219 9 is_stmt 0 view .LVU1405
 6542 001c C009     		lsrs	r0, r0, #7
 6543              	.LVL545:
1220:Core/Src/AB1805.c ****   case WDT_REGISTER_BMB_MASK:
 6544              		.loc 1 1220 5 is_stmt 1 view .LVU1406
 6545              	.L332:
1230:Core/Src/AB1805.c **** }
 6546              		.loc 1 1230 3 view .LVU1407
1231:Core/Src/AB1805.c **** 
 6547              		.loc 1 1231 1 is_stmt 0 view .LVU1408
 6548              		@ sp needed
 6549 001e 10BD     		pop	{r4, pc}
 6550              	.L330:
1222:Core/Src/AB1805.c ****     break;
 6551              		.loc 1 1222 5 is_stmt 1 view .LVU1409
1222:Core/Src/AB1805.c ****     break;
 6552              		.loc 1 1222 9 is_stmt 0 view .LVU1410
 6553 0020 8008     		lsrs	r0, r0, #2
 6554              	.LVL546:
1223:Core/Src/AB1805.c ****   case WDT_REGISTER_WRB_MASK:
 6555              		.loc 1 1223 5 is_stmt 1 view .LVU1411
 6556 0022 FCE7     		b	.L332
 6557              	.L336:
 6558              		.align	2
 6559              	.L335:
 6560 0024 00000000 		.word	_wdt_register
 6561              		.cfi_endproc
 6562              	.LFE618:
 6564              		.section	.text.set_value,"ax",%progbits
 6565              		.align	1
 6566              		.global	set_value
 6567              		.syntax unified
 6568              		.code	16
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 185


 6569              		.thumb_func
 6571              	set_value:
 6572              	.LVL547:
 6573              	.LFB619:
1234:Core/Src/AB1805.c ****   write_rtc_register(WDT_REGISTER, value);
 6574              		.loc 1 1234 1 view -0
 6575              		.cfi_startproc
 6576              		@ args = 0, pretend = 0, frame = 0
 6577              		@ frame_needed = 0, uses_anonymous_args = 0
1234:Core/Src/AB1805.c ****   write_rtc_register(WDT_REGISTER, value);
 6578              		.loc 1 1234 1 is_stmt 0 view .LVU1413
 6579 0000 10B5     		push	{r4, lr}
 6580              	.LCFI120:
 6581              		.cfi_def_cfa_offset 8
 6582              		.cfi_offset 4, -8
 6583              		.cfi_offset 14, -4
 6584 0002 0100     		movs	r1, r0
1235:Core/Src/AB1805.c ****   _wdt_register = read_rtc_register(WDT_REGISTER);
 6585              		.loc 1 1235 3 is_stmt 1 view .LVU1414
 6586 0004 1B20     		movs	r0, #27
 6587              	.LVL548:
1235:Core/Src/AB1805.c ****   _wdt_register = read_rtc_register(WDT_REGISTER);
 6588              		.loc 1 1235 3 is_stmt 0 view .LVU1415
 6589 0006 FFF7FEFF 		bl	write_rtc_register
 6590              	.LVL549:
1236:Core/Src/AB1805.c ****   return _wdt_register;
 6591              		.loc 1 1236 3 is_stmt 1 view .LVU1416
1236:Core/Src/AB1805.c ****   return _wdt_register;
 6592              		.loc 1 1236 19 is_stmt 0 view .LVU1417
 6593 000a 1B20     		movs	r0, #27
 6594 000c FFF7FEFF 		bl	read_rtc_register
 6595              	.LVL550:
1236:Core/Src/AB1805.c ****   return _wdt_register;
 6596              		.loc 1 1236 17 view .LVU1418
 6597 0010 014B     		ldr	r3, .L338
 6598 0012 1870     		strb	r0, [r3]
1237:Core/Src/AB1805.c **** }
 6599              		.loc 1 1237 3 is_stmt 1 view .LVU1419
1238:Core/Src/AB1805.c **** 
 6600              		.loc 1 1238 1 is_stmt 0 view .LVU1420
 6601              		@ sp needed
 6602 0014 10BD     		pop	{r4, pc}
 6603              	.L339:
 6604 0016 C046     		.align	2
 6605              	.L338:
 6606 0018 00000000 		.word	_wdt_register
 6607              		.cfi_endproc
 6608              	.LFE619:
 6610              		.section	.text.set_WDT_register_mask,"ax",%progbits
 6611              		.align	1
 6612              		.global	set_WDT_register_mask
 6613              		.syntax unified
 6614              		.code	16
 6615              		.thumb_func
 6617              	set_WDT_register_mask:
 6618              	.LVL551:
 6619              	.LFB620:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 186


1241:Core/Src/AB1805.c ****   uint8_t c1;
 6620              		.loc 1 1241 1 is_stmt 1 view -0
 6621              		.cfi_startproc
 6622              		@ args = 0, pretend = 0, frame = 0
 6623              		@ frame_needed = 0, uses_anonymous_args = 0
1241:Core/Src/AB1805.c ****   uint8_t c1;
 6624              		.loc 1 1241 1 is_stmt 0 view .LVU1422
 6625 0000 70B5     		push	{r4, r5, r6, lr}
 6626              	.LCFI121:
 6627              		.cfi_def_cfa_offset 16
 6628              		.cfi_offset 4, -16
 6629              		.cfi_offset 5, -12
 6630              		.cfi_offset 6, -8
 6631              		.cfi_offset 14, -4
 6632 0002 0400     		movs	r4, r0
 6633 0004 0D00     		movs	r5, r1
1242:Core/Src/AB1805.c ****   c1 = get_WDT_register();
 6634              		.loc 1 1242 3 is_stmt 1 view .LVU1423
1243:Core/Src/AB1805.c ****   switch (mask)
 6635              		.loc 1 1243 3 view .LVU1424
1243:Core/Src/AB1805.c ****   switch (mask)
 6636              		.loc 1 1243 8 is_stmt 0 view .LVU1425
 6637 0006 FFF7FEFF 		bl	get_WDT_register
 6638              	.LVL552:
1244:Core/Src/AB1805.c ****   {
 6639              		.loc 1 1244 3 is_stmt 1 view .LVU1426
 6640 000a 7C2D     		cmp	r5, #124
 6641 000c 0DD0     		beq	.L341
 6642 000e 802D     		cmp	r5, #128
 6643 0010 05D0     		beq	.L342
 6644 0012 032D     		cmp	r5, #3
 6645 0014 11D0     		beq	.L345
 6646              	.LVL553:
 6647              	.L344:
1261:Core/Src/AB1805.c **** }
 6648              		.loc 1 1261 3 view .LVU1427
1261:Core/Src/AB1805.c **** }
 6649              		.loc 1 1261 10 is_stmt 0 view .LVU1428
 6650 0016 2000     		movs	r0, r4
 6651 0018 FFF7FEFF 		bl	set_WDT_register_value
 6652              	.LVL554:
1262:Core/Src/AB1805.c **** 
 6653              		.loc 1 1262 1 view .LVU1429
 6654              		@ sp needed
 6655              	.LVL555:
1262:Core/Src/AB1805.c **** 
 6656              		.loc 1 1262 1 view .LVU1430
 6657 001c 70BD     		pop	{r4, r5, r6, pc}
 6658              	.LVL556:
 6659              	.L342:
1247:Core/Src/AB1805.c ****     c1 |= (value << 7) & WDT_REGISTER_WDS_MASK;
 6660              		.loc 1 1247 5 is_stmt 1 view .LVU1431
1247:Core/Src/AB1805.c ****     c1 |= (value << 7) & WDT_REGISTER_WDS_MASK;
 6661              		.loc 1 1247 8 is_stmt 0 view .LVU1432
 6662 001e 7F23     		movs	r3, #127
 6663 0020 0340     		ands	r3, r0
 6664              	.LVL557:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 187


1248:Core/Src/AB1805.c ****     break;
 6665              		.loc 1 1248 5 is_stmt 1 view .LVU1433
1248:Core/Src/AB1805.c ****     break;
 6666              		.loc 1 1248 18 is_stmt 0 view .LVU1434
 6667 0022 E401     		lsls	r4, r4, #7
1248:Core/Src/AB1805.c ****     break;
 6668              		.loc 1 1248 8 view .LVU1435
 6669 0024 1C43     		orrs	r4, r3
 6670 0026 E4B2     		uxtb	r4, r4
 6671              	.LVL558:
1249:Core/Src/AB1805.c ****   case WDT_REGISTER_BMB_MASK:
 6672              		.loc 1 1249 5 is_stmt 1 view .LVU1436
 6673 0028 F5E7     		b	.L344
 6674              	.LVL559:
 6675              	.L341:
1251:Core/Src/AB1805.c ****     c1 |= (value << 2) & WDT_REGISTER_BMB_MASK;
 6676              		.loc 1 1251 5 view .LVU1437
1251:Core/Src/AB1805.c ****     c1 |= (value << 2) & WDT_REGISTER_BMB_MASK;
 6677              		.loc 1 1251 8 is_stmt 0 view .LVU1438
 6678 002a 7C23     		movs	r3, #124
 6679 002c 9843     		bics	r0, r3
 6680              	.LVL560:
1251:Core/Src/AB1805.c ****     c1 |= (value << 2) & WDT_REGISTER_BMB_MASK;
 6681              		.loc 1 1251 8 view .LVU1439
 6682 002e C0B2     		uxtb	r0, r0
 6683              	.LVL561:
1252:Core/Src/AB1805.c ****     break;
 6684              		.loc 1 1252 5 is_stmt 1 view .LVU1440
1252:Core/Src/AB1805.c ****     break;
 6685              		.loc 1 1252 18 is_stmt 0 view .LVU1441
 6686 0030 A300     		lsls	r3, r4, #2
1252:Core/Src/AB1805.c ****     break;
 6687              		.loc 1 1252 24 view .LVU1442
 6688 0032 7C24     		movs	r4, #124
 6689 0034 1C40     		ands	r4, r3
1252:Core/Src/AB1805.c ****     break;
 6690              		.loc 1 1252 8 view .LVU1443
 6691 0036 0443     		orrs	r4, r0
 6692              	.LVL562:
1253:Core/Src/AB1805.c ****   case WDT_REGISTER_WRB_MASK:
 6693              		.loc 1 1253 5 is_stmt 1 view .LVU1444
 6694 0038 EDE7     		b	.L344
 6695              	.LVL563:
 6696              	.L345:
1255:Core/Src/AB1805.c ****     c1 |= (value)&WDT_REGISTER_WRB_MASK;
 6697              		.loc 1 1255 5 view .LVU1445
1255:Core/Src/AB1805.c ****     c1 |= (value)&WDT_REGISTER_WRB_MASK;
 6698              		.loc 1 1255 8 is_stmt 0 view .LVU1446
 6699 003a 0323     		movs	r3, #3
 6700 003c 9843     		bics	r0, r3
 6701              	.LVL564:
1255:Core/Src/AB1805.c ****     c1 |= (value)&WDT_REGISTER_WRB_MASK;
 6702              		.loc 1 1255 8 view .LVU1447
 6703 003e C0B2     		uxtb	r0, r0
 6704              	.LVL565:
1256:Core/Src/AB1805.c ****     break;
 6705              		.loc 1 1256 5 is_stmt 1 view .LVU1448
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 188


 6706 0040 1C40     		ands	r4, r3
 6707 0042 0443     		orrs	r4, r0
 6708              	.LVL566:
1257:Core/Src/AB1805.c ****   default:
 6709              		.loc 1 1257 5 view .LVU1449
 6710 0044 E7E7     		b	.L344
 6711              		.cfi_endproc
 6712              	.LFE620:
 6714              		.section	.text.enter_sleep_mode_PWR_value,"ax",%progbits
 6715              		.align	1
 6716              		.global	enter_sleep_mode_PWR_value
 6717              		.syntax unified
 6718              		.code	16
 6719              		.thumb_func
 6721              	enter_sleep_mode_PWR_value:
 6722              	.LVL567:
 6723              	.LFB621:
1270:Core/Src/AB1805.c ****   if (get_SLST_sleep())
 6724              		.loc 1 1270 1 view -0
 6725              		.cfi_startproc
 6726              		@ args = 0, pretend = 0, frame = 0
 6727              		@ frame_needed = 0, uses_anonymous_args = 0
1270:Core/Src/AB1805.c ****   if (get_SLST_sleep())
 6728              		.loc 1 1270 1 is_stmt 0 view .LVU1451
 6729 0000 10B5     		push	{r4, lr}
 6730              	.LCFI122:
 6731              		.cfi_def_cfa_offset 8
 6732              		.cfi_offset 4, -8
 6733              		.cfi_offset 14, -4
 6734 0002 0400     		movs	r4, r0
1271:Core/Src/AB1805.c ****   { // clean previous sleep
 6735              		.loc 1 1271 3 is_stmt 1 view .LVU1452
1271:Core/Src/AB1805.c ****   { // clean previous sleep
 6736              		.loc 1 1271 7 is_stmt 0 view .LVU1453
 6737 0004 FFF7FEFF 		bl	get_SLST_sleep
 6738              	.LVL568:
1271:Core/Src/AB1805.c ****   { // clean previous sleep
 6739              		.loc 1 1271 6 view .LVU1454
 6740 0008 0028     		cmp	r0, #0
 6741 000a 11D1     		bne	.L348
 6742              	.L347:
1277:Core/Src/AB1805.c **** 
 6743              		.loc 1 1277 3 is_stmt 1 view .LVU1455
 6744 000c 0620     		movs	r0, #6
 6745 000e FFF7FEFF 		bl	set_OUT2S_control2
 6746              	.LVL569:
1281:Core/Src/AB1805.c **** 
 6747              		.loc 1 1281 3 view .LVU1456
 6748 0012 C021     		movs	r1, #192
 6749 0014 0020     		movs	r0, #0
 6750 0016 FFF7FEFF 		bl	set_outcontrol_value_mask
 6751              	.LVL570:
1284:Core/Src/AB1805.c **** 
 6752              		.loc 1 1284 3 view .LVU1457
 6753 001a 0421     		movs	r1, #4
 6754 001c 0020     		movs	r0, #0
 6755 001e FFF7FEFF 		bl	set_osc_control_value_mask
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 189


 6756              	.LVL571:
1287:Core/Src/AB1805.c **** 
 6757              		.loc 1 1287 3 view .LVU1458
 6758 0022 2000     		movs	r0, r4
 6759 0024 FFF7FEFF 		bl	set_SLTO_sleep
 6760              	.LVL572:
1290:Core/Src/AB1805.c **** }
 6761              		.loc 1 1290 3 view .LVU1459
 6762 0028 0120     		movs	r0, #1
 6763 002a FFF7FEFF 		bl	set_SLP_sleep
 6764              	.LVL573:
1291:Core/Src/AB1805.c **** 
 6765              		.loc 1 1291 1 is_stmt 0 view .LVU1460
 6766              		@ sp needed
 6767 002e 10BD     		pop	{r4, pc}
 6768              	.L348:
1273:Core/Src/AB1805.c ****   }
 6769              		.loc 1 1273 5 is_stmt 1 view .LVU1461
 6770 0030 FFF7FEFF 		bl	clean_SLST_sleep
 6771              	.LVL574:
 6772 0034 EAE7     		b	.L347
 6773              		.cfi_endproc
 6774              	.LFE621:
 6776              		.section	.text.enter_sleep_mode,"ax",%progbits
 6777              		.align	1
 6778              		.global	enter_sleep_mode
 6779              		.syntax unified
 6780              		.code	16
 6781              		.thumb_func
 6783              	enter_sleep_mode:
 6784              	.LVL575:
 6785              	.LFB622:
1306:Core/Src/AB1805.c ****   uint8_t ret = 0;
 6786              		.loc 1 1306 1 view -0
 6787              		.cfi_startproc
 6788              		@ args = 0, pretend = 0, frame = 0
 6789              		@ frame_needed = 0, uses_anonymous_args = 0
1306:Core/Src/AB1805.c ****   uint8_t ret = 0;
 6790              		.loc 1 1306 1 is_stmt 0 view .LVU1463
 6791 0000 10B5     		push	{r4, lr}
 6792              	.LCFI123:
 6793              		.cfi_def_cfa_offset 8
 6794              		.cfi_offset 4, -8
 6795              		.cfi_offset 14, -4
 6796 0002 0400     		movs	r4, r0
1307:Core/Src/AB1805.c ****   uint8_t slres = 0;
 6797              		.loc 1 1307 3 is_stmt 1 view .LVU1464
 6798              	.LVL576:
1308:Core/Src/AB1805.c ****   char temp = 0;
 6799              		.loc 1 1308 3 view .LVU1465
1309:Core/Src/AB1805.c **** 
 6800              		.loc 1 1309 3 view .LVU1466
1337:Core/Src/AB1805.c ****   {
 6801              		.loc 1 1337 3 view .LVU1467
1337:Core/Src/AB1805.c ****   {
 6802              		.loc 1 1337 6 is_stmt 0 view .LVU1468
 6803 0004 0029     		cmp	r1, #0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 190


 6804 0006 07D1     		bne	.L351
 6805              	.LVL577:
 6806              	.L350:
1346:Core/Src/AB1805.c ****   set_sleep(temp);                      // Write to the register
 6807              		.loc 1 1346 3 is_stmt 1 view .LVU1469
1347:Core/Src/AB1805.c **** 
 6808              		.loc 1 1347 3 view .LVU1470
 6809 0008 8020     		movs	r0, #128
 6810 000a 4042     		rsbs	r0, r0, #0
 6811 000c 2043     		orrs	r0, r4
 6812 000e C0B2     		uxtb	r0, r0
 6813 0010 FFF7FEFF 		bl	set_sleep
 6814              	.LVL578:
1376:Core/Src/AB1805.c **** }
 6815              		.loc 1 1376 3 view .LVU1471
1377:Core/Src/AB1805.c **** 
 6816              		.loc 1 1377 1 is_stmt 0 view .LVU1472
 6817 0014 0020     		movs	r0, #0
 6818              		@ sp needed
 6819              	.LVL579:
1377:Core/Src/AB1805.c **** 
 6820              		.loc 1 1377 1 view .LVU1473
 6821 0016 10BD     		pop	{r4, pc}
 6822              	.LVL580:
 6823              	.L351:
1340:Core/Src/AB1805.c ****     temp = (temp & 0xE3) | 0x18; // MUST NOT WRITE OUT2S WITH 000
 6824              		.loc 1 1340 5 is_stmt 1 view .LVU1474
1340:Core/Src/AB1805.c ****     temp = (temp & 0xE3) | 0x18; // MUST NOT WRITE OUT2S WITH 000
 6825              		.loc 1 1340 12 is_stmt 0 view .LVU1475
 6826 0018 FFF7FEFF 		bl	get_OUT2S_control2
 6827              	.LVL581:
1341:Core/Src/AB1805.c ****     set_OUT2S_control2(temp);    // Write value to OUT2S
 6828              		.loc 1 1341 5 is_stmt 1 view .LVU1476
1342:Core/Src/AB1805.c ****     slres = 0;
 6829              		.loc 1 1342 5 view .LVU1477
 6830 001c 1C23     		movs	r3, #28
 6831 001e 9843     		bics	r0, r3
 6832              	.LVL582:
1342:Core/Src/AB1805.c ****     slres = 0;
 6833              		.loc 1 1342 5 is_stmt 0 view .LVU1478
 6834 0020 1823     		movs	r3, #24
 6835 0022 1843     		orrs	r0, r3
 6836 0024 C0B2     		uxtb	r0, r0
 6837 0026 FFF7FEFF 		bl	set_OUT2S_control2
 6838              	.LVL583:
1343:Core/Src/AB1805.c ****   }
 6839              		.loc 1 1343 5 is_stmt 1 view .LVU1479
1343:Core/Src/AB1805.c ****   }
 6840              		.loc 1 1343 5 is_stmt 0 view .LVU1480
 6841 002a EDE7     		b	.L350
 6842              		.cfi_endproc
 6843              	.LFE622:
 6845              		.section	.rodata.hex_dump.str1.4,"aMS",%progbits,1
 6846              		.align	2
 6847              	.LC84:
 6848 0000 23203078 		.ascii	"# 0x%02x: 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x"
 6848      25303278 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 191


 6848      3A203078 
 6848      25303278 
 6848      20307825 
 6849 0033 20307825 		.ascii	" 0x%02x 0x%02x\015\012\000"
 6849      30327820 
 6849      30782530 
 6849      32780D0A 
 6849      00
 6850              		.section	.text.hex_dump,"ax",%progbits
 6851              		.align	1
 6852              		.global	hex_dump
 6853              		.syntax unified
 6854              		.code	16
 6855              		.thumb_func
 6857              	hex_dump:
 6858              	.LFB626:
1441:Core/Src/AB1805.c **** 
1442:Core/Src/AB1805.c **** void hex_dump(void)
1443:Core/Src/AB1805.c **** {
 6859              		.loc 1 1443 1 is_stmt 1 view -0
 6860              		.cfi_startproc
 6861              		@ args = 0, pretend = 0, frame = 8
 6862              		@ frame_needed = 0, uses_anonymous_args = 0
 6863 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6864              	.LCFI124:
 6865              		.cfi_def_cfa_offset 20
 6866              		.cfi_offset 4, -20
 6867              		.cfi_offset 5, -16
 6868              		.cfi_offset 6, -12
 6869              		.cfi_offset 7, -8
 6870              		.cfi_offset 14, -4
 6871 0002 C646     		mov	lr, r8
 6872 0004 00B5     		push	{lr}
 6873              	.LCFI125:
 6874              		.cfi_def_cfa_offset 24
 6875              		.cfi_offset 8, -24
 6876 0006 88B0     		sub	sp, sp, #32
 6877              	.LCFI126:
 6878              		.cfi_def_cfa_offset 56
1444:Core/Src/AB1805.c ****   uint8_t buffer[8];
 6879              		.loc 1 1444 3 view .LVU1482
1445:Core/Src/AB1805.c ****   for (uint8_t pos = 0; pos < 0x7F; pos += 8)
 6880              		.loc 1 1445 3 view .LVU1483
 6881              	.LBB18:
 6882              		.loc 1 1445 8 view .LVU1484
 6883              	.LVL584:
 6884              		.loc 1 1445 16 is_stmt 0 view .LVU1485
 6885 0008 0025     		movs	r5, #0
 6886              		.loc 1 1445 3 view .LVU1486
 6887 000a 22E0     		b	.L353
 6888              	.LVL585:
 6889              	.L354:
 6890              	.LBB19:
1446:Core/Src/AB1805.c ****   {
1447:Core/Src/AB1805.c **** 
1448:Core/Src/AB1805.c ****     uint8_t ii = 0;
1449:Core/Src/AB1805.c ****     for (ii = 0; ii < 7; ii++)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 192


1450:Core/Src/AB1805.c ****     {
1451:Core/Src/AB1805.c ****       buffer[ii] = read_rtc_register(pos + ii);
 6891              		.loc 1 1451 7 is_stmt 1 discriminator 3 view .LVU1487
 6892              		.loc 1 1451 20 is_stmt 0 discriminator 3 view .LVU1488
 6893 000c 2819     		adds	r0, r5, r4
 6894 000e C0B2     		uxtb	r0, r0
 6895 0010 FFF7FEFF 		bl	read_rtc_register
 6896              	.LVL586:
 6897              		.loc 1 1451 18 discriminator 3 view .LVU1489
 6898 0014 06AB     		add	r3, sp, #24
 6899 0016 1855     		strb	r0, [r3, r4]
1449:Core/Src/AB1805.c ****     {
 6900              		.loc 1 1449 28 is_stmt 1 discriminator 3 view .LVU1490
 6901 0018 0134     		adds	r4, r4, #1
 6902              	.LVL587:
1449:Core/Src/AB1805.c ****     {
 6903              		.loc 1 1449 28 is_stmt 0 discriminator 3 view .LVU1491
 6904 001a E4B2     		uxtb	r4, r4
 6905              	.LVL588:
 6906              	.L355:
1449:Core/Src/AB1805.c ****     {
 6907              		.loc 1 1449 21 is_stmt 1 discriminator 1 view .LVU1492
 6908 001c 062C     		cmp	r4, #6
 6909 001e F5D9     		bls	.L354
1452:Core/Src/AB1805.c ****     }
1453:Core/Src/AB1805.c ****     printf("# 0x%02x: 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x\r\n", pos, buffer[0],
 6910              		.loc 1 1453 5 discriminator 2 view .LVU1493
 6911              		.loc 1 1453 96 is_stmt 0 discriminator 2 view .LVU1494
 6912 0020 06A9     		add	r1, sp, #24
 6913 0022 0A78     		ldrb	r2, [r1]
 6914              		.loc 1 1453 107 discriminator 2 view .LVU1495
 6915 0024 4B78     		ldrb	r3, [r1, #1]
 6916              		.loc 1 1453 118 discriminator 2 view .LVU1496
 6917 0026 8C78     		ldrb	r4, [r1, #2]
 6918              	.LVL589:
 6919              		.loc 1 1453 129 discriminator 2 view .LVU1497
 6920 0028 CE78     		ldrb	r6, [r1, #3]
 6921              		.loc 1 1453 140 discriminator 2 view .LVU1498
 6922 002a 0F79     		ldrb	r7, [r1, #4]
 6923              		.loc 1 1453 151 discriminator 2 view .LVU1499
 6924 002c 4879     		ldrb	r0, [r1, #5]
 6925 002e 8446     		mov	ip, r0
 6926              		.loc 1 1453 162 discriminator 2 view .LVU1500
 6927 0030 8879     		ldrb	r0, [r1, #6]
 6928 0032 8046     		mov	r8, r0
 6929              		.loc 1 1453 173 discriminator 2 view .LVU1501
 6930 0034 C979     		ldrb	r1, [r1, #7]
 6931              		.loc 1 1453 5 discriminator 2 view .LVU1502
 6932 0036 0B48     		ldr	r0, .L358
 6933 0038 0591     		str	r1, [sp, #20]
 6934 003a 4146     		mov	r1, r8
 6935 003c 0491     		str	r1, [sp, #16]
 6936 003e 6146     		mov	r1, ip
 6937 0040 0391     		str	r1, [sp, #12]
 6938 0042 0297     		str	r7, [sp, #8]
 6939 0044 0196     		str	r6, [sp, #4]
 6940 0046 0094     		str	r4, [sp]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 193


 6941 0048 2900     		movs	r1, r5
 6942 004a FFF7FEFF 		bl	printf_
 6943              	.LVL590:
 6944              	.LBE19:
1445:Core/Src/AB1805.c ****   {
 6945              		.loc 1 1445 41 is_stmt 1 discriminator 2 view .LVU1503
 6946 004e 0835     		adds	r5, r5, #8
 6947              	.LVL591:
1445:Core/Src/AB1805.c ****   {
 6948              		.loc 1 1445 41 is_stmt 0 discriminator 2 view .LVU1504
 6949 0050 EDB2     		uxtb	r5, r5
 6950              	.LVL592:
 6951              	.L353:
1445:Core/Src/AB1805.c ****   {
 6952              		.loc 1 1445 29 is_stmt 1 discriminator 1 view .LVU1505
 6953 0052 7E2D     		cmp	r5, #126
 6954 0054 01D8     		bhi	.L357
 6955              	.LBB20:
1449:Core/Src/AB1805.c ****     {
 6956              		.loc 1 1449 13 is_stmt 0 view .LVU1506
 6957 0056 0024     		movs	r4, #0
 6958 0058 E0E7     		b	.L355
 6959              	.L357:
 6960              	.LBE20:
 6961              	.LBE18:
1454:Core/Src/AB1805.c ****   }
1455:Core/Src/AB1805.c **** }
 6962              		.loc 1 1455 1 view .LVU1507
 6963 005a 08B0     		add	sp, sp, #32
 6964              		@ sp needed
 6965              	.LVL593:
 6966              		.loc 1 1455 1 view .LVU1508
 6967 005c 80BC     		pop	{r7}
 6968 005e B846     		mov	r8, r7
 6969 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 6970              	.L359:
 6971 0062 C046     		.align	2
 6972              	.L358:
 6973 0064 00000000 		.word	.LC84
 6974              		.cfi_endproc
 6975              	.LFE626:
 6977              		.global	_wdt_register
 6978              		.section	.bss._wdt_register,"aw",%nobits
 6981              	_wdt_register:
 6982 0000 00       		.space	1
 6983              		.global	_osc_control
 6984              		.section	.bss._osc_control,"aw",%nobits
 6987              	_osc_control:
 6988 0000 00       		.space	1
 6989              		.global	_outcontrol
 6990              		.section	.bss._outcontrol,"aw",%nobits
 6993              	_outcontrol:
 6994 0000 00       		.space	1
 6995              		.global	_timer_control_mode
 6996              		.section	.bss._timer_control_mode,"aw",%nobits
 6999              	_timer_control_mode:
 7000 0000 00       		.space	1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 194


 7001              		.global	_sleep_mode
 7002              		.section	.bss._sleep_mode,"aw",%nobits
 7005              	_sleep_mode:
 7006 0000 00       		.space	1
 7007              		.global	_interrupt
 7008              		.section	.bss._interrupt,"aw",%nobits
 7011              	_interrupt:
 7012 0000 00       		.space	1
 7013              		.global	_control2
 7014              		.section	.bss._control2,"aw",%nobits
 7017              	_control2:
 7018 0000 00       		.space	1
 7019              		.global	_control1
 7020              		.section	.bss._control1,"aw",%nobits
 7023              	_control1:
 7024 0000 00       		.space	1
 7025              		.global	_status
 7026              		.section	.bss._status,"aw",%nobits
 7029              	_status:
 7030 0000 00       		.space	1
 7031              		.global	data_time_string
 7032              		.section	.bss.data_time_string,"aw",%nobits
 7033              		.align	2
 7036              	data_time_string:
 7037 0000 00000000 		.space	30
 7037      00000000 
 7037      00000000 
 7037      00000000 
 7037      00000000 
 7038              		.global	_alarm_second
 7039              		.section	.bss._alarm_second,"aw",%nobits
 7042              	_alarm_second:
 7043 0000 00       		.space	1
 7044              		.global	_alarm_minute
 7045              		.section	.bss._alarm_minute,"aw",%nobits
 7048              	_alarm_minute:
 7049 0000 00       		.space	1
 7050              		.global	_alarm_hour
 7051              		.section	.bss._alarm_hour,"aw",%nobits
 7054              	_alarm_hour:
 7055 0000 00       		.space	1
 7056              		.global	_alarm_weekday
 7057              		.section	.bss._alarm_weekday,"aw",%nobits
 7060              	_alarm_weekday:
 7061 0000 00       		.space	1
 7062              		.global	_alarm_date
 7063              		.section	.bss._alarm_date,"aw",%nobits
 7066              	_alarm_date:
 7067 0000 00       		.space	1
 7068              		.global	_alarm_month
 7069              		.section	.bss._alarm_month,"aw",%nobits
 7072              	_alarm_month:
 7073 0000 00       		.space	1
 7074              		.global	_alarm_year
 7075              		.section	.bss._alarm_year,"aw",%nobits
 7078              	_alarm_year:
 7079 0000 00       		.space	1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 195


 7080              		.global	_hundredth
 7081              		.section	.bss._hundredth,"aw",%nobits
 7084              	_hundredth:
 7085 0000 00       		.space	1
 7086              		.global	_second
 7087              		.section	.bss._second,"aw",%nobits
 7090              	_second:
 7091 0000 00       		.space	1
 7092              		.global	_minute
 7093              		.section	.bss._minute,"aw",%nobits
 7096              	_minute:
 7097 0000 00       		.space	1
 7098              		.global	_hour
 7099              		.section	.bss._hour,"aw",%nobits
 7102              	_hour:
 7103 0000 00       		.space	1
 7104              		.global	_weekday
 7105              		.section	.bss._weekday,"aw",%nobits
 7108              	_weekday:
 7109 0000 00       		.space	1
 7110              		.global	_date
 7111              		.section	.bss._date,"aw",%nobits
 7114              	_date:
 7115 0000 00       		.space	1
 7116              		.global	_month
 7117              		.section	.bss._month,"aw",%nobits
 7120              	_month:
 7121 0000 00       		.space	1
 7122              		.global	_year
 7123              		.section	.bss._year,"aw",%nobits
 7126              	_year:
 7127 0000 00       		.space	1
 7128              		.text
 7129              	.Letext0:
 7130              		.file 3 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 7131              		.file 4 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 7132              		.file 5 "Drivers/CMSIS/Device/ST/STM32U0xx/Include/stm32u073xx.h"
 7133              		.file 6 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 7134              		.file 7 "Core\\Inc/AB1805.h"
 7135              		.file 8 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_dma.h"
 7136              		.file 9 "Drivers/CMSIS/Device/ST/STM32U0xx/Include/stm32u0xx.h"
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 196


DEFINED SYMBOLS
                            *ABS*:00000000 AB1805.c
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:19     .text.SPI1_SendByte:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:24     .text.SPI1_SendByte:00000000 SPI1_SendByte
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:136    .text.SPI1_SendByte:0000003c $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:141    .text.read_rtc_register:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:146    .text.read_rtc_register:00000000 read_rtc_register
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:186    .text.spi_select_slave:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:192    .text.spi_select_slave:00000000 spi_select_slave
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:224    .text.spi_select_slave:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:229    .text.write_rtc_register:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:234    .text.write_rtc_register:00000000 write_rtc_register
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:307    .text.write_rtc_register:00000044 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:312    .text.get_rtc_data:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:318    .text.get_rtc_data:00000000 get_rtc_data
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:345    .text.get_hundredths:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:351    .text.get_hundredths:00000000 get_hundredths
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:375    .text.get_second:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:381    .text.get_second:00000000 get_second
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:405    .text.get_minute:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:411    .text.get_minute:00000000 get_minute
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:435    .text.get_hour:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:441    .text.get_hour:00000000 get_hour
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:465    .text.get_weekday:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:471    .text.get_weekday:00000000 get_weekday
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:495    .text.get_date:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:501    .text.get_date:00000000 get_date
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:525    .text.get_month:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:531    .text.get_month:00000000 get_month
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:555    .text.get_year:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:561    .text.get_year:00000000 get_year
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:585    .text.get_datetime:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:591    .text.get_datetime:00000000 get_datetime
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:657    .text.get_datetime:0000003c $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7090   .bss._second:00000000 _second
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7096   .bss._minute:00000000 _minute
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7102   .bss._hour:00000000 _hour
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7108   .bss._weekday:00000000 _weekday
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7114   .bss._date:00000000 _date
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7120   .bss._month:00000000 _month
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7126   .bss._year:00000000 _year
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:668    .text.get_second_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:674    .text.get_second_alarm:00000000 get_second_alarm
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:704    .text.get_second_alarm:00000014 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7042   .bss._alarm_second:00000000 _alarm_second
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:709    .text.get_minute_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:715    .text.get_minute_alarm:00000000 get_minute_alarm
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:745    .text.get_minute_alarm:00000014 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7048   .bss._alarm_minute:00000000 _alarm_minute
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:750    .text.get_hour_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:756    .text.get_hour_alarm:00000000 get_hour_alarm
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:786    .text.get_hour_alarm:00000014 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7054   .bss._alarm_hour:00000000 _alarm_hour
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:791    .text.get_weekday_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:797    .text.get_weekday_alarm:00000000 get_weekday_alarm
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:827    .text.get_weekday_alarm:00000014 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7060   .bss._alarm_weekday:00000000 _alarm_weekday
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 197


C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:832    .text.get_date_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:838    .text.get_date_alarm:00000000 get_date_alarm
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:868    .text.get_date_alarm:00000014 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7066   .bss._alarm_date:00000000 _alarm_date
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:873    .text.get_month_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:879    .text.get_month_alarm:00000000 get_month_alarm
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:909    .text.get_month_alarm:00000014 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7072   .bss._alarm_month:00000000 _alarm_month
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:915    .text.set_second:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:921    .text.set_second:00000000 set_second
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:955    .text.set_second:0000001c $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:960    .text.set_minute:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:966    .text.set_minute:00000000 set_minute
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1000   .text.set_minute:0000001c $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1005   .text.set_hour:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1011   .text.set_hour:00000000 set_hour
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1045   .text.set_hour:0000001c $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1050   .text.set_weekday:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1056   .text.set_weekday:00000000 set_weekday
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1090   .text.set_weekday:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1095   .text.set_date:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1101   .text.set_date:00000000 set_date
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1135   .text.set_date:0000001c $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1140   .text.set_month:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1146   .text.set_month:00000000 set_month
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1180   .text.set_month:0000001c $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1185   .text.set_year:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1191   .text.set_year:00000000 set_year
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1221   .text.set_year:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1226   .text.set_datetime:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1232   .text.set_datetime:00000000 set_datetime
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1314   .text.set_second_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1320   .text.set_second_alarm:00000000 set_second_alarm
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1370   .text.set_second_alarm:0000002c $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1375   .text.set_minute_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1381   .text.set_minute_alarm:00000000 set_minute_alarm
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1431   .text.set_minute_alarm:0000002c $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1436   .text.set_hour_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1442   .text.set_hour_alarm:00000000 set_hour_alarm
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1492   .text.set_hour_alarm:0000002c $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1497   .text.set_weekday_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1503   .text.set_weekday_alarm:00000000 set_weekday_alarm
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1553   .text.set_weekday_alarm:00000028 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1558   .text.set_date_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1564   .text.set_date_alarm:00000000 set_date_alarm
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1614   .text.set_date_alarm:0000002c $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1619   .text.set_month_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1625   .text.set_month_alarm:00000000 set_month_alarm
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1675   .text.set_month_alarm:0000002c $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1680   .text.get_date_time:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1686   .text.get_date_time:00000000 get_date_time
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1906   .text.get_date_time:000000b0 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7036   .bss.data_time_string:00000000 data_time_string
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7084   .bss._hundredth:00000000 _hundredth
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1918   .text.dec_hex:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1924   .text.dec_hex:00000000 dec_hex
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1951   .text.hex_dec:00000000 $t
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 198


C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1957   .text.hex_dec:00000000 hex_dec
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1989   .text.get_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:1995   .text.get_status:00000000 get_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2022   .text.get_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7029   .bss._status:00000000 _status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2027   .text.get_CB_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2033   .text.get_CB_status:00000000 get_CB_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2059   .text.get_CB_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2064   .text.get_BAT_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2070   .text.get_BAT_status:00000000 get_BAT_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2096   .text.get_BAT_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2101   .text.get_WDT_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2107   .text.get_WDT_status:00000000 get_WDT_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2133   .text.get_WDT_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2138   .text.get_BL_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2144   .text.get_BL_status:00000000 get_BL_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2170   .text.get_BL_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2175   .text.get_TIM_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2181   .text.get_TIM_status:00000000 get_TIM_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2207   .text.get_TIM_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2212   .text.get_ALM_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2218   .text.get_ALM_status:00000000 get_ALM_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2244   .text.get_ALM_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2249   .text.get_EX2_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2255   .text.get_EX2_status:00000000 get_EX2_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2281   .text.get_EX2_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2286   .text.get_EX1_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2292   .text.get_EX1_status:00000000 get_EX1_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2318   .text.get_EX1_status:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2323   .text.clean_CB_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2329   .text.clean_CB_status:00000000 clean_CB_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2364   .text.clean_BAT_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2370   .text.clean_BAT_status:00000000 clean_BAT_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2408   .text.clean_WDT_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2414   .text.clean_WDT_status:00000000 clean_WDT_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2452   .text.clean_BL_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2458   .text.clean_BL_status:00000000 clean_BL_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2496   .text.clean_TIM_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2502   .text.clean_TIM_status:00000000 clean_TIM_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2540   .text.clean_ALM_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2546   .text.clean_ALM_status:00000000 clean_ALM_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2584   .text.clean_EX2_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2590   .text.clean_EX2_status:00000000 clean_EX2_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2628   .text.clean_EX1_status:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2634   .text.clean_EX1_status:00000000 clean_EX1_status
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2673   .text.set_control1:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2679   .text.set_control1:00000000 set_control1
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2714   .text.set_control1:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7023   .bss._control1:00000000 _control1
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2719   .text.set_1224:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2725   .text.set_1224:00000000 set_1224
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2780   .text.set_RSP:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2786   .text.set_RSP:00000000 set_RSP
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2841   .text.set_ARST:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2847   .text.set_ARST:00000000 set_ARST
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2902   .text.set_PWR2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2908   .text.set_PWR2:00000000 set_PWR2
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 199


C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2963   .text.set_WRTC:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:2969   .text.set_WRTC:00000000 set_WRTC
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3024   .text.get_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3030   .text.get_interrupt:00000000 get_interrupt
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3056   .text.get_interrupt:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7011   .bss._interrupt:00000000 _interrupt
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3061   .text.get_BLIE_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3067   .text.get_BLIE_interrupt:00000000 get_BLIE_interrupt
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3093   .text.get_BLIE_interrupt:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3098   .text.get_TIE_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3104   .text.get_TIE_interrupt:00000000 get_TIE_interrupt
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3130   .text.get_TIE_interrupt:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3135   .text.get_AIE_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3141   .text.get_AIE_interrupt:00000000 get_AIE_interrupt
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3167   .text.get_AIE_interrupt:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3172   .text.get_EX2E_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3178   .text.get_EX2E_interrupt:00000000 get_EX2E_interrupt
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3204   .text.get_EX2E_interrupt:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3209   .text.get_EX1E_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3215   .text.get_EX1E_interrupt:00000000 get_EX1E_interrupt
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3241   .text.get_EX1E_interrupt:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3246   .text.set_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3252   .text.set_interrupt:00000000 set_interrupt
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3287   .text.set_interrupt:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3292   .text.set_BLIE_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3298   .text.set_BLIE_interrupt:00000000 set_BLIE_interrupt
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3353   .text.set_TIE_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3359   .text.set_TIE_interrupt:00000000 set_TIE_interrupt
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3414   .text.set_AIE_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3420   .text.set_AIE_interrupt:00000000 set_AIE_interrupt
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3475   .text.set_EX1E_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3481   .text.set_EX1E_interrupt:00000000 set_EX1E_interrupt
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3536   .text.set_EX2E_interrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3542   .text.set_EX2E_interrupt:00000000 set_EX2E_interrupt
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3597   .text.get_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3603   .text.get_control2:00000000 get_control2
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3629   .text.get_control2:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7017   .bss._control2:00000000 _control2
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3634   .text.get_RS1E_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3640   .text.get_RS1E_control2:00000000 get_RS1E_control2
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3666   .text.get_RS1E_control2:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3671   .text.get_OUT2S_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3677   .text.get_OUT2S_control2:00000000 get_OUT2S_control2
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3703   .text.get_OUT2S_control2:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3708   .text.get_OUT1S_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3714   .text.get_OUT1S_control2:00000000 get_OUT1S_control2
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3740   .text.get_OUT1S_control2:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3745   .text.set_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3751   .text.set_control2:00000000 set_control2
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3786   .text.set_control2:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3791   .text.set_RS1E_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3797   .text.set_RS1E_control2:00000000 set_RS1E_control2
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3857   .text.set_OUT2S_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3863   .text.set_OUT2S_control2:00000000 set_OUT2S_control2
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3919   .text.set_OUT1S_control2:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3925   .text.set_OUT1S_control2:00000000 set_OUT1S_control2
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3978   .text.get_sleep:00000000 $t
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 200


C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:3984   .text.get_sleep:00000000 get_sleep
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4010   .text.get_sleep:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7005   .bss._sleep_mode:00000000 _sleep_mode
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4015   .text.get_SLP_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4021   .text.get_SLP_sleep:00000000 get_SLP_sleep
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4047   .text.get_SLP_sleep:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4052   .text.get_SLRES_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4058   .text.get_SLRES_sleep:00000000 get_SLRES_sleep
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4084   .text.get_SLRES_sleep:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4089   .text.get_EX2P_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4095   .text.get_EX2P_sleep:00000000 get_EX2P_sleep
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4121   .text.get_EX2P_sleep:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4126   .text.get_EX1P_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4132   .text.get_EX1P_sleep:00000000 get_EX1P_sleep
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4158   .text.get_EX1P_sleep:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4163   .text.get_SLST_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4169   .text.get_SLST_sleep:00000000 get_SLST_sleep
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4195   .text.get_SLST_sleep:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4200   .text.get_SLTO_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4206   .text.get_SLTO_sleep:00000000 get_SLTO_sleep
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4232   .text.get_SLTO_sleep:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4237   .text.set_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4243   .text.set_sleep:00000000 set_sleep
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4278   .text.set_sleep:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4283   .text.set_SLP_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4289   .text.set_SLP_sleep:00000000 set_SLP_sleep
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4348   .text.set_SLRES_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4354   .text.set_SLRES_sleep:00000000 set_SLRES_sleep
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4414   .text.set_EX2P_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4420   .text.set_EX2P_sleep:00000000 set_EX2P_sleep
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4480   .text.set_EX1P_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4486   .text.set_EX1P_sleep:00000000 set_EX1P_sleep
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4546   .text.clean_SLST_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4552   .text.clean_SLST_sleep:00000000 clean_SLST_sleep
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4593   .text.set_SLTO_sleep:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4599   .text.set_SLTO_sleep:00000000 set_SLTO_sleep
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4651   .text.get_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4657   .text.get_time_control:00000000 get_time_control
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4683   .text.get_time_control:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6999   .bss._timer_control_mode:00000000 _timer_control_mode
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4688   .text.get_TE_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4694   .text.get_TE_time_control:00000000 get_TE_time_control
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4720   .text.get_TE_time_control:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4725   .text.get_TM_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4731   .text.get_TM_time_control:00000000 get_TM_time_control
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4757   .text.get_TM_time_control:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4762   .text.get_TRPT_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4768   .text.get_TRPT_time_control:00000000 get_TRPT_time_control
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4794   .text.get_TRPT_time_control:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4799   .text.get_RPT_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4805   .text.get_RPT_time_control:00000000 get_RPT_time_control
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4831   .text.get_RPT_time_control:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4836   .text.get_TFS_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4842   .text.get_TFS_time_control:00000000 get_TFS_time_control
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4868   .text.get_TFS_time_control:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4873   .text.set_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4879   .text.set_time_control:00000000 set_time_control
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 201


C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4914   .text.set_time_control:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4919   .text.set_TE_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4925   .text.set_TE_time_control:00000000 set_TE_time_control
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4984   .text.set_TM_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:4990   .text.set_TM_time_control:00000000 set_TM_time_control
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5050   .text.set_TRPT_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5056   .text.set_TRPT_time_control:00000000 set_TRPT_time_control
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5116   .text.set_RPT_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5122   .text.set_RPT_time_control:00000000 set_RPT_time_control
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5178   .text.set_datetime_alarm_month:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5184   .text.set_datetime_alarm_month:00000000 set_datetime_alarm_month
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5238   .text.set_datetime_alarm_date:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5244   .text.set_datetime_alarm_date:00000000 set_datetime_alarm_date
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5288   .text.set_week_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5294   .text.set_week_alarm:00000000 set_week_alarm
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5338   .text.set_datetime_alarm_hour:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5344   .text.set_datetime_alarm_hour:00000000 set_datetime_alarm_hour
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5383   .text.set_datetime_alarm_minutes:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5389   .text.set_datetime_alarm_minutes:00000000 set_datetime_alarm_minutes
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5421   .text.set_datetime_alarm_seconds:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5427   .text.set_datetime_alarm_seconds:00000000 set_datetime_alarm_seconds
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5454   .text.set_once_second_alarm:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5460   .text.set_once_second_alarm:00000000 set_once_second_alarm
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5486   .text.set_TFS_time_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5492   .text.set_TFS_time_control:00000000 set_TFS_time_control
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5544   .text.get_outcontrol:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5550   .text.get_outcontrol:00000000 get_outcontrol
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5576   .text.get_outcontrol:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6993   .bss._outcontrol:00000000 _outcontrol
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5581   .text.get_outcontrol_mask:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5587   .text.get_outcontrol_mask:00000000 get_outcontrol_mask
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5621   .rodata.get_outcontrol_mask:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5725   .text.get_outcontrol_mask:00000048 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5731   .text.set_outcontrol_value:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5737   .text.set_outcontrol_value:00000000 set_outcontrol_value
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5772   .text.set_outcontrol_value:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5777   .text.set_outcontrol_value_mask:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5783   .text.set_outcontrol_value_mask:00000000 set_outcontrol_value_mask
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:5817   .rodata.set_outcontrol_value_mask:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6027   .text.set_outcontrol_value_mask:000000a4 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6032   .text.get_osc_control:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6038   .text.get_osc_control:00000000 get_osc_control
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6064   .text.get_osc_control:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6987   .bss._osc_control:00000000 _osc_control
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6069   .text.get_osc_control_mask:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6075   .text.get_osc_control_mask:00000000 get_osc_control_mask
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6109   .rodata.get_osc_control_mask:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6190   .text.get_osc_control_mask:00000044 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6196   .text.set_osc_control_value:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6202   .text.set_osc_control_value:00000000 set_osc_control_value
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6237   .text.set_osc_control_value:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6242   .text.set_osc_control_value_mask:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6248   .text.set_osc_control_value_mask:00000000 set_osc_control_value_mask
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6282   .rodata.set_osc_control_value_mask:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6455   .text.set_osc_control_value_mask:00000094 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6460   .text.get_WDT_register:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6466   .text.get_WDT_register:00000000 get_WDT_register
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s 			page 202


C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6492   .text.get_WDT_register:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6981   .bss._wdt_register:00000000 _wdt_register
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6497   .text.get_WDT_register_mask:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6503   .text.get_WDT_register_mask:00000000 get_WDT_register_mask
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6560   .text.get_WDT_register_mask:00000024 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6565   .text.set_value:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6571   .text.set_value:00000000 set_value
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6606   .text.set_value:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6611   .text.set_WDT_register_mask:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6617   .text.set_WDT_register_mask:00000000 set_WDT_register_mask
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6715   .text.enter_sleep_mode_PWR_value:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6721   .text.enter_sleep_mode_PWR_value:00000000 enter_sleep_mode_PWR_value
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6777   .text.enter_sleep_mode:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6783   .text.enter_sleep_mode:00000000 enter_sleep_mode
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6846   .rodata.hex_dump.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6851   .text.hex_dump:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6857   .text.hex_dump:00000000 hex_dump
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6973   .text.hex_dump:00000064 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6982   .bss._wdt_register:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6988   .bss._osc_control:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:6994   .bss._outcontrol:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7000   .bss._timer_control_mode:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7006   .bss._sleep_mode:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7012   .bss._interrupt:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7018   .bss._control2:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7024   .bss._control1:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7030   .bss._status:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7033   .bss.data_time_string:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7043   .bss._alarm_second:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7049   .bss._alarm_minute:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7055   .bss._alarm_hour:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7061   .bss._alarm_weekday:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7067   .bss._alarm_date:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7073   .bss._alarm_month:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7078   .bss._alarm_year:00000000 _alarm_year
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7079   .bss._alarm_year:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7085   .bss._hundredth:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7091   .bss._second:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7097   .bss._minute:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7103   .bss._hour:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7109   .bss._weekday:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7115   .bss._date:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7121   .bss._month:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccFOjw6V.s:7127   .bss._year:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidivmod
set_WDT_register_value
printf_
