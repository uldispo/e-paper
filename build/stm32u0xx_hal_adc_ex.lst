ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32u0xx_hal_adc_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c"
  18              		.global	__aeabi_uidiv
  19              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_ADCEx_Calibration_Start
  22              		.syntax unified
  23              		.code	16
  24              		.thumb_func
  26              	HAL_ADCEx_Calibration_Start:
  27              	.LVL0:
  28              	.LFB334:
   1:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /**
   2:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @file    stm32u0xx_hal_adc_ex.c
   4:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *          peripheral:
   8:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *           + Peripheral Control functions
   9:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file
  10:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *          "stm32u0xx_hal_adc.c".
  11:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *
  12:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   ******************************************************************************
  13:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @attention
  14:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *
  15:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * Copyright (c) 2023 STMicroelectronics.
  16:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * All rights reserved.
  17:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *
  18:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * in the root directory of this software component.
  20:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *
  22:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   ******************************************************************************
  23:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   @verbatim
  24:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   [..]
  25:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  26:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       available in file of generic functions "stm32u0xx_hal_adc.c".
  27:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   [..]
  28:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   @endverbatim
  29:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   ******************************************************************************
  30:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 2


  31:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
  32:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  33:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** #include "stm32u0xx_hal.h"
  34:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
  35:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /** @addtogroup STM32U0xx_HAL_Driver
  36:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @{
  37:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
  38:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
  39:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  40:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  41:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @{
  42:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
  43:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
  44:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  45:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
  46:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  47:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  48:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
  49:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADC Extended Private Constants
  50:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @{
  51:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
  52:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
  53:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                   */
  54:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /* Values defined to be higher than worst cases: maximum ratio between ADC    */
  55:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /* and CPU clock frequencies.                                                 */
  56:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /* Example of profile low frequency : ADC frequency at 31.25kHz (ADC clock    */
  57:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /* source PLL 8MHz, ADC clock prescaler 256), CPU frequency 48MHz.            */
  58:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /* Calibration time max = 116 / fADC (refer to datasheet)                     */
  59:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /*                      = 178 176 CPU cycles                                  */
  60:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** #define ADC_CALIBRATION_TIMEOUT         (178176UL)   /*!< ADC calibration time-out value (unit: CPU
  61:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** #define ADC_DISABLE_TIMEOUT             (2UL)
  62:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
  63:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /**
  64:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @}
  65:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
  66:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
  67:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
  68:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
  69:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  70:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
  71:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
  72:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADC Extended Exported Functions
  73:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @{
  74:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
  75:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
  76:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Input and Output operation functions
  77:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @brief    Extended IO operation functions
  78:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *
  79:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** @verbatim
  80:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****  ===============================================================================
  81:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****                       ##### IO operation functions #####
  82:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****  ===============================================================================
  83:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
  84:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
  85:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration.
  86:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       (+) Get calibration factors.
  87:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       (+) Set calibration factors.
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 3


  88:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
  89:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** @endverbatim
  90:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @{
  91:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
  92:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
  93:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /**
  94:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
  95:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
  96:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
  97:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @note   Calibration factor can be read after calibration, using function
  98:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *         HAL_ADC_GetValue() (value on 7 bits: from DR[6;0]).
  99:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @param  hadc       ADC handle
 100:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @retval HAL status
 101:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
 102:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef *hadc)
 103:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** {
  29              		.loc 1 103 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 103 1 is_stmt 0 view .LVU1
  34 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 83B0     		sub	sp, sp, #12
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 32
  45 0004 0400     		movs	r4, r0
 104:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
  46              		.loc 1 104 3 is_stmt 1 view .LVU2
 105:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0UL;
  47              		.loc 1 105 3 view .LVU3
  48              		.loc 1 105 17 is_stmt 0 view .LVU4
  49 0006 0023     		movs	r3, #0
  50 0008 0193     		str	r3, [sp, #4]
 106:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   uint32_t backup_setting_cfgr1;
  51              		.loc 1 106 3 is_stmt 1 view .LVU5
 107:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   uint32_t calibration_index;
  52              		.loc 1 107 3 view .LVU6
 108:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   uint32_t calibration_factor_accumulated = 0;
  53              		.loc 1 108 3 view .LVU7
  54              	.LVL1:
 109:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   uint32_t tickstart;
  55              		.loc 1 109 3 view .LVU8
 110:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   uint32_t adc_clk_async_presc;
  56              		.loc 1 110 3 view .LVU9
 111:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   __IO uint32_t delay_cpu_cycles;
  57              		.loc 1 111 3 view .LVU10
 112:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 113:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* Check the parameters */
 114:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  58              		.loc 1 114 3 view .LVU11
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 4


 115:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 116:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
  59              		.loc 1 116 3 view .LVU12
  60              		.loc 1 116 3 view .LVU13
  61 000a 5433     		adds	r3, r3, #84
  62 000c C35C     		ldrb	r3, [r0, r3]
  63 000e 012B     		cmp	r3, #1
  64 0010 00D1     		bne	.LCB34
  65 0012 A3E0     		b	.L16	@long jump
  66              	.LCB34:
  67              		.loc 1 116 3 discriminator 2 view .LVU14
  68 0014 0126     		movs	r6, #1
  69 0016 5423     		movs	r3, #84
  70 0018 C654     		strb	r6, [r0, r3]
  71              		.loc 1 116 3 discriminator 2 view .LVU15
 117:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 118:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
 119:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 120:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
 121:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Disable(hadc);
  72              		.loc 1 121 3 discriminator 2 view .LVU16
  73              		.loc 1 121 20 is_stmt 0 discriminator 2 view .LVU17
  74 001a FFF7FEFF 		bl	ADC_Disable
  75              	.LVL2:
  76              		.loc 1 121 20 discriminator 2 view .LVU18
  77 001e 0500     		movs	r5, r0
  78              	.LVL3:
 122:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 123:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 124:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
  79              		.loc 1 124 3 is_stmt 1 discriminator 2 view .LVU19
  80              		.loc 1 124 28 is_stmt 0 discriminator 2 view .LVU20
  81 0020 2368     		ldr	r3, [r4]
  82              	.LVL4:
  83              	.LBB32:
  84              	.LBI32:
  85              		.file 2 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h"
   1:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
   2:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @file    stm32u0xx_ll_adc.h
   4:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @attention
   8:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *
   9:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * Copyright (c) 2023 STMicroelectronics.
  10:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *
  12:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *
  16:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
  18:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  19:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #ifndef STM32U0xx_LL_ADC_H
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 5


  21:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define STM32U0xx_LL_ADC_H
  22:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  23:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #endif
  26:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  27:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #include "stm32u0xx.h"
  29:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  30:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @addtogroup STM32U0xx_LL_Driver
  31:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
  32:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
  33:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  34:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #if defined (ADC1)
  35:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  36:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
  38:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
  39:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  40:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  43:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
  46:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
  47:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  48:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  51:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  52:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  53:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  54:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  55:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  56:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_SQ1" positi
  57:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_SQ2" positi
  58:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_SQ3" positi
  59:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (12UL) /* Equivalent to bitfield "ADC_CHSELR_SQ4" positi
  60:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (16UL) /* Equivalent to bitfield "ADC_CHSELR_SQ5" positi
  61:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (20UL) /* Equivalent to bitfield "ADC_CHSELR_SQ6" positi
  62:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (24UL) /* Equivalent to bitfield "ADC_CHSELR_SQ7" positi
  63:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (28UL) /* Equivalent to bitfield "ADC_CHSELR_SQ8" positi
  64:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  65:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  66:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  67:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  68:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* - regular trigger source                                                   */
  69:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* - regular trigger edge                                                     */
  70:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT      (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge (
  71:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                   compatibility with some ADC on ot
  72:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                   having this setting set by HW def
  73:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  74:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  75:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  76:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  77:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK           (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U *
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 6


  78:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  79:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  80:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  81:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  82:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  83:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  84:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  85:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK             (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U * 
  86:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
  87:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
  88:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
  89:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  90:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
  91:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_CFGR1_EXTSEL" posi
  92:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CFGR1_EXTEN" posit
  93:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  94:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
  95:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  96:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  97:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* - channel identifier defined by number                                     */
  98:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
  99:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 100:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 101:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWD1CH)
 102:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
 103:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_SEQ     (ADC_CHSELR_SQ1 << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) 
 104:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   ADC_CHANNEL_ID_NUMBER_MASK with reduced range: on this STM32 series, ADC group regular sequencer,
 105:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   if set to mode "fully configurable", can contain channels with a restricted channel number.
 106:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   Refer to function @ref LL_ADC_REG_SetSequencerConfigurable(). */
 107:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)              /* Equivalent to bitfield "ADC_CHAN
 108:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                    position in register */
 109:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 110:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 111:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 112:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FUL) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 113:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   >> [Position of bitfield "ADC_CHANNEL_NUMBER_MASK" in register]) */
 114:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 115:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 116:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 117:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
 118:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 119:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 120:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* channels literals definition.                                              */
 121:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 122:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR1_AWD1CH_0)
 123:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR1_AWD1CH_1)
 124:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 125:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR1_AWD1CH_2)
 126:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_0)
 127:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1)
 128:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 129:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR1_AWD1CH_3)
 130:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_0)
 131:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1)
 132:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 133:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2)
 134:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 7


 135:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 136:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | \
 137:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 138:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWD1CH_4)
 139:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_0)
 140:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_1)
 141:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_19_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 142:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 143:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 144:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* channels literals definition.                                              */
 145:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 146:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 147:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 148:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 149:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 150:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 151:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 152:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 153:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 154:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 155:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 156:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 157:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 158:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 159:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 160:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 161:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 162:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 163:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_CHSELR_CHSEL18)
 164:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHANNEL_19_BITFIELD            (ADC_CHSELR_CHSEL19)
 165:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 166:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Internal mask for ADC channel sampling time:                               */
 167:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* To select into literals LL_ADC_SAMPLINGTIME_x                              */
 168:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* the relevant bits for:                                                     */
 169:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* (concatenation of multiple bits used in register SMPR)                     */
 170:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* - ADC channels sampling time: setting channel wise, to map each channel    */
 171:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*   on one of the common sampling time available.                            */
 172:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* - ADC channels common sampling time: set a sampling time into one of the   */
 173:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*   common sampling time available.                                          */
 174:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_CH_MASK          (ADC_CHANNEL_ID_BITFIELD_MASK << ADC_SMPR_SMPSEL0_BITOFF
 175:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_MASK         (ADC_SMPR_SMP2 | ADC_SMPR_SMP1)
 176:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_SHIFT_MASK   (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SMPR_SMP1_BITOFFSET_P
 177:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 178:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 179:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 180:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 181:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 series)).         */
 182:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 183:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 184:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 185:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*   selection on groups.                                                     */
 186:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 187:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 188:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 189:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 190:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 191:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 8


 192:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 193:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 194:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 195:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 196:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 197:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 198:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS (20UL)
 199:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 200:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL
 201:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 202:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 203:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 204:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL)                      /* Position of bits ADC_AWD_
 205:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                           in ADC_AWD_CRX_REGOFFSET_
 206:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 207:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 208:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 209:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 210:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET + (1UL << ADC_AWD_CRX_REGOFFSET_B
 211:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 212:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)      /* Position of bits ADC
 213:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                                in ADC_AWD_TRX_REGOF
 214:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 215:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                                threshold high: mask
 216:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 217:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                                threshold high: posi
 218:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 219:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                                position to perform 
 220:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS (20UL)
 221:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 222:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 223:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* ADC registers bits positions */
 224:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        ( 3UL) /* Equivalent to bitfield "ADC_CFGR1_RES" positio
 225:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22UL) /* Equivalent to bitfield "ADC_CFGR1_AWDSGL" posi
 226:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Equivalent to bitfield "ADC_TR1_HT1" position 
 227:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL0" pos
 228:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    ( 1UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL1" pos
 229:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    ( 2UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL2" pos
 230:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    ( 3UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL3" pos
 231:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL4" pos
 232:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    ( 5UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL5" pos
 233:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    ( 6UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL6" pos
 234:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    ( 7UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL7" pos
 235:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL8" pos
 236:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    ( 9UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL9" pos
 237:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL10" po
 238:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL11" po
 239:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL12" po
 240:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL13" po
 241:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL14" po
 242:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL15" po
 243:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL16" po
 244:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL17" po
 245:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL18" po
 246:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL19_BITOFFSET_POS   (19UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL19" po
 247:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_SMPR_SMP1_BITOFFSET_POS        ( 0UL) /* Equivalent to bitfield "ADC_SMPR_SMP1" positio
 248:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_SMPR_SMP2_BITOFFSET_POS        ( 4UL) /* Equivalent to bitfield "ADC_SMPR_SMP2" positio
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 9


 249:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_SMPR_SMPSEL0_BITOFFSET_POS     ( 8UL) /* Equivalent to bitfield "ADC_SMPR_SMPSEL0" posi
 250:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 251:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 252:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* ADC registers bits groups */
 253:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADEN | ADC_CR_ADDIS \
 254:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CR_ADSTART | ADC_CR_ADSTP)            /* ADC regi
 255:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            HW property "rs": Software can read as well as set this 
 256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            Writing '0' has no effect on the bit value. */
 257:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 258:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 259:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* ADC internal channels related definitions */
 260:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 261:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF6EA4UL)) /* Internal voltage referen
 262:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            parameter VREFINT_CAL: VrefInt ADC raw data acquired at 
 263:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
 264:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 265:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            with which VrefInt has been calibrated in production
 266:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (tolerance: +-10 mV) (unit: mV). */
 267:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Temperature sensor */
 268:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF6E68UL)) /* Address of parameter TS_
 269:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            temperature sensor ADC raw data acquired at temperature 
 270:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
 271:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF6E8AUL)) /* Address of parameter TS_
 272:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            temperature sensor ADC raw data acquired at temperature 
 273:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
 274:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30)            /* Temperature at which tem
 275:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 276:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 277:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (( int32_t)  130)            /* Temperature at which tem
 278:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 279:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 280:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          ( 3000UL)                    /* Analog voltage reference
 281:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            with which temperature sensor has been calibrated in pro
 282:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (tolerance: +-10 mV) (unit: mV). */
 283:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 284:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 285:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 286:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 287:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 288:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 289:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 290:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 291:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 292:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 293:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 294:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 295:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 296:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         a register from a register basis from which an offset
 297:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         is applied.
 298:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 299:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 300:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Pointer to register address
 301:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 302:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 303:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 304:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 305:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 10


 306:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 307:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 308:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 309:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 310:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 311:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 312:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 313:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 314:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 315:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 316:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 317:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 318:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         and multimode
 319:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 320:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 321:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 322:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         sharing the same ADC common instance):
 323:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 324:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         disabled.
 325:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 326:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** typedef struct
 327:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
 328:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 329:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 330:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 331:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              @ref LL_ADC_SetCommonClock(). */
 332:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 333:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 334:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 336:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 337:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 338:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 339:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 340:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 341:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         is conditioned to ADC state:
 342:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC instance must be disabled.
 343:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 344:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 345:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 346:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 347:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 348:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 349:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 350:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         refer to description of each function for setting
 351:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         conditioned to ADC state.
 352:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 353:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** typedef struct
 354:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
 355:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 356:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 357:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             @note On this STM32 series, this parameter has some clo
 358:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                   ADC clock synchronous (from PCLK) with prescaler 
 359:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                   only if PCLK has a 50% duty clock cycle (APB pres
 360:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                   inside the RCC must be bypassed and the system cl
 361:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                   cycle).
 362:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 11


 363:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              @ref LL_ADC_SetClock().
 364:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              For more details, refer to description of this functio
 365:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 366:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 367:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 368:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 369:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              @ref LL_ADC_SetResolution(). */
 370:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 371:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 372:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 373:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 374:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              @ref LL_ADC_SetDataAlignment(). */
 375:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 376:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 377:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 378:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 379:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              @ref LL_ADC_SetLowPowerMode(). */
 380:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 381:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 382:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 383:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 384:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 385:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 386:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 387:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 388:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (functions with prefix "REG").
 389:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 390:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         is conditioned to ADC state:
 391:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC instance must be disabled.
 392:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 393:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 394:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 395:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 396:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 397:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 398:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 399:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         refer to description of each function for setting
 400:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         conditioned to ADC state.
 401:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 402:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** typedef struct
 403:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
 404:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 405:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              from external peripheral (timer event, external interr
 406:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 407:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 408:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    set trigger polarity to rising edge(default sett
 409:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    with some ADC on other STM32 series having this 
 410:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    default value).
 411:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 412:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    @ref LL_ADC_REG_SetTriggerEdge().
 413:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 414:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetTriggerSource(). */
 415:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 416:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 417:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 418:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                     to mode "fully configurable". Refer to function
 419:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                     @ref LL_ADC_REG_SetSequencerConfigurable().
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 12


 420:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 421:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 422:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerLength(). */
 423:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 424:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 425:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 426:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 427:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 428:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    enabled (depending on the sequencer mode: scan l
 429:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    more, or several ADC channels enabled in group r
 430:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    Refer to function @ref LL_ADC_REG_SetSequencerCo
 431:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 432:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerDiscont(). */
 433:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 434:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 435:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              conversions are performed in single mode (one conversi
 436:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              continuous mode (after the first trigger, following co
 437:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              successively automatically).
 438:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 439:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 440:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    and discontinuous mode.
 441:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 442:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetContinuousMode(). */
 443:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 444:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 445:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              by DMA, and DMA requests mode.
 446:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 447:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 448:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetDMATransfer(). */
 449:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 450:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 451:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              data preserved or overwritten.
 452:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 453:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 454:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetOverrun(). */
 455:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 456:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 457:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 458:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 459:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 460:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 461:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 462:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 463:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 464:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 465:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 466:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 467:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 468:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 469:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 470:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 471:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 472:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 473:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_FLAG_CCRDY                  ADC_ISR_CCRDY      /*!< ADC flag ADC channel configurati
 474:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 475:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            conversion */
 476:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 13


 477:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            conversions */
 478:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 479:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 480:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 481:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 482:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 483:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 484:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 485:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 486:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 487:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 488:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 489:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 490:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 491:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 492:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 493:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_IT_CCRDY                    ADC_IER_CCRDYIE    /*!< ADC interruption channel configu
 494:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 495:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                    conversion */
 496:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 497:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                    conversions */
 498:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 499:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 500:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                    phase */
 501:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 502:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 503:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 504:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 505:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 506:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 507:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 508:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 509:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 510:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 511:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 512:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 513:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* DMA transfer.                                                              */
 514:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 515:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA        (0x00000000UL)      /* ADC group regular conversion data
 516:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (corresponding to register DR) to be used with ADC confi
 517:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            mode. Without DMA transfer, register accessed by LL func
 518:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            @ref LL_ADC_REG_ReadConversionData32() and other
 519:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            functions @ref LL_ADC_REG_ReadConversionDatax() */
 520:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 521:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 522:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 523:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 524:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 525:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 526:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 527:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                      /*!< ADC asynchronou
 528:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            prescaler */
 529:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                   /*!< ADC asynchronou
 530:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            prescaler division by 2. Setting common to ADC instances
 531:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 532:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 533:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1)                   /*!< ADC asynchronou
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 14


 534:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            prescaler division by 4. Setting common to ADC instances
 535:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            group, applied ADC instance wise to each  instance clock
 536:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 537:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 538:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            prescaler division by 6. Setting common to ADC instances
 539:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 540:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 541:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2)                   /*!< ADC asynchronou
 542:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            prescaler division by 8. Setting common to ADC instances
 543:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 544:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 545:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 546:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            prescaler division by 10. Setting common to ADC instance
 547:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 548:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 549:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 550:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            prescaler division by 12. Setting common to ADC instance
 551:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 552:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 553:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 \
 554:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 555:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            prescaler division by 16. Setting common to ADC instance
 556:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 557:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 558:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                   /*!< ADC asynchronou
 559:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            prescaler division by 32. Setting common to ADC instance
 560:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 561:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 562:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 563:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            prescaler division by 64. Setting common to ADC instance
 564:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 565:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 566:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 567:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            prescaler division by 128. Setting common to ADC instanc
 568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 569:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 570:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 \
 571:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 572:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            prescaler division by 256. Setting common to ADC instanc
 573:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 574:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 575:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 576:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 577:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 578:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 579:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 580:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 581:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 582:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 583:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 584:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 585:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 586:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 587:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)       /*!< ADC measurement paths all disa
 588:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)     /*!< ADC measurement path to intern
 589:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)       /*!< ADC measurement path to intern
 590:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                      temperature sensor */
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 15


 591:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)     /*!< ADC measurement path to intern
 592:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 593:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 594:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 595:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 596:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 597:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 598:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 599:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1) /*!< ADC synchronous clock derived 
 600:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            divided by 4 */
 601:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0) /*!< ADC synchronous clock derived 
 602:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            divided by 2 */
 603:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 \
 604:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR2_CKMODE_0) /*!< ADC synchronous clock derive
 605:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            not divided */
 606:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000UL)       /*!< ADC asynchronous clock. Asynch
 607:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            prescaler can be configured using function @ref LL_ADC_S
 608:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 609:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 610:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 611:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 612:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 613:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 614:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 615:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 616:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 617:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
 618:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 619:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 620:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 621:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 622:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 623:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 624:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 625:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 626:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)     /*!< ADC conversion data alignment: r
 627:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (alignment on data register LSB bit 0)*/
 628:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)  /*!< ADC conversion data alignment: l
 629:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (alignment on data register MSB bit 15)*/
 630:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 631:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 632:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 633:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 634:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 635:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 636:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 637:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)     /*!< No ADC low power mode activated 
 638:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)   /*!< ADC low power mode auto delay: D
 639:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            mode, ADC conversions are performed only when necessary
 640:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (when previous ADC conversion data is read).
 641:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            See description with function @ref LL_ADC_SetLowPowerMod
 642:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF) /*!< ADC low power mode auto power-of
 643:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            automatically powers-off after a ADC conversion and auto
 644:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            when a new ADC conversion is triggered (with startup tim
 645:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            and start of sampling). See description with function
 646:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            @ref LL_ADC_SetLowPowerMode(). */
 647:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 16


 648:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** and auto power-off combined. See description with function @ref LL_ADC_SetLowPowerMode(). */
 649:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 650:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 651:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 652:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 653:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_FREQ  ADC group regular - Trigger frequency mode
 654:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 655:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 656:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_HIGH           (0x00000000UL)     /*!< ADC trigger frequency mode set t
 657:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            Note: ADC trigger frequency mode must be set to low freq
 658:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            is exceeded before ADC conversion start trigger event (b
 659:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            and ADC conversion start trigger event or between two AD
 660:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            trigger event).
 661:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            Duration value: Refer to device datasheet, parameter "tI
 662:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_LOW            (ADC_CFGR2_LFTRIG) /*!< ADC trigger frequency mode set t
 663:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            Note: ADC trigger frequency mode must be set to low freq
 664:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            is exceeded before ADC conversion start trigger event (b
 665:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            and ADC conversion start trigger event or between two AD
 666:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            trigger event).
 667:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            Duration value: Refer to device datasheet, parameter "tI
 668:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 669:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 670:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 671:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 672:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON  ADC instance - Sampling time common to a group of chan
 673:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 674:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 675:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_1       (ADC_SMPR_SMP1_BITOFFSET_POS) /*!< Set sampling time com
 676:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of channels: sampling time nb 1 */
 677:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_2       (ADC_SMPR_SMP2_BITOFFSET_POS \
 678:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_SAMPLING_TIME_CH_MASK)  /*!< Set sampling time co
 679:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of channels: sampling time nb 2 */
 680:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 681:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 682:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 683:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 684:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 685:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 686:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 687:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL)     /*!< ADC group regular (available on 
 688:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 689:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 690:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 691:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 692:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 693:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 694:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 695:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER \
 696:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_0_BITFIELD ) /*!< ADC channel ADCx_IN0  *
 697:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER \
 698:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_1_BITFIELD ) /*!< ADC channel ADCx_IN1  *
 699:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER \
 700:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_2_BITFIELD ) /*!< ADC channel ADCx_IN2  *
 701:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER \
 702:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_3_BITFIELD ) /*!< ADC channel ADCx_IN3  *
 703:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER \
 704:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_4_BITFIELD ) /*!< ADC channel ADCx_IN4  *
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 17


 705:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER \
 706:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_5_BITFIELD ) /*!< ADC channel ADCx_IN5  *
 707:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER \
 708:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_6_BITFIELD ) /*!< ADC channel ADCx_IN6  *
 709:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER \
 710:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_7_BITFIELD ) /*!< ADC channel ADCx_IN7  *
 711:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER \
 712:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_8_BITFIELD ) /*!< ADC channel ADCx_IN8  *
 713:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER \
 714:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_9_BITFIELD ) /*!< ADC channel ADCx_IN9  *
 715:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER \
 716:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_10_BITFIELD) /*!< ADC channel ADCx_IN10 *
 717:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER \
 718:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_11_BITFIELD) /*!< ADC channel ADCx_IN11 *
 719:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER \
 720:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_12_BITFIELD) /*!< ADC channel ADCx_IN12 *
 721:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER \
 722:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_13_BITFIELD) /*!< ADC channel ADCx_IN13 *
 723:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER \
 724:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_14_BITFIELD) /*!< ADC channel ADCx_IN14 *
 725:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER \
 726:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_15_BITFIELD) /*!< ADC channel ADCx_IN15 *
 727:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER \
 728:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_16_BITFIELD) /*!< ADC channel ADCx_IN16 *
 729:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER \
 730:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_17_BITFIELD) /*!< ADC channel ADCx_IN17 *
 731:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER \
 732:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_18_BITFIELD) /*!< ADC channel ADCx_IN18 *
 733:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_19                  (ADC_CHANNEL_19_NUMBER \
 734:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CHANNEL_19_BITFIELD) /*!< ADC channel ADCx_IN19 *
 735:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_11 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 736:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            connected to internal temperature sensor. */
 737:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_12 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 738:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            connected to VrefInt: Internal voltage reference. */
 739:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 740:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            connected to Vbat/3: Vbat voltage through a divider ladd
 741:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            to have channel voltage always below Vdda. */
 742:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_CHANNEL_DACCH1              (LL_ADC_CHANNEL_19 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 743:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            connected to DAC channel 1. */
 744:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 745:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 746:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 747:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 748:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 749:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 750:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 751:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                         /
 752:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            conversion trigger internal: SW start. */
 753:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /
 754:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO.
 755:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 756:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH4       (ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /
 757:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
 758:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (capture compare: input capture or output capture).
 759:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 760:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR1_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /
 761:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 TRGO.
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 18


 762:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 763:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXTSEL_0 \
 764:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                      /
 765:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 TRGO.
 766:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 767:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR1_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /
 768:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM15 TRGO.
 769:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 770:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO     (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_0 \
 771:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                      /*
 772:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM6 TRGO.
 773:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 774:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 \
 775:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /
 776:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            conversion trigger from external peripheral: external in
 777:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 778:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 779:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 780:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 781:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 782:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 783:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 784:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 785:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (ADC_CFGR1_EXTEN_0)                     /*!< ADC group r
 786:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            trigger polarity set to rising edge */
 787:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1)                     /*!< ADC group r
 788:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            trigger polarity set to falling edge */
 789:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
 790:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            trigger polarity set to both rising and falling edges */
 791:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 792:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 793:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 794:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 795:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 796:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 797:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 798:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)     /*!< ADC conversions performed in sin
 799:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            one conversion per trigger */
 800:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)   /*!< ADC conversions performed in con
 801:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            after the first trigger, following conversions launched 
 802:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            automatically */
 803:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 804:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 805:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 806:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 807:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 808:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 809:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 810:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)     /*!< ADC conversions are not transfer
 811:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (ADC_CFGR1_DMAEN)  /*!< ADC conversion data are transfer
 812:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            in limited mode (one shot mode): DMA transfer requests a
 813:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            number of DMA data transfers (number of ADC conversions)
 814:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode non-c
 815:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN)  /*!< ADC conversio
 816:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            transferred by DMA, in unlimited mode: DMA transfer requ
 817:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            whatever number of DMA data transferred (number of ADC c
 818:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode circu
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 19


 819:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 820:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 821:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 822:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 823:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 824:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 825:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 826:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)     /*!< ADC group regular behavior in ca
 827:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                    data preserved */
 828:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD) /*!< ADC group regular behavior in ca
 829:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                    data overwritten */
 830:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 831:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 832:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 833:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 834:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_MODE  ADC group regular - Sequencer configuration flexibility
 835:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 836:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 837:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_FIXED               (0x00000000UL)        /*!< Sequencer configured to not f
 838:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            sequencer length and each rank affectation to a channel 
 839:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            by channel HW number. Refer to description of function
 840:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            @ref LL_ADC_REG_SetSequencerChannels(). */
 841:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_CONFIGURABLE        (ADC_CFGR1_CHSELRMOD) /*!< Sequencer configured to fully
 842:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            sequencer length and each rank affectation to a channel 
 843:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            Refer to description of function @ref LL_ADC_REG_SetSequ
 844:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 845:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 846:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 847:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 848:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 849:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 850:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 851:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (ADC_CHSELR_SQ2)               /*!< ADC group regular se
 852:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (equivalent to sequencer of 1 rank: ADC conversion on on
 853:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_CHSELR_SQ3)               /*!< ADC group regular se
 854:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            with 2 ranks in the sequence */
 855:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_CHSELR_SQ4)               /*!< ADC group regular se
 856:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            with 3 ranks in the sequence */
 857:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_CHSELR_SQ5)               /*!< ADC group regular se
 858:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            with 4 ranks in the sequence */
 859:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_CHSELR_SQ6)               /*!< ADC group regular se
 860:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            with 5 ranks in the sequence */
 861:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_CHSELR_SQ7)               /*!< ADC group regular se
 862:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            with 6 ranks in the sequence */
 863:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_CHSELR_SQ8)               /*!< ADC group regular se
 864:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            with 7 ranks in the sequence */
 865:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (0x00000000UL)                 /*!< ADC group regular se
 866:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            with 8 ranks in the sequence */
 867:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 868:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 869:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 870:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 871:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 872:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 873:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 874:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000UL)      /*!< On this STM32 series, parameter
 875:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            sequencer set to mode not fully configurable, refer to f
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 20


 876:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            @ref LL_ADC_REG_SetSequencerConfigurable(). ADC group re
 877:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            direction forward: from lowest channel number to highest
 878:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (scan of all ranks, ADC conversion of ranks with channel
 879:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            sequencer). On some other STM32 series, this setting is 
 880:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            and the default scan direction is forward. */
 881:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR) /*!< On this STM32 series, parameter
 882:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            sequencer set to mode not fully configurable, refer to f
 883:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            @ref LL_ADC_REG_SetSequencerConfigurable(). ADC group re
 884:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            direction backward: from highest channel number to lowes
 885:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (scan of all ranks, ADC conversion of ranks with channel
 886:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            sequencer) */
 887:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 888:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 889:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 890:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 891:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 892:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 893:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 894:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                          /*!< ADC group r
 895:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            discontinuous mode disable */
 896:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                      /*!< ADC group r
 897:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
 898:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 899:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 900:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 901:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 902:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 903:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 904:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 905:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_REG_RANK_1_SQRX_BITOFFSET_POS) /*!< ADC group regul
 906:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_REG_RANK_2_SQRX_BITOFFSET_POS) /*!< ADC group regul
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_REG_RANK_3_SQRX_BITOFFSET_POS) /*!< ADC group regul
 908:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_REG_RANK_4_SQRX_BITOFFSET_POS) /*!< ADC group regul
 909:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_REG_RANK_5_SQRX_BITOFFSET_POS) /*!< ADC group regul
 910:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_REG_RANK_6_SQRX_BITOFFSET_POS) /*!< ADC group regul
 911:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_REG_RANK_7_SQRX_BITOFFSET_POS) /*!< ADC group regul
 912:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_REG_RANK_8_SQRX_BITOFFSET_POS) /*!< ADC group regul
 913:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 914:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 915:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 916:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 917:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 918:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 919:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 920:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)     /*!< Sampling time 1.5 ADC clock cycl
 921:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP1_0)  /*!< Sampling time 3.5 ADC clock cycl
 922:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP1_1)  /*!< Sampling time 7.5 ADC clock cycl
 923:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP1_1 \
 924:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_0) /*!< Sampling time 12.5 ADC clock cy
 925:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP1_2)  /*!< Sampling time 19.5 ADC clock cyc
 926:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP1_2 \
 927:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_0) /*!< Sampling time 39.5 ADC clock cy
 928:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP1_2 \
 929:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_1) /*!< Sampling time 79.5 ADC clock cy
 930:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP1_2 \
 931:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_1 \
 932:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_0) /*!< Sampling time 160.5 ADC clock c
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 21


 933:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 934:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 935:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 936:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 937:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 938:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 939:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 940:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK \
 941:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_AWD_CR1_REGOFFSET) /*!< ADC analog watchdog numbe
 942:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK \
 943:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_AWD_CR2_REGOFFSET) /*!< ADC analog watchdog numbe
 944:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK \
 945:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_AWD_CR3_REGOFFSET) /*!< ADC analog watchdog numbe
 946:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
 947:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
 948:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 949:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
 950:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 951:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
 952:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
 953:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                           /*!< ADC analog
 954:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            disabled */
 955:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK \
 956:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN)                     /*!< ADC analog
 957:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of all channels, converted by group regular only */
 958:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
 959:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 960:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by group regular only
 961:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
 962:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 963:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by group regular only
 964:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
 965:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 966:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by group regular only
 967:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
 968:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 969:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by group regular only
 970:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
 971:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 972:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by group regular only
 973:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
 974:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 975:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by group regular only
 976:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
 977:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 978:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by group regular only
 979:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
 980:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 981:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by group regular only
 982:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
 983:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 984:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by group regular only
 985:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
 986:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 987:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by group regular only
 988:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
 989:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 22


 990:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by group regular onl
 991:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
 992:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 993:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by group regular onl
 994:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
 995:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 996:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by group regular onl
 997:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
 998:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 999:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by group regular onl
1000:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1001:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1002:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by group regular onl
1003:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1004:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1005:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN15, converted by group regular onl
1006:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1007:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1008:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by group regular onl
1009:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1010:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1011:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by group regular onl
1012:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1013:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1014:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by group regular onl
1015:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) \
1016:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1017:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC channel ADCx_IN19, converted by group regular onl
1018:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) \
1019:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1020:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal
1021:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            voltage reference, converted by group regular only */
1022:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) \
1023:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1024:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC internal channel connected to internal temperatur
1025:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            converted by group regular only */
1026:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) \
1027:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1028:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/3: Vbat
1029:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            voltage through a divider ladder of factor 1/3 to have c
1030:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            below Vdda, converted by group regular only */
1031:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_CH_DACCH1_REG           ((LL_ADC_CHANNEL_DACCH1     & ADC_CHANNEL_ID_MASK) \
1032:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1033:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            of ADC internal channel connected to DAC channel 1,
1034:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            converted by group regular only */
1035:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1036:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
1037:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1038:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1039:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1040:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
1041:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1042:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_AWD1TR_HT1)   /*!< ADC analog watchdog threshold hi
1043:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (ADC_AWD1TR_LT1)   /*!< ADC analog watchdog threshold lo
1044:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_AWD1TR_HT1 \
1045:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_AWD1TR_LT1)  /*!< ADC analog watchdog both thresh
1046:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                    concatenated into the same data 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 23


1047:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1048:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
1049:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1050:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1051:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1052:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
1053:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1054:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                      /*!< ADC oversamplin
1055:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (ADC_CFGR2_OVSE)                    /*!< ADC oversamplin
1056:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            ADC group regular. Literal suffix "continued" is kept fo
1057:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            with other STM32 devices featuring ADC group injected, i
1058:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            oversampling scope parameters are available. */
1059:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1060:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
1061:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1062:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1063:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1064:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
1065:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1066:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)     /*!< ADC oversampling discontinuous m
1067:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** (all conversions of oversampling ratio are done from 1 trigger) */
1068:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)   /*!< ADC oversampling discontinuous m
1069:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            mode (each conversion of oversampling ratio needs a trig
1070:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1071:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
1072:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1073:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1074:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1075:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
1076:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1077:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                        /*!< ADC oversampl
1078:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1079:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (before potential shift) */
1080:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (ADC_CFGR2_OVSR_0)                    /*!< ADC oversampl
1081:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1082:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (before potential shift) */
1083:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (ADC_CFGR2_OVSR_1)                    /*!< ADC oversampl
1084:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1085:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (before potential shift) */
1086:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1087:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1088:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (before potential shift) */
1089:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2)                    /*!< ADC oversampl
1090:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1091:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (before potential shift) */
1092:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1093:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1094:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (before potential shift) */
1095:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1) /*!< ADC oversampl
1096:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1097:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (before potential shift) */
1098:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 \
1099:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR2_OVSR_0)                   /*!< ADC oversamp
1100:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1101:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (before potential shift) */
1102:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1103:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 24


1104:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1105:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1106:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data right shift
1107:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
1108:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1109:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                        /*!< ADC oversampl
1110:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of the ADC conversions data is not divided to resul
1111:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            conversion data) */
1112:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (ADC_CFGR2_OVSS_0)                    /*!< ADC oversampl
1113:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1114:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1115:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (ADC_CFGR2_OVSS_1)                    /*!< ADC oversampl
1116:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1117:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1118:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (ADC_CFGR2_OVSS_1 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1119:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1120:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1121:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (ADC_CFGR2_OVSS_2)                    /*!< ADC oversampl
1122:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1123:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1124:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1125:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1126:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1127:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1) /*!< ADC oversampl
1128:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1129:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1130:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 \
1131:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             | ADC_CFGR2_OVSS_0)                   /*!< ADC oversamp
1132:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1133:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1134:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3)                    /*!< ADC oversampl
1135:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1136:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1137:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1138:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
1139:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1140:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1141:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HELPER_MACRO  Definitions of constants used by helper macro
1142:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
1143:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1144:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_TEMPERATURE_CALC_ERROR      ((int16_t)0x7FFF)  /* Temperature calculation error usin
1145:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                  @ref __LL_ADC_CALC_TEMPERATURE(), 
1146:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                  calibration parameters. This value
1147:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                  (to fit on signed word or double w
1148:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                  to an inconsistent temperature val
1149:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1150:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
1151:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1152:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1153:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1154:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1155:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         not timeout values.
1156:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1157:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         above each literal definition.
1158:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
1159:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1160:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 25


1161:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1162:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       not timeout values.                                                  */
1163:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1164:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1165:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1166:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1167:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       STM32 series:                                                        */
1168:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 82/fADC.                    */
1169:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1170:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1171:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1172:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1173:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1174:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*         cycles                                                             */
1175:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1176:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*         configuration.                                                     */
1177:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1178:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1179:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1180:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1181:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1182:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Unit: us                                                                   */
1183:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)           /*!< Delay for ADC stabilization time
1184:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                               regulator start-up time) */
1185:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1186:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1187:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1188:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1189:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Unit: us                                                                   */
1190:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)        /*!< Delay for internal voltage refer
1191:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                    time */
1192:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1193:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1194:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1195:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1196:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Unit: us                                                                   */
1197:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)        /*!< Delay for temperature sensor sta
1198:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                    (starting from temperature senso
1199:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                    @ref LL_ADC_SetCommonPathInterna
1200:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)        /*!< Delay for temperature sensor buf
1201:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                    time (starting from ADC enable, 
1202:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                    @ref LL_ADC_Enable()) */
1203:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1204:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1205:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
1206:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1207:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1208:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1209:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1210:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1211:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  2UL)        /*!< Delay required between ADC end o
1212:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                                    and ADC enable */
1213:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1214:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1215:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
1216:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1217:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 26


1218:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1219:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
1220:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1221:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1222:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1223:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1224:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1225:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
1226:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1227:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1228:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1229:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
1230:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1231:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1232:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1233:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Write a value in ADC register
1234:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1235:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __REG__ Register to be written
1236:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1237:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
1238:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1239:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1240:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1241:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1242:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Read a value in ADC register
1243:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1244:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __REG__ Register to be read
1245:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Register value
1246:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1247:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1248:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1249:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
1250:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1251:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1252:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1253:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
1254:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1255:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1257:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1258:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1259:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Example:
1260:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1261:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           will return decimal number "4".
1262:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1263:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         number is returned, either defined with number
1264:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1265:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1266:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1267:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1268:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1269:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1270:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1271:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1272:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1273:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1274:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 27


1275:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1276:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1277:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1278:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1279:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1280:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1281:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1282:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1283:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1284:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1285:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1286:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1287:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1288:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1289:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1290:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1291:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1292:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #if defined(CORE_CM0PLUS)
1293:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
1294:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                                       
1295:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    (                                                                                               
1296:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
1297:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    )                                                                                               
1298:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    :                                                                                               
1299:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    ((((__CHANNEL__) & ADC_CHANNEL_0_BITFIELD) == ADC_CHANNEL_0_BITFIELD) ? (0UL) :                 
1300:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     ((((__CHANNEL__) & ADC_CHANNEL_1_BITFIELD) == ADC_CHANNEL_1_BITFIELD) ? (1UL) :                
1301:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****      ((((__CHANNEL__) & ADC_CHANNEL_2_BITFIELD) == ADC_CHANNEL_2_BITFIELD) ? (2UL) :               
1302:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       ((((__CHANNEL__) & ADC_CHANNEL_3_BITFIELD) == ADC_CHANNEL_3_BITFIELD) ? (3UL) :              
1303:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****        ((((__CHANNEL__) & ADC_CHANNEL_4_BITFIELD) == ADC_CHANNEL_4_BITFIELD) ? (4UL) :             
1304:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****         ((((__CHANNEL__) & ADC_CHANNEL_5_BITFIELD) == ADC_CHANNEL_5_BITFIELD) ? (5UL) :            
1305:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****          ((((__CHANNEL__) & ADC_CHANNEL_6_BITFIELD) == ADC_CHANNEL_6_BITFIELD) ? (6UL) :           
1306:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           ((((__CHANNEL__) & ADC_CHANNEL_7_BITFIELD) == ADC_CHANNEL_7_BITFIELD) ? (7UL) :          
1307:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****            ((((__CHANNEL__) & ADC_CHANNEL_8_BITFIELD) == ADC_CHANNEL_8_BITFIELD) ? (8UL) :         
1308:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****             ((((__CHANNEL__) & ADC_CHANNEL_9_BITFIELD) == ADC_CHANNEL_9_BITFIELD) ? (9UL) :        
1309:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ((((__CHANNEL__) & ADC_CHANNEL_10_BITFIELD) == ADC_CHANNEL_10_BITFIELD) ? (10UL) :    
1310:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****               ((((__CHANNEL__) & ADC_CHANNEL_11_BITFIELD) == ADC_CHANNEL_11_BITFIELD) ? (11UL) :   
1311:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                ((((__CHANNEL__) & ADC_CHANNEL_12_BITFIELD) == ADC_CHANNEL_12_BITFIELD) ? (12UL) :  
1312:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                 ((((__CHANNEL__) & ADC_CHANNEL_13_BITFIELD) == ADC_CHANNEL_13_BITFIELD) ? (13UL) : 
1313:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                  ((((__CHANNEL__) & ADC_CHANNEL_14_BITFIELD) == ADC_CHANNEL_14_BITFIELD) ? (14UL) :
1314:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                   ((((__CHANNEL__) & ADC_CHANNEL_15_BITFIELD) == ADC_CHANNEL_15_BITFIELD) ? (15UL) 
1315:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                    ((((__CHANNEL__) & ADC_CHANNEL_16_BITFIELD) == ADC_CHANNEL_16_BITFIELD) ? (16UL)
1316:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                     ((((__CHANNEL__) & ADC_CHANNEL_17_BITFIELD) == ADC_CHANNEL_17_BITFIELD) ? (17UL
1317:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                      (0UL))))))))))))))))))))
1318:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1319:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #else
1320:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1321:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
1322:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    (                                                                                       \
1323:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1324:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    )                                                                                       \
1325:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    :                                                                                       \
1326:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    (                                                                                       \
1327:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1328:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    )                                                                                       \
1329:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   )
1330:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #endif /* CORE_CM0PLUS */
1331:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 28


1332:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1333:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1334:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         from number in decimal format.
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Example:
1336:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1337:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1338:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1339:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1340:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1341:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1342:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1343:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1344:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1345:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1346:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1347:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1348:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1349:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1350:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1351:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1352:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1353:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1354:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1355:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1356:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1357:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1358:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1359:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1360:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1361:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1362:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1363:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1364:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1365:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1366:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   (((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1367:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__)))
1368:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1369:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1370:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1371:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1372:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1373:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - ADC internal channel:
1374:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1375:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1376:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1377:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1378:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1379:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1380:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1381:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1382:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         returned from ADC registers,
1383:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1384:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1385:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         parameters definitions of driver.
1386:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1387:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1388:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 29


1389:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1390:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1391:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1392:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1393:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1394:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1395:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1396:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1397:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1398:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1399:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1400:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1401:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1402:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1403:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1404:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1405:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1406:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1407:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1408:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1409:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1410:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1411:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1412:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                       connected to a GPIO pin).
1413:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1414:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1415:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1416:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1417:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1418:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1419:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1420:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1421:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1422:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1423:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1424:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1425:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1426:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1427:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         a value defined from parameter definition of
1428:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1429:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1430:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         from ADC registers.
1431:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1432:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1433:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1434:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1435:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1436:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1437:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1438:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1439:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1440:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1441:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1442:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1443:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1444:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1445:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 30


1446:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1447:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1448:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1449:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1450:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1451:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1452:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1453:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1454:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1455:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1456:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1457:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1458:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1459:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1460:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1461:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1462:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1463:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1464:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1465:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1466:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1467:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1468:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1469:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1470:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1471:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1472:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1473:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1474:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1475:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1476:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1477:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1478:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1479:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1480:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1481:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1482:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1483:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1484:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1485:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1486:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1487:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1488:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1489:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         or a value from functions where a channel number is
1490:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         returned from ADC registers,
1491:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1492:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1493:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         parameters definitions of driver.
1494:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1495:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1496:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1497:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1498:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1499:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1500:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1501:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1502:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 31


1503:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1504:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   (((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                             \
1505:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                             \
1506:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)       ||                             \
1507:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_DACCH1))
1508:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1509:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1510:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1511:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1512:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1513:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1514:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Example:
1515:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1516:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1517:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1518:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1519:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1520:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1521:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1522:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1523:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1524:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1525:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1526:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1527:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1528:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1529:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1530:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1531:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1532:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1533:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1534:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1535:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1536:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1537:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1538:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1539:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1540:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1541:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1542:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1543:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1544:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1545:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1546:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1547:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1548:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
1549:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
1550:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
1551:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
1552:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
1553:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
1554:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
1555:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
1556:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
1557:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
1558:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1559:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 32


1560:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1561:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1562:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1563:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1564:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
1565:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1566:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
1567:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG
1568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1569:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1570:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
1571:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DACCH1_REG
1572:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1573:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1574:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
1575:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1576:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1577:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1578:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1579:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         different of 12 bits.
1580:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1581:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1582:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1583:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1584:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1585:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *            (< ADCx param >,
1586:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1587:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *            );
1588:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1589:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1590:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1591:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1592:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1593:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1594:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1595:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1596:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1597:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1598:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1599:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1600:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1601:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1602:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         different of 12 bits.
1603:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1604:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1605:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1606:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1607:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1608:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1609:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *            );
1610:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1611:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1612:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1613:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1614:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1615:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1616:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 33


1617:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1618:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1619:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1620:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1621:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1622:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1623:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1624:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1625:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1626:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1627:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1628:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1629:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1630:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1631:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1632:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1633:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)          
1634:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1635:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    & LL_ADC_AWD_THRESHOLD_LOW)
1636:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1637:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1638:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1639:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1640:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1641:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1642:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1643:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1644:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1645:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval ADC common register instance
1646:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1647:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1648:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   (ADC1_COMMON)
1649:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1650:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1651:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1652:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC common instance are disabled.
1653:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1654:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
1655:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1656:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1657:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1658:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1659:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1660:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1661:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1662:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1663:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         are disabled.
1664:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1665:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         is enabled.
1666:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1667:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1668:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   LL_ADC_IsEnabled(ADC1)
1669:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1670:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1671:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1672:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1673:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 34


1674:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1675:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (refer to reference manual).
1676:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1677:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1678:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1679:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1680:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1681:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
1682:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1683:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1684:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))
1685:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1686:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1687:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
1688:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         a resolution to another resolution.
1689:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
1690:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
1691:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1692:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1693:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1694:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1695:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1696:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1697:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1698:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1699:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1700:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1701:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1702:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1703:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1704:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
1705:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
1706:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
1707:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** (((__DATA__)                                                                 \
1708:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))  \
1709:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL))     \
1710:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** )
1711:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1712:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1713:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1714:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1715:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1716:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1717:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1718:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1719:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1720:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                       (unit: digital value).
1721:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1722:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1723:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1724:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1725:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1726:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1727:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1728:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1729:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                       __ADC_DATA__,\
1730:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 35


1731:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1732:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1733:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** )
1734:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1735:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1736:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
1737:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
1738:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         reference VrefInt.
1739:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1740:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1741:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1742:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         connected to pin Vref+.
1743:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1744:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1745:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
1746:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
1747:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1748:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         internal voltage reference VrefInt.
1749:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1750:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1751:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1752:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1753:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1754:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1755:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1756:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1757:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1758:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
1759:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1760:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
1761:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
1762:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1763:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
1764:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
1765:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
1766:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** )
1767:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1768:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1769:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1770:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1771:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
1772:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1773:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Calculation formula:
1774:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
1775:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
1776:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
1777:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
1778:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
1779:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
1780:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
1781:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
1782:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
1783:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
1784:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
1785:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                  parameters are correct (address and data).
1786:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
1787:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 36


1788:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                  less accurate than calibrated values),
1789:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
1790:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1791:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1792:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1793:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1794:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1795:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
1796:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
1797:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1798:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         temperature sensor.
1799:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1800:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1801:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
1802:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
1803:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
1804:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
1805:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                                 sensor voltage has been measured.
1806:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1807:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1808:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1809:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1810:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1811:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1812:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         In case or error, value LL_ADC_TEMPERATURE_CALC_ERROR is returned (inconsistent tempera
1813:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1814:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
1815:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
1816:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                   __ADC_RESOLUTION__)\
1817:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** ((((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) != 0) ?       \
1818:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****  (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
1819:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    (__ADC_RESOLUTION__),          \
1820:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    LL_ADC_RESOLUTION_12B)         \
1821:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                   * (__VREFANALOG_VOLTAGE__))                                     \
1822:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                  / TEMPSENSOR_CAL_VREFANALOG)                                     \
1823:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****        - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
1824:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
1825:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
1826:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   ) + TEMPSENSOR_CAL1_TEMP                                                        \
1827:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****  )                                                                                \
1828:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****  :                                                                                \
1829:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****  ((int32_t)LL_ADC_TEMPERATURE_CALC_ERROR)                                         \
1830:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** )
1831:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1832:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1833:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1834:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1835:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1836:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (refer to device datasheet).
1837:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Calculation formula:
1838:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1839:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
1840:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1841:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                                   (unit: digital value)
1842:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1843:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1844:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 37


1845:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1846:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1847:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                  of the current device has characteristics in line with
1848:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                  datasheet typical values.
1849:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
1850:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1851:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1852:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1853:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1854:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1855:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1856:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1857:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1858:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
1859:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1860:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1861:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1862:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                           (unit: uV/DegCelsius).
1863:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                                       On this STM32 series, refer to device datasheet parameter
1864:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1865:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                           (at temperature and Vref+ defined in parameters below) (u
1866:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                                       On this STM32 series, refer to datasheet parameter "V30" 
1867:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                                       to TS_CAL1).
1868:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1869:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                           (see parameter above) is corresponding (unit: mV)
1870:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) value (unit: mV)
1871:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1872:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1873:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1874:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1875:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1876:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1877:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1878:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1879:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1880:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1881:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1882:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1883:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1884:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1885:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
1886:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1887:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1888:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****               * 1000UL)                                                     \
1889:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     -                                                                       \
1890:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1891:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****               * 1000UL)                                                     \
1892:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****    )                                                                        \
1893:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
1894:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
1895:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** )
1896:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1897:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1898:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
1899:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1900:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1901:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 38


1902:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
1903:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1904:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1905:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1906:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1908:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
1909:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1910:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1911:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1912:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
1913:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1914:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1915:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1916:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1917:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1918:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1919:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1920:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1921:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1922:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   These ADC registers are data registers:
1923:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1924:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1925:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1926:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1927:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Example:
1928:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1929:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1930:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1931:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1932:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1933:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1934:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1935:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1936:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1937:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1938:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
1939:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1940:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1941:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval ADC register address
1942:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1943:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
1944:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
1945:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
1946:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   (void)(Register);
1947:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1948:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Retrieve address of register DR */
1949:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
1950:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
1951:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1952:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1953:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
1954:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1955:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1956:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1957:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           ADC instances
1958:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 39


1959:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1960:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1961:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1962:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
1963:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1964:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
1965:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1966:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1967:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1968:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1969:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_SetCommonClock
1970:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1971:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1972:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
1973:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1974:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1975:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1976:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1977:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1978:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1979:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1980:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1981:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1982:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1983:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1984:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1985:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *
1986:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1987:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1988:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             is set to clock source asynchronous.
1989:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1990:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
1991:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
1992:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
1993:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
1994:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
1995:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
1996:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
1997:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
1998:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
1999:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_GetCommonClock
2000:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2001:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2002:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2003:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
2004:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
2005:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
2006:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
2007:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
2008:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
2009:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
2010:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
2011:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
2012:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
2013:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
2014:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
2015:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 40


2016:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
2017:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
2018:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             is set to clock source asynchronous.
2019:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
2020:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2021:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(const ADC_Common_TypeDef *ADCxy_COMMON)
2022:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2023:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
2024:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2025:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2026:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2027:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2028:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2029:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2030:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   One or several values can be selected.
2031:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2032:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2033:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         The values not selected are removed from configuration.
2034:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2035:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2036:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2037:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         temperature sensor stabilization time.
2038:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet.
2039:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2040:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
2041:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2042:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2043:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2044:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         a sampling time minimum value is required.
2045:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet.
2046:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2047:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2048:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2049:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2050:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2051:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2052:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2053:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2054:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2055:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2056:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2057:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2058:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2059:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2060:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2061:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2062:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2063:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2064:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2065:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2066:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2067:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2068:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2069:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2070:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2071:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2072:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Add paths to the current configuration.
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 41


2073:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   One or several values can be selected.
2074:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2075:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2076:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2077:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2078:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2079:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         temperature sensor stabilization time.
2080:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet.
2081:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2082:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
2083:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2084:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2085:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2086:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         a sampling time minimum value is required.
2087:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet.
2088:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2089:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2090:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2091:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2092:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2093:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2094:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2095:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2096:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
2097:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2098:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2099:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2100:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2101:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2102:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2103:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2104:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2105:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2106:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2107:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2108:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2109:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2110:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2111:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2112:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2113:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2114:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Remove paths to the current configuration.
2115:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   One or several values can be selected.
2116:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2117:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2118:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2119:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2120:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2121:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2122:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2123:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2124:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2125:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2126:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
2127:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2128:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2129:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 42


2130:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2131:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2132:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2133:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2134:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2135:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2136:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2137:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2138:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2139:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2140:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2141:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2142:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2143:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2144:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   One or several values can be selected.
2145:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2146:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2147:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2148:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2149:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2150:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2151:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2152:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2153:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2154:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2155:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2156:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2157:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2158:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(const ADC_Common_TypeDef *ADCxy_COMMON)
2159:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2160:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2161:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2162:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2163:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2164:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
2165:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2166:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2167:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2168:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
2169:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2170:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2171:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2172:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
2173:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2174:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2175:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
2176:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
2177:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2178:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
2179:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2180:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2181:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2182:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2183:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *
2184:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
2185:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
2186:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 43


2187:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2188:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2189:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2190:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             cycle).
2191:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             Refer to reference manual.
2192:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2193:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2194:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
2195:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2196:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
2197:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2198:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2199:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2200:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
2201:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
2202:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2203:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2204:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2205:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2206:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2207:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2208:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *
2209:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
2210:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
2211:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2212:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2213:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2214:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2215:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             cycle).
2216:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             Refer to reference manual.
2217:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2218:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(const ADC_TypeDef *ADCx)
2219:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2220:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
2221:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2222:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2223:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2224:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2225:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2226:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2227:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         without having to perform a new calibration using
2228:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2229:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2230:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2231:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2232:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on going on group regular.
2233:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_SetCalibrationFactor
2234:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2235:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2236:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2237:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2238:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
2239:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2240:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2241:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
2242:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              CalibrationFactor);
2243:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 44


2244:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2245:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2246:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2247:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2248:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2249:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2250:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_GetCalibrationFactor
2251:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2252:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2253:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2254:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(const ADC_TypeDef *ADCx)
2255:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
2257:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2258:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2259:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2260:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC resolution.
2261:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2262:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2263:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2264:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2265:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
2266:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
2267:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2268:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2269:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2270:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2271:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2272:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2273:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2274:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2275:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2276:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2277:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
2278:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2279:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2280:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2281:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC resolution.
2282:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2283:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2284:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
2285:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2286:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2287:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2288:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2289:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2290:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2291:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2292:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(const ADC_TypeDef *ADCx)
2293:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2294:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
2295:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2296:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2297:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2298:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2299:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2300:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 45


2301:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2302:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2303:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
2304:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
2305:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2306:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2307:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2308:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2309:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2310:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2311:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2312:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2313:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
2314:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2315:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2316:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2317:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2318:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2319:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2320:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
2321:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2322:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2323:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2324:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2325:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2326:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(const ADC_TypeDef *ADCx)
2327:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2328:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2329:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2330:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2331:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2332:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2333:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2334:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2336:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           in order to reduce power consumption.
2337:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2338:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2339:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           has been retrieved by user software.
2340:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2341:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           other conversion.
2342:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2343:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2344:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2345:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           applications.
2346:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           How to use this low power mode:
2347:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2348:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2349:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2350:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2351:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2352:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2353:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2354:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2355:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2356:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2357:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             ADC conversion start.
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 46


2358:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2359:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2360:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2361:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2362:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2363:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2364:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2365:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2366:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2367:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2368:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2369:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC channel.
2370:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2371:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2372:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
2373:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
2374:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
2375:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2376:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2377:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2378:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2379:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2380:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2381:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2382:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2383:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2384:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2385:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2386:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2387:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2388:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2389:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2390:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2391:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2392:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2393:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           in order to reduce power consumption.
2394:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2395:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2396:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           has been retrieved by user software.
2397:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2398:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           other conversion.
2399:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2400:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2401:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2402:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           applications.
2403:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           How to use this low power mode:
2404:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2405:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2406:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2407:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2408:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2409:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2410:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2411:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2412:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2413:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2414:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             ADC conversion start.
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 47


2415:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2416:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2417:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2418:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2419:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2420:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2421:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2422:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2423:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2424:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2425:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2426:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC channel.
2427:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
2428:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
2429:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2430:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2431:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2432:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2433:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2434:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2435:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2436:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(const ADC_TypeDef *ADCx)
2437:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2438:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2439:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2440:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2441:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2442:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC trigger frequency mode.
2443:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   ADC trigger frequency mode must be set to low frequency when
2444:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         a duration is exceeded before ADC conversion start trigger event
2445:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (between ADC enable and ADC conversion start trigger event
2446:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         or between two ADC conversion start trigger event).
2447:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Duration value: Refer to device datasheet, parameter "tIdle".
2448:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   When ADC trigger frequency mode is set to low frequency,
2449:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         some rearm cycles are inserted before performing ADC conversion
2450:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         start, inducing a delay of 2 ADC clock cycles.
2451:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Usage of ADC trigger frequency mode with ADC low power mode:
2452:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Low power mode auto wait: Only the first ADC conversion
2453:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           start trigger inserts the rearm delay.
2454:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Low power mode auto power-off: ADC trigger frequency mode
2455:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           is discarded.
2456:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2457:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2458:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
2459:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_SetTriggerFrequencyMode
2460:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2461:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  TriggerFrequencyMode This parameter can be one of the following values:
2462:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2463:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2464:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2465:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2466:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetTriggerFrequencyMode(ADC_TypeDef *ADCx, uint32_t TriggerFrequencyMod
2467:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2468:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_LFTRIG, TriggerFrequencyMode);
2469:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2470:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2471:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 48


2472:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC trigger frequency mode.
2473:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_GetTriggerFrequencyMode
2474:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2475:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2476:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2477:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2478:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2479:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetTriggerFrequencyMode(const ADC_TypeDef *ADCx)
2480:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2481:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_LFTRIG));
2482:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2483:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2484:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2485:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
2486:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2487:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2488:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Sampling time common to all channels.
2489:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (on some other STM32 series, sampling time is channel wise)
2490:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2491:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         converted:
2492:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2493:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2494:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         setting).
2495:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2496:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         TS_temp, ...).
2497:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2498:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
2499:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
2500:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
2501:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
2502:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
2503:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2504:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2505:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         is required.
2506:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet.
2507:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2508:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2509:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2510:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on group regular.
2511:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_SetSamplingTimeCommonChannels\n
2512:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_SetSamplingTimeCommonChannels
2513:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2514:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2515:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2516:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2517:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2518:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2519:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2520:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2521:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2522:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2523:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2524:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2525:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2526:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2527:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2528:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTimeY
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 49


2529:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                           uint32_t SamplingTime)
2530:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2531:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
2532:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
2533:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              SamplingTime << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2534:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2535:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2536:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2537:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
2538:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2539:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2540:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Sampling time common to all channels.
2541:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (on some other STM32 series, sampling time is channel wise)
2542:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2543:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2544:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         this STM32 series.
2545:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_GetSamplingTimeCommonChannels\n
2546:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_GetSamplingTimeCommonChannels
2547:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2548:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2549:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2550:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2551:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2552:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2553:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2554:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2555:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2556:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2557:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2558:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2559:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2560:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2561:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(const ADC_TypeDef *ADCx, uint32_t Sam
2562:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2563:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->SMPR, ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_S
2564:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2565:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2566:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2567:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
2569:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2570:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2571:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
2572:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
2573:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2574:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2575:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2576:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
2577:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2578:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         external interrupt line).
2579:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
2580:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         also set trigger polarity to rising edge
2581:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
2582:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         STM32 series having this setting set by HW default value).
2583:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
2584:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
2585:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, ADC trigger frequency mode must be set
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 50


2586:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         in function of frequency of ADC group regular conversion trigger.
2587:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to description of function
2588:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_SetTriggerFrequencyMode().
2589:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2590:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2591:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2592:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2593:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
2594:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
2595:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
2596:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2597:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2598:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2599:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2600:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2601:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2602:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2603:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
2604:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
2605:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2606:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2607:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2608:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2609:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2610:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
2611:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2612:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2613:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2614:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
2615:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2616:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         external interrupt line).
2617:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
2618:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         internal (SW start) or external, without detail
2619:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2620:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (equivalent to
2621:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
2622:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
2623:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2624:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2625:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
2626:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
2627:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2628:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2629:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2630:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2631:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2632:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2633:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2634:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
2635:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
2636:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2637:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2638:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(const ADC_TypeDef *ADCx)
2639:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2640:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
2641:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2642:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 51


2643:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
2644:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t shift_exten = ((trigger_source & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS -
2645:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2646:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
2647:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
2648:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return ((trigger_source
2649:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> shift_exten) & ADC_CFGR1_EXTSEL)
2650:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> shift_exten) & ADC_CFGR1_EXTEN)
2651:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****          );
2652:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2653:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2654:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2655:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
2656:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         or external.
2657:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
2658:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2659:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
2660:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
2661:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2662:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2663:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2664:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2665:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
2666:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2667:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN)) 
2668:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2669:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2670:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2671:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
2672:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2673:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2674:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2675:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
2676:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
2677:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2678:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
2679:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2680:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2681:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2682:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2683:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2684:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
2685:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2686:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
2687:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2688:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2689:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2690:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
2691:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2692:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
2693:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2694:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2695:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2696:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2697:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2698:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2699:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(const ADC_TypeDef *ADCx)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 52


2700:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2701:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
2702:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2703:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2704:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2705:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer configuration flexibility.
2706:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2707:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2708:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         available:
2709:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2710:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           sequencer length and each rank
2711:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           affectation to a channel are configurable.
2712:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Refer to description of function
2713:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2714:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2715:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2716:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           are fixed by channel HW number.
2717:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Refer to description of function
2718:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2719:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2720:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2721:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2722:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2723:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2724:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2725:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         for more details.
2726:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2727:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2728:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
2729:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2730:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2731:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Configurability This parameter can be one of the following values:
2732:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2733:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2734:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2735:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2736:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerConfigurable(ADC_TypeDef *ADCx, uint32_t Configurabilit
2737:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2738:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD, Configurability);
2739:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2740:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2741:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2742:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer configuration flexibility.
2743:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2744:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2745:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         available:
2746:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2747:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           sequencer length and each rank
2748:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           affectation to a channel are configurable.
2749:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Refer to description of function
2750:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2751:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2752:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2753:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           are fixed by channel HW number.
2754:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Refer to description of function
2755:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2756:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 53


2757:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2758:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2759:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2760:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2761:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2762:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerConfigurable(const ADC_TypeDef *ADCx)
2763:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2764:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD));
2765:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2766:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2767:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2768:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
2769:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2770:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2771:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2772:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2773:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           are configurable.
2774:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           This function performs configuration of:
2775:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2776:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2777:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2778:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2779:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2780:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2781:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2782:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2783:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           are defined by channel number.
2784:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           This function performs configuration of:
2785:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2786:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2787:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2788:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2789:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2790:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2791:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             highest channel number).
2792:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2793:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2794:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           To set scan direction differently, refer to function
2795:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerScanDirection().
2796:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2797:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2798:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         are available, they can be chosen using
2799:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2800:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2801:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2802:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2803:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2804:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2805:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2806:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2807:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         for more details.
2808:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2809:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2810:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2811:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2812:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2813:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on group regular.
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 54


2814:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerLength\n
2815:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerLength\n
2816:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerLength\n
2817:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerLength\n
2818:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerLength\n
2819:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerLength\n
2820:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerLength\n
2821:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerLength
2822:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2823:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
2824:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2825:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2826:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2827:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2828:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2829:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2830:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2831:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2832:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2833:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2834:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
2835:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2836:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, SequencerNbRanks);
2837:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2838:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2839:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2840:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
2841:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2842:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2843:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2844:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2845:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           are configurable.
2846:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           This function retrieves:
2847:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2848:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2849:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2850:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2851:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2852:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2853:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2854:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2855:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           are defined by channel number.
2856:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           This function retrieves:
2857:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2858:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2859:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2860:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2861:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2862:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2863:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             highest channel number).
2864:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2865:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2866:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *          To set scan direction differently, refer to function
2867:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *          @ref LL_ADC_REG_SetSequencerScanDirection().
2868:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2869:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2870:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         are available, they can be chosen using
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 55


2871:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2872:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2873:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2874:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerLength\n
2875:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerLength\n
2876:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerLength\n
2877:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerLength\n
2878:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerLength\n
2879:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerLength\n
2880:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerLength\n
2881:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerLength
2882:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2883:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2884:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2885:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2886:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2887:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2888:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2889:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2890:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2891:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2892:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2893:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(const ADC_TypeDef *ADCx)
2894:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2895:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   __IO uint32_t channels_ranks = READ_BIT(ADCx->CHSELR, ADC_CHSELR_SQ_ALL);
2896:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t sequencer_length = LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS;
2897:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t rank_index;
2898:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t rank_shifted;
2899:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2900:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Parse register for end of sequence identifier */
2901:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Note: Value "0xF0UL" corresponds to bitfield of sequencer 2nd rank
2902:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****            (ADC_CHSELR_SQ2), value "4" to length of end of sequence
2903:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****            identifier (0xF) */
2904:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   for (rank_index = 0U; rank_index <= (28U - 4U); rank_index += 4U)
2905:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   {
2906:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     rank_shifted = (uint32_t)(0xF0UL << rank_index);
2907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     if ((channels_ranks & rank_shifted) == rank_shifted)
2908:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     {
2909:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       sequencer_length = rank_shifted;
2910:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       break;
2911:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     }
2912:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   }
2913:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2914:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return sequencer_length;
2915:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2916:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2917:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2918:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
2919:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2920:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         to mode not fully configurable,
2921:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2922:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On some other STM32 series, this setting is not available and
2923:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         the default scan direction is forward.
2924:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2925:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2926:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2927:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 56


2928:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2929:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2930:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2931:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         for more details.
2932:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2933:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2934:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
2935:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
2936:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2937:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
2938:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2939:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2940:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2941:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2942:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
2943:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2944:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
2945:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2946:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2947:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2948:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
2949:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2950:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         to mode not fully configurable,
2951:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2952:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On some other STM32 series, this setting is not available and
2953:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         the default scan direction is forward.
2954:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
2955:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2956:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2957:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2958:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2959:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2960:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(const ADC_TypeDef *ADCx)
2961:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2962:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
2963:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
2964:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2965:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2966:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
2967:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2968:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         number of ranks.
2969:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
2970:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2971:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2972:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
2973:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
2974:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2975:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2976:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2977:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2978:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2979:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
2980:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2981:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2982:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2983:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
2984:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 57


2985:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
2986:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
2987:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2988:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2989:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         number of ranks.
2990:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2991:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
2992:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2993:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2994:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2995:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
2996:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(const ADC_TypeDef *ADCx)
2997:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
2998:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
2999:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3000:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3001:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3002:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3003:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         scan sequence rank.
3004:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   This function performs configuration of:
3005:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3006:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3007:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3008:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3009:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         affectation to a channel are configurable.
3010:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3011:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3012:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3013:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3014:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3015:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         enabled separately.
3016:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3017:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3018:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3019:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3020:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3021:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3022:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3023:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3024:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         for more details.
3025:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3026:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
3027:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3028:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on group regular.
3029:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerRanks\n
3030:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerRanks\n
3031:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerRanks\n
3032:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerRanks\n
3033:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerRanks\n
3034:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerRanks\n
3035:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerRanks\n
3036:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerRanks
3037:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3038:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3039:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3040:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3041:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 58


3042:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3043:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3044:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3045:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3046:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3047:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3048:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3049:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3050:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3051:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3052:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3053:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3054:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3055:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3056:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3057:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3058:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3059:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3060:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3061:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3062:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3063:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3064:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3065:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3066:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3067:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3068:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3069:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3070:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3071:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3072:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
3073:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3074:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3075:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3076:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3077:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
3078:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3079:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3080:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CHSELR,
3081:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3082:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK_SEQ) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
3083:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
3084:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3085:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3086:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3087:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3088:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         scan sequence rank.
3089:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3090:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3091:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         affectation to a channel are configurable.
3092:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3093:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3094:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3095:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3096:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3097:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3098:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 59


3099:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3100:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3101:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3102:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           as parameter for another function.
3103:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3104:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           process the returned value with the helper macro
3105:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3106:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerRanks\n
3107:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerRanks\n
3108:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerRanks\n
3109:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerRanks\n
3110:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerRanks\n
3111:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerRanks\n
3112:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerRanks\n
3113:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerRanks
3114:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3115:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3116:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3117:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3118:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3119:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3120:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3121:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3122:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3123:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3124:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3125:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3126:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3127:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3128:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3129:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3130:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3131:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3132:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3133:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3134:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3135:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3136:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3137:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3138:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3139:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3140:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3141:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3142:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3143:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3144:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3145:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3146:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3147:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3148:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3149:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3150:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
3151:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3152:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->CHSELR,
3153:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                               ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
3154:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
3155:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                     ) << (ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 60


3156:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                    );
3157:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3158:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3159:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3160:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
3161:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         channel number.
3162:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   This function performs:
3163:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3164:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3165:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3166:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
3167:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           configuration.
3168:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3169:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3170:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         are available, they can be chosen using
3171:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3172:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3173:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3174:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3175:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3176:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3177:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3178:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3179:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3180:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3181:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3182:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         for more details.
3183:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3184:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3185:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3186:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3187:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         enabled separately.
3188:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3189:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3190:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
3191:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3192:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on group regular.
3193:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   One or several values can be selected.
3194:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3195:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
3196:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
3197:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
3198:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
3199:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
3200:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
3201:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
3202:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
3203:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
3204:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
3205:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
3206:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
3207:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
3208:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
3209:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
3210:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
3211:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
3212:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 61


3213:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
3214:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3215:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3216:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3217:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3218:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3219:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3220:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3221:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3222:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3223:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3224:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3225:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3226:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3227:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3228:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3229:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3230:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3231:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3232:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3233:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3234:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3235:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3236:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3237:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3238:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3239:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3240:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
3241:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3242:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
3243:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3244:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3245:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3246:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3247:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3248:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3249:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3250:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
3251:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         channel number.
3252:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   This function performs:
3253:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3254:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3255:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
3257:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           configuration.
3258:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3259:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3260:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         are available, they can be chosen using
3261:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3262:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3263:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3264:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3265:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3266:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3267:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3268:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3269:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 62


3270:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3271:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3272:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         for more details.
3273:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3274:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3275:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3276:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3277:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         enabled separately.
3278:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3279:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3280:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
3281:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3282:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on group regular.
3283:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   One or several values can be selected.
3284:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3285:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
3286:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
3287:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
3288:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
3289:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
3290:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
3291:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
3292:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
3293:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
3294:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
3295:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
3296:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
3297:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
3298:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
3299:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
3300:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
3301:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
3302:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
3303:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
3304:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3305:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3306:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3307:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3308:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3309:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3310:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3311:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3312:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3313:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3314:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3315:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3316:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3317:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3318:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3319:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3320:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3321:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3322:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3323:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3324:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3325:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3326:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 63


3327:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3328:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3329:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3330:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
3331:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3332:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
3333:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3334:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3336:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3337:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3338:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3339:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3340:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
3341:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         channel number.
3342:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   This function performs:
3343:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3344:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3345:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3346:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
3347:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           configuration.
3348:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3349:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3350:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         are available, they can be chosen using
3351:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3352:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3353:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3354:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3355:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3356:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3357:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3358:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3359:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3360:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3361:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3362:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         for more details.
3363:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3364:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3365:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3366:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3367:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         enabled separately.
3368:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3369:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3370:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
3371:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3372:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on group regular.
3373:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   One or several values can be selected.
3374:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3375:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
3376:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
3377:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
3378:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
3379:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
3380:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
3381:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
3382:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
3383:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 64


3384:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
3385:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
3386:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
3387:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
3388:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
3389:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
3390:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
3391:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
3392:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
3393:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
3394:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3395:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3396:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3397:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3398:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3399:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3400:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3401:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3402:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3403:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3404:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3405:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3406:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3407:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3408:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3409:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3410:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3411:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3412:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3413:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3414:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3415:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3416:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3417:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3418:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3419:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3420:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
3421:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3422:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
3423:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3424:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3425:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3426:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3427:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3428:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3429:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3430:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
3431:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         channel number.
3432:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   This function performs:
3433:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
3434:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3435:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3436:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3437:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3438:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         are available, they can be chosen using
3439:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3440:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 65


3441:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3442:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3443:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3444:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3445:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3446:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3447:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         enabled separately.
3448:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3449:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3450:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
3451:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3452:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on group regular.
3453:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   One or several values can be retrieved.
3454:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3455:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
3456:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
3457:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
3458:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
3459:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
3460:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
3461:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
3462:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
3463:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
3464:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
3465:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
3466:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
3467:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
3468:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
3469:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
3470:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
3471:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
3472:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
3473:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
3474:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3475:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3476:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3477:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3478:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3479:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3480:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3481:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3482:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3483:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3484:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3485:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3486:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3487:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3488:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3489:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3490:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3491:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3492:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3493:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3494:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3495:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3496:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3497:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 66


3498:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3499:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3500:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3501:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(const ADC_TypeDef *ADCx)
3502:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3503:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t channels_bitfield = (uint32_t)READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
3504:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3505:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return ((((channels_bitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_CH
3506:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_
3507:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_
3508:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_
3509:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_
3510:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_
3511:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_
3512:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_
3513:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_
3514:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_
3515:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_AD
3516:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_AD
3517:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_AD
3518:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_AD
3519:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_AD
3520:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_AD
3521:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_AD
3522:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_AD
3523:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL18) >> ADC_CHSELR_CHSEL18_BITOFFSET_POS) * LL_AD
3524:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL19) >> ADC_CHSELR_CHSEL19_BITOFFSET_POS) * LL_AD
3525:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****          );
3526:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3527:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3528:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3529:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3530:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3531:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3532:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3533:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           conversions launched successively automatically.
3534:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3535:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3536:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3537:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
3538:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
3539:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
3540:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3541:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3542:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3543:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3544:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
3545:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3546:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3547:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3548:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
3549:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3550:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3551:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3552:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3553:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3554:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 67


3555:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3556:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           conversions launched successively automatically.
3557:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
3558:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3559:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3560:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3561:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3562:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3563:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(const ADC_TypeDef *ADCx)
3564:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3565:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
3566:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3567:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3569:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3570:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3571:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3572:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         mode:
3573:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3574:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3575:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           ADC conversions) is reached.
3576:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3577:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3578:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3579:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           ADC conversions).
3580:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3581:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3582:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         mode non-circular:
3583:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3584:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3585:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3586:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3587:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3588:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3589:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
3590:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
3591:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
3592:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
3593:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3594:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3595:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3596:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3597:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3598:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
3599:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3600:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3601:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3602:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
3603:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3604:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3605:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3606:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3607:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3608:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3609:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         mode:
3610:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3611:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 68


3612:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           ADC conversions) is reached.
3613:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3614:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3615:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3616:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           ADC conversions).
3617:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3618:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3619:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         mode non-circular:
3620:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3621:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3622:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3623:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3624:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3625:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
3626:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
3627:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3628:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3629:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3630:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3631:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3632:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3633:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(const ADC_TypeDef *ADCx)
3634:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3635:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
3636:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3637:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3638:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3639:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3640:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         data preserved or overwritten.
3641:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3642:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         other devices without this feature have a behavior
3643:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         equivalent to data overwritten.
3644:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3645:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3646:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         overrun should be set to data overwritten.
3647:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3648:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
3649:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
3650:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
3651:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3652:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3653:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3654:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3655:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
3656:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3657:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3658:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3659:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
3660:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3661:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3662:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3663:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3664:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         data preserved or overwritten.
3665:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
3666:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3667:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3668:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 69


3669:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3670:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3671:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(const ADC_TypeDef *ADCx)
3672:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3673:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
3674:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3675:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3676:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3677:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
3678:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3679:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3680:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
3681:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
3682:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3683:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3684:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3685:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
3686:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Unit: ADC clock cycles.
3687:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3688:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3689:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
3690:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         converted:
3691:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
3692:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
3693:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         setting).
3694:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
3695:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         TS_temp, ...).
3696:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3697:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3698:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         this STM32 series.
3699:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
3700:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
3701:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         is required.
3702:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet.
3703:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3704:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
3705:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3706:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on group regular.
3707:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_SetChannelSamplingTime\n
3708:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_SetChannelSamplingTime\n
3709:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_SetChannelSamplingTime\n
3710:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_SetChannelSamplingTime\n
3711:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_SetChannelSamplingTime\n
3712:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_SetChannelSamplingTime\n
3713:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_SetChannelSamplingTime\n
3714:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_SetChannelSamplingTime\n
3715:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_SetChannelSamplingTime\n
3716:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_SetChannelSamplingTime\n
3717:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_SetChannelSamplingTime\n
3718:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_SetChannelSamplingTime\n
3719:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_SetChannelSamplingTime\n
3720:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_SetChannelSamplingTime\n
3721:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_SetChannelSamplingTime\n
3722:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_SetChannelSamplingTime\n
3723:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_SetChannelSamplingTime\n
3724:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_SetChannelSamplingTime\n
3725:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_SetChannelSamplingTime
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 70


3726:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3727:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3728:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3729:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3730:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3731:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3732:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3733:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3734:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3735:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3736:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3737:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3738:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3739:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3740:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3741:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3742:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3743:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3744:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3745:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3746:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3747:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3748:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3749:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3750:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3751:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3752:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3753:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3754:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3755:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
3756:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3757:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
3758:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3759:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3760:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3761:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
3762:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
3763:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
3764:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****             );
3765:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3766:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3767:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3768:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
3769:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Unit: ADC clock cycles.
3770:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3771:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3772:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3773:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3774:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         this STM32 series.
3775:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_GetChannelSamplingTime\n
3776:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_GetChannelSamplingTime\n
3777:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_GetChannelSamplingTime\n
3778:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_GetChannelSamplingTime\n
3779:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_GetChannelSamplingTime\n
3780:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_GetChannelSamplingTime\n
3781:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_GetChannelSamplingTime\n
3782:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_GetChannelSamplingTime\n
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 71


3783:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_GetChannelSamplingTime\n
3784:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_GetChannelSamplingTime\n
3785:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_GetChannelSamplingTime\n
3786:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_GetChannelSamplingTime\n
3787:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_GetChannelSamplingTime\n
3788:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_GetChannelSamplingTime\n
3789:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_GetChannelSamplingTime\n
3790:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_GetChannelSamplingTime\n
3791:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_GetChannelSamplingTime\n
3792:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_GetChannelSamplingTime\n
3793:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_GetChannelSamplingTime
3794:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3795:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3796:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3797:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3798:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3799:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3800:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3801:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3802:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3803:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3804:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3805:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3806:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3807:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3808:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3809:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3810:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3811:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3812:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3813:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3814:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3815:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3816:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3817:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3818:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3819:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3820:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3821:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3822:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3823:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3824:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(const ADC_TypeDef *ADCx, uint32_t Channel)
3825:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3826:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
3827:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3828:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
3829:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* and shift it to position 0.                                                 */
3830:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
3831:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                   >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NU
3832:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                        + ADC_SMPR_SMPSEL0_BITOFFSET_POS)
3833:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                       & 0x1FUL));
3834:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3835:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
3836:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return ((~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
3837:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****           | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2));
3838:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3839:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 72


3840:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3841:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
3842:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3843:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3844:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
3845:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
3846:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3847:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3848:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3849:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
3850:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
3851:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on ADC group regular.
3852:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
3853:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         is enabled.
3854:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
3855:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
3856:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
3857:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3858:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         instance:
3859:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3860:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3861:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3862:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3863:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             ADC resolution configured).
3864:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3865:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3866:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3867:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3868:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             be selected. For example:
3869:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3870:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3871:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             groups regular and injected).
3872:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3873:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3874:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3875:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3876:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             ADC resolution configured).
3877:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3878:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
3879:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
3880:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
3881:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
3882:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
3883:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
3884:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
3885:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3886:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3887:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3888:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3889:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3890:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
3891:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3892:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3893:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
3894:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
3895:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
3896:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 73


3897:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
3898:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
3899:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
3900:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
3901:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
3902:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
3903:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3904:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3905:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3906:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3908:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3909:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3910:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3911:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
3912:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG
3913:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
3914:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
3915:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
3916:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DACCH1_REG
3917:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
3918:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
3919:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
3920:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
3921:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
3922:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
3923:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
3924:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3925:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   __IO uint32_t *preg;
3926:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3927:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   if (AWDy == LL_ADC_AWD1)
3928:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   {
3929:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1, 0UL);
3930:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   }
3931:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   else
3932:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   {
3933:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->AWD2CR,
3934:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
3935:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   }
3936:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3937:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(*preg,
3938:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
3939:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              AWDChannelGroup & AWDy);
3940:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
3941:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
3942:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
3943:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
3944:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3945:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3946:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3947:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3948:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3949:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3950:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3951:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           as parameter for another function.
3952:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3953:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           process the returned value with the helper macro
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 74


3954:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3955:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
3956:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           one channel.
3957:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3958:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         instance:
3959:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3960:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3961:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3962:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3963:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             ADC resolution configured).
3964:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3965:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3966:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3967:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3968:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             be selected. For example:
3969:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3970:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3971:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             groups regular and injected).
3972:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3973:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3974:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3975:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3976:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             ADC resolution configured).
3977:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3978:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
3979:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3980:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on group regular.
3981:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
3982:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
3983:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
3984:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
3985:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
3986:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
3987:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3988:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3989:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
3990:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
3991:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *
3992:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
3993:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
3994:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
3995:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
3996:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             by bitfield.
3997:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3998:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3999:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
4000:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
4001:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
4002:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
4003:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
4004:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
4005:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
4006:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
4007:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
4008:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
4009:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
4010:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 75


4011:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
4012:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
4013:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
4014:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
4015:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
4016:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
4017:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
4018:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
4019:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG
4020:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4021:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(const ADC_TypeDef *ADCx, uint32_t AWDy)
4022:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4023:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   __IO const uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1,
4024:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_
4025:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
4026:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                       * ADC_AWD_CR12_REGOFFSETGAP_VAL));
4027:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4028:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   uint32_t analog_wd_monit_channels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
4029:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4030:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* If "analog_wd_monit_channels" == 0, then the selected AWD is disabled       */
4031:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
4032:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
4033:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* or a single channel.                                                     */
4034:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   if (analog_wd_monit_channels != 0UL)
4035:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   {
4036:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
4037:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     {
4038:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_CFGR1_AWD1SGL) == 0UL)
4039:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       {
4040:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
4041:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****         analog_wd_monit_channels = ((analog_wd_monit_channels
4042:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                      | (ADC_AWD_CR23_CHANNEL_MASK)
4043:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                     )
4044:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                     & (~(ADC_CFGR1_AWD1CH))
4045:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                    );
4046:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       }
4047:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       else
4048:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       {
4049:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****         /* AWD monitoring a single channel */
4050:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
4051:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                     | (ADC_AWD2CR_AWD2CH_0 << (analog_wd_monit_channels >> ADC_CFGR
4052:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                    );
4053:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       }
4054:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     }
4055:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     else
4056:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     {
4057:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
4058:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       {
4059:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
4060:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****         analog_wd_monit_channels = (ADC_AWD_CR23_CHANNEL_MASK
4061:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                     | (ADC_CFGR1_AWD1EN)
4062:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                    );
4063:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       }
4064:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       else
4065:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       {
4066:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****         /* AWD monitoring a single channel */
4067:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 76


4068:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
4069:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                     | (ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
4070:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                     | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(analog_wd_monit_channels) << 
4071:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                    );
4072:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****       }
4073:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****     }
4074:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   }
4075:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4076:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return analog_wd_monit_channels;
4077:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4078:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4079:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4080:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
4081:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         high and low.
4082:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
4083:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
4084:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4085:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4086:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
4087:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
4088:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         instance:
4089:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4090:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4091:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
4092:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4093:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             ADC resolution configured).
4094:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4095:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4096:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4097:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4098:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             be selected. For example:
4099:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4100:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4101:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             groups regular and injected).
4102:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4103:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4104:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4105:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4106:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             ADC resolution configured).
4107:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
4108:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
4109:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
4110:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
4111:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Examples:
4112:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4113:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
4114:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
4115:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4116:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
4117:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
4118:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4119:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
4120:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
4121:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4122:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
4123:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4124:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on group regular.
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 77


4125:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_ConfigAnalogWDThresholds\n
4126:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_ConfigAnalogWDThresholds\n
4127:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_ConfigAnalogWDThresholds\n
4128:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_ConfigAnalogWDThresholds\n
4129:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_ConfigAnalogWDThresholds\n
4130:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_ConfigAnalogWDThresholds
4131:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4132:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4133:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4134:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4135:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4136:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
4137:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
4138:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
4139:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4140:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
4141:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
4142:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4143:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
4144:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
4145:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* "AWDy".                                                                  */
4146:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
4147:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4148:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4149:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4150:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                               >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4151:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4152:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                 >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL))
4153:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                             );
4154:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4155:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(*preg,
4156:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1,
4157:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
4158:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4159:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4160:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4161:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
4162:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         high or low.
4163:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
4164:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
4165:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4166:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4167:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
4168:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
4169:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         instance:
4170:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4171:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4172:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
4173:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4174:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             ADC resolution configured).
4175:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4176:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4177:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4178:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4179:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             be selected. For example:
4180:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4181:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 78


4182:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             groups regular and injected).
4183:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4184:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4185:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4186:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4187:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *             ADC resolution configured).
4188:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
4189:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
4190:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
4191:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
4192:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Examples:
4193:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4194:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
4195:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
4196:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4197:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
4198:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
4199:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4200:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
4201:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
4202:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
4203:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
4204:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
4205:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on ADC group regular.
4206:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_SetAnalogWDThresholds\n
4207:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_SetAnalogWDThresholds\n
4208:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_SetAnalogWDThresholds\n
4209:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_SetAnalogWDThresholds\n
4210:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_SetAnalogWDThresholds\n
4211:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_SetAnalogWDThresholds
4212:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4213:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4214:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4215:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4216:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4217:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
4218:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
4219:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
4220:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
4221:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
4222:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4223:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
4224:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
4225:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4226:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
4227:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
4228:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
4229:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
4230:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4231:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4232:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4233:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                               >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4234:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4235:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                 >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL)));
4236:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4237:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(*preg,
4238:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              AWDThresholdsHighLow,
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 79


4239:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
4240:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4241:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4242:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4243:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
4244:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
4245:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         concatenated.
4246:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
4247:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
4248:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         using helper macro:
4249:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
4250:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4251:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4252:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
4253:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_GetAnalogWDThresholds\n
4254:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_GetAnalogWDThresholds\n
4255:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_GetAnalogWDThresholds\n
4256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_GetAnalogWDThresholds\n
4257:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_GetAnalogWDThresholds\n
4258:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_GetAnalogWDThresholds
4259:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4260:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4261:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4262:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4263:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4264:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
4265:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
4266:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
4267:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
4268:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
4269:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4270:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(const ADC_TypeDef *ADCx,
4271:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                       uint32_t AWDy, uint32_t AWDThresholdsHighLow)
4272:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4273:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
4274:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
4275:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
4276:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
4277:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4278:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4279:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4280:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                     >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4281:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                    + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4282:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                                                       >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL
4283:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4284:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
4285:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_AWD1TR_LT1))
4286:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
4287:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_AWD1TR_LT1)));
4288:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4289:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4290:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4291:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
4292:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4293:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4294:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
4295:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 80


4296:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4297:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4298:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4299:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC oversampling scope.
4300:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4301:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
4302:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
4303:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_SetOverSamplingScope
4304:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4305:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
4306:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4307:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4308:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
4309:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4310:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
4311:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4312:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
4313:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4314:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4315:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4316:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC oversampling scope.
4317:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_GetOverSamplingScope
4318:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4319:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4320:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4321:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4322:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4323:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(const ADC_TypeDef *ADCx)
4324:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4325:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
4326:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4327:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4328:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4329:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
4330:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on the selected ADC group.
4331:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4332:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4333:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           are done from 1 trigger)
4334:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           needs a trigger)
4336:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4337:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
4338:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
4339:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_SetOverSamplingDiscont
4340:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4341:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
4342:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4343:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4344:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
4345:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4346:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
4347:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4348:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
4349:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4350:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4351:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4352:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 81


4353:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on the selected ADC group.
4354:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4355:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4356:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           are done from 1 trigger)
4357:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4358:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           needs a trigger)
4359:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_GetOverSamplingDiscont
4360:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4361:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4362:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4363:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4364:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4365:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(const ADC_TypeDef *ADCx)
4366:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4367:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
4368:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4369:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4370:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4371:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Set ADC oversampling
4372:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
4373:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - ratio
4374:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - shift
4375:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4376:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
4377:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be disabled.
4378:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
4379:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
4380:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4381:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
4382:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4383:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4384:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4385:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4386:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4387:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4388:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4389:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4390:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
4391:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4392:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4393:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4394:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4395:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4396:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4397:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4398:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4399:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4400:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
4401:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4402:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
4403:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4404:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
4405:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4406:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4407:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4408:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
4409:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 82


4410:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4411:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
4412:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4413:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4414:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4415:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4416:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4417:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4418:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4419:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4420:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4421:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(const ADC_TypeDef *ADCx)
4422:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4423:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
4424:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4425:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4426:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4427:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
4428:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
4429:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4430:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
4431:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4432:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4433:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4434:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4435:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4436:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4437:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4438:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4439:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4440:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4441:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(const ADC_TypeDef *ADCx)
4442:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4443:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
4444:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4445:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4446:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4447:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
4448:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4449:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4450:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
4451:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
4452:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4453:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4454:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4455:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
4456:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, there are three possibilities to enable
4457:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         the voltage regulator:
4458:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - by enabling it manually
4459:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           using function @ref LL_ADC_EnableInternalRegulator().
4460:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - by launching a calibration
4461:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           using function @ref LL_ADC_StartCalibration().
4462:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - by enabling the ADC
4463:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           using function @ref LL_ADC_Enable().
4464:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
4465:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
4466:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 83


4467:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet, parameter "tADCVREG_STUP".
4468:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
4469:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4470:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
4471:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4472:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
4473:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4474:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
4475:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4476:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
4477:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4478:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4479:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4480:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4481:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4482:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4483:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_ADVREGEN);
4484:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4485:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4486:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4487:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
4488:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4489:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
4490:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4491:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
4492:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4493:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
4494:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4495:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
4496:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4497:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
4498:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4499:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4500:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4501:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
4502:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
4503:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4504:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
4505:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4506:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(const ADC_TypeDef *ADCx)
4507:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4508:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
4509:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4510:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4511:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4512:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
4513:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
4514:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
4515:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC conversion start.
4516:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
4517:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4518:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4519:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4520:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4521:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
4522:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
4523:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 84


4524:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4525:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
4526:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4527:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
4528:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4529:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4530:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4531:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4532:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4533:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4534:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_ADEN);
4535:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4536:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4537:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4538:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
4539:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4540:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
4541:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
4542:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         on group regular.
4543:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
4544:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4545:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
4546:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4547:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
4548:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4549:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4550:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4551:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4552:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4553:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4554:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_ADDIS);
4555:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4556:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4557:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4558:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
4559:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4560:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4561:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4562:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
4563:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4564:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
4565:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4566:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(const ADC_TypeDef *ADCx)
  86              		.loc 2 4566 26 is_stmt 1 discriminator 2 view .LVU21
  87              	.LBB33:
4567:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
  88              		.loc 2 4568 3 discriminator 2 view .LVU22
  89              		.loc 2 4568 12 is_stmt 0 discriminator 2 view .LVU23
  90 0022 9A68     		ldr	r2, [r3, #8]
  91 0024 3100     		movs	r1, r6
  92 0026 1140     		ands	r1, r2
  93              		.loc 2 4568 68 discriminator 2 view .LVU24
  94 0028 1642     		tst	r6, r2
  95 002a 09D0     		beq	.L3
  96              	.LVL5:
  97              		.loc 2 4568 68 discriminator 2 view .LVU25
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 85


  98              	.LBE33:
  99              	.LBE32:
 125:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   {
 126:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Set ADC state */
 127:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 128:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY,
 129:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 130:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 131:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Manage settings impacting calibration                                  */
 132:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* - Disable ADC mode auto power-off                                      */
 133:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* - Disable ADC DMA transfer request during calibration                  */
 134:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Note: Specificity of this STM32 series: Calibration factor is          */
 135:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /*       available in data register and also transferred by DMA.          */
 136:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /*       To not insert ADC calibration factor among ADC conversion data   */
 137:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /*       in array variable, DMA transfer must be disabled during          */
 138:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /*       calibration.                                                     */
 139:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     backup_setting_cfgr1 = READ_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC
 140:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC_CFGR1_AUTOFF);
 141:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 142:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* ADC calibration procedure */
 143:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Note: Perform an averaging of 8 calibrations for optimized accuracy */
 144:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     for (calibration_index = 0UL; calibration_index < 8UL; calibration_index++)
 145:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     {
 146:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       /* Start ADC calibration */
 147:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       LL_ADC_StartCalibration(hadc->Instance);
 148:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 149:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       /* Wait for calibration completion */
 150:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       while (LL_ADC_IsCalibrationOnGoing(hadc->Instance) != 0UL)
 151:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       {
 152:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         wait_loop_index++;
 153:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 154:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         {
 155:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
 156:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State,
 157:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****                             HAL_ADC_STATE_BUSY_INTERNAL,
 158:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****                             HAL_ADC_STATE_ERROR_INTERNAL);
 159:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 160:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 161:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 162:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****           return HAL_ERROR;
 163:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         }
 164:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       }
 165:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 166:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       calibration_factor_accumulated += LL_ADC_GetCalibrationFactor(hadc->Instance);
 167:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     }
 168:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Compute average */
 169:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     calibration_factor_accumulated /= calibration_index;
 170:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 171:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Apply calibration factor (requires ADC enable and disable process) */
 172:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     LL_ADC_Enable(hadc->Instance);
 173:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 174:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Case of ADC clocked at low frequency: Delay required between ADC enable and disable actions 
 175:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     if (LL_ADC_GetClock(hadc->Instance) == LL_ADC_CLOCK_ASYNC)
 176:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     {
 177:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       adc_clk_async_presc = LL_ADC_GetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 178:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 179:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       if (adc_clk_async_presc >= LL_ADC_CLOCK_ASYNC_DIV16)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 86


 180:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       {
 181:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         /* Delay loop initialization and execution */
 182:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         /* Delay depends on ADC clock prescaler: Compute ADC clock asynchronous prescaler to decima
 183:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         delay_cpu_cycles = (1UL << ((adc_clk_async_presc >> ADC_CCR_PRESC_Pos) - 3UL));
 184:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         /* Divide variable by 2 to compensate partially CPU processing cycles */
 185:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         delay_cpu_cycles >>= 1UL;
 186:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 187:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         while (delay_cpu_cycles != 0UL)
 188:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         {
 189:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****           delay_cpu_cycles--;
 190:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         }
 191:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       }
 192:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     }
 193:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 194:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     LL_ADC_SetCalibrationFactor(hadc->Instance, calibration_factor_accumulated);
 195:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     LL_ADC_Disable(hadc->Instance);
 196:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 197:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Wait for ADC effectively disabled before changing configuration */
 198:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Get tick count */
 199:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 200:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 201:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     while (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 202:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     {
 203:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
 204:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       {
 205:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
 206:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         if (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 207:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         {
 208:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
 209:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 210:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 211:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****           /* Set ADC error code to ADC peripheral internal error */
 212:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 213:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 214:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****           return HAL_ERROR;
 215:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         }
 216:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       }
 217:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     }
 218:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 219:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Restore configuration after calibration */
 220:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CFGR1, backup_setting_cfgr1);
 221:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 222:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Set ADC state */
 223:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 224:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 225:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 226:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   }
 227:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   else
 228:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   {
 229:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 100              		.loc 1 229 5 is_stmt 1 view .LVU26
 101 002c A36D     		ldr	r3, [r4, #88]
 102 002e 1022     		movs	r2, #16
 103 0030 1343     		orrs	r3, r2
 104 0032 A365     		str	r3, [r4, #88]
 105              	.LVL6:
 106              	.L4:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 87


 230:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 231:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Note: No need to update variable "tmp_hal_status" here: already set    */
 232:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /*       to state "HAL_ERROR" by function disabling the ADC.              */
 233:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   }
 234:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 235:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 107              		.loc 1 235 3 view .LVU27
 108              		.loc 1 235 3 view .LVU28
 109 0034 5423     		movs	r3, #84
 110 0036 0022     		movs	r2, #0
 111 0038 E254     		strb	r2, [r4, r3]
 112              		.loc 1 235 3 view .LVU29
 236:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 237:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   return tmp_hal_status;
 113              		.loc 1 237 3 view .LVU30
 114              	.LVL7:
 115              	.L2:
 238:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** }
 116              		.loc 1 238 1 is_stmt 0 view .LVU31
 117 003a 2800     		movs	r0, r5
 118 003c 03B0     		add	sp, sp, #12
 119              		@ sp needed
 120              	.LVL8:
 121              		.loc 1 238 1 view .LVU32
 122 003e F0BD     		pop	{r4, r5, r6, r7, pc}
 123              	.LVL9:
 124              	.L3:
 127:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY,
 125              		.loc 1 127 5 is_stmt 1 view .LVU33
 126 0040 A26D     		ldr	r2, [r4, #88]
 127 0042 4748     		ldr	r0, .L20
 128              	.LVL10:
 127:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY,
 129              		.loc 1 127 5 is_stmt 0 view .LVU34
 130 0044 0240     		ands	r2, r0
 131 0046 0630     		adds	r0, r0, #6
 132 0048 FF30     		adds	r0, r0, #255
 133 004a 0243     		orrs	r2, r0
 134 004c A265     		str	r2, [r4, #88]
 139:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC_CFGR1_AUTOFF);
 135              		.loc 1 139 5 is_stmt 1 view .LVU35
 139:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC_CFGR1_AUTOFF);
 136              		.loc 1 139 28 is_stmt 0 view .LVU36
 137 004e DE68     		ldr	r6, [r3, #12]
 139:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC_CFGR1_AUTOFF);
 138              		.loc 1 139 26 view .LVU37
 139 0050 444A     		ldr	r2, .L20+4
 140 0052 1640     		ands	r6, r2
 141              	.LVL11:
 140:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 142              		.loc 1 140 5 is_stmt 1 view .LVU38
 143 0054 DA68     		ldr	r2, [r3, #12]
 144 0056 4448     		ldr	r0, .L20+8
 145 0058 0240     		ands	r2, r0
 146 005a DA60     		str	r2, [r3, #12]
 144:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     {
 147              		.loc 1 144 5 view .LVU39
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 88


 148              	.LVL12:
 108:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   uint32_t tickstart;
 149              		.loc 1 108 12 is_stmt 0 view .LVU40
 150 005c 0800     		movs	r0, r1
 144:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     {
 151              		.loc 1 144 5 view .LVU41
 152 005e 05E0     		b	.L5
 153              	.LVL13:
 154              	.L19:
 166:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     }
 155              		.loc 1 166 7 is_stmt 1 view .LVU42
 156              	.LBB34:
 157              	.LBI34:
2254:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
 158              		.loc 2 2254 26 view .LVU43
 159              	.LBB35:
2256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 160              		.loc 2 2256 3 view .LVU44
2256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 161              		.loc 2 2256 21 is_stmt 0 view .LVU45
 162 0060 B422     		movs	r2, #180
 163 0062 9A58     		ldr	r2, [r3, r2]
2256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 164              		.loc 2 2256 10 view .LVU46
 165 0064 7F23     		movs	r3, #127
 166              	.LVL14:
2256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 167              		.loc 2 2256 10 view .LVU47
 168 0066 1340     		ands	r3, r2
 169              	.LVL15:
2256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 170              		.loc 2 2256 10 view .LVU48
 171              	.LBE35:
 172              	.LBE34:
 166:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     }
 173              		.loc 1 166 38 view .LVU49
 174 0068 C018     		adds	r0, r0, r3
 175              	.LVL16:
 144:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     {
 176              		.loc 1 144 77 is_stmt 1 view .LVU50
 177 006a 0131     		adds	r1, r1, #1
 178              	.LVL17:
 179              	.L5:
 144:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     {
 180              		.loc 1 144 53 discriminator 1 view .LVU51
 181 006c 0729     		cmp	r1, #7
 182 006e 1DD8     		bhi	.L18
 147:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 183              		.loc 1 147 7 view .LVU52
 184 0070 2768     		ldr	r7, [r4]
 185              	.LVL18:
 186              	.LBB36:
 187              	.LBI36:
4569:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4570:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4571:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4572:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 89


4573:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
4574:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4575:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
4576:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4577:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(const ADC_TypeDef *ADCx)
4578:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4579:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
4580:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4581:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4582:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4583:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
4584:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
4585:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
4586:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
4587:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
4588:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
4589:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         On this STM32 series, ADC DMA transfer request should be disabled
4590:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         during calibration:
4591:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Calibration factor is available in data register
4592:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         and also transferred by DMA.
4593:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
4594:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
4595:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         calibration.
4596:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
4597:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
4598:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
4599:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
4600:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   In case of usage of feature auto power-off:
4601:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         This mode must be disabled during calibration
4602:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetLowPowerMode().
4603:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4604:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
4605:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4606:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
4607:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4608:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
4609:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4610:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
 188              		.loc 2 4610 22 view .LVU53
 189              	.LBB37:
4611:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4612:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4613:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4614:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4615:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 190              		.loc 2 4615 3 view .LVU54
 191 0072 BA68     		ldr	r2, [r7, #8]
 192 0074 3D4B     		ldr	r3, .L20+12
 193 0076 1A40     		ands	r2, r3
 194 0078 1833     		adds	r3, r3, #24
 195 007a 1343     		orrs	r3, r2
 196 007c BB60     		str	r3, [r7, #8]
 197              	.LVL19:
 198              	.L6:
 199              		.loc 2 4615 3 is_stmt 0 view .LVU55
 200              	.LBE37:
 201              	.LBE36:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 90


 150:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       {
 202              		.loc 1 150 58 is_stmt 1 view .LVU56
 150:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       {
 203              		.loc 1 150 46 is_stmt 0 view .LVU57
 204 007e 2368     		ldr	r3, [r4]
 205              	.LVL20:
 206              	.LBB38:
 207              	.LBI38:
4616:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4617:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_ADCAL);
4618:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4619:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4620:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4621:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC calibration state.
4622:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
4623:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4624:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
4625:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4626:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(const ADC_TypeDef *ADCx)
 208              		.loc 2 4626 26 is_stmt 1 view .LVU58
 209              	.LBB39:
4627:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4628:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
 210              		.loc 2 4628 3 view .LVU59
 211              		.loc 2 4628 12 is_stmt 0 view .LVU60
 212 0080 9A68     		ldr	r2, [r3, #8]
 213              		.loc 2 4628 70 view .LVU61
 214 0082 002A     		cmp	r2, #0
 215 0084 ECDA     		bge	.L19
 216              	.LVL21:
 217              		.loc 2 4628 70 view .LVU62
 218              	.LBE39:
 219              	.LBE38:
 152:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 220              		.loc 1 152 9 is_stmt 1 view .LVU63
 152:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 221              		.loc 1 152 24 is_stmt 0 view .LVU64
 222 0086 019B     		ldr	r3, [sp, #4]
 223 0088 0133     		adds	r3, r3, #1
 224 008a 0193     		str	r3, [sp, #4]
 153:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         {
 225              		.loc 1 153 9 is_stmt 1 view .LVU65
 153:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         {
 226              		.loc 1 153 29 is_stmt 0 view .LVU66
 227 008c 019A     		ldr	r2, [sp, #4]
 153:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         {
 228              		.loc 1 153 12 view .LVU67
 229 008e AE23     		movs	r3, #174
 230 0090 9B02     		lsls	r3, r3, #10
 231 0092 9A42     		cmp	r2, r3
 232 0094 F3D3     		bcc	.L6
 156:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****                             HAL_ADC_STATE_BUSY_INTERNAL,
 233              		.loc 1 156 11 is_stmt 1 view .LVU68
 234 0096 A36D     		ldr	r3, [r4, #88]
 235 0098 1222     		movs	r2, #18
 236 009a 9343     		bics	r3, r2
 237 009c 023A     		subs	r2, r2, #2
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 91


 238 009e 1343     		orrs	r3, r2
 239 00a0 A365     		str	r3, [r4, #88]
 160:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 240              		.loc 1 160 11 view .LVU69
 160:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 241              		.loc 1 160 11 view .LVU70
 242 00a2 5423     		movs	r3, #84
 243 00a4 0022     		movs	r2, #0
 244 00a6 E254     		strb	r2, [r4, r3]
 160:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 245              		.loc 1 160 11 view .LVU71
 162:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         }
 246              		.loc 1 162 11 view .LVU72
 162:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         }
 247              		.loc 1 162 18 is_stmt 0 view .LVU73
 248 00a8 0125     		movs	r5, #1
 249              	.LVL22:
 162:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         }
 250              		.loc 1 162 18 view .LVU74
 251 00aa C6E7     		b	.L2
 252              	.LVL23:
 253              	.L18:
 169:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 254              		.loc 1 169 5 is_stmt 1 view .LVU75
 169:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 255              		.loc 1 169 36 is_stmt 0 view .LVU76
 256 00ac FFF7FEFF 		bl	__aeabi_uidiv
 257              	.LVL24:
 172:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 258              		.loc 1 172 5 is_stmt 1 view .LVU77
 259 00b0 2268     		ldr	r2, [r4]
 260              	.LVL25:
 261              	.LBB40:
 262              	.LBI40:
4527:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
 263              		.loc 2 4527 22 view .LVU78
 264              	.LBB41:
4532:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 265              		.loc 2 4532 3 view .LVU79
 266 00b2 9368     		ldr	r3, [r2, #8]
 267 00b4 2D49     		ldr	r1, .L20+12
 268 00b6 0B40     		ands	r3, r1
 269 00b8 0121     		movs	r1, #1
 270 00ba 0B43     		orrs	r3, r1
 271 00bc 9360     		str	r3, [r2, #8]
 272              	.LVL26:
4532:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 273              		.loc 2 4532 3 is_stmt 0 view .LVU80
 274              	.LBE41:
 275              	.LBE40:
 175:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     {
 276              		.loc 1 175 5 is_stmt 1 view .LVU81
 175:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     {
 277              		.loc 1 175 29 is_stmt 0 view .LVU82
 278 00be 2268     		ldr	r2, [r4]
 279              	.LVL27:
 280              	.LBB42:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 92


 281              	.LBI42:
2218:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
 282              		.loc 2 2218 26 is_stmt 1 view .LVU83
 283              	.LBB43:
2220:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 284              		.loc 2 2220 3 view .LVU84
2220:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 285              		.loc 2 2220 21 is_stmt 0 view .LVU85
 286 00c0 1169     		ldr	r1, [r2, #16]
 287              	.LVL28:
2220:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 288              		.loc 2 2220 21 view .LVU86
 289              	.LBE43:
 290              	.LBE42:
 175:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     {
 291              		.loc 1 175 8 view .LVU87
 292 00c2 8023     		movs	r3, #128
 293 00c4 DB05     		lsls	r3, r3, #23
 294 00c6 9942     		cmp	r1, r3
 295 00c8 17D2     		bcs	.L10
 177:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 296              		.loc 1 177 7 is_stmt 1 view .LVU88
 297              	.LVL29:
 298              	.LBB44:
 299              	.LBI44:
2021:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
 300              		.loc 2 2021 26 view .LVU89
 301              	.LBB45:
2023:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 302              		.loc 2 2023 3 view .LVU90
2023:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 303              		.loc 2 2023 21 is_stmt 0 view .LVU91
 304 00ca 294B     		ldr	r3, .L20+16
 305 00cc 1B68     		ldr	r3, [r3]
2023:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 306              		.loc 2 2023 10 view .LVU92
 307 00ce F021     		movs	r1, #240
 308 00d0 8903     		lsls	r1, r1, #14
 309 00d2 0B40     		ands	r3, r1
 310              	.LVL30:
2023:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 311              		.loc 2 2023 10 view .LVU93
 312              	.LBE45:
 313              	.LBE44:
 179:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       {
 314              		.loc 1 179 7 is_stmt 1 view .LVU94
 179:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       {
 315              		.loc 1 179 10 is_stmt 0 view .LVU95
 316 00d4 E021     		movs	r1, #224
 317 00d6 4903     		lsls	r1, r1, #13
 318 00d8 8B42     		cmp	r3, r1
 319 00da 0ED3     		bcc	.L10
 183:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         /* Divide variable by 2 to compensate partially CPU processing cycles */
 320              		.loc 1 183 9 is_stmt 1 view .LVU96
 183:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         /* Divide variable by 2 to compensate partially CPU processing cycles */
 321              		.loc 1 183 58 is_stmt 0 view .LVU97
 322 00dc 9B0C     		lsrs	r3, r3, #18
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 93


 323              	.LVL31:
 183:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         /* Divide variable by 2 to compensate partially CPU processing cycles */
 324              		.loc 1 183 80 view .LVU98
 325 00de 033B     		subs	r3, r3, #3
 183:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         /* Divide variable by 2 to compensate partially CPU processing cycles */
 326              		.loc 1 183 33 view .LVU99
 327 00e0 0121     		movs	r1, #1
 328 00e2 9940     		lsls	r1, r1, r3
 183:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         /* Divide variable by 2 to compensate partially CPU processing cycles */
 329              		.loc 1 183 26 view .LVU100
 330 00e4 0091     		str	r1, [sp]
 185:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 331              		.loc 1 185 9 is_stmt 1 view .LVU101
 185:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 332              		.loc 1 185 26 is_stmt 0 view .LVU102
 333 00e6 009B     		ldr	r3, [sp]
 334 00e8 5B08     		lsrs	r3, r3, #1
 335 00ea 0093     		str	r3, [sp]
 187:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         {
 336              		.loc 1 187 9 is_stmt 1 view .LVU103
 187:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         {
 337              		.loc 1 187 15 is_stmt 0 view .LVU104
 338 00ec 02E0     		b	.L11
 339              	.L12:
 189:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         }
 340              		.loc 1 189 11 is_stmt 1 view .LVU105
 189:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         }
 341              		.loc 1 189 27 is_stmt 0 view .LVU106
 342 00ee 009B     		ldr	r3, [sp]
 343 00f0 013B     		subs	r3, r3, #1
 344 00f2 0093     		str	r3, [sp]
 345              	.L11:
 187:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         {
 346              		.loc 1 187 33 is_stmt 1 view .LVU107
 347 00f4 009B     		ldr	r3, [sp]
 348 00f6 002B     		cmp	r3, #0
 349 00f8 F9D1     		bne	.L12
 350              	.LVL32:
 351              	.L10:
 194:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     LL_ADC_Disable(hadc->Instance);
 352              		.loc 1 194 5 view .LVU108
 353              	.LBB46:
 354              	.LBI46:
2238:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
 355              		.loc 2 2238 22 view .LVU109
 356              	.LBB47:
2240:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
 357              		.loc 2 2240 3 view .LVU110
 358 00fa B421     		movs	r1, #180
 359 00fc 5358     		ldr	r3, [r2, r1]
 360 00fe 7F27     		movs	r7, #127
 361 0100 BB43     		bics	r3, r7
 362 0102 1843     		orrs	r0, r3
 363              	.LVL33:
2240:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
 364              		.loc 2 2240 3 is_stmt 0 view .LVU111
 365 0104 5050     		str	r0, [r2, r1]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 94


 366              	.LVL34:
2240:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
 367              		.loc 2 2240 3 view .LVU112
 368              	.LBE47:
 369              	.LBE46:
 195:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 370              		.loc 1 195 5 is_stmt 1 view .LVU113
 371 0106 2268     		ldr	r2, [r4]
 372              	.LVL35:
 373              	.LBB48:
 374              	.LBI48:
4547:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
 375              		.loc 2 4547 22 view .LVU114
 376              	.LBB49:
4552:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 377              		.loc 2 4552 3 view .LVU115
 378 0108 9368     		ldr	r3, [r2, #8]
 379 010a 1849     		ldr	r1, .L20+12
 380 010c 0B40     		ands	r3, r1
 381 010e 0221     		movs	r1, #2
 382 0110 0B43     		orrs	r3, r1
 383 0112 9360     		str	r3, [r2, #8]
 384              	.LVL36:
4552:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 385              		.loc 2 4552 3 is_stmt 0 view .LVU116
 386              	.LBE49:
 387              	.LBE48:
 199:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 388              		.loc 1 199 5 is_stmt 1 view .LVU117
 199:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 389              		.loc 1 199 17 is_stmt 0 view .LVU118
 390 0114 FFF7FEFF 		bl	HAL_GetTick
 391              	.LVL37:
 392 0118 0700     		movs	r7, r0
 393              	.LVL38:
 201:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     {
 394              		.loc 1 201 5 is_stmt 1 view .LVU119
 395              	.L13:
 201:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     {
 396              		.loc 1 201 45 view .LVU120
 201:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     {
 397              		.loc 1 201 33 is_stmt 0 view .LVU121
 398 011a 2368     		ldr	r3, [r4]
 399              	.LVL39:
 400              	.LBB50:
 401              	.LBI50:
4566:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
 402              		.loc 2 4566 26 is_stmt 1 view .LVU122
 403              	.LBB51:
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 404              		.loc 2 4568 3 view .LVU123
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 405              		.loc 2 4568 12 is_stmt 0 view .LVU124
 406 011c 9A68     		ldr	r2, [r3, #8]
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 407              		.loc 2 4568 68 view .LVU125
 408 011e D207     		lsls	r2, r2, #31
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 95


 409 0120 09D4     		bmi	.L14
 410              	.LVL40:
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 411              		.loc 2 4568 68 view .LVU126
 412              	.LBE51:
 413              	.LBE50:
 220:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 414              		.loc 1 220 5 is_stmt 1 view .LVU127
 415 0122 DA68     		ldr	r2, [r3, #12]
 416 0124 3243     		orrs	r2, r6
 417 0126 DA60     		str	r2, [r3, #12]
 223:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 418              		.loc 1 223 5 view .LVU128
 419 0128 A36D     		ldr	r3, [r4, #88]
 420 012a 0322     		movs	r2, #3
 421 012c 9343     		bics	r3, r2
 422 012e 023A     		subs	r2, r2, #2
 423 0130 1343     		orrs	r3, r2
 424 0132 A365     		str	r3, [r4, #88]
 425 0134 7EE7     		b	.L4
 426              	.LVL41:
 427              	.L14:
 203:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       {
 428              		.loc 1 203 7 view .LVU129
 203:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       {
 429              		.loc 1 203 12 is_stmt 0 view .LVU130
 430 0136 FFF7FEFF 		bl	HAL_GetTick
 431              	.LVL42:
 203:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       {
 432              		.loc 1 203 26 view .LVU131
 433 013a C01B     		subs	r0, r0, r7
 203:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       {
 434              		.loc 1 203 10 view .LVU132
 435 013c 0228     		cmp	r0, #2
 436 013e ECD9     		bls	.L13
 206:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         {
 437              		.loc 1 206 9 is_stmt 1 view .LVU133
 206:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         {
 438              		.loc 1 206 34 is_stmt 0 view .LVU134
 439 0140 2368     		ldr	r3, [r4]
 440              	.LVL43:
 441              	.LBB52:
 442              	.LBI52:
4566:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
 443              		.loc 2 4566 26 is_stmt 1 view .LVU135
 444              	.LBB53:
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 445              		.loc 2 4568 3 view .LVU136
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 446              		.loc 2 4568 12 is_stmt 0 view .LVU137
 447 0142 9B68     		ldr	r3, [r3, #8]
 448              	.LVL44:
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 449              		.loc 2 4568 68 view .LVU138
 450 0144 DB07     		lsls	r3, r3, #31
 451 0146 E8D5     		bpl	.L13
 452              	.LVL45:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 96


4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 453              		.loc 2 4568 68 view .LVU139
 454              	.LBE53:
 455              	.LBE52:
 209:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 456              		.loc 1 209 11 is_stmt 1 view .LVU140
 457 0148 A36D     		ldr	r3, [r4, #88]
 458 014a 1022     		movs	r2, #16
 459 014c 1343     		orrs	r3, r2
 460 014e A365     		str	r3, [r4, #88]
 212:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 461              		.loc 1 212 11 view .LVU141
 462 0150 E36D     		ldr	r3, [r4, #92]
 463 0152 0F3A     		subs	r2, r2, #15
 464 0154 1343     		orrs	r3, r2
 465 0156 E365     		str	r3, [r4, #92]
 214:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         }
 466              		.loc 1 214 11 view .LVU142
 214:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         }
 467              		.loc 1 214 18 is_stmt 0 view .LVU143
 468 0158 0125     		movs	r5, #1
 469              	.LVL46:
 214:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****         }
 470              		.loc 1 214 18 view .LVU144
 471 015a 6EE7     		b	.L2
 472              	.LVL47:
 473              	.L16:
 116:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 474              		.loc 1 116 3 view .LVU145
 475 015c 0225     		movs	r5, #2
 476 015e 6CE7     		b	.L2
 477              	.L21:
 478              		.align	2
 479              	.L20:
 480 0160 FDFEFFFF 		.word	-259
 481 0164 03800000 		.word	32771
 482 0168 FC7FFFFF 		.word	-32772
 483 016c E8FFFF7F 		.word	2147483624
 484 0170 08270140 		.word	1073817352
 485              		.cfi_endproc
 486              	.LFE334:
 488              		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 489              		.align	1
 490              		.global	HAL_ADCEx_Calibration_GetValue
 491              		.syntax unified
 492              		.code	16
 493              		.thumb_func
 495              	HAL_ADCEx_Calibration_GetValue:
 496              	.LVL48:
 497              	.LFB335:
 239:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 240:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /**
 241:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @brief  Get the calibration factor.
 242:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 243:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @retval Calibration value.
 244:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
 245:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(const ADC_HandleTypeDef *hadc)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 97


 246:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** {
 498              		.loc 1 246 1 is_stmt 1 view -0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 247:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* Check the parameters */
 248:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 503              		.loc 1 248 3 view .LVU147
 249:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 250:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */
 251:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   return ((hadc->Instance->CALFACT) & 0x0000007FU);
 504              		.loc 1 251 3 view .LVU148
 505              		.loc 1 251 16 is_stmt 0 view .LVU149
 506 0000 0268     		ldr	r2, [r0]
 507              		.loc 1 251 26 view .LVU150
 508 0002 B423     		movs	r3, #180
 509 0004 D358     		ldr	r3, [r2, r3]
 510              		.loc 1 251 37 view .LVU151
 511 0006 7F20     		movs	r0, #127
 512              	.LVL49:
 513              		.loc 1 251 37 view .LVU152
 514 0008 1840     		ands	r0, r3
 252:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** }
 515              		.loc 1 252 1 view .LVU153
 516              		@ sp needed
 517 000a 7047     		bx	lr
 518              		.cfi_endproc
 519              	.LFE335:
 521              		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 522              		.align	1
 523              		.global	HAL_ADCEx_Calibration_SetValue
 524              		.syntax unified
 525              		.code	16
 526              		.thumb_func
 528              	HAL_ADCEx_Calibration_SetValue:
 529              	.LVL50:
 530              	.LFB336:
 253:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 254:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /**
 255:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result.
 256:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *         ADC must be enabled and no conversion is ongoing.
 257:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @param hadc ADC handle
 258:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @param CalibrationFactor Calibration factor (coded on 7 bits maximum)
 259:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @retval HAL state
 260:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
 261:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef *hadc, uint32_t CalibrationFacto
 262:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** {
 531              		.loc 1 262 1 is_stmt 1 view -0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		.loc 1 262 1 is_stmt 0 view .LVU155
 536 0000 30B5     		push	{r4, r5, lr}
 537              	.LCFI2:
 538              		.cfi_def_cfa_offset 12
 539              		.cfi_offset 4, -12
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 98


 540              		.cfi_offset 5, -8
 541              		.cfi_offset 14, -4
 542 0002 0300     		movs	r3, r0
 263:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 543              		.loc 1 263 3 is_stmt 1 view .LVU156
 544              	.LVL51:
 264:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 545              		.loc 1 264 3 view .LVU157
 265:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 266:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* Check the parameters */
 267:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 546              		.loc 1 267 3 view .LVU158
 268:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor));
 547              		.loc 1 268 3 view .LVU159
 269:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 270:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 548              		.loc 1 270 3 view .LVU160
 549              		.loc 1 270 3 view .LVU161
 550 0004 5422     		movs	r2, #84
 551 0006 825C     		ldrb	r2, [r0, r2]
 552 0008 012A     		cmp	r2, #1
 553 000a 27D0     		beq	.L28
 554              		.loc 1 270 3 discriminator 2 view .LVU162
 555 000c 5422     		movs	r2, #84
 556 000e 0120     		movs	r0, #1
 557              	.LVL52:
 558              		.loc 1 270 3 is_stmt 0 discriminator 2 view .LVU163
 559 0010 9854     		strb	r0, [r3, r2]
 560              		.loc 1 270 3 is_stmt 1 discriminator 2 view .LVU164
 271:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 272:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
 273:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
 274:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 561              		.loc 1 274 3 discriminator 2 view .LVU165
 562              		.loc 1 274 79 is_stmt 0 discriminator 2 view .LVU166
 563 0012 1A68     		ldr	r2, [r3]
 564              	.LVL53:
 565              	.LBB54:
 566              	.LBI54:
4629:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4630:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4631:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4632:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @}
4633:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4634:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4635:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
4636:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @{
4637:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4638:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4639:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4640:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
4641:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
4642:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
4643:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
4644:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           starts immediately.
4645:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
4646:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 99


4647:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *           following the ADC start conversion command.
4648:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4649:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
4650:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
4651:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
4652:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         without ADC disable command on going.
4653:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
4654:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4655:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
4656:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4657:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
4658:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4659:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4660:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4661:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4662:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4663:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4664:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_ADSTART);
4665:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4666:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4667:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4668:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
4669:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4670:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC state:
4671:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         ADC must be enabled (potentially with conversion on going on group regular),
4672:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   *         without ADC disable command on going.
4673:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
4674:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4675:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval None
4676:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4677:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
4678:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4679:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4680:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4681:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4682:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4683:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4684:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****              ADC_CR_ADSTP);
4685:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
4686:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** 
4687:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** /**
4688:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
4689:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
4690:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @param  ADCx ADC instance
4691:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
4692:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   */
4693:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(const ADC_TypeDef *ADCx)
 567              		.loc 2 4693 26 is_stmt 1 discriminator 2 view .LVU167
 568              	.LBB55:
4694:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
4695:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 569              		.loc 2 4695 3 discriminator 2 view .LVU168
 570              		.loc 2 4695 12 is_stmt 0 discriminator 2 view .LVU169
 571 0014 9068     		ldr	r0, [r2, #8]
 572 0016 0424     		movs	r4, #4
 573 0018 2500     		movs	r5, r4
 574 001a 0540     		ands	r5, r0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 100


 575              		.loc 2 4695 74 discriminator 2 view .LVU170
 576 001c 0442     		tst	r4, r0
 577 001e 00D0     		beq	.L25
 578              		.loc 2 4695 74 view .LVU171
 579 0020 0125     		movs	r5, #1
 580              	.L25:
 581              	.LVL54:
 582              		.loc 2 4695 74 view .LVU172
 583              	.LBE55:
 584              	.LBE54:
 275:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 276:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 585              		.loc 1 276 3 is_stmt 1 view .LVU173
 586              	.LBB56:
 587              	.LBI56:
4566:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
 588              		.loc 2 4566 26 view .LVU174
 589              	.LBB57:
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 590              		.loc 2 4568 3 view .LVU175
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 591              		.loc 2 4568 12 is_stmt 0 view .LVU176
 592 0022 9068     		ldr	r0, [r2, #8]
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 593              		.loc 2 4568 68 view .LVU177
 594 0024 C007     		lsls	r0, r0, #31
 595 0026 0CD5     		bpl	.L26
 596              	.LVL55:
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 597              		.loc 2 4568 68 view .LVU178
 598              	.LBE57:
 599              	.LBE56:
 277:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 600              		.loc 1 277 7 view .LVU179
 601 0028 002D     		cmp	r5, #0
 602 002a 0AD1     		bne	.L26
 278:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****      )
 279:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   {
 280:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     hadc->Instance->CALFACT &= ~ADC_CALFACT_CALFACT;
 603              		.loc 1 280 5 is_stmt 1 view .LVU180
 604              		.loc 1 280 19 is_stmt 0 view .LVU181
 605 002c B420     		movs	r0, #180
 606 002e 1458     		ldr	r4, [r2, r0]
 607              		.loc 1 280 29 view .LVU182
 608 0030 7F35     		adds	r5, r5, #127
 609              	.LVL56:
 610              		.loc 1 280 29 view .LVU183
 611 0032 AC43     		bics	r4, r5
 612 0034 1450     		str	r4, [r2, r0]
 281:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     hadc->Instance->CALFACT |= CalibrationFactor;
 613              		.loc 1 281 5 is_stmt 1 view .LVU184
 614              		.loc 1 281 9 is_stmt 0 view .LVU185
 615 0036 1C68     		ldr	r4, [r3]
 616              		.loc 1 281 19 view .LVU186
 617 0038 2258     		ldr	r2, [r4, r0]
 618              		.loc 1 281 29 view .LVU187
 619 003a 0A43     		orrs	r2, r1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 101


 620 003c 2250     		str	r2, [r4, r0]
 263:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 621              		.loc 1 263 21 view .LVU188
 622 003e 0020     		movs	r0, #0
 623              		.loc 1 281 29 view .LVU189
 624 0040 08E0     		b	.L27
 625              	.LVL57:
 626              	.L26:
 282:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   }
 283:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   else
 284:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   {
 285:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Update ADC state machine */
 286:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 627              		.loc 1 286 5 is_stmt 1 view .LVU190
 628 0042 9A6D     		ldr	r2, [r3, #88]
 629 0044 2021     		movs	r1, #32
 630              	.LVL58:
 631              		.loc 1 286 5 is_stmt 0 view .LVU191
 632 0046 0A43     		orrs	r2, r1
 633 0048 9A65     		str	r2, [r3, #88]
 287:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Update ADC error code */
 288:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 634              		.loc 1 288 5 is_stmt 1 view .LVU192
 635 004a DA6D     		ldr	r2, [r3, #92]
 636 004c 1F39     		subs	r1, r1, #31
 637 004e 0A43     		orrs	r2, r1
 638 0050 DA65     		str	r2, [r3, #92]
 289:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 290:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 291:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 639              		.loc 1 291 5 view .LVU193
 640              	.LVL59:
 641              		.loc 1 291 20 is_stmt 0 view .LVU194
 642 0052 0120     		movs	r0, #1
 643              	.LVL60:
 644              	.L27:
 292:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   }
 293:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 294:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 645              		.loc 1 294 3 is_stmt 1 view .LVU195
 646              		.loc 1 294 3 view .LVU196
 647 0054 5422     		movs	r2, #84
 648 0056 0021     		movs	r1, #0
 649 0058 9954     		strb	r1, [r3, r2]
 650              		.loc 1 294 3 view .LVU197
 295:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 296:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   return tmp_hal_status;
 651              		.loc 1 296 3 view .LVU198
 652              	.LVL61:
 653              	.L24:
 297:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** }
 654              		.loc 1 297 1 is_stmt 0 view .LVU199
 655              		@ sp needed
 656 005a 30BD     		pop	{r4, r5, pc}
 657              	.LVL62:
 658              	.L28:
 270:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 102


 659              		.loc 1 270 3 view .LVU200
 660 005c 0220     		movs	r0, #2
 661              	.LVL63:
 270:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 662              		.loc 1 270 3 view .LVU201
 663 005e FCE7     		b	.L24
 664              		.cfi_endproc
 665              	.LFE336:
 667              		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 668              		.align	1
 669              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 670              		.syntax unified
 671              		.code	16
 672              		.thumb_func
 674              	HAL_ADCEx_LevelOutOfWindow2Callback:
 675              	.LVL64:
 676              	.LFB337:
 298:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 299:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /**
 300:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non-blocking mode.
 301:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @param hadc ADC handle
 302:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @retval None
 303:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
 304:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef *hadc)
 305:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** {
 677              		.loc 1 305 1 is_stmt 1 view -0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 306:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 307:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   UNUSED(hadc);
 682              		.loc 1 307 3 view .LVU203
 308:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 309:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 310:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow2Callback must be implemented in the user file.
 311:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
 312:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** }
 683              		.loc 1 312 1 is_stmt 0 view .LVU204
 684              		@ sp needed
 685 0000 7047     		bx	lr
 686              		.cfi_endproc
 687              	.LFE337:
 689              		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
 690              		.align	1
 691              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 692              		.syntax unified
 693              		.code	16
 694              		.thumb_func
 696              	HAL_ADCEx_LevelOutOfWindow3Callback:
 697              	.LVL65:
 698              	.LFB338:
 313:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 314:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /**
 315:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non-blocking mode.
 316:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @param hadc ADC handle
 317:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @retval None
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 103


 318:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
 319:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef *hadc)
 320:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** {
 699              		.loc 1 320 1 is_stmt 1 view -0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 321:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 322:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   UNUSED(hadc);
 704              		.loc 1 322 3 view .LVU206
 323:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 324:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 325:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow3Callback must be implemented in the user file.
 326:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
 327:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** }
 705              		.loc 1 327 1 is_stmt 0 view .LVU207
 706              		@ sp needed
 707 0000 7047     		bx	lr
 708              		.cfi_endproc
 709              	.LFE338:
 711              		.section	.text.HAL_ADCEx_EndOfSamplingCallback,"ax",%progbits
 712              		.align	1
 713              		.weak	HAL_ADCEx_EndOfSamplingCallback
 714              		.syntax unified
 715              		.code	16
 716              		.thumb_func
 718              	HAL_ADCEx_EndOfSamplingCallback:
 719              	.LVL66:
 720              	.LFB339:
 328:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 329:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 330:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /**
 331:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @brief  End Of Sampling callback in non-blocking mode.
 332:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @param hadc ADC handle
 333:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @retval None
 334:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
 335:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** __weak void HAL_ADCEx_EndOfSamplingCallback(ADC_HandleTypeDef *hadc)
 336:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** {
 721              		.loc 1 336 1 is_stmt 1 view -0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              		@ link register save eliminated.
 337:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 338:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   UNUSED(hadc);
 726              		.loc 1 338 3 view .LVU209
 339:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 340:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 341:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****             function HAL_ADCEx_EndOfSamplingCallback must be implemented in the user file.
 342:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
 343:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** }
 727              		.loc 1 343 1 is_stmt 0 view .LVU210
 728              		@ sp needed
 729 0000 7047     		bx	lr
 730              		.cfi_endproc
 731              	.LFE339:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 104


 733              		.section	.text.HAL_ADCEx_ChannelConfigReadyCallback,"ax",%progbits
 734              		.align	1
 735              		.weak	HAL_ADCEx_ChannelConfigReadyCallback
 736              		.syntax unified
 737              		.code	16
 738              		.thumb_func
 740              	HAL_ADCEx_ChannelConfigReadyCallback:
 741              	.LVL67:
 742              	.LFB340:
 344:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 345:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /**
 346:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @brief  ADC channel configuration ready callback in non-blocking mode.
 347:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @param hadc ADC handle
 348:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @retval None
 349:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
 350:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** __weak void HAL_ADCEx_ChannelConfigReadyCallback(ADC_HandleTypeDef *hadc)
 351:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** {
 743              		.loc 1 351 1 is_stmt 1 view -0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 352:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 353:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   UNUSED(hadc);
 748              		.loc 1 353 3 view .LVU212
 354:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 355:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 356:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****             function HAL_ADCEx_ChannelConfigReadyCallback must be implemented in the user file.
 357:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
 358:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** }
 749              		.loc 1 358 1 is_stmt 0 view .LVU213
 750              		@ sp needed
 751 0000 7047     		bx	lr
 752              		.cfi_endproc
 753              	.LFE340:
 755              		.section	.text.HAL_ADCEx_DisableVoltageRegulator,"ax",%progbits
 756              		.align	1
 757              		.global	HAL_ADCEx_DisableVoltageRegulator
 758              		.syntax unified
 759              		.code	16
 760              		.thumb_func
 762              	HAL_ADCEx_DisableVoltageRegulator:
 763              	.LVL68:
 764              	.LFB341:
 359:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 360:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /**
 361:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @}
 362:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
 363:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 364:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** /**
 365:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @brief  Disable ADC voltage regulator.
 366:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @note   Disabling voltage regulator allows to save power. This operation can
 367:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *         be carried out only when ADC is disabled.
 368:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @note   To enable again the voltage regulator, the user is expected to
 369:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API.
 370:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @param hadc ADC handle
 371:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   * @retval HAL status
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 105


 372:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   */
 373:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableVoltageRegulator(ADC_HandleTypeDef *hadc)
 374:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** {
 765              		.loc 1 374 1 is_stmt 1 view -0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              		@ link register save eliminated.
 375:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 770              		.loc 1 375 3 view .LVU215
 376:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 377:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* Check the parameters */
 378:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 771              		.loc 1 378 3 view .LVU216
 379:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 380:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
 381:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 772              		.loc 1 381 3 view .LVU217
 773              		.loc 1 381 28 is_stmt 0 view .LVU218
 774 0000 0368     		ldr	r3, [r0]
 775              	.LVL69:
 776              	.LBB58:
 777              	.LBI58:
4566:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
 778              		.loc 2 4566 26 is_stmt 1 view .LVU219
 779              	.LBB59:
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 780              		.loc 2 4568 3 view .LVU220
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 781              		.loc 2 4568 12 is_stmt 0 view .LVU221
 782 0002 9A68     		ldr	r2, [r3, #8]
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 783              		.loc 2 4568 68 view .LVU222
 784 0004 D207     		lsls	r2, r2, #31
 785 0006 05D4     		bmi	.L36
 786              	.LVL70:
4568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 787              		.loc 2 4568 68 view .LVU223
 788              	.LBE59:
 789              	.LBE58:
 382:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   {
 383:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
 790              		.loc 1 383 5 is_stmt 1 view .LVU224
 791              	.LBB60:
 792              	.LBI60:
4495:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** {
 793              		.loc 2 4495 22 view .LVU225
 794              	.LBB61:
4497:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 795              		.loc 2 4497 3 view .LVU226
 796 0008 9A68     		ldr	r2, [r3, #8]
 797 000a 0349     		ldr	r1, .L37
 798 000c 0A40     		ands	r2, r1
 799 000e 9A60     		str	r2, [r3, #8]
 800              	.LVL71:
4497:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_adc.h **** }
 801              		.loc 2 4497 3 is_stmt 0 view .LVU227
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 106


 802              	.LBE61:
 803              	.LBE60:
 384:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 804              		.loc 1 384 5 is_stmt 1 view .LVU228
 805              		.loc 1 384 20 is_stmt 0 view .LVU229
 806 0010 0020     		movs	r0, #0
 807              	.LVL72:
 808              	.L35:
 385:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   }
 386:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   else
 387:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   {
 388:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 389:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   }
 390:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** 
 391:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   return tmp_hal_status;
 809              		.loc 1 391 3 is_stmt 1 view .LVU230
 392:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c **** }
 810              		.loc 1 392 1 is_stmt 0 view .LVU231
 811              		@ sp needed
 812 0012 7047     		bx	lr
 813              	.LVL73:
 814              	.L36:
 388:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   }
 815              		.loc 1 388 20 view .LVU232
 816 0014 0120     		movs	r0, #1
 817              	.LVL74:
 388:Drivers/STM32U0xx_HAL_Driver/Src/stm32u0xx_hal_adc_ex.c ****   }
 818              		.loc 1 388 20 view .LVU233
 819 0016 FCE7     		b	.L35
 820              	.L38:
 821              		.align	2
 822              	.L37:
 823 0018 E8FFFF6F 		.word	1879048168
 824              		.cfi_endproc
 825              	.LFE341:
 827              		.text
 828              	.Letext0:
 829              		.file 3 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 830              		.file 4 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 831              		.file 5 "Drivers/CMSIS/Device/ST/STM32U0xx/Include/stm32u073xx.h"
 832              		.file 6 "Drivers/CMSIS/Device/ST/STM32U0xx/Include/stm32u0xx.h"
 833              		.file 7 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_hal_def.h"
 834              		.file 8 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_hal_dma.h"
 835              		.file 9 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_hal_adc.h"
 836              		.file 10 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_dma.h"
 837              		.file 11 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_hal.h"
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s 			page 107


DEFINED SYMBOLS
                            *ABS*:00000000 stm32u0xx_hal_adc_ex.c
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:20     .text.HAL_ADCEx_Calibration_Start:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:26     .text.HAL_ADCEx_Calibration_Start:00000000 HAL_ADCEx_Calibration_Start
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:480    .text.HAL_ADCEx_Calibration_Start:00000160 $d
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:489    .text.HAL_ADCEx_Calibration_GetValue:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:495    .text.HAL_ADCEx_Calibration_GetValue:00000000 HAL_ADCEx_Calibration_GetValue
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:522    .text.HAL_ADCEx_Calibration_SetValue:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:528    .text.HAL_ADCEx_Calibration_SetValue:00000000 HAL_ADCEx_Calibration_SetValue
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:668    .text.HAL_ADCEx_LevelOutOfWindow2Callback:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:674    .text.HAL_ADCEx_LevelOutOfWindow2Callback:00000000 HAL_ADCEx_LevelOutOfWindow2Callback
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:690    .text.HAL_ADCEx_LevelOutOfWindow3Callback:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:696    .text.HAL_ADCEx_LevelOutOfWindow3Callback:00000000 HAL_ADCEx_LevelOutOfWindow3Callback
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:712    .text.HAL_ADCEx_EndOfSamplingCallback:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:718    .text.HAL_ADCEx_EndOfSamplingCallback:00000000 HAL_ADCEx_EndOfSamplingCallback
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:734    .text.HAL_ADCEx_ChannelConfigReadyCallback:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:740    .text.HAL_ADCEx_ChannelConfigReadyCallback:00000000 HAL_ADCEx_ChannelConfigReadyCallback
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:756    .text.HAL_ADCEx_DisableVoltageRegulator:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:762    .text.HAL_ADCEx_DisableVoltageRegulator:00000000 HAL_ADCEx_DisableVoltageRegulator
C:\Users\upo\AppData\Local\Temp\ccZrPTgE.s:823    .text.HAL_ADCEx_DisableVoltageRegulator:00000018 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
ADC_Disable
HAL_GetTick
