ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"AB1805_RK.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/AB1805_RK.c"
  18              		.section	.text.SPI1_SendByte,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	SPI1_SendByte:
  25              	.LVL0:
  26              	.LFB523:
   1:Core/Src/AB1805_RK.c **** 
   2:Core/Src/AB1805_RK.c **** 
   3:Core/Src/AB1805_RK.c **** #include "SPI.h"
   4:Core/Src/AB1805_RK.c **** #include "stdarg.h"
   5:Core/Src/AB1805_RK.c **** #include "AB1805_RK.h"
   6:Core/Src/AB1805_RK.c **** #include "printf.h"
   7:Core/Src/AB1805_RK.c **** #include "stm32u0xx_ll_spi.h"
   8:Core/Src/AB1805_RK.c **** 
   9:Core/Src/AB1805_RK.c **** // inline static uint8_t read_rtc_register(uint8_t reg_addr);
  10:Core/Src/AB1805_RK.c **** //  inline static uint8_t write_rtc_register(uint8_t rtc_register, uint8_t data);
  11:Core/Src/AB1805_RK.c **** 
  12:Core/Src/AB1805_RK.c **** static inline uint32_t utils_enter_critical_section(void);
  13:Core/Src/AB1805_RK.c **** static inline void utils_exit_critical_section(uint32_t primask_bit);
  14:Core/Src/AB1805_RK.c **** inline static uint8_t read_rtc_register(uint8_t regAddr);
  15:Core/Src/AB1805_RK.c **** inline static uint8_t write_rtc_register(uint8_t regAddr, uint8_t value);
  16:Core/Src/AB1805_RK.c **** 
  17:Core/Src/AB1805_RK.c **** #define AB1815_SPI_READ(offset) (127 & offset)
  18:Core/Src/AB1805_RK.c **** #define AB1815_SPI_WRITE(offset) (128 | offset)
  19:Core/Src/AB1805_RK.c **** 
  20:Core/Src/AB1805_RK.c **** enum WakeReason wakeReason;
  21:Core/Src/AB1805_RK.c **** 
  22:Core/Src/AB1805_RK.c **** /**
  23:Core/Src/AB1805_RK.c ****  * @brief Watchdog period in seconds (1 <= watchdogSecs <= 124) or 0 for disabled.
  24:Core/Src/AB1805_RK.c ****  * This is used so setWDT(-1) can restore the previous value.
  25:Core/Src/AB1805_RK.c ****  */
  26:Core/Src/AB1805_RK.c **** int watchdogSecs = 0;
  27:Core/Src/AB1805_RK.c **** 
  28:Core/Src/AB1805_RK.c **** /**
  29:Core/Src/AB1805_RK.c ****  * @brief The last millis() value where we called setWDT(-1)
  30:Core/Src/AB1805_RK.c ****  */
  31:Core/Src/AB1805_RK.c **** uint32_t lastWatchdogMillis = 0;
  32:Core/Src/AB1805_RK.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 2


  33:Core/Src/AB1805_RK.c **** /**
  34:Core/Src/AB1805_RK.c ****  * @brief How often to call updateWDT(-1) in milliseconds
  35:Core/Src/AB1805_RK.c ****  */
  36:Core/Src/AB1805_RK.c **** uint32_t watchdogUpdatePeriod = 0;
  37:Core/Src/AB1805_RK.c **** 
  38:Core/Src/AB1805_RK.c **** /**
  39:Core/Src/AB1805_RK.c ****  * @brief True if we've set the RTC from the cloud time
  40:Core/Src/AB1805_RK.c ****  */
  41:Core/Src/AB1805_RK.c **** // bool timeSet = false;
  42:Core/Src/AB1805_RK.c **** 
  43:Core/Src/AB1805_RK.c **** static inline void spi_select_slave(bool select)
  44:Core/Src/AB1805_RK.c **** {
  45:Core/Src/AB1805_RK.c ****     if (select)
  46:Core/Src/AB1805_RK.c ****     {
  47:Core/Src/AB1805_RK.c ****         RTC_H();
  48:Core/Src/AB1805_RK.c ****     }
  49:Core/Src/AB1805_RK.c ****     else
  50:Core/Src/AB1805_RK.c ****     {
  51:Core/Src/AB1805_RK.c ****         RTC_L();
  52:Core/Src/AB1805_RK.c ****     }
  53:Core/Src/AB1805_RK.c **** }
  54:Core/Src/AB1805_RK.c **** 
  55:Core/Src/AB1805_RK.c **** void setup(bool callBegin)
  56:Core/Src/AB1805_RK.c **** {
  57:Core/Src/AB1805_RK.c **** 
  58:Core/Src/AB1805_RK.c ****     if (detectChip())
  59:Core/Src/AB1805_RK.c ****     {
  60:Core/Src/AB1805_RK.c ****         updateWakeReason();
  61:Core/Src/AB1805_RK.c ****     }
  62:Core/Src/AB1805_RK.c ****     else
  63:Core/Src/AB1805_RK.c ****     {
  64:Core/Src/AB1805_RK.c ****         printf("failed to detect AB1805\n");
  65:Core/Src/AB1805_RK.c ****     }
  66:Core/Src/AB1805_RK.c **** }
  67:Core/Src/AB1805_RK.c **** 
  68:Core/Src/AB1805_RK.c **** void loop()
  69:Core/Src/AB1805_RK.c **** {
  70:Core/Src/AB1805_RK.c ****     (void)0; //  doing nothing
  71:Core/Src/AB1805_RK.c **** }
  72:Core/Src/AB1805_RK.c **** 
  73:Core/Src/AB1805_RK.c **** bool detectChip()
  74:Core/Src/AB1805_RK.c **** {
  75:Core/Src/AB1805_RK.c ****     bool finalResult = false;
  76:Core/Src/AB1805_RK.c ****     uint8_t value = 0;
  77:Core/Src/AB1805_RK.c **** 
  78:Core/Src/AB1805_RK.c ****     // FOUT/nIRQ  will go HIGH when the chip is ready to respond
  79:Core/Src/AB1805_RK.c **** 
  80:Core/Src/AB1805_RK.c ****     uint32_t start = HAL_GetTick();
  81:Core/Src/AB1805_RK.c ****     bool ready = false;
  82:Core/Src/AB1805_RK.c ****     while (HAL_GetTick() - start < 1000)
  83:Core/Src/AB1805_RK.c ****     {
  84:Core/Src/AB1805_RK.c ****         if (HAL_GPIO_ReadPin(NIRQ_GPIO_Port, NIRQ_Pin) == GPIO_PIN_SET) // B12
  85:Core/Src/AB1805_RK.c ****         {
  86:Core/Src/AB1805_RK.c ****             ready = true;
  87:Core/Src/AB1805_RK.c ****             break;
  88:Core/Src/AB1805_RK.c ****         }
  89:Core/Src/AB1805_RK.c ****         if (!ready)
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 3


  90:Core/Src/AB1805_RK.c ****         {
  91:Core/Src/AB1805_RK.c ****             printf("FOUT did not go HIGH\n");
  92:Core/Src/AB1805_RK.c ****             // May just want to return false here
  93:Core/Src/AB1805_RK.c ****             return false;
  94:Core/Src/AB1805_RK.c ****         }
  95:Core/Src/AB1805_RK.c ****     }
  96:Core/Src/AB1805_RK.c **** 
  97:Core/Src/AB1805_RK.c ****     value = read_rtc_register(REG_ID0); // REG_ID0 = 0x28, the upper RW bit indicating read (if 0) 
  98:Core/Src/AB1805_RK.c ****     if (value == REG_ID0_AB18XX)
  99:Core/Src/AB1805_RK.c ****     {
 100:Core/Src/AB1805_RK.c ****         value = read_rtc_register(REG_ID1);
 101:Core/Src/AB1805_RK.c ****         if (value == REG_ID1_ABXX15)
 102:Core/Src/AB1805_RK.c ****         {
 103:Core/Src/AB1805_RK.c ****             finalResult = true;
 104:Core/Src/AB1805_RK.c ****         }
 105:Core/Src/AB1805_RK.c ****     }
 106:Core/Src/AB1805_RK.c ****     if (!finalResult)
 107:Core/Src/AB1805_RK.c ****     {
 108:Core/Src/AB1805_RK.c ****         printf("not detected\n");
 109:Core/Src/AB1805_RK.c ****     }
 110:Core/Src/AB1805_RK.c ****     return finalResult;
 111:Core/Src/AB1805_RK.c **** }
 112:Core/Src/AB1805_RK.c **** 
 113:Core/Src/AB1805_RK.c **** bool usingRCOscillator()
 114:Core/Src/AB1805_RK.c **** {
 115:Core/Src/AB1805_RK.c ****     uint8_t value;
 116:Core/Src/AB1805_RK.c **** 
 117:Core/Src/AB1805_RK.c ****     value = read_rtc_register(REG_OSC_STATUS);
 118:Core/Src/AB1805_RK.c **** 
 119:Core/Src/AB1805_RK.c ****     return (value & REG_OSC_STATUS_OMODE) != 0;
 120:Core/Src/AB1805_RK.c **** }
 121:Core/Src/AB1805_RK.c **** 
 122:Core/Src/AB1805_RK.c **** bool resetConfig(uint32_t flags)
 123:Core/Src/AB1805_RK.c **** {
 124:Core/Src/AB1805_RK.c ****     printf("resetConfig(0x%08lx)\n", flags);
 125:Core/Src/AB1805_RK.c **** 
 126:Core/Src/AB1805_RK.c ****     // Reset configuration registers to default values
 127:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_STATUS, REG_STATUS_DEFAULT);
 128:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_CTRL_1, REG_CTRL_1_DEFAULT);
 129:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_CTRL_2, REG_CTRL_2_DEFAULT);
 130:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_INT_MASK, REG_INT_MASK_DEFAULT);
 131:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_SQW, REG_SQW_DEFAULT);
 132:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_SLEEP_CTRL, REG_SLEEP_CTRL_DEFAULT);
 133:Core/Src/AB1805_RK.c **** 
 134:Core/Src/AB1805_RK.c ****     if ((flags & RESET_PRESERVE_REPEATING_TIMER) != 0)
 135:Core/Src/AB1805_RK.c ****     {
 136:Core/Src/AB1805_RK.c ****         maskRegister(REG_TIMER_CTRL, ~REG_TIMER_CTRL_RPT_MASK, REG_TIMER_CTRL_DEFAULT & ~REG_TIMER_
 137:Core/Src/AB1805_RK.c ****     }
 138:Core/Src/AB1805_RK.c ****     else
 139:Core/Src/AB1805_RK.c ****     {
 140:Core/Src/AB1805_RK.c ****         write_rtc_register(REG_TIMER_CTRL, REG_TIMER_CTRL_DEFAULT);
 141:Core/Src/AB1805_RK.c ****     }
 142:Core/Src/AB1805_RK.c **** 
 143:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_TIMER, REG_TIMER_DEFAULT);
 144:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_TIMER_INITIAL, REG_TIMER_INITIAL_DEFAULT);
 145:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_WDT, REG_WDT_DEFAULT);
 146:Core/Src/AB1805_RK.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 4


 147:Core/Src/AB1805_RK.c ****     uint8_t oscCtrl = REG_OSC_CTRL_DEFAULT;
 148:Core/Src/AB1805_RK.c ****     if ((flags & RESET_DISABLE_XT) != 0)
 149:Core/Src/AB1805_RK.c ****     {
 150:Core/Src/AB1805_RK.c ****         // If disabling XT oscillator, set OSEL to 1 (RC oscillator)
 151:Core/Src/AB1805_RK.c ****         // Also enable FOS so if the XT oscillator fails, it will switch to RC (just in case)
 152:Core/Src/AB1805_RK.c ****         // and ACAL to 0 (however REG_OSC_CTRL_DEFAULT already sets ACAL to 0)
 153:Core/Src/AB1805_RK.c ****         oscCtrl |= REG_OSC_CTRL_OSEL | REG_OSC_CTRL_FOS;
 154:Core/Src/AB1805_RK.c ****     }
 155:Core/Src/AB1805_RK.c ****     // write_rtc_register(REG_OSC_CTRL, oscCtrl);
 156:Core/Src/AB1805_RK.c ****     // write_rtc_register(REG_TRICKLE, REG_TRICKLE_DEFAULT);
 157:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_BREF_CTRL, REG_BREF_CTRL_DEFAULT);
 158:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_AFCTRL, REG_AFCTRL_DEFAULT);
 159:Core/Src/AB1805_RK.c ****     // write_rtc_register(REG_BATMODE_IO, REG_BATMODE_IO_DEFAULT);
 160:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_OCTRL, REG_OCTRL_DEFAULT);
 161:Core/Src/AB1805_RK.c **** 
 162:Core/Src/AB1805_RK.c ****     return true;
 163:Core/Src/AB1805_RK.c **** }
 164:Core/Src/AB1805_RK.c **** 
 165:Core/Src/AB1805_RK.c **** bool updateWakeReason()
 166:Core/Src/AB1805_RK.c **** {
 167:Core/Src/AB1805_RK.c ****     // static const char *errorMsg = "failure in updateWakeReason %d";
 168:Core/Src/AB1805_RK.c **** 
 169:Core/Src/AB1805_RK.c ****     uint8_t status;
 170:Core/Src/AB1805_RK.c ****     status = read_rtc_register(REG_STATUS);
 171:Core/Src/AB1805_RK.c **** 
 172:Core/Src/AB1805_RK.c ****     const char *reason = 0;
 173:Core/Src/AB1805_RK.c **** 
 174:Core/Src/AB1805_RK.c ****     if ((status & REG_STATUS_WDT) != 0)
 175:Core/Src/AB1805_RK.c ****     {
 176:Core/Src/AB1805_RK.c ****         reason = "WATCHDOG";
 177:Core/Src/AB1805_RK.c **** 
 178:Core/Src/AB1805_RK.c ****         wakeReason = WATCHDOG;
 179:Core/Src/AB1805_RK.c ****         clearRegisterBit(REG_STATUS, REG_STATUS_WDT, 0);
 180:Core/Src/AB1805_RK.c ****     }
 181:Core/Src/AB1805_RK.c ****     else if (isBitSet(REG_SLEEP_CTRL, REG_SLEEP_CTRL_SLST, 0))
 182:Core/Src/AB1805_RK.c ****     {
 183:Core/Src/AB1805_RK.c ****         reason = "DEEP_POWER_DOWN";
 184:Core/Src/AB1805_RK.c ****         wakeReason = DEEP_POWER_DOWN;
 185:Core/Src/AB1805_RK.c ****     }
 186:Core/Src/AB1805_RK.c ****     else if ((status & REG_STATUS_TIM) != 0)
 187:Core/Src/AB1805_RK.c ****     {
 188:Core/Src/AB1805_RK.c ****         reason = "COUNTDOWN_TIMER";
 189:Core/Src/AB1805_RK.c ****         wakeReason = COUNTDOWN_TIMER;
 190:Core/Src/AB1805_RK.c ****         clearRegisterBit(REG_STATUS, REG_STATUS_TIM, 0);
 191:Core/Src/AB1805_RK.c ****     }
 192:Core/Src/AB1805_RK.c ****     else if ((status & REG_STATUS_ALM) != 0)
 193:Core/Src/AB1805_RK.c ****     {
 194:Core/Src/AB1805_RK.c ****         reason = "ALARM";
 195:Core/Src/AB1805_RK.c ****         wakeReason = ALARM;
 196:Core/Src/AB1805_RK.c ****         clearRegisterBit(REG_STATUS, REG_STATUS_ALM, 0);
 197:Core/Src/AB1805_RK.c ****     }
 198:Core/Src/AB1805_RK.c **** 
 199:Core/Src/AB1805_RK.c ****     if (reason)
 200:Core/Src/AB1805_RK.c ****     {
 201:Core/Src/AB1805_RK.c ****         printf("wake reason = %s\n", reason);
 202:Core/Src/AB1805_RK.c ****     }
 203:Core/Src/AB1805_RK.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 5


 204:Core/Src/AB1805_RK.c ****     return true;
 205:Core/Src/AB1805_RK.c **** }
 206:Core/Src/AB1805_RK.c **** 
 207:Core/Src/AB1805_RK.c **** bool setWDT(int seconds)
 208:Core/Src/AB1805_RK.c **** {
 209:Core/Src/AB1805_RK.c ****     bool bResult = false;
 210:Core/Src/AB1805_RK.c ****     printf("setWDT %d\n", seconds);
 211:Core/Src/AB1805_RK.c **** 
 212:Core/Src/AB1805_RK.c ****     if (seconds < 0)
 213:Core/Src/AB1805_RK.c ****     {
 214:Core/Src/AB1805_RK.c ****         seconds = watchdogSecs;
 215:Core/Src/AB1805_RK.c ****     }
 216:Core/Src/AB1805_RK.c **** 
 217:Core/Src/AB1805_RK.c ****     if (seconds == 0)
 218:Core/Src/AB1805_RK.c ****     {
 219:Core/Src/AB1805_RK.c ****         // Disable WDT
 220:Core/Src/AB1805_RK.c ****         bResult = write_rtc_register(REG_WDT, 0x00);
 221:Core/Src/AB1805_RK.c **** 
 222:Core/Src/AB1805_RK.c ****         printf("watchdog cleared bResult=%d\n", bResult);
 223:Core/Src/AB1805_RK.c **** 
 224:Core/Src/AB1805_RK.c ****         watchdogSecs = 0;
 225:Core/Src/AB1805_RK.c ****         watchdogUpdatePeriod = 0;
 226:Core/Src/AB1805_RK.c ****     }
 227:Core/Src/AB1805_RK.c ****     else
 228:Core/Src/AB1805_RK.c ****     {
 229:Core/Src/AB1805_RK.c ****         // Use 1/4 Hz clock
 230:Core/Src/AB1805_RK.c ****         int fourSecs = seconds / 4;
 231:Core/Src/AB1805_RK.c ****         if (fourSecs < 1)
 232:Core/Src/AB1805_RK.c ****         {
 233:Core/Src/AB1805_RK.c ****             fourSecs = 1;
 234:Core/Src/AB1805_RK.c ****         }
 235:Core/Src/AB1805_RK.c ****         if (fourSecs > 31)
 236:Core/Src/AB1805_RK.c ****         {
 237:Core/Src/AB1805_RK.c ****             fourSecs = 31;
 238:Core/Src/AB1805_RK.c ****         }
 239:Core/Src/AB1805_RK.c ****         bResult = write_rtc_register(REG_WDT, REG_WDT_RESET | (fourSecs << 2) | REG_WDT_WRB_1_4_HZ)
 240:Core/Src/AB1805_RK.c **** 
 241:Core/Src/AB1805_RK.c ****         printf("watchdog set fourSecs=%d bResult=%d\n", fourSecs, bResult);
 242:Core/Src/AB1805_RK.c **** 
 243:Core/Src/AB1805_RK.c ****         watchdogSecs = seconds;
 244:Core/Src/AB1805_RK.c **** 
 245:Core/Src/AB1805_RK.c ****         // Update watchdog half way through period
 246:Core/Src/AB1805_RK.c ****         watchdogUpdatePeriod = (fourSecs * 2000);
 247:Core/Src/AB1805_RK.c ****     }
 248:Core/Src/AB1805_RK.c **** 
 249:Core/Src/AB1805_RK.c ****     return bResult;
 250:Core/Src/AB1805_RK.c **** }
 251:Core/Src/AB1805_RK.c **** 
 252:Core/Src/AB1805_RK.c **** bool clearRepeatingInterrupt()
 253:Core/Src/AB1805_RK.c **** {
 254:Core/Src/AB1805_RK.c ****     const char *errorMsg = "failure in clearRepeatingInterrupt %d\n";
 255:Core/Src/AB1805_RK.c ****     bool bResult;
 256:Core/Src/AB1805_RK.c **** 
 257:Core/Src/AB1805_RK.c ****     // Set FOUT/nIRQ control in Control2 to the default value
 258:Core/Src/AB1805_RK.c ****     bResult = maskRegister(REG_CTRL_2, ~REG_CTRL_2_OUT1S_MASK, REG_CTRL_2_OUT1S_nIRQ, 0);
 259:Core/Src/AB1805_RK.c ****     if (!bResult)
 260:Core/Src/AB1805_RK.c ****     {
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 6


 261:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 262:Core/Src/AB1805_RK.c ****         return false;
 263:Core/Src/AB1805_RK.c ****     }
 264:Core/Src/AB1805_RK.c **** 
 265:Core/Src/AB1805_RK.c ****     // Disable alarm interrupt (AIE) in interrupt mask register
 266:Core/Src/AB1805_RK.c ****     bResult = clearRegisterBit(REG_INT_MASK, REG_INT_MASK_AIE, 0);
 267:Core/Src/AB1805_RK.c ****     if (!bResult)
 268:Core/Src/AB1805_RK.c ****     {
 269:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 270:Core/Src/AB1805_RK.c ****         return false;
 271:Core/Src/AB1805_RK.c ****     }
 272:Core/Src/AB1805_RK.c **** 
 273:Core/Src/AB1805_RK.c ****     // Disable alarm
 274:Core/Src/AB1805_RK.c ****     bResult = maskRegister(REG_TIMER_CTRL, ~REG_TIMER_CTRL_RPT_MASK, REG_TIMER_CTRL_RPT_DIS, 0);
 275:Core/Src/AB1805_RK.c ****     if (!bResult)
 276:Core/Src/AB1805_RK.c ****     {
 277:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 278:Core/Src/AB1805_RK.c ****         return false;
 279:Core/Src/AB1805_RK.c ****     }
 280:Core/Src/AB1805_RK.c **** 
 281:Core/Src/AB1805_RK.c ****     return true;
 282:Core/Src/AB1805_RK.c **** }
 283:Core/Src/AB1805_RK.c **** 
 284:Core/Src/AB1805_RK.c **** bool interruptCountdownTimer(int value, bool minutes) // @param minutes True if minutes, false if s
 285:Core/Src/AB1805_RK.c **** {
 286:Core/Src/AB1805_RK.c ****     const char *errorMsg = "failure in interruptCountdownTimer %d\n";
 287:Core/Src/AB1805_RK.c ****     bool bResult;
 288:Core/Src/AB1805_RK.c **** 
 289:Core/Src/AB1805_RK.c ****     // Disable watchdog
 290:Core/Src/AB1805_RK.c ****     bResult = setWDT(0);
 291:Core/Src/AB1805_RK.c ****     if (!bResult)
 292:Core/Src/AB1805_RK.c ****     {
 293:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 294:Core/Src/AB1805_RK.c ****         return false;
 295:Core/Src/AB1805_RK.c ****     }
 296:Core/Src/AB1805_RK.c **** 
 297:Core/Src/AB1805_RK.c ****     // Set FOUT/nIRQ control in OUT1S in Control2 for
 298:Core/Src/AB1805_RK.c ****     // "nIRQ if at least one interrupt is enabled, else OUT"
 299:Core/Src/AB1805_RK.c ****     bResult = maskRegister(REG_CTRL_2, ~REG_CTRL_2_OUT1S_MASK, REG_CTRL_2_OUT1S_nIRQ, 0);
 300:Core/Src/AB1805_RK.c ****     if (!bResult)
 301:Core/Src/AB1805_RK.c ****     {
 302:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 303:Core/Src/AB1805_RK.c ****         return false;
 304:Core/Src/AB1805_RK.c ****     }
 305:Core/Src/AB1805_RK.c **** 
 306:Core/Src/AB1805_RK.c ****     bResult = setCountdownTimer(value, minutes);
 307:Core/Src/AB1805_RK.c ****     if (!bResult)
 308:Core/Src/AB1805_RK.c ****     {
 309:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 310:Core/Src/AB1805_RK.c ****         return false;
 311:Core/Src/AB1805_RK.c ****     }
 312:Core/Src/AB1805_RK.c **** 
 313:Core/Src/AB1805_RK.c ****     return true;
 314:Core/Src/AB1805_RK.c **** }
 315:Core/Src/AB1805_RK.c **** 
 316:Core/Src/AB1805_RK.c **** bool deepPowerDown(int seconds)
 317:Core/Src/AB1805_RK.c **** {
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 7


 318:Core/Src/AB1805_RK.c ****     const char *errorMsg = "failure in deepPowerDown %d\n";
 319:Core/Src/AB1805_RK.c ****     bool bResult;
 320:Core/Src/AB1805_RK.c **** 
 321:Core/Src/AB1805_RK.c ****     printf("deepPowerDown %d\n", seconds);
 322:Core/Src/AB1805_RK.c **** 
 323:Core/Src/AB1805_RK.c ****     // Disable watchdog
 324:Core/Src/AB1805_RK.c ****     bResult = setWDT(0);
 325:Core/Src/AB1805_RK.c ****     if (!bResult)
 326:Core/Src/AB1805_RK.c ****     {
 327:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 328:Core/Src/AB1805_RK.c ****         return false;
 329:Core/Src/AB1805_RK.c ****     }
 330:Core/Src/AB1805_RK.c **** 
 331:Core/Src/AB1805_RK.c ****     bResult = setCountdownTimer(seconds, false);
 332:Core/Src/AB1805_RK.c ****     if (!bResult)
 333:Core/Src/AB1805_RK.c ****     {
 334:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 335:Core/Src/AB1805_RK.c ****         return false;
 336:Core/Src/AB1805_RK.c ****     }
 337:Core/Src/AB1805_RK.c ****     printf("Ox18: %X  0x19: %X  \n", read_rtc_register(0x18), read_rtc_register(0x19));
 338:Core/Src/AB1805_RK.c **** 
 339:Core/Src/AB1805_RK.c ****     // Make sure STOP (stop clocking system is 0, otherwise sleep mode cannot be entered)
 340:Core/Src/AB1805_RK.c ****     // PWR2 = 1 (low resistance power switch)
 341:Core/Src/AB1805_RK.c ****     // (also would probably work with PWR2 = 0, as nIRQ2 should be high-true for sleep mode)
 342:Core/Src/AB1805_RK.c ****     bResult = maskRegister(REG_CTRL_1, (uint8_t) ~(REG_CTRL_1_STOP | REG_CTRL_1_RSP), REG_CTRL_1_PW
 343:Core/Src/AB1805_RK.c ****     if (!bResult)
 344:Core/Src/AB1805_RK.c ****     {
 345:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 346:Core/Src/AB1805_RK.c ****         return false;
 347:Core/Src/AB1805_RK.c ****     }
 348:Core/Src/AB1805_RK.c **** 
 349:Core/Src/AB1805_RK.c ****     // Disable the I/O interface in sleep
 350:Core/Src/AB1805_RK.c ****     bResult = setRegisterBit(REG_OSC_CTRL, REG_OSC_CTRL_PWGT, 0);
 351:Core/Src/AB1805_RK.c ****     if (!bResult)
 352:Core/Src/AB1805_RK.c ****     {
 353:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 354:Core/Src/AB1805_RK.c ****         return false;
 355:Core/Src/AB1805_RK.c ****     }
 356:Core/Src/AB1805_RK.c **** 
 357:Core/Src/AB1805_RK.c ****     // OUT2S = 6 to enable sleep mode
 358:Core/Src/AB1805_RK.c ****     bResult = maskRegister(REG_CTRL_2, (uint8_t)~REG_CTRL_2_OUT2S_MASK, REG_CTRL_2_OUT2S_SLEEP, 0);
 359:Core/Src/AB1805_RK.c ****     if (!bResult)
 360:Core/Src/AB1805_RK.c ****     {
 361:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 362:Core/Src/AB1805_RK.c ****         return false;
 363:Core/Src/AB1805_RK.c ****     }
 364:Core/Src/AB1805_RK.c ****     hex_dump();
 365:Core/Src/AB1805_RK.c ****     HAL_Delay(1000);
 366:Core/Src/AB1805_RK.c ****     // Enter sleep mode
 367:Core/Src/AB1805_RK.c ****     bResult = write_rtc_register(REG_SLEEP_CTRL, REG_SLEEP_CTRL_SLP | 0x01);
 368:Core/Src/AB1805_RK.c ****     if (!bResult)
 369:Core/Src/AB1805_RK.c ****     {
 370:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 371:Core/Src/AB1805_RK.c ****         return false;
 372:Core/Src/AB1805_RK.c ****     }
 373:Core/Src/AB1805_RK.c ****     bResult = write_rtc_register(REG_TIMER_CTRL, 0xc2); // enable
 374:Core/Src/AB1805_RK.c ****     // _log.trace("delay in case we didn't power down");
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 8


 375:Core/Src/AB1805_RK.c ****     uint32_t start = HAL_GetTick();
 376:Core/Src/AB1805_RK.c ****     while ((HAL_GetTick() - start) < (uint32_t)(seconds * 1000))
 377:Core/Src/AB1805_RK.c ****     {
 378:Core/Src/AB1805_RK.c ****         printf("REG_SLEEP_CTRL=0x%2x\n", read_rtc_register(REG_SLEEP_CTRL));
 379:Core/Src/AB1805_RK.c ****         HAL_Delay(1000);
 380:Core/Src/AB1805_RK.c ****     }
 381:Core/Src/AB1805_RK.c **** 
 382:Core/Src/AB1805_RK.c ****     printf("didn't power down\n");
 383:Core/Src/AB1805_RK.c **** 
 384:Core/Src/AB1805_RK.c ****     return true;
 385:Core/Src/AB1805_RK.c **** }
 386:Core/Src/AB1805_RK.c **** 
 387:Core/Src/AB1805_RK.c **** bool setCountdownTimer(int value, bool minutes)
 388:Core/Src/AB1805_RK.c **** {
 389:Core/Src/AB1805_RK.c ****     const char *errorMsg = "failure in setCountdownTimer %d\n";
 390:Core/Src/AB1805_RK.c ****     bool bResult;
 391:Core/Src/AB1805_RK.c **** 
 392:Core/Src/AB1805_RK.c ****     // Clear any pending interrupts
 393:Core/Src/AB1805_RK.c ****     bResult = write_rtc_register(REG_STATUS, REG_STATUS_DEFAULT);
 394:Core/Src/AB1805_RK.c ****     if (!bResult)
 395:Core/Src/AB1805_RK.c ****     {
 396:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 397:Core/Src/AB1805_RK.c ****         return false;
 398:Core/Src/AB1805_RK.c ****     }
 399:Core/Src/AB1805_RK.c **** 
 400:Core/Src/AB1805_RK.c ****     // Stop countdown timer if already running since it can't be set while running
 401:Core/Src/AB1805_RK.c ****     bResult = write_rtc_register(REG_TIMER_CTRL, REG_TIMER_CTRL_DEFAULT);
 402:Core/Src/AB1805_RK.c ****     if (!bResult)
 403:Core/Src/AB1805_RK.c ****     {
 404:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 405:Core/Src/AB1805_RK.c ****         return false;
 406:Core/Src/AB1805_RK.c ****     }
 407:Core/Src/AB1805_RK.c **** 
 408:Core/Src/AB1805_RK.c ****     // Set countdown timer duration
 409:Core/Src/AB1805_RK.c ****     if (value < 1)
 410:Core/Src/AB1805_RK.c ****     {
 411:Core/Src/AB1805_RK.c ****         value = 1;
 412:Core/Src/AB1805_RK.c ****     }
 413:Core/Src/AB1805_RK.c ****     if (value > 255)
 414:Core/Src/AB1805_RK.c ****     {
 415:Core/Src/AB1805_RK.c ****         value = 255;
 416:Core/Src/AB1805_RK.c ****     }
 417:Core/Src/AB1805_RK.c ****     bResult = write_rtc_register(REG_TIMER, (uint8_t)value);
 418:Core/Src/AB1805_RK.c ****     if (!bResult)
 419:Core/Src/AB1805_RK.c ****     {
 420:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 421:Core/Src/AB1805_RK.c ****         return false;
 422:Core/Src/AB1805_RK.c ****     }
 423:Core/Src/AB1805_RK.c **** 
 424:Core/Src/AB1805_RK.c ****     // Enable countdown timer interrupt (TIE = 1) in IntMask
 425:Core/Src/AB1805_RK.c ****     bResult = setRegisterBit(REG_INT_MASK, REG_INT_MASK_TIE, 0);
 426:Core/Src/AB1805_RK.c ****     if (!bResult)
 427:Core/Src/AB1805_RK.c ****     {
 428:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 429:Core/Src/AB1805_RK.c ****         return false;
 430:Core/Src/AB1805_RK.c ****     }
 431:Core/Src/AB1805_RK.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 9


 432:Core/Src/AB1805_RK.c ****     // Set the TFS frequency to 1/60 Hz for minutes or 1 Hz for seconds
 433:Core/Src/AB1805_RK.c ****     // uint8_t tfs = (minutes ? REG_TIMER_CTRL_TFS_1_60 : REG_TIMER_CTRL_TFS_1);
 434:Core/Src/AB1805_RK.c **** 
 435:Core/Src/AB1805_RK.c ****     // Enable countdown timer (TE = 1) in countdown timer control register
 436:Core/Src/AB1805_RK.c ****     // bResult = write_rtc_register(REG_TIMER_CTRL, REG_TIMER_CTRL_TE | tfs);
 437:Core/Src/AB1805_RK.c ****     bResult = write_rtc_register(REG_TIMER_CTRL, 0x42); // 0xc2
 438:Core/Src/AB1805_RK.c **** 
 439:Core/Src/AB1805_RK.c ****     if (!bResult)
 440:Core/Src/AB1805_RK.c ****     {
 441:Core/Src/AB1805_RK.c ****         printf(errorMsg, __LINE__);
 442:Core/Src/AB1805_RK.c ****         return false;
 443:Core/Src/AB1805_RK.c ****     }
 444:Core/Src/AB1805_RK.c **** 
 445:Core/Src/AB1805_RK.c ****     return true;
 446:Core/Src/AB1805_RK.c **** }
 447:Core/Src/AB1805_RK.c **** 
 448:Core/Src/AB1805_RK.c **** bool maskRegister(uint8_t regAddr, uint8_t andValue, uint8_t orValue, bool lock)
 449:Core/Src/AB1805_RK.c **** {
 450:Core/Src/AB1805_RK.c ****     bool bResult = false;
 451:Core/Src/AB1805_RK.c **** 
 452:Core/Src/AB1805_RK.c ****     uint8_t value;
 453:Core/Src/AB1805_RK.c **** 
 454:Core/Src/AB1805_RK.c ****     value = read_rtc_register(regAddr);
 455:Core/Src/AB1805_RK.c **** 
 456:Core/Src/AB1805_RK.c ****     uint8_t newValue = (value & andValue) | orValue;
 457:Core/Src/AB1805_RK.c **** 
 458:Core/Src/AB1805_RK.c ****     bResult = write_rtc_register(regAddr, newValue);
 459:Core/Src/AB1805_RK.c **** 
 460:Core/Src/AB1805_RK.c ****     return bResult;
 461:Core/Src/AB1805_RK.c **** }
 462:Core/Src/AB1805_RK.c **** 
 463:Core/Src/AB1805_RK.c **** bool isBitClear(uint8_t regAddr, uint8_t bitMask, bool lock)
 464:Core/Src/AB1805_RK.c **** {
 465:Core/Src/AB1805_RK.c ****     bool bResult;
 466:Core/Src/AB1805_RK.c ****     uint8_t value = 0;
 467:Core/Src/AB1805_RK.c **** 
 468:Core/Src/AB1805_RK.c ****     bResult = read_rtc_register(regAddr);
 469:Core/Src/AB1805_RK.c **** 
 470:Core/Src/AB1805_RK.c ****     return bResult && ((value & bitMask) == 0);
 471:Core/Src/AB1805_RK.c **** }
 472:Core/Src/AB1805_RK.c **** 
 473:Core/Src/AB1805_RK.c **** bool isBitSet(uint8_t regAddr, uint8_t bitMask, bool lock)
 474:Core/Src/AB1805_RK.c **** {
 475:Core/Src/AB1805_RK.c ****     bool bResult;
 476:Core/Src/AB1805_RK.c ****     uint8_t value = 0;
 477:Core/Src/AB1805_RK.c **** 
 478:Core/Src/AB1805_RK.c ****     bResult = read_rtc_register(regAddr);
 479:Core/Src/AB1805_RK.c **** 
 480:Core/Src/AB1805_RK.c ****     return bResult && ((value & bitMask) != 0);
 481:Core/Src/AB1805_RK.c **** }
 482:Core/Src/AB1805_RK.c **** 
 483:Core/Src/AB1805_RK.c **** bool clearRegisterBit(uint8_t regAddr, uint8_t bitMask, bool lock)
 484:Core/Src/AB1805_RK.c **** {
 485:Core/Src/AB1805_RK.c ****     return maskRegister(regAddr, ~bitMask, 0x00, lock);
 486:Core/Src/AB1805_RK.c **** }
 487:Core/Src/AB1805_RK.c **** 
 488:Core/Src/AB1805_RK.c **** bool setRegisterBit(uint8_t regAddr, uint8_t bitMask, bool lock)
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 10


 489:Core/Src/AB1805_RK.c **** {
 490:Core/Src/AB1805_RK.c ****     return maskRegister(regAddr, 0xff, bitMask, lock);
 491:Core/Src/AB1805_RK.c **** }
 492:Core/Src/AB1805_RK.c **** 
 493:Core/Src/AB1805_RK.c **** /**
 494:Core/Src/AB1805_RK.c ****  * @brief Erases the RTC RAM to 0x00
 495:Core/Src/AB1805_RK.c ****  */
 496:Core/Src/AB1805_RK.c **** bool eraseRam(bool lock)
 497:Core/Src/AB1805_RK.c **** {
 498:Core/Src/AB1805_RK.c ****     bool bResult = true;
 499:Core/Src/AB1805_RK.c ****     uint8_t array[16];
 500:Core/Src/AB1805_RK.c **** 
 501:Core/Src/AB1805_RK.c ****     memset(array, 0, sizeof(array));
 502:Core/Src/AB1805_RK.c ****     for (size_t ii = 0; ii < 16; ii++)
 503:Core/Src/AB1805_RK.c ****     {
 504:Core/Src/AB1805_RK.c ****         bResult = writeRam(ii * sizeof(array), array, sizeof(array), false);
 505:Core/Src/AB1805_RK.c ****         if (!bResult)
 506:Core/Src/AB1805_RK.c ****         {
 507:Core/Src/AB1805_RK.c ****             printf("erase failed addr=%u\n", ii * sizeof(array));
 508:Core/Src/AB1805_RK.c ****             break;
 509:Core/Src/AB1805_RK.c ****         }
 510:Core/Src/AB1805_RK.c ****     }
 511:Core/Src/AB1805_RK.c ****     return bResult;
 512:Core/Src/AB1805_RK.c **** }
 513:Core/Src/AB1805_RK.c **** 
 514:Core/Src/AB1805_RK.c **** bool readRam(size_t ramAddr, uint8_t *data, size_t dataLen, bool lock)
 515:Core/Src/AB1805_RK.c **** {
 516:Core/Src/AB1805_RK.c ****     bool bResult = true;
 517:Core/Src/AB1805_RK.c **** 
 518:Core/Src/AB1805_RK.c ****     uint32_t primask_bit = utils_enter_critical_section();
 519:Core/Src/AB1805_RK.c **** 
 520:Core/Src/AB1805_RK.c ****     while (dataLen > 0)
 521:Core/Src/AB1805_RK.c ****     {
 522:Core/Src/AB1805_RK.c ****         size_t count = dataLen;
 523:Core/Src/AB1805_RK.c ****         if (count > 32)
 524:Core/Src/AB1805_RK.c ****         {
 525:Core/Src/AB1805_RK.c ****             // Too large for a single I2C operation
 526:Core/Src/AB1805_RK.c ****             count = 32;
 527:Core/Src/AB1805_RK.c ****         }
 528:Core/Src/AB1805_RK.c ****         if ((ramAddr < 128) && ((ramAddr + count) > 128))
 529:Core/Src/AB1805_RK.c ****         {
 530:Core/Src/AB1805_RK.c ****             // Crossing a page boundary
 531:Core/Src/AB1805_RK.c ****             count = 128 - ramAddr;
 532:Core/Src/AB1805_RK.c ****         }
 533:Core/Src/AB1805_RK.c ****         if (ramAddr < 128)
 534:Core/Src/AB1805_RK.c ****         {
 535:Core/Src/AB1805_RK.c ****             clearRegisterBit(REG_EXT_ADDR, REG_EXT_ADDR_XADA, 0);
 536:Core/Src/AB1805_RK.c ****         }
 537:Core/Src/AB1805_RK.c ****         else
 538:Core/Src/AB1805_RK.c ****         {
 539:Core/Src/AB1805_RK.c ****             setRegisterBit(REG_EXT_ADDR, REG_EXT_ADDR_XADA, 0);
 540:Core/Src/AB1805_RK.c ****         }
 541:Core/Src/AB1805_RK.c **** 
 542:Core/Src/AB1805_RK.c ****         bResult = readRegisters(REG_ALT_RAM + (ramAddr & 0x7f), data, count); // !!!!!!!!!
 543:Core/Src/AB1805_RK.c ****         if (!bResult)
 544:Core/Src/AB1805_RK.c ****         {
 545:Core/Src/AB1805_RK.c ****             break;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 11


 546:Core/Src/AB1805_RK.c ****         }
 547:Core/Src/AB1805_RK.c ****         ramAddr += count;
 548:Core/Src/AB1805_RK.c ****         dataLen -= count;
 549:Core/Src/AB1805_RK.c ****         data += count;
 550:Core/Src/AB1805_RK.c ****     }
 551:Core/Src/AB1805_RK.c **** 
 552:Core/Src/AB1805_RK.c ****     utils_exit_critical_section(primask_bit);
 553:Core/Src/AB1805_RK.c **** 
 554:Core/Src/AB1805_RK.c ****     return bResult;
 555:Core/Src/AB1805_RK.c **** }
 556:Core/Src/AB1805_RK.c **** 
 557:Core/Src/AB1805_RK.c **** /**
 558:Core/Src/AB1805_RK.c ****  * @brief Low-level write call
 559:Core/Src/AB1805_RK.c ****  * @param ramAddr The address in the RTC RAM to write to
 560:Core/Src/AB1805_RK.c ****  * @param data The buffer containing the data to write
 561:Core/Src/AB1805_RK.c ****  * @param dataLen The number of bytes to write
 562:Core/Src/AB1805_RK.c ****  * The dataLen can be larger than the maximum I2C write. Multiple writes will be done if necessary.
 563:Core/Src/AB1805_RK.c ****  */
 564:Core/Src/AB1805_RK.c **** bool writeRam(size_t ramAddr, uint8_t *data, size_t dataLen, bool lock) // The initial values of th
 565:Core/Src/AB1805_RK.c **** {
 566:Core/Src/AB1805_RK.c ****     bool bResult = true;
 567:Core/Src/AB1805_RK.c **** 
 568:Core/Src/AB1805_RK.c ****     while (dataLen > 0)
 569:Core/Src/AB1805_RK.c ****     {
 570:Core/Src/AB1805_RK.c ****         size_t count = dataLen;
 571:Core/Src/AB1805_RK.c ****         if (count > 31)
 572:Core/Src/AB1805_RK.c ****         {
 573:Core/Src/AB1805_RK.c ****             // Too large for a single I2C operation
 574:Core/Src/AB1805_RK.c ****             count = 31;
 575:Core/Src/AB1805_RK.c ****         }
 576:Core/Src/AB1805_RK.c ****         if ((ramAddr < 128) && ((ramAddr + count) > 128))
 577:Core/Src/AB1805_RK.c ****         {
 578:Core/Src/AB1805_RK.c ****             // Crossing a page boundary
 579:Core/Src/AB1805_RK.c ****             count = 128 - ramAddr;
 580:Core/Src/AB1805_RK.c ****         }
 581:Core/Src/AB1805_RK.c ****         if (ramAddr < 128)
 582:Core/Src/AB1805_RK.c ****         {
 583:Core/Src/AB1805_RK.c ****             clearRegisterBit(REG_EXT_ADDR, REG_EXT_ADDR_XADA, 0);
 584:Core/Src/AB1805_RK.c ****         }
 585:Core/Src/AB1805_RK.c ****         else
 586:Core/Src/AB1805_RK.c ****         {
 587:Core/Src/AB1805_RK.c ****             setRegisterBit(REG_EXT_ADDR, REG_EXT_ADDR_XADA, 0);
 588:Core/Src/AB1805_RK.c ****         }
 589:Core/Src/AB1805_RK.c **** 
 590:Core/Src/AB1805_RK.c ****         bResult = writeRegisters(REG_ALT_RAM + (ramAddr & 0x7f), data, count);
 591:Core/Src/AB1805_RK.c ****         if (!bResult)
 592:Core/Src/AB1805_RK.c ****         {
 593:Core/Src/AB1805_RK.c ****             break;
 594:Core/Src/AB1805_RK.c ****         }
 595:Core/Src/AB1805_RK.c ****         ramAddr += count;
 596:Core/Src/AB1805_RK.c ****         dataLen -= count;
 597:Core/Src/AB1805_RK.c ****         data += count;
 598:Core/Src/AB1805_RK.c ****     }
 599:Core/Src/AB1805_RK.c **** 
 600:Core/Src/AB1805_RK.c ****     return bResult;
 601:Core/Src/AB1805_RK.c **** }
 602:Core/Src/AB1805_RK.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 12


 603:Core/Src/AB1805_RK.c **** // [static]
 604:Core/Src/AB1805_RK.c **** int bcdToValue(uint8_t bcd)
 605:Core/Src/AB1805_RK.c **** {
 606:Core/Src/AB1805_RK.c ****     return (bcd >> 4) * 10 + (bcd & 0x0f);
 607:Core/Src/AB1805_RK.c **** }
 608:Core/Src/AB1805_RK.c **** 
 609:Core/Src/AB1805_RK.c **** // [static]
 610:Core/Src/AB1805_RK.c **** uint8_t valueToBcd(int value)
 611:Core/Src/AB1805_RK.c **** {
 612:Core/Src/AB1805_RK.c ****     int tens = (value / 10) % 10;
 613:Core/Src/AB1805_RK.c ****     int ones = value % 10;
 614:Core/Src/AB1805_RK.c **** 
 615:Core/Src/AB1805_RK.c ****     return (uint8_t)((tens << 4) | ones);
 616:Core/Src/AB1805_RK.c **** }
 617:Core/Src/AB1805_RK.c **** 
 618:Core/Src/AB1805_RK.c **** /**
 619:Core/Src/AB1805_RK.c ****  * @brief Gets the reason the device was reset or woken. For example, TIMER, ALARM, WATCHDOG, etc.
 620:Core/Src/AB1805_RK.c ****  *
 621:Core/Src/AB1805_RK.c ****  * This is set during setup() automatically (for HIBERNATE, ULP, and SLEEP_MODE_DEEP) as well as
 622:Core/Src/AB1805_RK.c ****  * normal reset, however if you are using STOP mode sleep, you must call `updateWakeReason()` after
 623:Core/Src/AB1805_RK.c ****  * System.sleep() returns to update the wake reason.
 624:Core/Src/AB1805_RK.c ****  */
 625:Core/Src/AB1805_RK.c **** enum WakeReason getWakeReason()
 626:Core/Src/AB1805_RK.c **** {
 627:Core/Src/AB1805_RK.c ****     return wakeReason;
 628:Core/Src/AB1805_RK.c **** };
 629:Core/Src/AB1805_RK.c **** 
 630:Core/Src/AB1805_RK.c **** inline static uint8_t SPI1_SendByte(uint8_t data)
 631:Core/Src/AB1805_RK.c **** {
  27              		.loc 1 631 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 631 1 is_stmt 0 view .LVU1
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0500     		movs	r5, r0
 632:Core/Src/AB1805_RK.c ****     uint32_t start_time = HAL_GetTick();
  40              		.loc 1 632 5 is_stmt 1 view .LVU2
  41              		.loc 1 632 27 is_stmt 0 view .LVU3
  42 0004 FFF7FEFF 		bl	HAL_GetTick
  43              	.LVL1:
  44              		.loc 1 632 27 view .LVU4
  45 0008 0400     		movs	r4, r0
  46              	.LVL2:
 633:Core/Src/AB1805_RK.c ****     while (LL_SPI_IsActiveFlag_TXE(SPI1) == RESET)
  47              		.loc 1 633 5 is_stmt 1 view .LVU5
  48              	.L6:
  49              		.loc 1 633 42 view .LVU6
  50              	.LBB79:
  51              	.LBI79:
  52              		.file 2 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h"
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 13


   1:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
   2:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   ******************************************************************************
   3:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @file    stm32u0xx_ll_spi.h
   4:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @author  MCD Application Team
   5:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief   Header file of SPI LL module.
   6:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   ******************************************************************************
   7:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @attention
   8:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *
   9:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * Copyright (c) 2023 STMicroelectronics.
  10:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * All rights reserved.
  11:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *
  12:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * in the root directory of this software component.
  14:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *
  16:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   ******************************************************************************
  17:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  18:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  19:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #ifndef STM32U0xx_LL_SPI_H
  21:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define STM32U0xx_LL_SPI_H
  22:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  23:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #ifdef __cplusplus
  24:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** extern "C" {
  25:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #endif
  26:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  27:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #include "stm32u0xx.h"
  29:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  30:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @addtogroup STM32U0xx_LL_Driver
  31:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
  32:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  33:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  34:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #if defined (SPI1) || defined (SPI2) || defined (SPI3)
  35:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  36:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL SPI
  37:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
  38:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  39:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  40:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Private macros ------------------------------------------------------------*/
  43:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  44:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Exported types ------------------------------------------------------------*/
  45:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #if defined(USE_FULL_LL_DRIVER)
  46:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_ES_INIT SPI Exported Init structure
  47:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
  48:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  49:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  50:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
  51:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  SPI Init structures definition
  52:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
  53:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** typedef struct
  54:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
  55:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t TransferDirection;       /*!< Specifies the SPI unidirectional or bidirectional data mod
  56:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_TRANSFER_M
  57:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 14


  58:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  59:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  60:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t Mode;                    /*!< Specifies the SPI mode (Master/Slave).
  61:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_MODE.
  62:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  63:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  64:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  65:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t DataWidth;               /*!< Specifies the SPI data width.
  66:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_DATAWIDTH.
  67:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  68:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  69:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  70:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t ClockPolarity;           /*!< Specifies the serial clock steady state.
  71:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_POLARITY.
  72:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  73:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  74:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  75:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t ClockPhase;              /*!< Specifies the clock active edge for the bit capture.
  76:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_PHASE.
  77:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  78:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  79:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  80:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t NSS;                     /*!< Specifies whether the NSS signal is managed by hardware (N
  81:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_NSS_MODE.
  82:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  83:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  84:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  85:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t BaudRate;                /*!< Specifies the BaudRate prescaler value which will be used 
  86:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_BAUDRATEPR
  87:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          @note The communication clock is derived from the master c
  88:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  89:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  90:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  91:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t BitOrder;                /*!< Specifies whether data transfers start from MSB or LSB bit
  92:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_BIT_ORDER.
  93:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  94:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  95:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  96:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t CRCCalculation;          /*!< Specifies if the CRC calculation is enabled or not.
  97:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_CRC_CALCUL
  98:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
  99:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 100:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 101:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t CRCPoly;                 /*!< Specifies the polynomial used for the CRC calculation.
 102:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This parameter must be a number between Min_Data = 0x00 an
 103:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 104:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 105:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 106:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** } LL_SPI_InitTypeDef;
 107:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 108:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 109:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 110:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 111:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #endif /* USE_FULL_LL_DRIVER */
 112:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 113:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Exported constants --------------------------------------------------------*/
 114:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Constants SPI Exported Constants
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 15


 115:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 116:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 117:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 118:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_GET_FLAG Get Flags Defines
 119:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief    Flags defines which can be used with LL_SPI_ReadReg function
 120:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 121:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 122:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_RXNE                     SPI_SR_RXNE               /*!< Rx buffer not empty flag 
 123:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_TXE                      SPI_SR_TXE                /*!< Tx buffer empty flag     
 124:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_BSY                      SPI_SR_BSY                /*!< Busy flag                
 125:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_CRCERR                   SPI_SR_CRCERR             /*!< CRC error flag           
 126:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_MODF                     SPI_SR_MODF               /*!< Mode fault flag          
 127:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_OVR                      SPI_SR_OVR                /*!< Overrun flag             
 128:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SR_FRE                      SPI_SR_FRE                /*!< TI mode frame format erro
 129:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 130:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 131:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 132:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 133:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_IT IT Defines
 134:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief    IT defines which can be used with LL_SPI_ReadReg and  LL_SPI_WriteReg functions
 135:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 136:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 137:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CR2_RXNEIE                  SPI_CR2_RXNEIE            /*!< Rx buffer not empty inter
 138:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CR2_TXEIE                   SPI_CR2_TXEIE             /*!< Tx buffer empty interrupt
 139:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CR2_ERRIE                   SPI_CR2_ERRIE             /*!< Error interrupt enable   
 140:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 141:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 142:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 143:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 144:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_MODE Operation Mode
 145:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 146:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 147:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_MODE_MASTER                 (SPI_CR1_MSTR | SPI_CR1_SSI)    /*!< Master configuratio
 148:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_MODE_SLAVE                  0x00000000U                     /*!< Slave configuration
 149:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 150:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 151:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 152:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 153:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_PROTOCOL Serial Protocol
 154:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 155:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 156:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_PROTOCOL_MOTOROLA           0x00000000U               /*!< Motorola mode. Used as de
 157:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_PROTOCOL_TI                 (SPI_CR2_FRF)             /*!< TI mode                  
 158:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 159:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 160:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 161:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 162:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_PHASE Clock Phase
 163:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 164:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 165:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_PHASE_1EDGE                 0x00000000U               /*!< First clock transition is
 166:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_PHASE_2EDGE                 (SPI_CR1_CPHA)            /*!< Second clock transition i
 167:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 168:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 169:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 170:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 171:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_POLARITY Clock Polarity
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 16


 172:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 173:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 174:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_POLARITY_LOW                0x00000000U               /*!< Clock to 0 when idle */
 175:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_POLARITY_HIGH               (SPI_CR1_CPOL)            /*!< Clock to 1 when idle */
 176:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 177:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 178:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 179:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 180:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_BAUDRATEPRESCALER Baud Rate Prescaler
 181:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 182:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 183:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV2      0x00000000U                                    /*!< Baud
 184:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV4      (SPI_CR1_BR_0)                                 /*!< Baud
 185:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV8      (SPI_CR1_BR_1)                                 /*!< Baud
 186:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV16     (SPI_CR1_BR_1 | SPI_CR1_BR_0)                  /*!< Baud
 187:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV32     (SPI_CR1_BR_2)                                 /*!< Baud
 188:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV64     (SPI_CR1_BR_2 | SPI_CR1_BR_0)                  /*!< Baud
 189:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV128    (SPI_CR1_BR_2 | SPI_CR1_BR_1)                  /*!< Baud
 190:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV256    (SPI_CR1_BR_2 | SPI_CR1_BR_1 | SPI_CR1_BR_0)   /*!< Baud
 191:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 192:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 193:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 194:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 195:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_BIT_ORDER Transmission Bit Order
 196:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 197:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 198:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_LSB_FIRST                   (SPI_CR1_LSBFIRST)        /*!< Data is transmitted/recei
 199:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_MSB_FIRST                   0x00000000U               /*!< Data is transmitted/recei
 200:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 201:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 202:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 203:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 204:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_TRANSFER_MODE Transfer Mode
 205:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 206:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 207:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_FULL_DUPLEX                 0x00000000U                          /*!< Full-Duplex mo
 208:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_SIMPLEX_RX                  (SPI_CR1_RXONLY)                     /*!< Simplex Rx mod
 209:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_HALF_DUPLEX_RX              (SPI_CR1_BIDIMODE)                   /*!< Half-Duplex Rx
 210:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_HALF_DUPLEX_TX              (SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE)  /*!< Half-Duplex Tx
 211:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 212:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 213:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 214:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 215:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_NSS_MODE Slave Select Pin Mode
 216:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 217:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 218:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_NSS_SOFT                    (SPI_CR1_SSM)                     /*!< NSS managed inter
 219:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_NSS_HARD_INPUT              0x00000000U                       /*!< NSS pin used in I
 220:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_NSS_HARD_OUTPUT             (((uint32_t)SPI_CR2_SSOE << 16U)) /*!< NSS pin used in O
 221:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 222:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 223:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 224:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 225:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_DATAWIDTH Datawidth
 226:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 227:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 228:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_4BIT              (SPI_CR2_DS_0 | SPI_CR2_DS_1)                           
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 17


 229:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_5BIT              (SPI_CR2_DS_2)                                          
 230:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_6BIT              (SPI_CR2_DS_2 | SPI_CR2_DS_0)                           
 231:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_7BIT              (SPI_CR2_DS_2 | SPI_CR2_DS_1)                           
 232:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_8BIT              (SPI_CR2_DS_2 | SPI_CR2_DS_1 | SPI_CR2_DS_0)            
 233:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_9BIT              (SPI_CR2_DS_3)                                          
 234:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_10BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_0)                           
 235:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_11BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_1)                           
 236:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_12BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_1 | SPI_CR2_DS_0)            
 237:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_13BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2)                           
 238:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_14BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2 | SPI_CR2_DS_0)            
 239:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_15BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2 | SPI_CR2_DS_1)            
 240:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_16BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2 | SPI_CR2_DS_1 | SPI_CR2_DS
 241:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 242:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 243:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 244:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #if defined(USE_FULL_LL_DRIVER)
 245:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 246:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_CRC_CALCULATION CRC Calculation
 247:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 248:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 249:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CRCCALCULATION_DISABLE      0x00000000U               /*!< CRC calculation disabled 
 250:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CRCCALCULATION_ENABLE       (SPI_CR1_CRCEN)           /*!< CRC calculation enabled  
 251:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 252:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 253:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 254:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #endif /* USE_FULL_LL_DRIVER */
 255:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_CRC_LENGTH CRC Length
 257:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 258:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 259:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CRC_8BIT                    0x00000000U               /*!<  8-bit CRC length */
 260:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_CRC_16BIT                   (SPI_CR1_CRCL)            /*!< 16-bit CRC length */
 261:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 262:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 263:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 264:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 265:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_RX_FIFO_TH RX FIFO Threshold
 266:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 267:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 268:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_TH_HALF             0x00000000U               /*!< RXNE event is generated i
 269:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_TH_QUARTER          (SPI_CR2_FRXTH)           /*!< RXNE event is generated i
 270:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 271:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 272:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 273:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 274:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_RX_FIFO RX FIFO Level
 275:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 276:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 277:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_EMPTY               0x00000000U                       /*!< FIFO reception em
 278:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_QUARTER_FULL        (SPI_SR_FRLVL_0)                  /*!< FIFO reception 1/
 279:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_HALF_FULL           (SPI_SR_FRLVL_1)                  /*!< FIFO reception 1/
 280:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_FULL                (SPI_SR_FRLVL_1 | SPI_SR_FRLVL_0) /*!< FIFO reception fu
 281:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 282:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 283:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 284:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 285:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_TX_FIFO TX FIFO Level
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 18


 286:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 287:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 288:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_EMPTY               0x00000000U                       /*!< FIFO transmission
 289:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_QUARTER_FULL        (SPI_SR_FTLVL_0)                  /*!< FIFO transmission
 290:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_HALF_FULL           (SPI_SR_FTLVL_1)                  /*!< FIFO transmission
 291:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_FULL                (SPI_SR_FTLVL_1 | SPI_SR_FTLVL_0) /*!< FIFO transmission
 292:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 293:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 294:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 295:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 296:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_DMA_PARITY DMA Parity
 297:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 298:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 299:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DMA_PARITY_EVEN             0x00000000U   /*!< Select DMA parity Even */
 300:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_DMA_PARITY_ODD              0x00000001U   /*!< Select DMA parity Odd  */
 301:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 302:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 303:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 304:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 305:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 306:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 307:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 308:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 309:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 310:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Exported macro ------------------------------------------------------------*/
 311:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Macros SPI Exported Macros
 312:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 313:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 314:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 315:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EM_WRITE_READ Common Write and read registers Macros
 316:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 317:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 318:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 319:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 320:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Write a value in SPI register
 321:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __INSTANCE__ SPI Instance
 322:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __REG__ Register to be written
 323:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __VALUE__ Value to be written in the register
 324:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 325:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 326:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 327:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 328:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 329:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Read a value in SPI register
 330:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __INSTANCE__ SPI Instance
 331:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  __REG__ Register to be read
 332:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Register value
 333:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 334:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #define LL_SPI_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 336:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 337:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 338:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 339:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 340:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 341:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 342:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 19


 343:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /* Exported functions --------------------------------------------------------*/
 344:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Functions SPI Exported Functions
 345:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 346:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 347:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 348:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_Configuration Configuration
 349:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 350:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 351:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 352:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 353:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable SPI peripheral
 354:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_Enable
 355:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 356:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 357:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 358:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_Enable(SPI_TypeDef *SPIx)
 359:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 360:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_SPE);
 361:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 362:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 363:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 364:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable SPI peripheral
 365:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   When disabling the SPI, follow the procedure described in the Reference Manual.
 366:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_Disable
 367:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 368:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 369:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 370:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_Disable(SPI_TypeDef *SPIx)
 371:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 372:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_SPE);
 373:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 374:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 375:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 376:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if SPI peripheral is enabled
 377:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_IsEnabled
 378:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 379:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 380:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 381:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabled(SPI_TypeDef *SPIx)
 382:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 383:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR1, SPI_CR1_SPE) == (SPI_CR1_SPE)) ? 1UL : 0UL);
 384:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 385:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 386:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 387:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set SPI operation mode to Master or Slave
 388:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 389:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          MSTR          LL_SPI_SetMode\n
 390:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          SSI           LL_SPI_SetMode
 391:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 392:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Mode This parameter can be one of the following values:
 393:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_MASTER
 394:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_SLAVE
 395:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 396:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 397:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetMode(SPI_TypeDef *SPIx, uint32_t Mode)
 398:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 399:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_MSTR | SPI_CR1_SSI, Mode);
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 20


 400:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 401:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 402:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 403:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get SPI operation mode (Master or Slave)
 404:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          MSTR          LL_SPI_GetMode\n
 405:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          SSI           LL_SPI_GetMode
 406:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 407:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 408:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_MASTER
 409:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_SLAVE
 410:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 411:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetMode(SPI_TypeDef *SPIx)
 412:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 413:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_MSTR | SPI_CR1_SSI));
 414:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 415:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 416:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 417:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set serial protocol used
 418:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 419:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          FRF           LL_SPI_SetStandard
 420:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 421:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Standard This parameter can be one of the following values:
 422:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_MOTOROLA
 423:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_TI
 424:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 425:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 426:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetStandard(SPI_TypeDef *SPIx, uint32_t Standard)
 427:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 428:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_FRF, Standard);
 429:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 430:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 431:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 432:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get serial protocol used
 433:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          FRF           LL_SPI_GetStandard
 434:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 435:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 436:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_MOTOROLA
 437:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_TI
 438:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 439:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetStandard(SPI_TypeDef *SPIx)
 440:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 441:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_FRF));
 442:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 443:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 444:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 445:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set clock phase
 446:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 447:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         This bit is not used in SPI TI mode.
 448:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CPHA          LL_SPI_SetClockPhase
 449:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 450:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  ClockPhase This parameter can be one of the following values:
 451:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_1EDGE
 452:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_2EDGE
 453:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 454:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 455:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetClockPhase(SPI_TypeDef *SPIx, uint32_t ClockPhase)
 456:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 21


 457:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CPHA, ClockPhase);
 458:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 459:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 460:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 461:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get clock phase
 462:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CPHA          LL_SPI_GetClockPhase
 463:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 464:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 465:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_1EDGE
 466:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_2EDGE
 467:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 468:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetClockPhase(SPI_TypeDef *SPIx)
 469:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 470:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CPHA));
 471:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 472:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 473:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 474:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set clock polarity
 475:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 476:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         This bit is not used in SPI TI mode.
 477:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CPOL          LL_SPI_SetClockPolarity
 478:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 479:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 480:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_LOW
 481:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_HIGH
 482:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 483:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 484:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetClockPolarity(SPI_TypeDef *SPIx, uint32_t ClockPolarity)
 485:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 486:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CPOL, ClockPolarity);
 487:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 488:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 489:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 490:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get clock polarity
 491:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CPOL          LL_SPI_GetClockPolarity
 492:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 493:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 494:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_LOW
 495:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_HIGH
 496:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 497:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetClockPolarity(SPI_TypeDef *SPIx)
 498:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 499:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CPOL));
 500:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 501:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 502:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 503:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set baud rate prescaler
 504:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   These bits should not be changed when communication is ongoing. SPI BaudRate = fPCLK/Pr
 505:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          BR            LL_SPI_SetBaudRatePrescaler
 506:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 507:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  BaudRate This parameter can be one of the following values:
 508:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV2
 509:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV4
 510:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV8
 511:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV16
 512:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV32
 513:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV64
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 22


 514:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV128
 515:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV256
 516:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 517:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 518:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetBaudRatePrescaler(SPI_TypeDef *SPIx, uint32_t BaudRate)
 519:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 520:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_BR, BaudRate);
 521:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 522:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 523:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 524:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get baud rate prescaler
 525:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          BR            LL_SPI_GetBaudRatePrescaler
 526:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 527:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 528:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV2
 529:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV4
 530:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV8
 531:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV16
 532:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV32
 533:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV64
 534:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV128
 535:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV256
 536:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 537:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetBaudRatePrescaler(SPI_TypeDef *SPIx)
 538:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 539:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_BR));
 540:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 541:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 542:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 543:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set transfer bit order
 544:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 545:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          LSBFIRST      LL_SPI_SetTransferBitOrder
 546:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 547:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  BitOrder This parameter can be one of the following values:
 548:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_LSB_FIRST
 549:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MSB_FIRST
 550:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 551:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 552:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetTransferBitOrder(SPI_TypeDef *SPIx, uint32_t BitOrder)
 553:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 554:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_LSBFIRST, BitOrder);
 555:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 556:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 557:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 558:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get transfer bit order
 559:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          LSBFIRST      LL_SPI_GetTransferBitOrder
 560:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 561:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 562:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_LSB_FIRST
 563:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MSB_FIRST
 564:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 565:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTransferBitOrder(SPI_TypeDef *SPIx)
 566:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 567:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_LSBFIRST));
 568:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 569:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 570:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 23


 571:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set transfer direction mode
 572:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   For Half-Duplex mode, Rx Direction is set by default.
 573:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         In master mode, the MOSI pin is used and in slave mode, the MISO pin is used for Half-D
 574:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          RXONLY        LL_SPI_SetTransferDirection\n
 575:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          BIDIMODE      LL_SPI_SetTransferDirection\n
 576:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          BIDIOE        LL_SPI_SetTransferDirection
 577:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 578:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  TransferDirection This parameter can be one of the following values:
 579:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_FULL_DUPLEX
 580:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_SIMPLEX_RX
 581:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_RX
 582:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_TX
 583:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 584:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 585:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetTransferDirection(SPI_TypeDef *SPIx, uint32_t TransferDirection)
 586:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 587:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_RXONLY | SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE, TransferDirection);
 588:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 589:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 590:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 591:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get transfer direction mode
 592:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          RXONLY        LL_SPI_GetTransferDirection\n
 593:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          BIDIMODE      LL_SPI_GetTransferDirection\n
 594:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         CR1          BIDIOE        LL_SPI_GetTransferDirection
 595:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 596:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 597:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_FULL_DUPLEX
 598:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_SIMPLEX_RX
 599:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_RX
 600:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_TX
 601:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 602:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTransferDirection(SPI_TypeDef *SPIx)
 603:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 604:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_RXONLY | SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE));
 605:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 606:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 607:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 608:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set frame data width
 609:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          DS            LL_SPI_SetDataWidth
 610:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 611:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  DataWidth This parameter can be one of the following values:
 612:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_4BIT
 613:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_5BIT
 614:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_6BIT
 615:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_7BIT
 616:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_8BIT
 617:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_9BIT
 618:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_10BIT
 619:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_11BIT
 620:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_12BIT
 621:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_13BIT
 622:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_14BIT
 623:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_15BIT
 624:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_16BIT
 625:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 626:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 627:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetDataWidth(SPI_TypeDef *SPIx, uint32_t DataWidth)
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 24


 628:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 629:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_DS, DataWidth);
 630:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 631:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 632:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 633:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get frame data width
 634:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          DS            LL_SPI_GetDataWidth
 635:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 636:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 637:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_4BIT
 638:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_5BIT
 639:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_6BIT
 640:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_7BIT
 641:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_8BIT
 642:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_9BIT
 643:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_10BIT
 644:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_11BIT
 645:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_12BIT
 646:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_13BIT
 647:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_14BIT
 648:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_15BIT
 649:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_16BIT
 650:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 651:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetDataWidth(SPI_TypeDef *SPIx)
 652:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 653:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_DS));
 654:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 655:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 656:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 657:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set threshold of RXFIFO that triggers an RXNE event
 658:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          FRXTH         LL_SPI_SetRxFIFOThreshold
 659:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 660:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Threshold This parameter can be one of the following values:
 661:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_HALF
 662:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_QUARTER
 663:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 664:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 665:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetRxFIFOThreshold(SPI_TypeDef *SPIx, uint32_t Threshold)
 666:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 667:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_FRXTH, Threshold);
 668:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 669:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 670:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 671:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get threshold of RXFIFO that triggers an RXNE event
 672:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          FRXTH         LL_SPI_GetRxFIFOThreshold
 673:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 674:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 675:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_HALF
 676:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_QUARTER
 677:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 678:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetRxFIFOThreshold(SPI_TypeDef *SPIx)
 679:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 680:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_FRXTH));
 681:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 682:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 683:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 684:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 25


 685:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 686:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 687:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_CRC_Management CRC Management
 688:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 689:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 690:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 691:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 692:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable CRC
 693:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 694:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_EnableCRC
 695:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 696:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 697:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 698:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableCRC(SPI_TypeDef *SPIx)
 699:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 700:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_CRCEN);
 701:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 702:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 703:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 704:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable CRC
 705:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 706:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_DisableCRC
 707:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 708:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 709:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 710:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableCRC(SPI_TypeDef *SPIx)
 711:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 712:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_CRCEN);
 713:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 714:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 715:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 716:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if CRC is enabled
 717:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 718:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_IsEnabledCRC
 719:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 720:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 721:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 722:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledCRC(SPI_TypeDef *SPIx)
 723:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 724:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR1, SPI_CR1_CRCEN) == (SPI_CR1_CRCEN)) ? 1UL : 0UL);
 725:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 726:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 727:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 728:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set CRC Length
 729:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 730:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCL          LL_SPI_SetCRCWidth
 731:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 732:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  CRCLength This parameter can be one of the following values:
 733:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_8BIT
 734:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_16BIT
 735:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 736:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 737:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCWidth(SPI_TypeDef *SPIx, uint32_t CRCLength)
 738:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 739:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CRCL, CRCLength);
 740:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 741:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 26


 742:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 743:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get CRC Length
 744:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCL          LL_SPI_GetCRCWidth
 745:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 746:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 747:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_8BIT
 748:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_16BIT
 749:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 750:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetCRCWidth(SPI_TypeDef *SPIx)
 751:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 752:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CRCL));
 753:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 754:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 755:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 756:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set CRCNext to transfer CRC on the line
 757:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit has to be written as soon as the last data is written in the SPIx_DR register.
 758:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          CRCNEXT       LL_SPI_SetCRCNext
 759:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 760:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 761:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 762:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCNext(SPI_TypeDef *SPIx)
 763:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 764:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_CRCNEXT);
 765:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 766:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 767:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 768:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set polynomial for CRC calculation
 769:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CRCPR        CRCPOLY       LL_SPI_SetCRCPolynomial
 770:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 771:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  CRCPoly This parameter must be a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 772:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 773:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 774:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCPolynomial(SPI_TypeDef *SPIx, uint32_t CRCPoly)
 775:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 776:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   WRITE_REG(SPIx->CRCPR, (uint16_t)CRCPoly);
 777:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 778:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 779:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 780:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get polynomial for CRC calculation
 781:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CRCPR        CRCPOLY       LL_SPI_GetCRCPolynomial
 782:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 783:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 784:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 785:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetCRCPolynomial(SPI_TypeDef *SPIx)
 786:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 787:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->CRCPR));
 788:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 789:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 790:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 791:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get Rx CRC
 792:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll RXCRCR       RXCRC         LL_SPI_GetRxCRC
 793:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 794:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 795:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 796:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetRxCRC(SPI_TypeDef *SPIx)
 797:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 798:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->RXCRCR));
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 27


 799:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 800:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 801:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 802:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get Tx CRC
 803:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll TXCRCR       TXCRC         LL_SPI_GetTxCRC
 804:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 805:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 806:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 807:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTxCRC(SPI_TypeDef *SPIx)
 808:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 809:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->TXCRCR));
 810:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 811:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 812:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 813:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 814:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 815:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 816:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_NSS_Management Slave Select Pin Management
 817:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 818:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 819:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 820:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 821:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set NSS mode
 822:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   LL_SPI_NSS_SOFT Mode is not used in SPI TI mode.
 823:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SSM           LL_SPI_SetNSSMode\n
 824:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          SSOE          LL_SPI_SetNSSMode
 825:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 826:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  NSS This parameter can be one of the following values:
 827:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_SOFT
 828:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_INPUT
 829:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_OUTPUT
 830:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 831:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 832:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetNSSMode(SPI_TypeDef *SPIx, uint32_t NSS)
 833:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 834:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_SSM,  NSS);
 835:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_SSOE, ((uint32_t)(NSS >> 16U)));
 836:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 837:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 838:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 839:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get NSS mode
 840:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR1          SSM           LL_SPI_GetNSSMode\n
 841:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          SSOE          LL_SPI_GetNSSMode
 842:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 843:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 844:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_SOFT
 845:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_INPUT
 846:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_OUTPUT
 847:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 848:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetNSSMode(SPI_TypeDef *SPIx)
 849:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 850:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t Ssm  = (READ_BIT(SPIx->CR1, SPI_CR1_SSM));
 851:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   uint32_t Ssoe = (READ_BIT(SPIx->CR2,  SPI_CR2_SSOE) << 16U);
 852:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (Ssm | Ssoe);
 853:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 854:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 855:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 28


 856:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable NSS pulse management
 857:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 858:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          NSSP          LL_SPI_EnableNSSPulseMgt
 859:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 860:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 861:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 862:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableNSSPulseMgt(SPI_TypeDef *SPIx)
 863:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 864:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_NSSP);
 865:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 866:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 867:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 868:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable NSS pulse management
 869:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 870:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          NSSP          LL_SPI_DisableNSSPulseMgt
 871:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 872:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
 873:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 874:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableNSSPulseMgt(SPI_TypeDef *SPIx)
 875:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 876:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_NSSP);
 877:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 878:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 879:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 880:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if NSS pulse is enabled
 881:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 882:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          NSSP          LL_SPI_IsEnabledNSSPulse
 883:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 884:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 885:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 886:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledNSSPulse(SPI_TypeDef *SPIx)
 887:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 888:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_NSSP) == (SPI_CR2_NSSP)) ? 1UL : 0UL);
 889:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 890:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 891:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 892:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
 893:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 894:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 895:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_FLAG_Management FLAG Management
 896:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
 897:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 898:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 899:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 900:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if Rx buffer is not empty
 901:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           RXNE          LL_SPI_IsActiveFlag_RXNE
 902:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 903:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 904:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 905:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_RXNE(SPI_TypeDef *SPIx)
 906:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_RXNE) == (SPI_SR_RXNE)) ? 1UL : 0UL);
 908:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 909:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 910:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 911:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if Tx buffer is empty
 912:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           TXE           LL_SPI_IsActiveFlag_TXE
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 29


 913:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 914:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 915:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 916:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_TXE(SPI_TypeDef *SPIx)
  53              		.loc 2 916 26 view .LVU7
  54              	.LBB80:
 917:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 918:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_TXE) == (SPI_SR_TXE)) ? 1UL : 0UL);
  55              		.loc 2 918 3 view .LVU8
  56              		.loc 2 918 12 is_stmt 0 view .LVU9
  57 000a 154B     		ldr	r3, .L10
  58 000c 9B68     		ldr	r3, [r3, #8]
  59              		.loc 2 918 66 view .LVU10
  60 000e 9B07     		lsls	r3, r3, #30
  61 0010 15D5     		bpl	.L3
  62              	.LVL3:
  63              		.loc 2 918 66 view .LVU11
  64              	.LBE80:
  65              	.LBE79:
 634:Core/Src/AB1805_RK.c ****     {
 635:Core/Src/AB1805_RK.c ****         if ((HAL_GetTick() - start_time) > 1000)
 636:Core/Src/AB1805_RK.c ****         {
 637:Core/Src/AB1805_RK.c ****             print_error(__func__, __LINE__);
 638:Core/Src/AB1805_RK.c ****         }
 639:Core/Src/AB1805_RK.c ****     }
 640:Core/Src/AB1805_RK.c **** 
 641:Core/Src/AB1805_RK.c ****     LL_SPI_TransmitData8(SPI1, data);
  66              		.loc 1 641 5 is_stmt 1 view .LVU12
  67              	.LBB81:
  68              	.LBI81:
 919:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 920:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 921:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 922:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get CRC error flag
 923:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           CRCERR        LL_SPI_IsActiveFlag_CRCERR
 924:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 925:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 926:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 927:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_CRCERR(SPI_TypeDef *SPIx)
 928:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 929:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_CRCERR) == (SPI_SR_CRCERR)) ? 1UL : 0UL);
 930:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 931:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 932:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 933:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get mode fault error flag
 934:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           MODF          LL_SPI_IsActiveFlag_MODF
 935:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 936:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 937:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 938:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_MODF(SPI_TypeDef *SPIx)
 939:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 940:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_MODF) == (SPI_SR_MODF)) ? 1UL : 0UL);
 941:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 942:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 943:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 944:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get overrun error flag
 945:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           OVR           LL_SPI_IsActiveFlag_OVR
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 30


 946:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 947:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 948:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 949:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_OVR(SPI_TypeDef *SPIx)
 950:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 951:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_OVR) == (SPI_SR_OVR)) ? 1UL : 0UL);
 952:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 953:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 954:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 955:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get busy flag
 956:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   The BSY flag is cleared under any one of the following conditions:
 957:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * -When the SPI is correctly disabled
 958:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * -When a fault is detected in Master mode (MODF bit set to 1)
 959:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * -In Master mode, when it finishes a data transmission and no new data is ready to be
 960:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * sent
 961:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * -In Slave mode, when the BSY flag is set to '0' for at least one SPI clock cycle between
 962:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * each data transfer.
 963:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           BSY           LL_SPI_IsActiveFlag_BSY
 964:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 965:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 966:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 967:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_BSY(SPI_TypeDef *SPIx)
 968:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 969:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_BSY) == (SPI_SR_BSY)) ? 1UL : 0UL);
 970:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 971:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 972:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 973:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get frame format error flag
 974:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           FRE           LL_SPI_IsActiveFlag_FRE
 975:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 976:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 977:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 978:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_FRE(SPI_TypeDef *SPIx)
 979:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 980:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_FRE) == (SPI_SR_FRE)) ? 1UL : 0UL);
 981:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 982:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 983:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 984:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get FIFO reception Level
 985:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           FRLVL         LL_SPI_GetRxFIFOLevel
 986:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 987:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 988:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_EMPTY
 989:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_QUARTER_FULL
 990:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_HALF_FULL
 991:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_FULL
 992:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
 993:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetRxFIFOLevel(SPI_TypeDef *SPIx)
 994:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 995:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->SR, SPI_SR_FRLVL));
 996:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 997:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
 998:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
 999:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get FIFO Transmission Level
1000:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           FTLVL         LL_SPI_GetTxFIFOLevel
1001:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1002:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 31


1003:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_TX_FIFO_EMPTY
1004:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_TX_FIFO_QUARTER_FULL
1005:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_TX_FIFO_HALF_FULL
1006:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_TX_FIFO_FULL
1007:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1008:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTxFIFOLevel(SPI_TypeDef *SPIx)
1009:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1010:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->SR, SPI_SR_FTLVL));
1011:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1012:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1013:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1014:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Clear CRC error flag
1015:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           CRCERR        LL_SPI_ClearFlag_CRCERR
1016:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1017:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1018:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1019:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_CRCERR(SPI_TypeDef *SPIx)
1020:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1021:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->SR, SPI_SR_CRCERR);
1022:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1023:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1024:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1025:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Clear mode fault error flag
1026:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   Clearing this flag is done by a read access to the SPIx_SR
1027:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         register followed by a write access to the SPIx_CR1 register
1028:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           MODF          LL_SPI_ClearFlag_MODF
1029:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1030:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1031:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1032:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_MODF(SPI_TypeDef *SPIx)
1033:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1034:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   __IO uint32_t tmpreg_sr;
1035:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   tmpreg_sr = SPIx->SR;
1036:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   (void) tmpreg_sr;
1037:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_SPE);
1038:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1039:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1040:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1041:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Clear overrun error flag
1042:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   Clearing this flag is done by a read access to the SPIx_DR
1043:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         register followed by a read access to the SPIx_SR register
1044:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           OVR           LL_SPI_ClearFlag_OVR
1045:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1046:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1047:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1048:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_OVR(SPI_TypeDef *SPIx)
1049:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1050:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   __IO uint32_t tmpreg;
1051:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   tmpreg = SPIx->DR;
1052:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   (void) tmpreg;
1053:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   tmpreg = SPIx->SR;
1054:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   (void) tmpreg;
1055:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1056:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1057:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1058:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Clear frame format error flag
1059:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   Clearing this flag is done by reading SPIx_SR register
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 32


1060:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll SR           FRE           LL_SPI_ClearFlag_FRE
1061:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1062:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1063:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1064:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_FRE(SPI_TypeDef *SPIx)
1065:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1066:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   __IO uint32_t tmpreg;
1067:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   tmpreg = SPIx->SR;
1068:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   (void) tmpreg;
1069:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1070:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1071:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1072:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
1073:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1074:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1075:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_IT_Management Interrupt Management
1076:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
1077:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1078:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1079:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1080:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable error interrupt
1081:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit controls the generation of an interrupt when an error condition occurs (CRCERR
1082:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_EnableIT_ERR
1083:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1084:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1085:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1086:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_ERR(SPI_TypeDef *SPIx)
1087:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1088:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_ERRIE);
1089:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1090:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1091:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1092:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable Rx buffer not empty interrupt
1093:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_EnableIT_RXNE
1094:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1095:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1096:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1097:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_RXNE(SPI_TypeDef *SPIx)
1098:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1099:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_RXNEIE);
1100:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1101:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1102:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1103:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable Tx buffer empty interrupt
1104:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_EnableIT_TXE
1105:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1106:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1107:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1108:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_TXE(SPI_TypeDef *SPIx)
1109:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1110:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_TXEIE);
1111:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1112:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1113:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1114:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable error interrupt
1115:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @note   This bit controls the generation of an interrupt when an error condition occurs (CRCERR
1116:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_DisableIT_ERR
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 33


1117:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1118:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1119:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1120:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_ERR(SPI_TypeDef *SPIx)
1121:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1122:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_ERRIE);
1123:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1124:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1125:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1126:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable Rx buffer not empty interrupt
1127:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_DisableIT_RXNE
1128:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1129:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1130:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1131:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_RXNE(SPI_TypeDef *SPIx)
1132:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1133:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_RXNEIE);
1134:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1135:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1136:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1137:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable Tx buffer empty interrupt
1138:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_DisableIT_TXE
1139:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1140:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1141:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1142:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_TXE(SPI_TypeDef *SPIx)
1143:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1144:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_TXEIE);
1145:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1146:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1147:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1148:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if error interrupt is enabled
1149:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_IsEnabledIT_ERR
1150:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1151:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1152:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1153:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_ERR(SPI_TypeDef *SPIx)
1154:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1155:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_ERRIE) == (SPI_CR2_ERRIE)) ? 1UL : 0UL);
1156:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1157:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1158:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1159:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if Rx buffer not empty interrupt is enabled
1160:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_IsEnabledIT_RXNE
1161:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1162:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1163:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1164:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_RXNE(SPI_TypeDef *SPIx)
1165:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1166:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_RXNEIE) == (SPI_CR2_RXNEIE)) ? 1UL : 0UL);
1167:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1168:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1169:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1170:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if Tx buffer empty interrupt
1171:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_IsEnabledIT_TXE
1172:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1173:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 34


1174:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1175:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_TXE(SPI_TypeDef *SPIx)
1176:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1177:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_TXEIE) == (SPI_CR2_TXEIE)) ? 1UL : 0UL);
1178:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1179:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1180:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1181:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
1182:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1183:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1184:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_DMA_Management DMA Management
1185:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
1186:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1187:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1188:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1189:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable DMA Rx
1190:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_EnableDMAReq_RX
1191:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1192:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1193:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1194:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableDMAReq_RX(SPI_TypeDef *SPIx)
1195:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1196:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_RXDMAEN);
1197:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1198:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1199:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1200:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable DMA Rx
1201:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_DisableDMAReq_RX
1202:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1203:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1204:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1205:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableDMAReq_RX(SPI_TypeDef *SPIx)
1206:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1207:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_RXDMAEN);
1208:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1209:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1210:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1211:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if DMA Rx is enabled
1212:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_IsEnabledDMAReq_RX
1213:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1214:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1215:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1216:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledDMAReq_RX(SPI_TypeDef *SPIx)
1217:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1218:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_RXDMAEN) == (SPI_CR2_RXDMAEN)) ? 1UL : 0UL);
1219:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1220:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1221:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1222:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Enable DMA Tx
1223:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_EnableDMAReq_TX
1224:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1225:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1226:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1227:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableDMAReq_TX(SPI_TypeDef *SPIx)
1228:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1229:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_TXDMAEN);
1230:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 35


1231:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1232:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1233:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Disable DMA Tx
1234:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_DisableDMAReq_TX
1235:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1236:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1237:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1238:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableDMAReq_TX(SPI_TypeDef *SPIx)
1239:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1240:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_TXDMAEN);
1241:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1242:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1243:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1244:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Check if DMA Tx is enabled
1245:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_IsEnabledDMAReq_TX
1246:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1247:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
1248:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1249:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledDMAReq_TX(SPI_TypeDef *SPIx)
1250:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1251:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_TXDMAEN) == (SPI_CR2_TXDMAEN)) ? 1UL : 0UL);
1252:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1253:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1254:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1255:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set parity of  Last DMA reception
1256:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          LDMARX        LL_SPI_SetDMAParity_RX
1257:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1258:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Parity This parameter can be one of the following values:
1259:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_ODD
1260:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_EVEN
1261:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1262:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1263:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetDMAParity_RX(SPI_TypeDef *SPIx, uint32_t Parity)
1264:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1265:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_LDMARX, (Parity << SPI_CR2_LDMARX_Pos));
1266:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1267:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1268:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1269:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get parity configuration for  Last DMA reception
1270:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          LDMARX        LL_SPI_GetDMAParity_RX
1271:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1272:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
1273:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_ODD
1274:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_EVEN
1275:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1276:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetDMAParity_RX(SPI_TypeDef *SPIx)
1277:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1278:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_LDMARX) >> SPI_CR2_LDMARX_Pos);
1279:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1280:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1281:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1282:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Set parity of  Last DMA transmission
1283:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          LDMATX        LL_SPI_SetDMAParity_TX
1284:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1285:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  Parity This parameter can be one of the following values:
1286:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_ODD
1287:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_EVEN
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 36


1288:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1289:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1290:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetDMAParity_TX(SPI_TypeDef *SPIx, uint32_t Parity)
1291:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1292:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_LDMATX, (Parity << SPI_CR2_LDMATX_Pos));
1293:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1294:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1295:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1296:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get parity configuration for Last DMA transmission
1297:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll CR2          LDMATX        LL_SPI_GetDMAParity_TX
1298:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1299:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
1300:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_ODD
1301:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DMA_PARITY_EVEN
1302:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1303:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetDMAParity_TX(SPI_TypeDef *SPIx)
1304:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1305:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_LDMATX) >> SPI_CR2_LDMATX_Pos);
1306:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1307:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1308:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1309:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Get the data register address used for DMA transfer
1310:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_DMA_GetRegAddr
1311:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1312:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval Address of data register
1313:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1314:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_DMA_GetRegAddr(SPI_TypeDef *SPIx)
1315:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1316:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint32_t) &(SPIx->DR);
1317:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1318:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1319:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1320:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @}
1321:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1322:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1323:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_DATA_Management DATA Management
1324:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @{
1325:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1326:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1327:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1328:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Read 8-Bits in the data register
1329:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_ReceiveData8
1330:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1331:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval RxData Value between Min_Data=0x00 and Max_Data=0xFF
1332:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1333:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint8_t LL_SPI_ReceiveData8(SPI_TypeDef *SPIx)
1334:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (*((__IO uint8_t *)&SPIx->DR));
1336:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1337:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1338:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1339:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Read 16-Bits in the data register
1340:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_ReceiveData16
1341:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1342:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval RxData Value between Min_Data=0x00 and Max_Data=0xFFFF
1343:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1344:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE uint16_t LL_SPI_ReceiveData16(SPI_TypeDef *SPIx)
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 37


1345:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1346:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   return (uint16_t)(READ_REG(SPIx->DR));
1347:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
1348:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** 
1349:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** /**
1350:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @brief  Write 8-Bits in the data register
1351:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_TransmitData8
1352:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  SPIx SPI Instance
1353:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @param  TxData Value between Min_Data=0x00 and Max_Data=0xFF
1354:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   * @retval None
1355:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   */
1356:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_TransmitData8(SPI_TypeDef *SPIx, uint8_t TxData)
  69              		.loc 2 1356 22 view .LVU13
  70              	.LBB82:
1357:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
1358:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** #if defined (__GNUC__)
1359:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   __IO uint8_t *spidr = ((__IO uint8_t *)&SPIx->DR);
  71              		.loc 2 1359 3 view .LVU14
1360:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h ****   *spidr = TxData;
  72              		.loc 2 1360 3 view .LVU15
  73              		.loc 2 1360 10 is_stmt 0 view .LVU16
  74 0012 134B     		ldr	r3, .L10
  75 0014 1D73     		strb	r5, [r3, #12]
  76              	.LVL4:
  77              		.loc 2 1360 10 view .LVU17
  78              	.LBE82:
  79              	.LBE81:
 642:Core/Src/AB1805_RK.c **** 
 643:Core/Src/AB1805_RK.c ****     start_time = HAL_GetTick();
  80              		.loc 1 643 5 is_stmt 1 view .LVU18
  81              		.loc 1 643 18 is_stmt 0 view .LVU19
  82 0016 FFF7FEFF 		bl	HAL_GetTick
  83              	.LVL5:
  84 001a 0400     		movs	r4, r0
  85              	.LVL6:
 644:Core/Src/AB1805_RK.c ****     while (LL_SPI_IsActiveFlag_RXNE(SPI1) == RESET)
  86              		.loc 1 644 5 is_stmt 1 view .LVU20
  87              	.L9:
  88              		.loc 1 644 43 view .LVU21
  89              	.LBB83:
  90              	.LBI83:
 905:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
  91              		.loc 2 905 26 view .LVU22
  92              	.LBB84:
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
  93              		.loc 2 907 3 view .LVU23
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
  94              		.loc 2 907 12 is_stmt 0 view .LVU24
  95 001c 104B     		ldr	r3, .L10
  96 001e 9B68     		ldr	r3, [r3, #8]
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
  97              		.loc 2 907 68 view .LVU25
  98 0020 DB07     		lsls	r3, r3, #31
  99 0022 18D4     		bmi	.L7
 100              	.LVL7:
 907:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 101              		.loc 2 907 68 view .LVU26
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 38


 102              	.LBE84:
 103              	.LBE83:
 645:Core/Src/AB1805_RK.c ****     {
 646:Core/Src/AB1805_RK.c ****         if ((HAL_GetTick() - start_time) > 1000)
 104              		.loc 1 646 9 is_stmt 1 view .LVU27
 105              		.loc 1 646 14 is_stmt 0 view .LVU28
 106 0024 FFF7FEFF 		bl	HAL_GetTick
 107              	.LVL8:
 108              		.loc 1 646 28 view .LVU29
 109 0028 001B     		subs	r0, r0, r4
 110              		.loc 1 646 12 view .LVU30
 111 002a FA23     		movs	r3, #250
 112 002c 9B00     		lsls	r3, r3, #2
 113 002e 9842     		cmp	r0, r3
 114 0030 F4D9     		bls	.L9
 647:Core/Src/AB1805_RK.c ****         {
 648:Core/Src/AB1805_RK.c ****             print_error(__func__, __LINE__);
 115              		.loc 1 648 13 is_stmt 1 view .LVU31
 116 0032 A221     		movs	r1, #162
 117 0034 0B48     		ldr	r0, .L10+4
 118 0036 8900     		lsls	r1, r1, #2
 119 0038 FFF7FEFF 		bl	print_error
 120              	.LVL9:
 121 003c EEE7     		b	.L9
 122              	.LVL10:
 123              	.L3:
 635:Core/Src/AB1805_RK.c ****         {
 124              		.loc 1 635 9 view .LVU32
 635:Core/Src/AB1805_RK.c ****         {
 125              		.loc 1 635 14 is_stmt 0 view .LVU33
 126 003e FFF7FEFF 		bl	HAL_GetTick
 127              	.LVL11:
 635:Core/Src/AB1805_RK.c ****         {
 128              		.loc 1 635 28 view .LVU34
 129 0042 001B     		subs	r0, r0, r4
 635:Core/Src/AB1805_RK.c ****         {
 130              		.loc 1 635 12 view .LVU35
 131 0044 FA22     		movs	r2, #250
 132 0046 9200     		lsls	r2, r2, #2
 133 0048 9042     		cmp	r0, r2
 134 004a DED9     		bls	.L6
 637:Core/Src/AB1805_RK.c ****         }
 135              		.loc 1 637 13 is_stmt 1 view .LVU36
 136 004c 0548     		ldr	r0, .L10+4
 137 004e 0649     		ldr	r1, .L10+8
 138 0050 FFF7FEFF 		bl	print_error
 139              	.LVL12:
 140 0054 D9E7     		b	.L6
 141              	.LVL13:
 142              	.L7:
 649:Core/Src/AB1805_RK.c ****         }
 650:Core/Src/AB1805_RK.c ****     }
 651:Core/Src/AB1805_RK.c **** 
 652:Core/Src/AB1805_RK.c ****     return LL_SPI_ReceiveData8(SPI1);
 143              		.loc 1 652 5 view .LVU37
 144              	.LBB85:
 145              	.LBI85:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 39


1333:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** {
 146              		.loc 2 1333 25 view .LVU38
 147              	.LBB86:
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 148              		.loc 2 1335 3 view .LVU39
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 149              		.loc 2 1335 11 is_stmt 0 view .LVU40
 150 0056 024B     		ldr	r3, .L10
 151 0058 187B     		ldrb	r0, [r3, #12]
 152 005a C0B2     		uxtb	r0, r0
 153              	.LVL14:
1335:Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_spi.h **** }
 154              		.loc 2 1335 11 view .LVU41
 155              	.LBE86:
 156              	.LBE85:
 653:Core/Src/AB1805_RK.c **** }
 157              		.loc 1 653 1 view .LVU42
 158              		@ sp needed
 159              	.LVL15:
 160              		.loc 1 653 1 view .LVU43
 161 005c 70BD     		pop	{r4, r5, r6, pc}
 162              	.L11:
 163 005e C046     		.align	2
 164              	.L10:
 165 0060 00300140 		.word	1073819648
 166 0064 00000000 		.word	__func__.0
 167 0068 7D020000 		.word	637
 168              		.cfi_endproc
 169              	.LFE523:
 171              		.section	.text.read_rtc_register,"ax",%progbits
 172              		.align	1
 173              		.syntax unified
 174              		.code	16
 175              		.thumb_func
 177              	read_rtc_register:
 178              	.LVL16:
 179              	.LFB524:
 654:Core/Src/AB1805_RK.c **** 
 655:Core/Src/AB1805_RK.c **** inline static uint8_t read_rtc_register(uint8_t reg_addr)
 656:Core/Src/AB1805_RK.c **** {
 180              		.loc 1 656 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		.loc 1 656 1 is_stmt 0 view .LVU45
 185 0000 70B5     		push	{r4, r5, r6, lr}
 186              	.LCFI1:
 187              		.cfi_def_cfa_offset 16
 188              		.cfi_offset 4, -16
 189              		.cfi_offset 5, -12
 190              		.cfi_offset 6, -8
 191              		.cfi_offset 14, -4
 192 0002 0300     		movs	r3, r0
 657:Core/Src/AB1805_RK.c ****     uint8_t val;
 193              		.loc 1 657 5 is_stmt 1 view .LVU46
 658:Core/Src/AB1805_RK.c ****     uint32_t primask_bit = utils_enter_critical_section();
 194              		.loc 1 658 5 view .LVU47
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 40


 195              	.LBB87:
 196              	.LBI87:
 659:Core/Src/AB1805_RK.c **** 
 660:Core/Src/AB1805_RK.c ****     // #define AB1815_SPI_READ(offset) (127 & offset)		127 - 0x7F
 661:Core/Src/AB1805_RK.c ****     // #define AB1815_SPI_WRITE(offset) (128 | offset)  	128 - 0x80
 662:Core/Src/AB1805_RK.c ****     uint8_t addr = AB1815_SPI_READ(reg_addr);
 663:Core/Src/AB1805_RK.c ****     RTC_L();
 664:Core/Src/AB1805_RK.c ****     SPI1_SendByte(addr);
 665:Core/Src/AB1805_RK.c ****     val = SPI1_SendByte(0x00); // Send DUMMY to read data
 666:Core/Src/AB1805_RK.c ****     RTC_H();
 667:Core/Src/AB1805_RK.c ****     utils_exit_critical_section(primask_bit);
 668:Core/Src/AB1805_RK.c **** 
 669:Core/Src/AB1805_RK.c ****     return val;
 670:Core/Src/AB1805_RK.c **** }
 671:Core/Src/AB1805_RK.c **** 
 672:Core/Src/AB1805_RK.c **** inline static uint8_t write_rtc_register(uint8_t offset, uint8_t buf)
 673:Core/Src/AB1805_RK.c **** {
 674:Core/Src/AB1805_RK.c ****     // uint8_t address = AB1815_SPI_WRITE(offset);
 675:Core/Src/AB1805_RK.c ****     uint8_t address = offset | 0x80;
 676:Core/Src/AB1805_RK.c ****     uint32_t primask_bit = utils_enter_critical_section();
 677:Core/Src/AB1805_RK.c **** 
 678:Core/Src/AB1805_RK.c ****     if (!((SPI1)->CR1 & SPI_CR1_SPE))
 679:Core/Src/AB1805_RK.c ****     {
 680:Core/Src/AB1805_RK.c ****         SPI1->CR1 |= SPI_CR1_SPE;
 681:Core/Src/AB1805_RK.c ****     }
 682:Core/Src/AB1805_RK.c ****     spi_select_slave(0);
 683:Core/Src/AB1805_RK.c ****     SPI1_SendByte(address);
 684:Core/Src/AB1805_RK.c ****     SPI1_SendByte(buf); // Send Data to write
 685:Core/Src/AB1805_RK.c **** 
 686:Core/Src/AB1805_RK.c ****     spi_select_slave(1);
 687:Core/Src/AB1805_RK.c ****     utils_exit_critical_section(primask_bit);
 688:Core/Src/AB1805_RK.c ****     return 1;
 689:Core/Src/AB1805_RK.c **** };
 690:Core/Src/AB1805_RK.c **** 
 691:Core/Src/AB1805_RK.c **** void hex_dump(void)
 692:Core/Src/AB1805_RK.c **** {
 693:Core/Src/AB1805_RK.c ****     uint8_t buffer[9];
 694:Core/Src/AB1805_RK.c ****     for (uint8_t pos = 0; pos < 0x3F; pos += 8) // 0x7f
 695:Core/Src/AB1805_RK.c ****     {
 696:Core/Src/AB1805_RK.c **** 
 697:Core/Src/AB1805_RK.c ****         uint8_t ii = 0;
 698:Core/Src/AB1805_RK.c ****         for (ii = 0; ii < 7; ii++)
 699:Core/Src/AB1805_RK.c ****         {
 700:Core/Src/AB1805_RK.c ****             buffer[ii] = read_rtc_register(pos + ii);
 701:Core/Src/AB1805_RK.c ****         }
 702:Core/Src/AB1805_RK.c ****         printf("# 0x%02x: 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x\r\n", pos, buffer
 703:Core/Src/AB1805_RK.c ****     }
 704:Core/Src/AB1805_RK.c **** }
 705:Core/Src/AB1805_RK.c **** 
 706:Core/Src/AB1805_RK.c **** static inline uint32_t utils_enter_critical_section(void)
 197              		.loc 1 706 24 view .LVU48
 198              	.LBB88:
 707:Core/Src/AB1805_RK.c **** {
 708:Core/Src/AB1805_RK.c ****     uint32_t primask_bit = __get_PRIMASK();
 199              		.loc 1 708 5 view .LVU49
 200              	.LBB89:
 201              	.LBI89:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 41


 202              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 42


  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 43


 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 44


 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 45


 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 46


 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 47


 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 48


 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 49


 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 50


 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 51


 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 52


 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 53


 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 54


 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 55


 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 56


 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 57


 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 966:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 58


 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 973:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 996:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ISB();
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1006:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1009:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1010:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
1011:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
1012:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
1013:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
1015:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ISB();
1018:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1019:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1020:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 59


1026:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1027:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
1028:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1029:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
1032:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1033:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1034:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1035:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1036:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
1039:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
1040:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1044:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1047:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1051:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
1052:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1061:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1062:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1063:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1064:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
1067:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1071:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1075:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1076:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1077:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 60


1083:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1084:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
1085:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1087:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1090:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1091:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1092:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1093:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1095:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
1096:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
1097:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1099:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
1100:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1101:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
1102:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1103:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1104:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1105:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1106:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1107:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
1108:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
1109:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
1110:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
1112:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1113:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
1114:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1118:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1119:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
1120:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
1121:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
1122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1123:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
1124:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1125:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1127:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
1128:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1129:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1130:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1132:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1133:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1134:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
1135:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
1136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
1137:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1138:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
1139:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 61


1140:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
1143:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1144:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1145:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1146:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1147:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1148:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
1150:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
1151:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
1152:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1153:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
1154:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1157:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1159:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1160:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1161:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
1162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
1163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
1164:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1165:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
1166:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1167:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
1168:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1169:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1170:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1171:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1172:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1173:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1174:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
1175:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
1176:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
1177:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1178:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
1179:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1180:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1182:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
1183:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1187:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1188:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
1189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
1190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
1191:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1192:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
1193:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1194:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
1195:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 62


1197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1199:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1200:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
1201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
1202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
1203:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 203              		.loc 3 1204 31 view .LVU50
 204              	.LBB90:
1205:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 205              		.loc 3 1206 3 view .LVU51
1207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1208:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 206              		.loc 3 1208 3 view .LVU52
 207              		.syntax divided
 208              	@ 1208 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 209 0004 EFF31085 		MRS r5, primask
 210              	@ 0 "" 2
 211              	.LVL17:
1209:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 212              		.loc 3 1209 3 view .LVU53
 213              		.loc 3 1209 3 is_stmt 0 view .LVU54
 214              		.thumb
 215              		.syntax unified
 216              	.LBE90:
 217              	.LBE89:
 709:Core/Src/AB1805_RK.c ****     __disable_irq();
 218              		.loc 1 709 5 is_stmt 1 view .LVU55
 219              	.LBB91:
 220              	.LBI91:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221              		.loc 3 960 27 view .LVU56
 222              	.LBB92:
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 223              		.loc 3 962 3 view .LVU57
 224              		.syntax divided
 225              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 226 0008 72B6     		cpsid i
 227              	@ 0 "" 2
 228              		.thumb
 229              		.syntax unified
 230              	.LBE92:
 231              	.LBE91:
 710:Core/Src/AB1805_RK.c ****     return primask_bit;
 232              		.loc 1 710 5 view .LVU58
 233              	.LVL18:
 234              		.loc 1 710 5 is_stmt 0 view .LVU59
 235              	.LBE88:
 236              	.LBE87:
 662:Core/Src/AB1805_RK.c ****     RTC_L();
 237              		.loc 1 662 5 is_stmt 1 view .LVU60
 662:Core/Src/AB1805_RK.c ****     RTC_L();
 238              		.loc 1 662 13 is_stmt 0 view .LVU61
 239 000a 7F20     		movs	r0, #127
 240              	.LVL19:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 63


 662:Core/Src/AB1805_RK.c ****     RTC_L();
 241              		.loc 1 662 13 view .LVU62
 242 000c 1840     		ands	r0, r3
 243              	.LVL20:
 663:Core/Src/AB1805_RK.c ****     SPI1_SendByte(addr);
 244              		.loc 1 663 5 is_stmt 1 view .LVU63
 245 000e 074C     		ldr	r4, .L13
 246 0010 8023     		movs	r3, #128
 247 0012 DB05     		lsls	r3, r3, #23
 248 0014 A361     		str	r3, [r4, #24]
 664:Core/Src/AB1805_RK.c ****     val = SPI1_SendByte(0x00); // Send DUMMY to read data
 249              		.loc 1 664 5 view .LVU64
 250 0016 FFF7FEFF 		bl	SPI1_SendByte
 251              	.LVL21:
 665:Core/Src/AB1805_RK.c ****     RTC_H();
 252              		.loc 1 665 5 view .LVU65
 665:Core/Src/AB1805_RK.c ****     RTC_H();
 253              		.loc 1 665 11 is_stmt 0 view .LVU66
 254 001a 0020     		movs	r0, #0
 255 001c FFF7FEFF 		bl	SPI1_SendByte
 256              	.LVL22:
 666:Core/Src/AB1805_RK.c ****     utils_exit_critical_section(primask_bit);
 257              		.loc 1 666 5 is_stmt 1 view .LVU67
 258 0020 8023     		movs	r3, #128
 259 0022 DB01     		lsls	r3, r3, #7
 260 0024 A361     		str	r3, [r4, #24]
 667:Core/Src/AB1805_RK.c **** 
 261              		.loc 1 667 5 view .LVU68
 262              	.LVL23:
 263              	.LBB93:
 264              	.LBI93:
 711:Core/Src/AB1805_RK.c **** }
 712:Core/Src/AB1805_RK.c **** 
 713:Core/Src/AB1805_RK.c **** static inline void utils_exit_critical_section(uint32_t primask_bit)
 265              		.loc 1 713 20 view .LVU69
 714:Core/Src/AB1805_RK.c **** {
 715:Core/Src/AB1805_RK.c ****     __set_PRIMASK(primask_bit);
 266              		.loc 1 715 5 view .LVU70
 267              	.LBB94:
 268              	.LBI94:
1210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1213:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
1216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
1217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
1218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
1220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
1224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1226:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 64


1227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1228:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1229:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
1231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
1232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
1233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 269              		.loc 3 1234 27 view .LVU71
 270              	.LBB95:
1235:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1236:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 271              		.loc 3 1236 3 view .LVU72
 272              		.syntax divided
 273              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 274 0026 85F31088 		MSR primask, r5
 275              	@ 0 "" 2
 276              	.LVL24:
 277              		.loc 3 1236 3 is_stmt 0 view .LVU73
 278              		.thumb
 279              		.syntax unified
 280              	.LBE95:
 281              	.LBE94:
 282              	.LBE93:
 669:Core/Src/AB1805_RK.c **** }
 283              		.loc 1 669 5 is_stmt 1 view .LVU74
 670:Core/Src/AB1805_RK.c **** 
 284              		.loc 1 670 1 is_stmt 0 view .LVU75
 285              		@ sp needed
 286              	.LVL25:
 670:Core/Src/AB1805_RK.c **** 
 287              		.loc 1 670 1 view .LVU76
 288 002a 70BD     		pop	{r4, r5, r6, pc}
 289              	.L14:
 290              		.align	2
 291              	.L13:
 292 002c 00040050 		.word	1342178304
 293              		.cfi_endproc
 294              	.LFE524:
 296              		.section	.text.write_rtc_register,"ax",%progbits
 297              		.align	1
 298              		.syntax unified
 299              		.code	16
 300              		.thumb_func
 302              	write_rtc_register:
 303              	.LVL26:
 304              	.LFB525:
 673:Core/Src/AB1805_RK.c ****     // uint8_t address = AB1815_SPI_WRITE(offset);
 305              		.loc 1 673 1 is_stmt 1 view -0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 673:Core/Src/AB1805_RK.c ****     // uint8_t address = AB1815_SPI_WRITE(offset);
 309              		.loc 1 673 1 is_stmt 0 view .LVU78
 310 0000 70B5     		push	{r4, r5, r6, lr}
 311              	.LCFI2:
 312              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 65


 313              		.cfi_offset 4, -16
 314              		.cfi_offset 5, -12
 315              		.cfi_offset 6, -8
 316              		.cfi_offset 14, -4
 317 0002 0C00     		movs	r4, r1
 675:Core/Src/AB1805_RK.c ****     uint32_t primask_bit = utils_enter_critical_section();
 318              		.loc 1 675 5 is_stmt 1 view .LVU79
 675:Core/Src/AB1805_RK.c ****     uint32_t primask_bit = utils_enter_critical_section();
 319              		.loc 1 675 13 is_stmt 0 view .LVU80
 320 0004 8023     		movs	r3, #128
 321 0006 5B42     		rsbs	r3, r3, #0
 322 0008 1843     		orrs	r0, r3
 323              	.LVL27:
 675:Core/Src/AB1805_RK.c ****     uint32_t primask_bit = utils_enter_critical_section();
 324              		.loc 1 675 13 view .LVU81
 325 000a C0B2     		uxtb	r0, r0
 326              	.LVL28:
 676:Core/Src/AB1805_RK.c **** 
 327              		.loc 1 676 5 is_stmt 1 view .LVU82
 328              	.LBB96:
 329              	.LBI96:
 706:Core/Src/AB1805_RK.c **** {
 330              		.loc 1 706 24 view .LVU83
 331              	.LBB97:
 708:Core/Src/AB1805_RK.c ****     __disable_irq();
 332              		.loc 1 708 5 view .LVU84
 333              	.LBB98:
 334              	.LBI98:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 335              		.loc 3 1204 31 view .LVU85
 336              	.LBB99:
1206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337              		.loc 3 1206 3 view .LVU86
1208:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 338              		.loc 3 1208 3 view .LVU87
 339              		.syntax divided
 340              	@ 1208 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 341 000c EFF31086 		MRS r6, primask
 342              	@ 0 "" 2
 343              	.LVL29:
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344              		.loc 3 1209 3 view .LVU88
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 345              		.loc 3 1209 3 is_stmt 0 view .LVU89
 346              		.thumb
 347              		.syntax unified
 348              	.LBE99:
 349              	.LBE98:
 709:Core/Src/AB1805_RK.c ****     return primask_bit;
 350              		.loc 1 709 5 is_stmt 1 view .LVU90
 351              	.LBB100:
 352              	.LBI100:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 353              		.loc 3 960 27 view .LVU91
 354              	.LBB101:
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355              		.loc 3 962 3 view .LVU92
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 66


 356              		.syntax divided
 357              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 358 0010 72B6     		cpsid i
 359              	@ 0 "" 2
 360              		.thumb
 361              		.syntax unified
 362              	.LBE101:
 363              	.LBE100:
 710:Core/Src/AB1805_RK.c **** }
 364              		.loc 1 710 5 view .LVU93
 365              	.LVL30:
 710:Core/Src/AB1805_RK.c **** }
 366              		.loc 1 710 5 is_stmt 0 view .LVU94
 367              	.LBE97:
 368              	.LBE96:
 678:Core/Src/AB1805_RK.c ****     {
 369              		.loc 1 678 5 is_stmt 1 view .LVU95
 678:Core/Src/AB1805_RK.c ****     {
 370              		.loc 1 678 17 is_stmt 0 view .LVU96
 371 0012 0C4B     		ldr	r3, .L18
 372 0014 1B68     		ldr	r3, [r3]
 678:Core/Src/AB1805_RK.c ****     {
 373              		.loc 1 678 8 view .LVU97
 374 0016 5B06     		lsls	r3, r3, #25
 375 0018 04D4     		bmi	.L16
 680:Core/Src/AB1805_RK.c ****     }
 376              		.loc 1 680 9 is_stmt 1 view .LVU98
 680:Core/Src/AB1805_RK.c ****     }
 377              		.loc 1 680 13 is_stmt 0 view .LVU99
 378 001a 0A4A     		ldr	r2, .L18
 379 001c 1368     		ldr	r3, [r2]
 680:Core/Src/AB1805_RK.c ****     }
 380              		.loc 1 680 19 view .LVU100
 381 001e 4021     		movs	r1, #64
 382              	.LVL31:
 680:Core/Src/AB1805_RK.c ****     }
 383              		.loc 1 680 19 view .LVU101
 384 0020 0B43     		orrs	r3, r1
 385 0022 1360     		str	r3, [r2]
 386              	.L16:
 682:Core/Src/AB1805_RK.c ****     SPI1_SendByte(address);
 387              		.loc 1 682 5 is_stmt 1 view .LVU102
 388              	.LVL32:
 389              	.LBB102:
 390              	.LBI102:
  43:Core/Src/AB1805_RK.c **** {
 391              		.loc 1 43 20 view .LVU103
 392              	.LBB103:
  45:Core/Src/AB1805_RK.c ****     {
 393              		.loc 1 45 5 view .LVU104
  51:Core/Src/AB1805_RK.c ****     }
 394              		.loc 1 51 9 view .LVU105
 395 0024 084D     		ldr	r5, .L18+4
 396 0026 8023     		movs	r3, #128
 397 0028 DB05     		lsls	r3, r3, #23
 398 002a AB61     		str	r3, [r5, #24]
 399              	.LVL33:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 67


  51:Core/Src/AB1805_RK.c ****     }
 400              		.loc 1 51 9 is_stmt 0 view .LVU106
 401              	.LBE103:
 402              	.LBE102:
 683:Core/Src/AB1805_RK.c ****     SPI1_SendByte(buf); // Send Data to write
 403              		.loc 1 683 5 is_stmt 1 view .LVU107
 404 002c FFF7FEFF 		bl	SPI1_SendByte
 405              	.LVL34:
 684:Core/Src/AB1805_RK.c **** 
 406              		.loc 1 684 5 view .LVU108
 407 0030 2000     		movs	r0, r4
 408 0032 FFF7FEFF 		bl	SPI1_SendByte
 409              	.LVL35:
 686:Core/Src/AB1805_RK.c ****     utils_exit_critical_section(primask_bit);
 410              		.loc 1 686 5 view .LVU109
 411              	.LBB104:
 412              	.LBI104:
  43:Core/Src/AB1805_RK.c **** {
 413              		.loc 1 43 20 view .LVU110
 414              	.LBB105:
  45:Core/Src/AB1805_RK.c ****     {
 415              		.loc 1 45 5 view .LVU111
  47:Core/Src/AB1805_RK.c ****     }
 416              		.loc 1 47 9 view .LVU112
 417 0036 8023     		movs	r3, #128
 418 0038 DB01     		lsls	r3, r3, #7
 419 003a AB61     		str	r3, [r5, #24]
 420              	.LVL36:
  47:Core/Src/AB1805_RK.c ****     }
 421              		.loc 1 47 9 is_stmt 0 view .LVU113
 422              	.LBE105:
 423              	.LBE104:
 687:Core/Src/AB1805_RK.c ****     return 1;
 424              		.loc 1 687 5 is_stmt 1 view .LVU114
 425              	.LBB106:
 426              	.LBI106:
 713:Core/Src/AB1805_RK.c **** {
 427              		.loc 1 713 20 view .LVU115
 428              		.loc 1 715 5 view .LVU116
 429              	.LBB107:
 430              	.LBI107:
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 431              		.loc 3 1234 27 view .LVU117
 432              	.LBB108:
 433              		.loc 3 1236 3 view .LVU118
 434              		.syntax divided
 435              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 436 003c 86F31088 		MSR primask, r6
 437              	@ 0 "" 2
 438              	.LVL37:
 439              		.loc 3 1236 3 is_stmt 0 view .LVU119
 440              		.thumb
 441              		.syntax unified
 442              	.LBE108:
 443              	.LBE107:
 444              	.LBE106:
 688:Core/Src/AB1805_RK.c **** };
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 68


 445              		.loc 1 688 5 is_stmt 1 view .LVU120
 689:Core/Src/AB1805_RK.c **** 
 446              		.loc 1 689 1 is_stmt 0 view .LVU121
 447 0040 0120     		movs	r0, #1
 448              		@ sp needed
 449              	.LVL38:
 689:Core/Src/AB1805_RK.c **** 
 450              		.loc 1 689 1 view .LVU122
 451 0042 70BD     		pop	{r4, r5, r6, pc}
 452              	.L19:
 453              		.align	2
 454              	.L18:
 455 0044 00300140 		.word	1073819648
 456 0048 00040050 		.word	1342178304
 457              		.cfi_endproc
 458              	.LFE525:
 460              		.section	.text.loop,"ax",%progbits
 461              		.align	1
 462              		.global	loop
 463              		.syntax unified
 464              		.code	16
 465              		.thumb_func
 467              	loop:
 468              	.LFB502:
  69:Core/Src/AB1805_RK.c ****     (void)0; //  doing nothing
 469              		.loc 1 69 1 is_stmt 1 view -0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              		@ link register save eliminated.
  70:Core/Src/AB1805_RK.c **** }
 474              		.loc 1 70 5 view .LVU124
  71:Core/Src/AB1805_RK.c **** 
 475              		.loc 1 71 1 is_stmt 0 view .LVU125
 476              		@ sp needed
 477 0000 7047     		bx	lr
 478              		.cfi_endproc
 479              	.LFE502:
 481              		.section	.rodata.detectChip.str1.4,"aMS",%progbits,1
 482              		.align	2
 483              	.LC1:
 484 0000 464F5554 		.ascii	"FOUT did not go HIGH\012\000"
 484      20646964 
 484      206E6F74 
 484      20676F20 
 484      48494748 
 485 0016 0000     		.align	2
 486              	.LC3:
 487 0018 6E6F7420 		.ascii	"not detected\012\000"
 487      64657465 
 487      63746564 
 487      0A00
 488              		.section	.text.detectChip,"ax",%progbits
 489              		.align	1
 490              		.global	detectChip
 491              		.syntax unified
 492              		.code	16
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 69


 493              		.thumb_func
 495              	detectChip:
 496              	.LFB503:
  74:Core/Src/AB1805_RK.c ****     bool finalResult = false;
 497              		.loc 1 74 1 is_stmt 1 view -0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501 0000 10B5     		push	{r4, lr}
 502              	.LCFI3:
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 4, -8
 505              		.cfi_offset 14, -4
  75:Core/Src/AB1805_RK.c ****     uint8_t value = 0;
 506              		.loc 1 75 5 view .LVU127
 507              	.LVL39:
  76:Core/Src/AB1805_RK.c **** 
 508              		.loc 1 76 5 view .LVU128
  80:Core/Src/AB1805_RK.c ****     bool ready = false;
 509              		.loc 1 80 5 view .LVU129
  80:Core/Src/AB1805_RK.c ****     bool ready = false;
 510              		.loc 1 80 22 is_stmt 0 view .LVU130
 511 0002 FFF7FEFF 		bl	HAL_GetTick
 512              	.LVL40:
 513 0006 0400     		movs	r4, r0
 514              	.LVL41:
  81:Core/Src/AB1805_RK.c ****     while (HAL_GetTick() - start < 1000)
 515              		.loc 1 81 5 is_stmt 1 view .LVU131
  82:Core/Src/AB1805_RK.c ****     {
 516              		.loc 1 82 5 view .LVU132
  82:Core/Src/AB1805_RK.c ****     {
 517              		.loc 1 82 34 view .LVU133
  82:Core/Src/AB1805_RK.c ****     {
 518              		.loc 1 82 12 is_stmt 0 view .LVU134
 519 0008 FFF7FEFF 		bl	HAL_GetTick
 520              	.LVL42:
  82:Core/Src/AB1805_RK.c ****     {
 521              		.loc 1 82 26 view .LVU135
 522 000c 001B     		subs	r0, r0, r4
  82:Core/Src/AB1805_RK.c ****     {
 523              		.loc 1 82 34 view .LVU136
 524 000e FA23     		movs	r3, #250
 525 0010 9B00     		lsls	r3, r3, #2
 526 0012 9842     		cmp	r0, r3
 527 0014 06D2     		bcs	.L22
  84:Core/Src/AB1805_RK.c ****         {
 528              		.loc 1 84 9 is_stmt 1 view .LVU137
  84:Core/Src/AB1805_RK.c ****         {
 529              		.loc 1 84 13 is_stmt 0 view .LVU138
 530 0016 8021     		movs	r1, #128
 531 0018 4901     		lsls	r1, r1, #5
 532 001a 0D48     		ldr	r0, .L28
 533 001c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 534              	.LVL43:
  84:Core/Src/AB1805_RK.c ****         {
 535              		.loc 1 84 12 view .LVU139
 536 0020 0128     		cmp	r0, #1
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 70


 537 0022 09D1     		bne	.L26
 538              	.L22:
 539              	.LVL44:
  97:Core/Src/AB1805_RK.c ****     if (value == REG_ID0_AB18XX)
 540              		.loc 1 97 5 is_stmt 1 view .LVU140
  97:Core/Src/AB1805_RK.c ****     if (value == REG_ID0_AB18XX)
 541              		.loc 1 97 13 is_stmt 0 view .LVU141
 542 0024 2820     		movs	r0, #40
 543 0026 FFF7FEFF 		bl	read_rtc_register
 544              	.LVL45:
  98:Core/Src/AB1805_RK.c ****     {
 545              		.loc 1 98 5 is_stmt 1 view .LVU142
  98:Core/Src/AB1805_RK.c ****     {
 546              		.loc 1 98 8 is_stmt 0 view .LVU143
 547 002a 1828     		cmp	r0, #24
 548 002c 09D0     		beq	.L27
 549              	.L24:
 550              	.LVL46:
 108:Core/Src/AB1805_RK.c ****     }
 551              		.loc 1 108 9 is_stmt 1 view .LVU144
 552 002e 0948     		ldr	r0, .L28+4
 553              	.LVL47:
 108:Core/Src/AB1805_RK.c ****     }
 554              		.loc 1 108 9 is_stmt 0 view .LVU145
 555 0030 FFF7FEFF 		bl	printf_
 556              	.LVL48:
 557 0034 0020     		movs	r0, #0
 558              	.LVL49:
 559              	.L23:
 111:Core/Src/AB1805_RK.c **** 
 560              		.loc 1 111 1 view .LVU146
 561              		@ sp needed
 562              	.LVL50:
 111:Core/Src/AB1805_RK.c **** 
 563              		.loc 1 111 1 view .LVU147
 564 0036 10BD     		pop	{r4, pc}
 565              	.LVL51:
 566              	.L26:
  89:Core/Src/AB1805_RK.c ****         {
 567              		.loc 1 89 9 is_stmt 1 view .LVU148
  91:Core/Src/AB1805_RK.c ****             // May just want to return false here
 568              		.loc 1 91 13 view .LVU149
 569 0038 0748     		ldr	r0, .L28+8
 570 003a FFF7FEFF 		bl	printf_
 571              	.LVL52:
  93:Core/Src/AB1805_RK.c ****         }
 572              		.loc 1 93 13 view .LVU150
  93:Core/Src/AB1805_RK.c ****         }
 573              		.loc 1 93 20 is_stmt 0 view .LVU151
 574 003e 0020     		movs	r0, #0
 575 0040 F9E7     		b	.L23
 576              	.LVL53:
 577              	.L27:
 100:Core/Src/AB1805_RK.c ****         if (value == REG_ID1_ABXX15)
 578              		.loc 1 100 9 is_stmt 1 view .LVU152
 100:Core/Src/AB1805_RK.c ****         if (value == REG_ID1_ABXX15)
 579              		.loc 1 100 17 is_stmt 0 view .LVU153
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 71


 580 0042 1130     		adds	r0, r0, #17
 581              	.LVL54:
 100:Core/Src/AB1805_RK.c ****         if (value == REG_ID1_ABXX15)
 582              		.loc 1 100 17 view .LVU154
 583 0044 FFF7FEFF 		bl	read_rtc_register
 584              	.LVL55:
 101:Core/Src/AB1805_RK.c ****         {
 585              		.loc 1 101 9 is_stmt 1 view .LVU155
 101:Core/Src/AB1805_RK.c ****         {
 586              		.loc 1 101 12 is_stmt 0 view .LVU156
 587 0048 0528     		cmp	r0, #5
 588 004a F0D1     		bne	.L24
 103:Core/Src/AB1805_RK.c ****         }
 589              		.loc 1 103 25 view .LVU157
 590 004c 0120     		movs	r0, #1
 591              	.LVL56:
 103:Core/Src/AB1805_RK.c ****         }
 592              		.loc 1 103 25 view .LVU158
 593 004e F2E7     		b	.L23
 594              	.L29:
 595              		.align	2
 596              	.L28:
 597 0050 00040050 		.word	1342178304
 598 0054 18000000 		.word	.LC3
 599 0058 00000000 		.word	.LC1
 600              		.cfi_endproc
 601              	.LFE503:
 603              		.section	.text.usingRCOscillator,"ax",%progbits
 604              		.align	1
 605              		.global	usingRCOscillator
 606              		.syntax unified
 607              		.code	16
 608              		.thumb_func
 610              	usingRCOscillator:
 611              	.LFB504:
 114:Core/Src/AB1805_RK.c ****     uint8_t value;
 612              		.loc 1 114 1 is_stmt 1 view -0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616 0000 10B5     		push	{r4, lr}
 617              	.LCFI4:
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 4, -8
 620              		.cfi_offset 14, -4
 115:Core/Src/AB1805_RK.c **** 
 621              		.loc 1 115 5 view .LVU160
 117:Core/Src/AB1805_RK.c **** 
 622              		.loc 1 117 5 view .LVU161
 117:Core/Src/AB1805_RK.c **** 
 623              		.loc 1 117 13 is_stmt 0 view .LVU162
 624 0002 1D20     		movs	r0, #29
 625 0004 FFF7FEFF 		bl	read_rtc_register
 626              	.LVL57:
 119:Core/Src/AB1805_RK.c **** }
 627              		.loc 1 119 5 is_stmt 1 view .LVU163
 119:Core/Src/AB1805_RK.c **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 72


 628              		.loc 1 119 43 is_stmt 0 view .LVU164
 629 0008 0123     		movs	r3, #1
 630 000a 1840     		ands	r0, r3
 631              	.LVL58:
 120:Core/Src/AB1805_RK.c **** 
 632              		.loc 1 120 1 view .LVU165
 633              		@ sp needed
 634 000c 10BD     		pop	{r4, pc}
 635              		.cfi_endproc
 636              	.LFE504:
 638              		.section	.rodata.setWDT.str1.4,"aMS",%progbits,1
 639              		.align	2
 640              	.LC5:
 641 0000 73657457 		.ascii	"setWDT %d\012\000"
 641      44542025 
 641      640A00
 642 000b 00       		.align	2
 643              	.LC8:
 644 000c 77617463 		.ascii	"watchdog cleared bResult=%d\012\000"
 644      68646F67 
 644      20636C65 
 644      61726564 
 644      20625265 
 645 0029 000000   		.align	2
 646              	.LC11:
 647 002c 77617463 		.ascii	"watchdog set fourSecs=%d bResult=%d\012\000"
 647      68646F67 
 647      20736574 
 647      20666F75 
 647      72536563 
 648              		.section	.text.setWDT,"ax",%progbits
 649              		.align	1
 650              		.global	setWDT
 651              		.syntax unified
 652              		.code	16
 653              		.thumb_func
 655              	setWDT:
 656              	.LVL59:
 657              	.LFB507:
 208:Core/Src/AB1805_RK.c ****     bool bResult = false;
 658              		.loc 1 208 1 is_stmt 1 view -0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 208:Core/Src/AB1805_RK.c ****     bool bResult = false;
 662              		.loc 1 208 1 is_stmt 0 view .LVU167
 663 0000 70B5     		push	{r4, r5, r6, lr}
 664              	.LCFI5:
 665              		.cfi_def_cfa_offset 16
 666              		.cfi_offset 4, -16
 667              		.cfi_offset 5, -12
 668              		.cfi_offset 6, -8
 669              		.cfi_offset 14, -4
 670 0002 0400     		movs	r4, r0
 209:Core/Src/AB1805_RK.c ****     printf("setWDT %d\n", seconds);
 671              		.loc 1 209 5 is_stmt 1 view .LVU168
 672              	.LVL60:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 73


 210:Core/Src/AB1805_RK.c **** 
 673              		.loc 1 210 5 view .LVU169
 674 0004 2148     		ldr	r0, .L40
 675              	.LVL61:
 210:Core/Src/AB1805_RK.c **** 
 676              		.loc 1 210 5 is_stmt 0 view .LVU170
 677 0006 2100     		movs	r1, r4
 678 0008 FFF7FEFF 		bl	printf_
 679              	.LVL62:
 212:Core/Src/AB1805_RK.c ****     {
 680              		.loc 1 212 5 is_stmt 1 view .LVU171
 212:Core/Src/AB1805_RK.c ****     {
 681              		.loc 1 212 8 is_stmt 0 view .LVU172
 682 000c 002C     		cmp	r4, #0
 683 000e 0CDB     		blt	.L38
 684              	.L32:
 217:Core/Src/AB1805_RK.c ****     {
 685              		.loc 1 217 5 is_stmt 1 view .LVU173
 217:Core/Src/AB1805_RK.c ****     {
 686              		.loc 1 217 8 is_stmt 0 view .LVU174
 687 0010 002C     		cmp	r4, #0
 688 0012 0DD0     		beq	.L39
 689              	.LBB109:
 230:Core/Src/AB1805_RK.c ****         if (fourSecs < 1)
 690              		.loc 1 230 9 is_stmt 1 view .LVU175
 230:Core/Src/AB1805_RK.c ****         if (fourSecs < 1)
 691              		.loc 1 230 13 is_stmt 0 view .LVU176
 692 0014 E317     		asrs	r3, r4, #31
 693 0016 0325     		movs	r5, #3
 694 0018 1D40     		ands	r5, r3
 695 001a 2D19     		adds	r5, r5, r4
 696 001c AD10     		asrs	r5, r5, #2
 697              	.LVL63:
 231:Core/Src/AB1805_RK.c ****         {
 698              		.loc 1 231 9 is_stmt 1 view .LVU177
 231:Core/Src/AB1805_RK.c ****         {
 699              		.loc 1 231 12 is_stmt 0 view .LVU178
 700 001e 032C     		cmp	r4, #3
 701 0020 17DD     		ble	.L36
 235:Core/Src/AB1805_RK.c ****         {
 702              		.loc 1 235 9 is_stmt 1 view .LVU179
 235:Core/Src/AB1805_RK.c ****         {
 703              		.loc 1 235 12 is_stmt 0 view .LVU180
 704 0022 7F2C     		cmp	r4, #127
 705 0024 16DD     		ble	.L35
 237:Core/Src/AB1805_RK.c ****         }
 706              		.loc 1 237 22 view .LVU181
 707 0026 1F25     		movs	r5, #31
 708              	.LVL64:
 237:Core/Src/AB1805_RK.c ****         }
 709              		.loc 1 237 22 view .LVU182
 710 0028 14E0     		b	.L35
 711              	.LVL65:
 712              	.L38:
 237:Core/Src/AB1805_RK.c ****         }
 713              		.loc 1 237 22 view .LVU183
 714              	.LBE109:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 74


 214:Core/Src/AB1805_RK.c ****     }
 715              		.loc 1 214 9 is_stmt 1 view .LVU184
 214:Core/Src/AB1805_RK.c ****     }
 716              		.loc 1 214 17 is_stmt 0 view .LVU185
 717 002a 194B     		ldr	r3, .L40+4
 718 002c 1C68     		ldr	r4, [r3]
 719              	.LVL66:
 214:Core/Src/AB1805_RK.c ****     }
 720              		.loc 1 214 17 view .LVU186
 721 002e EFE7     		b	.L32
 722              	.L39:
 220:Core/Src/AB1805_RK.c **** 
 723              		.loc 1 220 9 is_stmt 1 view .LVU187
 220:Core/Src/AB1805_RK.c **** 
 724              		.loc 1 220 19 is_stmt 0 view .LVU188
 725 0030 0021     		movs	r1, #0
 726 0032 1B20     		movs	r0, #27
 727 0034 FFF7FEFF 		bl	write_rtc_register
 728              	.LVL67:
 220:Core/Src/AB1805_RK.c **** 
 729              		.loc 1 220 17 view .LVU189
 730 0038 431E     		subs	r3, r0, #1
 731 003a 9841     		sbcs	r0, r0, r3
 732 003c C6B2     		uxtb	r6, r0
 733              	.LVL68:
 222:Core/Src/AB1805_RK.c **** 
 734              		.loc 1 222 9 is_stmt 1 view .LVU190
 735 003e 1548     		ldr	r0, .L40+8
 736 0040 3100     		movs	r1, r6
 737 0042 FFF7FEFF 		bl	printf_
 738              	.LVL69:
 224:Core/Src/AB1805_RK.c ****         watchdogUpdatePeriod = 0;
 739              		.loc 1 224 9 view .LVU191
 224:Core/Src/AB1805_RK.c ****         watchdogUpdatePeriod = 0;
 740              		.loc 1 224 22 is_stmt 0 view .LVU192
 741 0046 124B     		ldr	r3, .L40+4
 742 0048 0022     		movs	r2, #0
 743 004a 1A60     		str	r2, [r3]
 225:Core/Src/AB1805_RK.c ****     }
 744              		.loc 1 225 9 is_stmt 1 view .LVU193
 225:Core/Src/AB1805_RK.c ****     }
 745              		.loc 1 225 30 is_stmt 0 view .LVU194
 746 004c 124B     		ldr	r3, .L40+12
 747 004e 1A60     		str	r2, [r3]
 748 0050 1AE0     		b	.L34
 749              	.LVL70:
 750              	.L36:
 751              	.LBB110:
 233:Core/Src/AB1805_RK.c ****         }
 752              		.loc 1 233 22 view .LVU195
 753 0052 0125     		movs	r5, #1
 754              	.LVL71:
 755              	.L35:
 239:Core/Src/AB1805_RK.c **** 
 756              		.loc 1 239 9 is_stmt 1 view .LVU196
 239:Core/Src/AB1805_RK.c **** 
 757              		.loc 1 239 73 is_stmt 0 view .LVU197
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 75


 758 0054 AB00     		lsls	r3, r5, #2
 239:Core/Src/AB1805_RK.c **** 
 759              		.loc 1 239 61 view .LVU198
 760 0056 5BB2     		sxtb	r3, r3
 239:Core/Src/AB1805_RK.c **** 
 761              		.loc 1 239 79 view .LVU199
 762 0058 7D21     		movs	r1, #125
 763 005a 4942     		rsbs	r1, r1, #0
 764 005c 1943     		orrs	r1, r3
 239:Core/Src/AB1805_RK.c **** 
 765              		.loc 1 239 19 view .LVU200
 766 005e C9B2     		uxtb	r1, r1
 767 0060 1B20     		movs	r0, #27
 768 0062 FFF7FEFF 		bl	write_rtc_register
 769              	.LVL72:
 239:Core/Src/AB1805_RK.c **** 
 770              		.loc 1 239 17 view .LVU201
 771 0066 431E     		subs	r3, r0, #1
 772 0068 9841     		sbcs	r0, r0, r3
 773 006a C6B2     		uxtb	r6, r0
 774              	.LVL73:
 241:Core/Src/AB1805_RK.c **** 
 775              		.loc 1 241 9 is_stmt 1 view .LVU202
 776 006c 0B48     		ldr	r0, .L40+16
 777 006e 3200     		movs	r2, r6
 778 0070 2900     		movs	r1, r5
 779 0072 FFF7FEFF 		bl	printf_
 780              	.LVL74:
 243:Core/Src/AB1805_RK.c **** 
 781              		.loc 1 243 9 view .LVU203
 243:Core/Src/AB1805_RK.c **** 
 782              		.loc 1 243 22 is_stmt 0 view .LVU204
 783 0076 064B     		ldr	r3, .L40+4
 784 0078 1C60     		str	r4, [r3]
 246:Core/Src/AB1805_RK.c ****     }
 785              		.loc 1 246 9 is_stmt 1 view .LVU205
 246:Core/Src/AB1805_RK.c ****     }
 786              		.loc 1 246 42 is_stmt 0 view .LVU206
 787 007a 6B01     		lsls	r3, r5, #5
 788 007c 5B1B     		subs	r3, r3, r5
 789 007e 9B00     		lsls	r3, r3, #2
 790 0080 5B19     		adds	r3, r3, r5
 791 0082 1B01     		lsls	r3, r3, #4
 246:Core/Src/AB1805_RK.c ****     }
 792              		.loc 1 246 30 view .LVU207
 793 0084 044A     		ldr	r2, .L40+12
 794 0086 1360     		str	r3, [r2]
 795              	.LVL75:
 796              	.L34:
 246:Core/Src/AB1805_RK.c ****     }
 797              		.loc 1 246 30 view .LVU208
 798              	.LBE110:
 249:Core/Src/AB1805_RK.c **** }
 799              		.loc 1 249 5 is_stmt 1 view .LVU209
 250:Core/Src/AB1805_RK.c **** 
 800              		.loc 1 250 1 is_stmt 0 view .LVU210
 801 0088 3000     		movs	r0, r6
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 76


 802              		@ sp needed
 803              	.LVL76:
 804              	.LVL77:
 250:Core/Src/AB1805_RK.c **** 
 805              		.loc 1 250 1 view .LVU211
 806 008a 70BD     		pop	{r4, r5, r6, pc}
 807              	.L41:
 808              		.align	2
 809              	.L40:
 810 008c 00000000 		.word	.LC5
 811 0090 00000000 		.word	watchdogSecs
 812 0094 0C000000 		.word	.LC8
 813 0098 00000000 		.word	watchdogUpdatePeriod
 814 009c 2C000000 		.word	.LC11
 815              		.cfi_endproc
 816              	.LFE507:
 818              		.section	.text.maskRegister,"ax",%progbits
 819              		.align	1
 820              		.global	maskRegister
 821              		.syntax unified
 822              		.code	16
 823              		.thumb_func
 825              	maskRegister:
 826              	.LVL78:
 827              	.LFB512:
 449:Core/Src/AB1805_RK.c ****     bool bResult = false;
 828              		.loc 1 449 1 is_stmt 1 view -0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 449:Core/Src/AB1805_RK.c ****     bool bResult = false;
 832              		.loc 1 449 1 is_stmt 0 view .LVU213
 833 0000 70B5     		push	{r4, r5, r6, lr}
 834              	.LCFI6:
 835              		.cfi_def_cfa_offset 16
 836              		.cfi_offset 4, -16
 837              		.cfi_offset 5, -12
 838              		.cfi_offset 6, -8
 839              		.cfi_offset 14, -4
 840 0002 0600     		movs	r6, r0
 841 0004 0D00     		movs	r5, r1
 842 0006 1400     		movs	r4, r2
 450:Core/Src/AB1805_RK.c **** 
 843              		.loc 1 450 5 is_stmt 1 view .LVU214
 844              	.LVL79:
 452:Core/Src/AB1805_RK.c **** 
 845              		.loc 1 452 5 view .LVU215
 454:Core/Src/AB1805_RK.c **** 
 846              		.loc 1 454 5 view .LVU216
 454:Core/Src/AB1805_RK.c **** 
 847              		.loc 1 454 13 is_stmt 0 view .LVU217
 848 0008 FFF7FEFF 		bl	read_rtc_register
 849              	.LVL80:
 456:Core/Src/AB1805_RK.c **** 
 850              		.loc 1 456 5 is_stmt 1 view .LVU218
 456:Core/Src/AB1805_RK.c **** 
 851              		.loc 1 456 13 is_stmt 0 view .LVU219
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 77


 852 000c 0540     		ands	r5, r0
 853 000e 2100     		movs	r1, r4
 854 0010 2943     		orrs	r1, r5
 855              	.LVL81:
 458:Core/Src/AB1805_RK.c **** 
 856              		.loc 1 458 5 is_stmt 1 view .LVU220
 458:Core/Src/AB1805_RK.c **** 
 857              		.loc 1 458 15 is_stmt 0 view .LVU221
 858 0012 3000     		movs	r0, r6
 859              	.LVL82:
 458:Core/Src/AB1805_RK.c **** 
 860              		.loc 1 458 15 view .LVU222
 861 0014 FFF7FEFF 		bl	write_rtc_register
 862              	.LVL83:
 458:Core/Src/AB1805_RK.c **** 
 863              		.loc 1 458 13 view .LVU223
 864 0018 431E     		subs	r3, r0, #1
 865 001a 9841     		sbcs	r0, r0, r3
 866 001c C0B2     		uxtb	r0, r0
 867              	.LVL84:
 460:Core/Src/AB1805_RK.c **** }
 868              		.loc 1 460 5 is_stmt 1 view .LVU224
 461:Core/Src/AB1805_RK.c **** 
 869              		.loc 1 461 1 is_stmt 0 view .LVU225
 870              		@ sp needed
 871              	.LVL85:
 461:Core/Src/AB1805_RK.c **** 
 872              		.loc 1 461 1 view .LVU226
 873 001e 70BD     		pop	{r4, r5, r6, pc}
 874              		.cfi_endproc
 875              	.LFE512:
 877              		.section	.rodata.resetConfig.str1.4,"aMS",%progbits,1
 878              		.align	2
 879              	.LC13:
 880 0000 72657365 		.ascii	"resetConfig(0x%08lx)\012\000"
 880      74436F6E 
 880      66696728 
 880      30782530 
 880      386C7829 
 881              		.section	.text.resetConfig,"ax",%progbits
 882              		.align	1
 883              		.global	resetConfig
 884              		.syntax unified
 885              		.code	16
 886              		.thumb_func
 888              	resetConfig:
 889              	.LVL86:
 890              	.LFB505:
 123:Core/Src/AB1805_RK.c ****     printf("resetConfig(0x%08lx)\n", flags);
 891              		.loc 1 123 1 is_stmt 1 view -0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 123:Core/Src/AB1805_RK.c ****     printf("resetConfig(0x%08lx)\n", flags);
 895              		.loc 1 123 1 is_stmt 0 view .LVU228
 896 0000 10B5     		push	{r4, lr}
 897              	.LCFI7:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 78


 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 4, -8
 900              		.cfi_offset 14, -4
 901 0002 0400     		movs	r4, r0
 124:Core/Src/AB1805_RK.c **** 
 902              		.loc 1 124 5 is_stmt 1 view .LVU229
 903 0004 2148     		ldr	r0, .L46
 904              	.LVL87:
 124:Core/Src/AB1805_RK.c **** 
 905              		.loc 1 124 5 is_stmt 0 view .LVU230
 906 0006 2100     		movs	r1, r4
 907 0008 FFF7FEFF 		bl	printf_
 908              	.LVL88:
 127:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_CTRL_1, REG_CTRL_1_DEFAULT);
 909              		.loc 1 127 5 is_stmt 1 view .LVU231
 910 000c 0021     		movs	r1, #0
 911 000e 0F20     		movs	r0, #15
 912 0010 FFF7FEFF 		bl	write_rtc_register
 913              	.LVL89:
 128:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_CTRL_2, REG_CTRL_2_DEFAULT);
 914              		.loc 1 128 5 view .LVU232
 915 0014 1221     		movs	r1, #18
 916 0016 1020     		movs	r0, #16
 917 0018 FFF7FEFF 		bl	write_rtc_register
 918              	.LVL90:
 129:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_INT_MASK, REG_INT_MASK_DEFAULT);
 919              		.loc 1 129 5 view .LVU233
 920 001c 3C21     		movs	r1, #60
 921 001e 1120     		movs	r0, #17
 922 0020 FFF7FEFF 		bl	write_rtc_register
 923              	.LVL91:
 130:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_SQW, REG_SQW_DEFAULT);
 924              		.loc 1 130 5 view .LVU234
 925 0024 E021     		movs	r1, #224
 926 0026 1220     		movs	r0, #18
 927 0028 FFF7FEFF 		bl	write_rtc_register
 928              	.LVL92:
 131:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_SLEEP_CTRL, REG_SLEEP_CTRL_DEFAULT);
 929              		.loc 1 131 5 view .LVU235
 930 002c 2621     		movs	r1, #38
 931 002e 1320     		movs	r0, #19
 932 0030 FFF7FEFF 		bl	write_rtc_register
 933              	.LVL93:
 132:Core/Src/AB1805_RK.c **** 
 934              		.loc 1 132 5 view .LVU236
 935 0034 0021     		movs	r1, #0
 936 0036 1720     		movs	r0, #23
 937 0038 FFF7FEFF 		bl	write_rtc_register
 938              	.LVL94:
 134:Core/Src/AB1805_RK.c ****     {
 939              		.loc 1 134 5 view .LVU237
 134:Core/Src/AB1805_RK.c ****     {
 940              		.loc 1 134 8 is_stmt 0 view .LVU238
 941 003c E407     		lsls	r4, r4, #31
 942 003e 1FD5     		bpl	.L44
 943              	.LVL95:
 136:Core/Src/AB1805_RK.c ****     }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 79


 944              		.loc 1 136 9 is_stmt 1 view .LVU239
 945 0040 0023     		movs	r3, #0
 946 0042 2322     		movs	r2, #35
 947 0044 E321     		movs	r1, #227
 948 0046 1820     		movs	r0, #24
 949 0048 FFF7FEFF 		bl	maskRegister
 950              	.LVL96:
 951              	.L45:
 143:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_TIMER_INITIAL, REG_TIMER_INITIAL_DEFAULT);
 952              		.loc 1 143 5 view .LVU240
 953 004c 0021     		movs	r1, #0
 954 004e 1920     		movs	r0, #25
 955 0050 FFF7FEFF 		bl	write_rtc_register
 956              	.LVL97:
 144:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_WDT, REG_WDT_DEFAULT);
 957              		.loc 1 144 5 view .LVU241
 958 0054 0021     		movs	r1, #0
 959 0056 1A20     		movs	r0, #26
 960 0058 FFF7FEFF 		bl	write_rtc_register
 961              	.LVL98:
 145:Core/Src/AB1805_RK.c **** 
 962              		.loc 1 145 5 view .LVU242
 963 005c 0021     		movs	r1, #0
 964 005e 1B20     		movs	r0, #27
 965 0060 FFF7FEFF 		bl	write_rtc_register
 966              	.LVL99:
 147:Core/Src/AB1805_RK.c ****     if ((flags & RESET_DISABLE_XT) != 0)
 967              		.loc 1 147 5 view .LVU243
 148:Core/Src/AB1805_RK.c ****     {
 968              		.loc 1 148 5 view .LVU244
 157:Core/Src/AB1805_RK.c ****     write_rtc_register(REG_AFCTRL, REG_AFCTRL_DEFAULT);
 969              		.loc 1 157 5 view .LVU245
 970 0064 F021     		movs	r1, #240
 971 0066 2120     		movs	r0, #33
 972 0068 FFF7FEFF 		bl	write_rtc_register
 973              	.LVL100:
 158:Core/Src/AB1805_RK.c ****     // write_rtc_register(REG_BATMODE_IO, REG_BATMODE_IO_DEFAULT);
 974              		.loc 1 158 5 view .LVU246
 975 006c 0021     		movs	r1, #0
 976 006e 2620     		movs	r0, #38
 977 0070 FFF7FEFF 		bl	write_rtc_register
 978              	.LVL101:
 160:Core/Src/AB1805_RK.c **** 
 979              		.loc 1 160 5 view .LVU247
 980 0074 0021     		movs	r1, #0
 981 0076 3020     		movs	r0, #48
 982 0078 FFF7FEFF 		bl	write_rtc_register
 983              	.LVL102:
 162:Core/Src/AB1805_RK.c **** }
 984              		.loc 1 162 5 view .LVU248
 163:Core/Src/AB1805_RK.c **** 
 985              		.loc 1 163 1 is_stmt 0 view .LVU249
 986 007c 0120     		movs	r0, #1
 987              		@ sp needed
 988 007e 10BD     		pop	{r4, pc}
 989              	.L44:
 140:Core/Src/AB1805_RK.c ****     }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 80


 990              		.loc 1 140 9 is_stmt 1 view .LVU250
 991 0080 2321     		movs	r1, #35
 992 0082 1820     		movs	r0, #24
 993 0084 FFF7FEFF 		bl	write_rtc_register
 994              	.LVL103:
 995 0088 E0E7     		b	.L45
 996              	.L47:
 997 008a C046     		.align	2
 998              	.L46:
 999 008c 00000000 		.word	.LC13
 1000              		.cfi_endproc
 1001              	.LFE505:
 1003              		.section	.text.isBitClear,"ax",%progbits
 1004              		.align	1
 1005              		.global	isBitClear
 1006              		.syntax unified
 1007              		.code	16
 1008              		.thumb_func
 1010              	isBitClear:
 1011              	.LVL104:
 1012              	.LFB513:
 464:Core/Src/AB1805_RK.c ****     bool bResult;
 1013              		.loc 1 464 1 view -0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 0
 1016              		@ frame_needed = 0, uses_anonymous_args = 0
 464:Core/Src/AB1805_RK.c ****     bool bResult;
 1017              		.loc 1 464 1 is_stmt 0 view .LVU252
 1018 0000 10B5     		push	{r4, lr}
 1019              	.LCFI8:
 1020              		.cfi_def_cfa_offset 8
 1021              		.cfi_offset 4, -8
 1022              		.cfi_offset 14, -4
 465:Core/Src/AB1805_RK.c ****     uint8_t value = 0;
 1023              		.loc 1 465 5 is_stmt 1 view .LVU253
 466:Core/Src/AB1805_RK.c **** 
 1024              		.loc 1 466 5 view .LVU254
 1025              	.LVL105:
 468:Core/Src/AB1805_RK.c **** 
 1026              		.loc 1 468 5 view .LVU255
 468:Core/Src/AB1805_RK.c **** 
 1027              		.loc 1 468 15 is_stmt 0 view .LVU256
 1028 0002 FFF7FEFF 		bl	read_rtc_register
 1029              	.LVL106:
 470:Core/Src/AB1805_RK.c **** }
 1030              		.loc 1 470 5 is_stmt 1 view .LVU257
 470:Core/Src/AB1805_RK.c **** }
 1031              		.loc 1 470 20 is_stmt 0 view .LVU258
 1032 0006 0028     		cmp	r0, #0
 1033 0008 01D0     		beq	.L50
 1034 000a 0120     		movs	r0, #1
 1035              	.LVL107:
 1036              	.L49:
 471:Core/Src/AB1805_RK.c **** 
 1037              		.loc 1 471 1 discriminator 6 view .LVU259
 1038              		@ sp needed
 1039 000c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 81


 1040              	.LVL108:
 1041              	.L50:
 470:Core/Src/AB1805_RK.c **** }
 1042              		.loc 1 470 20 view .LVU260
 1043 000e 0020     		movs	r0, #0
 1044              	.LVL109:
 470:Core/Src/AB1805_RK.c **** }
 1045              		.loc 1 470 20 view .LVU261
 1046 0010 FCE7     		b	.L49
 1047              		.cfi_endproc
 1048              	.LFE513:
 1050              		.section	.text.isBitSet,"ax",%progbits
 1051              		.align	1
 1052              		.global	isBitSet
 1053              		.syntax unified
 1054              		.code	16
 1055              		.thumb_func
 1057              	isBitSet:
 1058              	.LVL110:
 1059              	.LFB514:
 474:Core/Src/AB1805_RK.c ****     bool bResult;
 1060              		.loc 1 474 1 is_stmt 1 view -0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 474:Core/Src/AB1805_RK.c ****     bool bResult;
 1064              		.loc 1 474 1 is_stmt 0 view .LVU263
 1065 0000 10B5     		push	{r4, lr}
 1066              	.LCFI9:
 1067              		.cfi_def_cfa_offset 8
 1068              		.cfi_offset 4, -8
 1069              		.cfi_offset 14, -4
 475:Core/Src/AB1805_RK.c ****     uint8_t value = 0;
 1070              		.loc 1 475 5 is_stmt 1 view .LVU264
 476:Core/Src/AB1805_RK.c **** 
 1071              		.loc 1 476 5 view .LVU265
 1072              	.LVL111:
 478:Core/Src/AB1805_RK.c **** 
 1073              		.loc 1 478 5 view .LVU266
 478:Core/Src/AB1805_RK.c **** 
 1074              		.loc 1 478 15 is_stmt 0 view .LVU267
 1075 0002 FFF7FEFF 		bl	read_rtc_register
 1076              	.LVL112:
 480:Core/Src/AB1805_RK.c **** }
 1077              		.loc 1 480 5 is_stmt 1 view .LVU268
 481:Core/Src/AB1805_RK.c **** 
 1078              		.loc 1 481 1 is_stmt 0 view .LVU269
 1079 0006 0020     		movs	r0, #0
 1080              		@ sp needed
 1081 0008 10BD     		pop	{r4, pc}
 1082              		.cfi_endproc
 1083              	.LFE514:
 1085              		.section	.text.clearRegisterBit,"ax",%progbits
 1086              		.align	1
 1087              		.global	clearRegisterBit
 1088              		.syntax unified
 1089              		.code	16
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 82


 1090              		.thumb_func
 1092              	clearRegisterBit:
 1093              	.LVL113:
 1094              	.LFB515:
 484:Core/Src/AB1805_RK.c ****     return maskRegister(regAddr, ~bitMask, 0x00, lock);
 1095              		.loc 1 484 1 is_stmt 1 view -0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 0
 1098              		@ frame_needed = 0, uses_anonymous_args = 0
 484:Core/Src/AB1805_RK.c ****     return maskRegister(regAddr, ~bitMask, 0x00, lock);
 1099              		.loc 1 484 1 is_stmt 0 view .LVU271
 1100 0000 10B5     		push	{r4, lr}
 1101              	.LCFI10:
 1102              		.cfi_def_cfa_offset 8
 1103              		.cfi_offset 4, -8
 1104              		.cfi_offset 14, -4
 1105 0002 1300     		movs	r3, r2
 485:Core/Src/AB1805_RK.c **** }
 1106              		.loc 1 485 5 is_stmt 1 view .LVU272
 485:Core/Src/AB1805_RK.c **** }
 1107              		.loc 1 485 12 is_stmt 0 view .LVU273
 1108 0004 C943     		mvns	r1, r1
 1109              	.LVL114:
 485:Core/Src/AB1805_RK.c **** }
 1110              		.loc 1 485 12 view .LVU274
 1111 0006 C9B2     		uxtb	r1, r1
 1112 0008 0022     		movs	r2, #0
 1113              	.LVL115:
 485:Core/Src/AB1805_RK.c **** }
 1114              		.loc 1 485 12 view .LVU275
 1115 000a FFF7FEFF 		bl	maskRegister
 1116              	.LVL116:
 486:Core/Src/AB1805_RK.c **** 
 1117              		.loc 1 486 1 view .LVU276
 1118              		@ sp needed
 1119 000e 10BD     		pop	{r4, pc}
 1120              		.cfi_endproc
 1121              	.LFE515:
 1123              		.section	.rodata.updateWakeReason.str1.4,"aMS",%progbits,1
 1124              		.align	2
 1125              	.LC15:
 1126 0000 44454550 		.ascii	"DEEP_POWER_DOWN\000"
 1126      5F504F57 
 1126      45525F44 
 1126      4F574E00 
 1127              		.align	2
 1128              	.LC17:
 1129 0010 57415443 		.ascii	"WATCHDOG\000"
 1129      48444F47 
 1129      00
 1130 0019 000000   		.align	2
 1131              	.LC19:
 1132 001c 414C4152 		.ascii	"ALARM\000"
 1132      4D00
 1133 0022 0000     		.align	2
 1134              	.LC21:
 1135 0024 434F554E 		.ascii	"COUNTDOWN_TIMER\000"
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 83


 1135      54444F57 
 1135      4E5F5449 
 1135      4D455200 
 1136              		.align	2
 1137              	.LC24:
 1138 0034 77616B65 		.ascii	"wake reason = %s\012\000"
 1138      20726561 
 1138      736F6E20 
 1138      3D202573 
 1138      0A00
 1139              		.section	.text.updateWakeReason,"ax",%progbits
 1140              		.align	1
 1141              		.global	updateWakeReason
 1142              		.syntax unified
 1143              		.code	16
 1144              		.thumb_func
 1146              	updateWakeReason:
 1147              	.LFB506:
 166:Core/Src/AB1805_RK.c ****     // static const char *errorMsg = "failure in updateWakeReason %d";
 1148              		.loc 1 166 1 is_stmt 1 view -0
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 0
 1151              		@ frame_needed = 0, uses_anonymous_args = 0
 1152 0000 10B5     		push	{r4, lr}
 1153              	.LCFI11:
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 4, -8
 1156              		.cfi_offset 14, -4
 169:Core/Src/AB1805_RK.c ****     status = read_rtc_register(REG_STATUS);
 1157              		.loc 1 169 5 view .LVU278
 170:Core/Src/AB1805_RK.c **** 
 1158              		.loc 1 170 5 view .LVU279
 170:Core/Src/AB1805_RK.c **** 
 1159              		.loc 1 170 14 is_stmt 0 view .LVU280
 1160 0002 0F20     		movs	r0, #15
 1161 0004 FFF7FEFF 		bl	read_rtc_register
 1162              	.LVL117:
 1163 0008 0400     		movs	r4, r0
 1164              	.LVL118:
 172:Core/Src/AB1805_RK.c **** 
 1165              		.loc 1 172 5 is_stmt 1 view .LVU281
 174:Core/Src/AB1805_RK.c ****     {
 1166              		.loc 1 174 5 view .LVU282
 174:Core/Src/AB1805_RK.c ****     {
 1167              		.loc 1 174 8 is_stmt 0 view .LVU283
 1168 000a 8306     		lsls	r3, r0, #26
 1169 000c 0DD5     		bpl	.L54
 176:Core/Src/AB1805_RK.c **** 
 1170              		.loc 1 176 9 is_stmt 1 view .LVU284
 1171              	.LVL119:
 178:Core/Src/AB1805_RK.c ****         clearRegisterBit(REG_STATUS, REG_STATUS_WDT, 0);
 1172              		.loc 1 178 9 view .LVU285
 178:Core/Src/AB1805_RK.c ****         clearRegisterBit(REG_STATUS, REG_STATUS_WDT, 0);
 1173              		.loc 1 178 20 is_stmt 0 view .LVU286
 1174 000e 194B     		ldr	r3, .L61
 1175 0010 0122     		movs	r2, #1
 1176 0012 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 84


 179:Core/Src/AB1805_RK.c ****     }
 1177              		.loc 1 179 9 is_stmt 1 view .LVU287
 1178 0014 0022     		movs	r2, #0
 1179 0016 2021     		movs	r1, #32
 1180 0018 0F20     		movs	r0, #15
 1181              	.LVL120:
 179:Core/Src/AB1805_RK.c ****     }
 1182              		.loc 1 179 9 is_stmt 0 view .LVU288
 1183 001a FFF7FEFF 		bl	clearRegisterBit
 1184              	.LVL121:
 199:Core/Src/AB1805_RK.c ****     {
 1185              		.loc 1 199 5 is_stmt 1 view .LVU289
 176:Core/Src/AB1805_RK.c **** 
 1186              		.loc 1 176 16 is_stmt 0 view .LVU290
 1187 001e 1649     		ldr	r1, .L61+4
 1188              	.LVL122:
 1189              	.L55:
 201:Core/Src/AB1805_RK.c ****     }
 1190              		.loc 1 201 9 is_stmt 1 view .LVU291
 1191 0020 1648     		ldr	r0, .L61+8
 1192 0022 FFF7FEFF 		bl	printf_
 1193              	.LVL123:
 1194              	.L58:
 204:Core/Src/AB1805_RK.c **** }
 1195              		.loc 1 204 5 view .LVU292
 205:Core/Src/AB1805_RK.c **** 
 1196              		.loc 1 205 1 is_stmt 0 view .LVU293
 1197 0026 0120     		movs	r0, #1
 1198              		@ sp needed
 1199 0028 10BD     		pop	{r4, pc}
 1200              	.LVL124:
 1201              	.L54:
 181:Core/Src/AB1805_RK.c ****     {
 1202              		.loc 1 181 10 is_stmt 1 view .LVU294
 181:Core/Src/AB1805_RK.c ****     {
 1203              		.loc 1 181 14 is_stmt 0 view .LVU295
 1204 002a 0022     		movs	r2, #0
 1205 002c 0821     		movs	r1, #8
 1206 002e 1720     		movs	r0, #23
 1207              	.LVL125:
 181:Core/Src/AB1805_RK.c ****     {
 1208              		.loc 1 181 14 view .LVU296
 1209 0030 FFF7FEFF 		bl	isBitSet
 1210              	.LVL126:
 181:Core/Src/AB1805_RK.c ****     {
 1211              		.loc 1 181 13 view .LVU297
 1212 0034 0028     		cmp	r0, #0
 1213 0036 04D0     		beq	.L56
 183:Core/Src/AB1805_RK.c ****         wakeReason = DEEP_POWER_DOWN;
 1214              		.loc 1 183 9 is_stmt 1 view .LVU298
 1215              	.LVL127:
 184:Core/Src/AB1805_RK.c ****     }
 1216              		.loc 1 184 9 view .LVU299
 184:Core/Src/AB1805_RK.c ****     }
 1217              		.loc 1 184 20 is_stmt 0 view .LVU300
 1218 0038 0E4B     		ldr	r3, .L61
 1219 003a 0222     		movs	r2, #2
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 85


 1220 003c 1A70     		strb	r2, [r3]
 199:Core/Src/AB1805_RK.c ****     {
 1221              		.loc 1 199 5 is_stmt 1 view .LVU301
 183:Core/Src/AB1805_RK.c ****         wakeReason = DEEP_POWER_DOWN;
 1222              		.loc 1 183 16 is_stmt 0 view .LVU302
 1223 003e 1049     		ldr	r1, .L61+12
 1224 0040 EEE7     		b	.L55
 1225              	.LVL128:
 1226              	.L56:
 186:Core/Src/AB1805_RK.c ****     {
 1227              		.loc 1 186 10 is_stmt 1 view .LVU303
 186:Core/Src/AB1805_RK.c ****     {
 1228              		.loc 1 186 13 is_stmt 0 view .LVU304
 1229 0042 2307     		lsls	r3, r4, #28
 1230 0044 0BD4     		bmi	.L60
 192:Core/Src/AB1805_RK.c ****     {
 1231              		.loc 1 192 10 is_stmt 1 view .LVU305
 192:Core/Src/AB1805_RK.c ****     {
 1232              		.loc 1 192 13 is_stmt 0 view .LVU306
 1233 0046 6407     		lsls	r4, r4, #29
 1234 0048 EDD5     		bpl	.L58
 194:Core/Src/AB1805_RK.c ****         wakeReason = ALARM;
 1235              		.loc 1 194 9 is_stmt 1 view .LVU307
 1236              	.LVL129:
 195:Core/Src/AB1805_RK.c ****         clearRegisterBit(REG_STATUS, REG_STATUS_ALM, 0);
 1237              		.loc 1 195 9 view .LVU308
 195:Core/Src/AB1805_RK.c ****         clearRegisterBit(REG_STATUS, REG_STATUS_ALM, 0);
 1238              		.loc 1 195 20 is_stmt 0 view .LVU309
 1239 004a 0A4B     		ldr	r3, .L61
 1240 004c 0422     		movs	r2, #4
 1241 004e 1A70     		strb	r2, [r3]
 196:Core/Src/AB1805_RK.c ****     }
 1242              		.loc 1 196 9 is_stmt 1 view .LVU310
 1243 0050 0022     		movs	r2, #0
 1244 0052 0421     		movs	r1, #4
 1245 0054 0F20     		movs	r0, #15
 1246 0056 FFF7FEFF 		bl	clearRegisterBit
 1247              	.LVL130:
 199:Core/Src/AB1805_RK.c ****     {
 1248              		.loc 1 199 5 view .LVU311
 194:Core/Src/AB1805_RK.c ****         wakeReason = ALARM;
 1249              		.loc 1 194 16 is_stmt 0 view .LVU312
 1250 005a 0A49     		ldr	r1, .L61+16
 1251 005c E0E7     		b	.L55
 1252              	.LVL131:
 1253              	.L60:
 188:Core/Src/AB1805_RK.c ****         wakeReason = COUNTDOWN_TIMER;
 1254              		.loc 1 188 9 is_stmt 1 view .LVU313
 189:Core/Src/AB1805_RK.c ****         clearRegisterBit(REG_STATUS, REG_STATUS_TIM, 0);
 1255              		.loc 1 189 9 view .LVU314
 189:Core/Src/AB1805_RK.c ****         clearRegisterBit(REG_STATUS, REG_STATUS_TIM, 0);
 1256              		.loc 1 189 20 is_stmt 0 view .LVU315
 1257 005e 054B     		ldr	r3, .L61
 1258 0060 0322     		movs	r2, #3
 1259 0062 1A70     		strb	r2, [r3]
 190:Core/Src/AB1805_RK.c ****     }
 1260              		.loc 1 190 9 is_stmt 1 view .LVU316
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 86


 1261 0064 0022     		movs	r2, #0
 1262 0066 0821     		movs	r1, #8
 1263 0068 0F20     		movs	r0, #15
 1264 006a FFF7FEFF 		bl	clearRegisterBit
 1265              	.LVL132:
 199:Core/Src/AB1805_RK.c ****     {
 1266              		.loc 1 199 5 view .LVU317
 188:Core/Src/AB1805_RK.c ****         wakeReason = COUNTDOWN_TIMER;
 1267              		.loc 1 188 16 is_stmt 0 view .LVU318
 1268 006e 0649     		ldr	r1, .L61+20
 1269 0070 D6E7     		b	.L55
 1270              	.L62:
 1271 0072 C046     		.align	2
 1272              	.L61:
 1273 0074 00000000 		.word	wakeReason
 1274 0078 10000000 		.word	.LC17
 1275 007c 34000000 		.word	.LC24
 1276 0080 00000000 		.word	.LC15
 1277 0084 1C000000 		.word	.LC19
 1278 0088 24000000 		.word	.LC21
 1279              		.cfi_endproc
 1280              	.LFE506:
 1282              		.section	.rodata.setup.str1.4,"aMS",%progbits,1
 1283              		.align	2
 1284              	.LC26:
 1285 0000 6661696C 		.ascii	"failed to detect AB1805\012\000"
 1285      65642074 
 1285      6F206465 
 1285      74656374 
 1285      20414231 
 1286              		.section	.text.setup,"ax",%progbits
 1287              		.align	1
 1288              		.global	setup
 1289              		.syntax unified
 1290              		.code	16
 1291              		.thumb_func
 1293              	setup:
 1294              	.LVL133:
 1295              	.LFB501:
  56:Core/Src/AB1805_RK.c **** 
 1296              		.loc 1 56 1 is_stmt 1 view -0
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 0
 1299              		@ frame_needed = 0, uses_anonymous_args = 0
  56:Core/Src/AB1805_RK.c **** 
 1300              		.loc 1 56 1 is_stmt 0 view .LVU320
 1301 0000 10B5     		push	{r4, lr}
 1302              	.LCFI12:
 1303              		.cfi_def_cfa_offset 8
 1304              		.cfi_offset 4, -8
 1305              		.cfi_offset 14, -4
  58:Core/Src/AB1805_RK.c ****     {
 1306              		.loc 1 58 5 is_stmt 1 view .LVU321
  58:Core/Src/AB1805_RK.c ****     {
 1307              		.loc 1 58 9 is_stmt 0 view .LVU322
 1308 0002 FFF7FEFF 		bl	detectChip
 1309              	.LVL134:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 87


  58:Core/Src/AB1805_RK.c ****     {
 1310              		.loc 1 58 8 view .LVU323
 1311 0006 0028     		cmp	r0, #0
 1312 0008 02D0     		beq	.L64
  60:Core/Src/AB1805_RK.c ****     }
 1313              		.loc 1 60 9 is_stmt 1 view .LVU324
 1314 000a FFF7FEFF 		bl	updateWakeReason
 1315              	.LVL135:
 1316              	.L63:
  66:Core/Src/AB1805_RK.c **** 
 1317              		.loc 1 66 1 is_stmt 0 view .LVU325
 1318              		@ sp needed
 1319 000e 10BD     		pop	{r4, pc}
 1320              	.L64:
  64:Core/Src/AB1805_RK.c ****     }
 1321              		.loc 1 64 9 is_stmt 1 view .LVU326
 1322 0010 0148     		ldr	r0, .L66
 1323 0012 FFF7FEFF 		bl	printf_
 1324              	.LVL136:
  66:Core/Src/AB1805_RK.c **** 
 1325              		.loc 1 66 1 is_stmt 0 view .LVU327
 1326 0016 FAE7     		b	.L63
 1327              	.L67:
 1328              		.align	2
 1329              	.L66:
 1330 0018 00000000 		.word	.LC26
 1331              		.cfi_endproc
 1332              	.LFE501:
 1334              		.section	.rodata.clearRepeatingInterrupt.str1.4,"aMS",%progbits,1
 1335              		.align	2
 1336              	.LC28:
 1337 0000 6661696C 		.ascii	"failure in clearRepeatingInterrupt %d\012\000"
 1337      75726520 
 1337      696E2063 
 1337      6C656172 
 1337      52657065 
 1338              		.section	.text.clearRepeatingInterrupt,"ax",%progbits
 1339              		.align	1
 1340              		.global	clearRepeatingInterrupt
 1341              		.syntax unified
 1342              		.code	16
 1343              		.thumb_func
 1345              	clearRepeatingInterrupt:
 1346              	.LFB508:
 253:Core/Src/AB1805_RK.c ****     const char *errorMsg = "failure in clearRepeatingInterrupt %d\n";
 1347              		.loc 1 253 1 is_stmt 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351 0000 10B5     		push	{r4, lr}
 1352              	.LCFI13:
 1353              		.cfi_def_cfa_offset 8
 1354              		.cfi_offset 4, -8
 1355              		.cfi_offset 14, -4
 254:Core/Src/AB1805_RK.c ****     bool bResult;
 1356              		.loc 1 254 5 view .LVU329
 1357              	.LVL137:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 88


 255:Core/Src/AB1805_RK.c **** 
 1358              		.loc 1 255 5 view .LVU330
 258:Core/Src/AB1805_RK.c ****     if (!bResult)
 1359              		.loc 1 258 5 view .LVU331
 258:Core/Src/AB1805_RK.c ****     if (!bResult)
 1360              		.loc 1 258 15 is_stmt 0 view .LVU332
 1361 0002 0023     		movs	r3, #0
 1362 0004 0022     		movs	r2, #0
 1363 0006 FC21     		movs	r1, #252
 1364 0008 1120     		movs	r0, #17
 1365 000a FFF7FEFF 		bl	maskRegister
 1366              	.LVL138:
 1367 000e 041E     		subs	r4, r0, #0
 1368              	.LVL139:
 259:Core/Src/AB1805_RK.c ****     {
 1369              		.loc 1 259 5 is_stmt 1 view .LVU333
 259:Core/Src/AB1805_RK.c ****     {
 1370              		.loc 1 259 8 is_stmt 0 view .LVU334
 1371 0010 10D0     		beq	.L72
 266:Core/Src/AB1805_RK.c ****     if (!bResult)
 1372              		.loc 1 266 5 is_stmt 1 view .LVU335
 266:Core/Src/AB1805_RK.c ****     if (!bResult)
 1373              		.loc 1 266 15 is_stmt 0 view .LVU336
 1374 0012 0022     		movs	r2, #0
 1375 0014 0421     		movs	r1, #4
 1376 0016 1220     		movs	r0, #18
 1377              	.LVL140:
 266:Core/Src/AB1805_RK.c ****     if (!bResult)
 1378              		.loc 1 266 15 view .LVU337
 1379 0018 FFF7FEFF 		bl	clearRegisterBit
 1380              	.LVL141:
 1381 001c 041E     		subs	r4, r0, #0
 1382              	.LVL142:
 267:Core/Src/AB1805_RK.c ****     {
 1383              		.loc 1 267 5 is_stmt 1 view .LVU338
 267:Core/Src/AB1805_RK.c ****     {
 1384              		.loc 1 267 8 is_stmt 0 view .LVU339
 1385 001e 0FD0     		beq	.L73
 274:Core/Src/AB1805_RK.c ****     if (!bResult)
 1386              		.loc 1 274 5 is_stmt 1 view .LVU340
 274:Core/Src/AB1805_RK.c ****     if (!bResult)
 1387              		.loc 1 274 15 is_stmt 0 view .LVU341
 1388 0020 0023     		movs	r3, #0
 1389 0022 0022     		movs	r2, #0
 1390 0024 E321     		movs	r1, #227
 1391 0026 1820     		movs	r0, #24
 1392              	.LVL143:
 274:Core/Src/AB1805_RK.c ****     if (!bResult)
 1393              		.loc 1 274 15 view .LVU342
 1394 0028 FFF7FEFF 		bl	maskRegister
 1395              	.LVL144:
 1396 002c 041E     		subs	r4, r0, #0
 1397              	.LVL145:
 275:Core/Src/AB1805_RK.c ****     {
 1398              		.loc 1 275 5 is_stmt 1 view .LVU343
 275:Core/Src/AB1805_RK.c ****     {
 1399              		.loc 1 275 8 is_stmt 0 view .LVU344
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 89


 1400 002e 0DD0     		beq	.L74
 1401              	.LVL146:
 1402              	.L70:
 282:Core/Src/AB1805_RK.c **** 
 1403              		.loc 1 282 1 view .LVU345
 1404 0030 2000     		movs	r0, r4
 1405              		@ sp needed
 1406 0032 10BD     		pop	{r4, pc}
 1407              	.LVL147:
 1408              	.L72:
 261:Core/Src/AB1805_RK.c ****         return false;
 1409              		.loc 1 261 9 is_stmt 1 view .LVU346
 1410 0034 0621     		movs	r1, #6
 1411 0036 0848     		ldr	r0, .L75
 1412              	.LVL148:
 261:Core/Src/AB1805_RK.c ****         return false;
 1413              		.loc 1 261 9 is_stmt 0 view .LVU347
 1414 0038 FF31     		adds	r1, r1, #255
 1415 003a FFF7FEFF 		bl	printf_
 1416              	.LVL149:
 262:Core/Src/AB1805_RK.c ****     }
 1417              		.loc 1 262 9 is_stmt 1 view .LVU348
 262:Core/Src/AB1805_RK.c ****     }
 1418              		.loc 1 262 16 is_stmt 0 view .LVU349
 1419 003e F7E7     		b	.L70
 1420              	.LVL150:
 1421              	.L73:
 269:Core/Src/AB1805_RK.c ****         return false;
 1422              		.loc 1 269 9 is_stmt 1 view .LVU350
 1423 0040 0E21     		movs	r1, #14
 1424 0042 0548     		ldr	r0, .L75
 1425              	.LVL151:
 269:Core/Src/AB1805_RK.c ****         return false;
 1426              		.loc 1 269 9 is_stmt 0 view .LVU351
 1427 0044 FF31     		adds	r1, r1, #255
 1428 0046 FFF7FEFF 		bl	printf_
 1429              	.LVL152:
 270:Core/Src/AB1805_RK.c ****     }
 1430              		.loc 1 270 9 is_stmt 1 view .LVU352
 270:Core/Src/AB1805_RK.c ****     }
 1431              		.loc 1 270 16 is_stmt 0 view .LVU353
 1432 004a F1E7     		b	.L70
 1433              	.LVL153:
 1434              	.L74:
 277:Core/Src/AB1805_RK.c ****         return false;
 1435              		.loc 1 277 9 is_stmt 1 view .LVU354
 1436 004c 1621     		movs	r1, #22
 1437 004e 0248     		ldr	r0, .L75
 1438              	.LVL154:
 277:Core/Src/AB1805_RK.c ****         return false;
 1439              		.loc 1 277 9 is_stmt 0 view .LVU355
 1440 0050 FF31     		adds	r1, r1, #255
 1441 0052 FFF7FEFF 		bl	printf_
 1442              	.LVL155:
 278:Core/Src/AB1805_RK.c ****     }
 1443              		.loc 1 278 9 is_stmt 1 view .LVU356
 278:Core/Src/AB1805_RK.c ****     }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 90


 1444              		.loc 1 278 16 is_stmt 0 view .LVU357
 1445 0056 EBE7     		b	.L70
 1446              	.L76:
 1447              		.align	2
 1448              	.L75:
 1449 0058 00000000 		.word	.LC28
 1450              		.cfi_endproc
 1451              	.LFE508:
 1453              		.section	.text.setRegisterBit,"ax",%progbits
 1454              		.align	1
 1455              		.global	setRegisterBit
 1456              		.syntax unified
 1457              		.code	16
 1458              		.thumb_func
 1460              	setRegisterBit:
 1461              	.LVL156:
 1462              	.LFB516:
 489:Core/Src/AB1805_RK.c ****     return maskRegister(regAddr, 0xff, bitMask, lock);
 1463              		.loc 1 489 1 is_stmt 1 view -0
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 0
 1466              		@ frame_needed = 0, uses_anonymous_args = 0
 489:Core/Src/AB1805_RK.c ****     return maskRegister(regAddr, 0xff, bitMask, lock);
 1467              		.loc 1 489 1 is_stmt 0 view .LVU359
 1468 0000 10B5     		push	{r4, lr}
 1469              	.LCFI14:
 1470              		.cfi_def_cfa_offset 8
 1471              		.cfi_offset 4, -8
 1472              		.cfi_offset 14, -4
 1473 0002 1300     		movs	r3, r2
 490:Core/Src/AB1805_RK.c **** }
 1474              		.loc 1 490 5 is_stmt 1 view .LVU360
 490:Core/Src/AB1805_RK.c **** }
 1475              		.loc 1 490 12 is_stmt 0 view .LVU361
 1476 0004 0A00     		movs	r2, r1
 1477              	.LVL157:
 490:Core/Src/AB1805_RK.c **** }
 1478              		.loc 1 490 12 view .LVU362
 1479 0006 FF21     		movs	r1, #255
 1480              	.LVL158:
 490:Core/Src/AB1805_RK.c **** }
 1481              		.loc 1 490 12 view .LVU363
 1482 0008 FFF7FEFF 		bl	maskRegister
 1483              	.LVL159:
 491:Core/Src/AB1805_RK.c **** 
 1484              		.loc 1 491 1 view .LVU364
 1485              		@ sp needed
 1486 000c 10BD     		pop	{r4, pc}
 1487              		.cfi_endproc
 1488              	.LFE516:
 1490              		.section	.rodata.setCountdownTimer.str1.4,"aMS",%progbits,1
 1491              		.align	2
 1492              	.LC30:
 1493 0000 6661696C 		.ascii	"failure in setCountdownTimer %d\012\000"
 1493      75726520 
 1493      696E2073 
 1493      6574436F 
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 91


 1493      756E7464 
 1494              		.section	.text.setCountdownTimer,"ax",%progbits
 1495              		.align	1
 1496              		.global	setCountdownTimer
 1497              		.syntax unified
 1498              		.code	16
 1499              		.thumb_func
 1501              	setCountdownTimer:
 1502              	.LVL160:
 1503              	.LFB511:
 388:Core/Src/AB1805_RK.c ****     const char *errorMsg = "failure in setCountdownTimer %d\n";
 1504              		.loc 1 388 1 is_stmt 1 view -0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 0
 1507              		@ frame_needed = 0, uses_anonymous_args = 0
 388:Core/Src/AB1805_RK.c ****     const char *errorMsg = "failure in setCountdownTimer %d\n";
 1508              		.loc 1 388 1 is_stmt 0 view .LVU366
 1509 0000 10B5     		push	{r4, lr}
 1510              	.LCFI15:
 1511              		.cfi_def_cfa_offset 8
 1512              		.cfi_offset 4, -8
 1513              		.cfi_offset 14, -4
 1514 0002 0400     		movs	r4, r0
 389:Core/Src/AB1805_RK.c ****     bool bResult;
 1515              		.loc 1 389 5 is_stmt 1 view .LVU367
 1516              	.LVL161:
 390:Core/Src/AB1805_RK.c **** 
 1517              		.loc 1 390 5 view .LVU368
 393:Core/Src/AB1805_RK.c ****     if (!bResult)
 1518              		.loc 1 393 5 view .LVU369
 393:Core/Src/AB1805_RK.c ****     if (!bResult)
 1519              		.loc 1 393 15 is_stmt 0 view .LVU370
 1520 0004 0021     		movs	r1, #0
 1521              	.LVL162:
 393:Core/Src/AB1805_RK.c ****     if (!bResult)
 1522              		.loc 1 393 15 view .LVU371
 1523 0006 0F20     		movs	r0, #15
 1524              	.LVL163:
 393:Core/Src/AB1805_RK.c ****     if (!bResult)
 1525              		.loc 1 393 15 view .LVU372
 1526 0008 FFF7FEFF 		bl	write_rtc_register
 1527              	.LVL164:
 394:Core/Src/AB1805_RK.c ****     {
 1528              		.loc 1 394 5 is_stmt 1 view .LVU373
 394:Core/Src/AB1805_RK.c ****     {
 1529              		.loc 1 394 8 is_stmt 0 view .LVU374
 1530 000c 0028     		cmp	r0, #0
 1531 000e 0BD0     		beq	.L87
 401:Core/Src/AB1805_RK.c ****     if (!bResult)
 1532              		.loc 1 401 5 is_stmt 1 view .LVU375
 401:Core/Src/AB1805_RK.c ****     if (!bResult)
 1533              		.loc 1 401 15 is_stmt 0 view .LVU376
 1534 0010 2321     		movs	r1, #35
 1535 0012 1820     		movs	r0, #24
 1536              	.LVL165:
 401:Core/Src/AB1805_RK.c ****     if (!bResult)
 1537              		.loc 1 401 15 view .LVU377
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 92


 1538 0014 FFF7FEFF 		bl	write_rtc_register
 1539              	.LVL166:
 402:Core/Src/AB1805_RK.c ****     {
 1540              		.loc 1 402 5 is_stmt 1 view .LVU378
 402:Core/Src/AB1805_RK.c ****     {
 1541              		.loc 1 402 8 is_stmt 0 view .LVU379
 1542 0018 0028     		cmp	r0, #0
 1543 001a 0DD0     		beq	.L88
 409:Core/Src/AB1805_RK.c ****     {
 1544              		.loc 1 409 5 is_stmt 1 view .LVU380
 409:Core/Src/AB1805_RK.c ****     {
 1545              		.loc 1 409 8 is_stmt 0 view .LVU381
 1546 001c 002C     		cmp	r4, #0
 1547 001e 12DD     		ble	.L85
 413:Core/Src/AB1805_RK.c ****     {
 1548              		.loc 1 413 5 is_stmt 1 view .LVU382
 413:Core/Src/AB1805_RK.c ****     {
 1549              		.loc 1 413 8 is_stmt 0 view .LVU383
 1550 0020 FF2C     		cmp	r4, #255
 1551 0022 11DD     		ble	.L82
 415:Core/Src/AB1805_RK.c ****     }
 1552              		.loc 1 415 15 view .LVU384
 1553 0024 FF24     		movs	r4, #255
 1554              	.LVL167:
 415:Core/Src/AB1805_RK.c ****     }
 1555              		.loc 1 415 15 view .LVU385
 1556 0026 0FE0     		b	.L82
 1557              	.LVL168:
 1558              	.L87:
 396:Core/Src/AB1805_RK.c ****         return false;
 1559              		.loc 1 396 9 is_stmt 1 view .LVU386
 1560 0028 C621     		movs	r1, #198
 1561 002a 1B48     		ldr	r0, .L91
 1562              	.LVL169:
 396:Core/Src/AB1805_RK.c ****         return false;
 1563              		.loc 1 396 9 is_stmt 0 view .LVU387
 1564 002c 4900     		lsls	r1, r1, #1
 1565 002e FFF7FEFF 		bl	printf_
 1566              	.LVL170:
 397:Core/Src/AB1805_RK.c ****     }
 1567              		.loc 1 397 9 is_stmt 1 view .LVU388
 397:Core/Src/AB1805_RK.c ****     }
 1568              		.loc 1 397 16 is_stmt 0 view .LVU389
 1569 0032 0024     		movs	r4, #0
 1570              	.LVL171:
 1571              	.L80:
 446:Core/Src/AB1805_RK.c **** 
 1572              		.loc 1 446 1 view .LVU390
 1573 0034 2000     		movs	r0, r4
 1574              		@ sp needed
 1575 0036 10BD     		pop	{r4, pc}
 1576              	.LVL172:
 1577              	.L88:
 404:Core/Src/AB1805_RK.c ****         return false;
 1578              		.loc 1 404 9 is_stmt 1 view .LVU391
 1579 0038 CA21     		movs	r1, #202
 1580 003a 1748     		ldr	r0, .L91
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 93


 1581              	.LVL173:
 404:Core/Src/AB1805_RK.c ****         return false;
 1582              		.loc 1 404 9 is_stmt 0 view .LVU392
 1583 003c 4900     		lsls	r1, r1, #1
 1584 003e FFF7FEFF 		bl	printf_
 1585              	.LVL174:
 405:Core/Src/AB1805_RK.c ****     }
 1586              		.loc 1 405 9 is_stmt 1 view .LVU393
 405:Core/Src/AB1805_RK.c ****     }
 1587              		.loc 1 405 16 is_stmt 0 view .LVU394
 1588 0042 0024     		movs	r4, #0
 1589              	.LVL175:
 405:Core/Src/AB1805_RK.c ****     }
 1590              		.loc 1 405 16 view .LVU395
 1591 0044 F6E7     		b	.L80
 1592              	.LVL176:
 1593              	.L85:
 411:Core/Src/AB1805_RK.c ****     }
 1594              		.loc 1 411 15 view .LVU396
 1595 0046 0124     		movs	r4, #1
 1596              	.LVL177:
 1597              	.L82:
 417:Core/Src/AB1805_RK.c ****     if (!bResult)
 1598              		.loc 1 417 5 is_stmt 1 view .LVU397
 417:Core/Src/AB1805_RK.c ****     if (!bResult)
 1599              		.loc 1 417 15 is_stmt 0 view .LVU398
 1600 0048 E1B2     		uxtb	r1, r4
 1601 004a 1920     		movs	r0, #25
 1602              	.LVL178:
 417:Core/Src/AB1805_RK.c ****     if (!bResult)
 1603              		.loc 1 417 15 view .LVU399
 1604 004c FFF7FEFF 		bl	write_rtc_register
 1605              	.LVL179:
 418:Core/Src/AB1805_RK.c ****     {
 1606              		.loc 1 418 5 is_stmt 1 view .LVU400
 418:Core/Src/AB1805_RK.c ****     {
 1607              		.loc 1 418 8 is_stmt 0 view .LVU401
 1608 0050 0028     		cmp	r0, #0
 1609 0052 13D0     		beq	.L89
 425:Core/Src/AB1805_RK.c ****     if (!bResult)
 1610              		.loc 1 425 5 is_stmt 1 view .LVU402
 425:Core/Src/AB1805_RK.c ****     if (!bResult)
 1611              		.loc 1 425 15 is_stmt 0 view .LVU403
 1612 0054 0022     		movs	r2, #0
 1613 0056 0821     		movs	r1, #8
 1614 0058 1220     		movs	r0, #18
 1615              	.LVL180:
 425:Core/Src/AB1805_RK.c ****     if (!bResult)
 1616              		.loc 1 425 15 view .LVU404
 1617 005a FFF7FEFF 		bl	setRegisterBit
 1618              	.LVL181:
 1619 005e 041E     		subs	r4, r0, #0
 1620              	.LVL182:
 426:Core/Src/AB1805_RK.c ****     {
 1621              		.loc 1 426 5 is_stmt 1 view .LVU405
 426:Core/Src/AB1805_RK.c ****     {
 1622              		.loc 1 426 8 is_stmt 0 view .LVU406
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 94


 1623 0060 13D0     		beq	.L90
 437:Core/Src/AB1805_RK.c **** 
 1624              		.loc 1 437 5 is_stmt 1 view .LVU407
 437:Core/Src/AB1805_RK.c **** 
 1625              		.loc 1 437 15 is_stmt 0 view .LVU408
 1626 0062 4221     		movs	r1, #66
 1627 0064 1820     		movs	r0, #24
 1628              	.LVL183:
 437:Core/Src/AB1805_RK.c **** 
 1629              		.loc 1 437 15 view .LVU409
 1630 0066 FFF7FEFF 		bl	write_rtc_register
 1631              	.LVL184:
 439:Core/Src/AB1805_RK.c ****     {
 1632              		.loc 1 439 5 is_stmt 1 view .LVU410
 439:Core/Src/AB1805_RK.c ****     {
 1633              		.loc 1 439 8 is_stmt 0 view .LVU411
 1634 006a 0028     		cmp	r0, #0
 1635 006c E2D1     		bne	.L80
 441:Core/Src/AB1805_RK.c ****         return false;
 1636              		.loc 1 441 9 is_stmt 1 view .LVU412
 1637 006e BA21     		movs	r1, #186
 1638 0070 0948     		ldr	r0, .L91
 1639              	.LVL185:
 441:Core/Src/AB1805_RK.c ****         return false;
 1640              		.loc 1 441 9 is_stmt 0 view .LVU413
 1641 0072 FF31     		adds	r1, r1, #255
 1642 0074 FFF7FEFF 		bl	printf_
 1643              	.LVL186:
 442:Core/Src/AB1805_RK.c ****     }
 1644              		.loc 1 442 9 is_stmt 1 view .LVU414
 442:Core/Src/AB1805_RK.c ****     }
 1645              		.loc 1 442 16 is_stmt 0 view .LVU415
 1646 0078 0024     		movs	r4, #0
 1647 007a DBE7     		b	.L80
 1648              	.LVL187:
 1649              	.L89:
 420:Core/Src/AB1805_RK.c ****         return false;
 1650              		.loc 1 420 9 is_stmt 1 view .LVU416
 1651 007c D221     		movs	r1, #210
 1652 007e 0648     		ldr	r0, .L91
 1653              	.LVL188:
 420:Core/Src/AB1805_RK.c ****         return false;
 1654              		.loc 1 420 9 is_stmt 0 view .LVU417
 1655 0080 4900     		lsls	r1, r1, #1
 1656 0082 FFF7FEFF 		bl	printf_
 1657              	.LVL189:
 421:Core/Src/AB1805_RK.c ****     }
 1658              		.loc 1 421 9 is_stmt 1 view .LVU418
 421:Core/Src/AB1805_RK.c ****     }
 1659              		.loc 1 421 16 is_stmt 0 view .LVU419
 1660 0086 0024     		movs	r4, #0
 1661              	.LVL190:
 421:Core/Src/AB1805_RK.c ****     }
 1662              		.loc 1 421 16 view .LVU420
 1663 0088 D4E7     		b	.L80
 1664              	.LVL191:
 1665              	.L90:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 95


 428:Core/Src/AB1805_RK.c ****         return false;
 1666              		.loc 1 428 9 is_stmt 1 view .LVU421
 1667 008a D621     		movs	r1, #214
 1668 008c 0248     		ldr	r0, .L91
 1669              	.LVL192:
 428:Core/Src/AB1805_RK.c ****         return false;
 1670              		.loc 1 428 9 is_stmt 0 view .LVU422
 1671 008e 4900     		lsls	r1, r1, #1
 1672 0090 FFF7FEFF 		bl	printf_
 1673              	.LVL193:
 429:Core/Src/AB1805_RK.c ****     }
 1674              		.loc 1 429 9 is_stmt 1 view .LVU423
 429:Core/Src/AB1805_RK.c ****     }
 1675              		.loc 1 429 16 is_stmt 0 view .LVU424
 1676 0094 CEE7     		b	.L80
 1677              	.L92:
 1678 0096 C046     		.align	2
 1679              	.L91:
 1680 0098 00000000 		.word	.LC30
 1681              		.cfi_endproc
 1682              	.LFE511:
 1684              		.section	.rodata.interruptCountdownTimer.str1.4,"aMS",%progbits,1
 1685              		.align	2
 1686              	.LC32:
 1687 0000 6661696C 		.ascii	"failure in interruptCountdownTimer %d\012\000"
 1687      75726520 
 1687      696E2069 
 1687      6E746572 
 1687      72757074 
 1688              		.section	.text.interruptCountdownTimer,"ax",%progbits
 1689              		.align	1
 1690              		.global	interruptCountdownTimer
 1691              		.syntax unified
 1692              		.code	16
 1693              		.thumb_func
 1695              	interruptCountdownTimer:
 1696              	.LVL194:
 1697              	.LFB509:
 285:Core/Src/AB1805_RK.c ****     const char *errorMsg = "failure in interruptCountdownTimer %d\n";
 1698              		.loc 1 285 1 is_stmt 1 view -0
 1699              		.cfi_startproc
 1700              		@ args = 0, pretend = 0, frame = 0
 1701              		@ frame_needed = 0, uses_anonymous_args = 0
 285:Core/Src/AB1805_RK.c ****     const char *errorMsg = "failure in interruptCountdownTimer %d\n";
 1702              		.loc 1 285 1 is_stmt 0 view .LVU426
 1703 0000 70B5     		push	{r4, r5, r6, lr}
 1704              	.LCFI16:
 1705              		.cfi_def_cfa_offset 16
 1706              		.cfi_offset 4, -16
 1707              		.cfi_offset 5, -12
 1708              		.cfi_offset 6, -8
 1709              		.cfi_offset 14, -4
 1710 0002 0500     		movs	r5, r0
 1711 0004 0E00     		movs	r6, r1
 286:Core/Src/AB1805_RK.c ****     bool bResult;
 1712              		.loc 1 286 5 is_stmt 1 view .LVU427
 1713              	.LVL195:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 96


 287:Core/Src/AB1805_RK.c **** 
 1714              		.loc 1 287 5 view .LVU428
 290:Core/Src/AB1805_RK.c ****     if (!bResult)
 1715              		.loc 1 290 5 view .LVU429
 290:Core/Src/AB1805_RK.c ****     if (!bResult)
 1716              		.loc 1 290 15 is_stmt 0 view .LVU430
 1717 0006 0020     		movs	r0, #0
 1718              	.LVL196:
 290:Core/Src/AB1805_RK.c ****     if (!bResult)
 1719              		.loc 1 290 15 view .LVU431
 1720 0008 FFF7FEFF 		bl	setWDT
 1721              	.LVL197:
 290:Core/Src/AB1805_RK.c ****     if (!bResult)
 1722              		.loc 1 290 15 view .LVU432
 1723 000c 041E     		subs	r4, r0, #0
 1724              	.LVL198:
 291:Core/Src/AB1805_RK.c ****     {
 1725              		.loc 1 291 5 is_stmt 1 view .LVU433
 291:Core/Src/AB1805_RK.c ****     {
 1726              		.loc 1 291 8 is_stmt 0 view .LVU434
 1727 000e 0FD0     		beq	.L97
 299:Core/Src/AB1805_RK.c ****     if (!bResult)
 1728              		.loc 1 299 5 is_stmt 1 view .LVU435
 299:Core/Src/AB1805_RK.c ****     if (!bResult)
 1729              		.loc 1 299 15 is_stmt 0 view .LVU436
 1730 0010 0023     		movs	r3, #0
 1731 0012 0022     		movs	r2, #0
 1732 0014 FC21     		movs	r1, #252
 1733 0016 1120     		movs	r0, #17
 1734              	.LVL199:
 299:Core/Src/AB1805_RK.c ****     if (!bResult)
 1735              		.loc 1 299 15 view .LVU437
 1736 0018 FFF7FEFF 		bl	maskRegister
 1737              	.LVL200:
 1738 001c 041E     		subs	r4, r0, #0
 1739              	.LVL201:
 300:Core/Src/AB1805_RK.c ****     {
 1740              		.loc 1 300 5 is_stmt 1 view .LVU438
 300:Core/Src/AB1805_RK.c ****     {
 1741              		.loc 1 300 8 is_stmt 0 view .LVU439
 1742 001e 0DD0     		beq	.L98
 306:Core/Src/AB1805_RK.c ****     if (!bResult)
 1743              		.loc 1 306 5 is_stmt 1 view .LVU440
 306:Core/Src/AB1805_RK.c ****     if (!bResult)
 1744              		.loc 1 306 15 is_stmt 0 view .LVU441
 1745 0020 3100     		movs	r1, r6
 1746 0022 2800     		movs	r0, r5
 1747              	.LVL202:
 306:Core/Src/AB1805_RK.c ****     if (!bResult)
 1748              		.loc 1 306 15 view .LVU442
 1749 0024 FFF7FEFF 		bl	setCountdownTimer
 1750              	.LVL203:
 1751 0028 041E     		subs	r4, r0, #0
 1752              	.LVL204:
 307:Core/Src/AB1805_RK.c ****     {
 1753              		.loc 1 307 5 is_stmt 1 view .LVU443
 307:Core/Src/AB1805_RK.c ****     {
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 97


 1754              		.loc 1 307 8 is_stmt 0 view .LVU444
 1755 002a 0DD0     		beq	.L99
 1756              	.LVL205:
 1757              	.L95:
 314:Core/Src/AB1805_RK.c **** 
 1758              		.loc 1 314 1 view .LVU445
 1759 002c 2000     		movs	r0, r4
 1760              		@ sp needed
 1761              	.LVL206:
 314:Core/Src/AB1805_RK.c **** 
 1762              		.loc 1 314 1 view .LVU446
 1763 002e 70BD     		pop	{r4, r5, r6, pc}
 1764              	.LVL207:
 1765              	.L97:
 293:Core/Src/AB1805_RK.c ****         return false;
 1766              		.loc 1 293 9 is_stmt 1 view .LVU447
 1767 0030 2621     		movs	r1, #38
 1768 0032 0848     		ldr	r0, .L100
 1769              	.LVL208:
 293:Core/Src/AB1805_RK.c ****         return false;
 1770              		.loc 1 293 9 is_stmt 0 view .LVU448
 1771 0034 FF31     		adds	r1, r1, #255
 1772 0036 FFF7FEFF 		bl	printf_
 1773              	.LVL209:
 294:Core/Src/AB1805_RK.c ****     }
 1774              		.loc 1 294 9 is_stmt 1 view .LVU449
 294:Core/Src/AB1805_RK.c ****     }
 1775              		.loc 1 294 16 is_stmt 0 view .LVU450
 1776 003a F7E7     		b	.L95
 1777              	.LVL210:
 1778              	.L98:
 302:Core/Src/AB1805_RK.c ****         return false;
 1779              		.loc 1 302 9 is_stmt 1 view .LVU451
 1780 003c 9721     		movs	r1, #151
 1781 003e 0548     		ldr	r0, .L100
 1782              	.LVL211:
 302:Core/Src/AB1805_RK.c ****         return false;
 1783              		.loc 1 302 9 is_stmt 0 view .LVU452
 1784 0040 4900     		lsls	r1, r1, #1
 1785 0042 FFF7FEFF 		bl	printf_
 1786              	.LVL212:
 303:Core/Src/AB1805_RK.c ****     }
 1787              		.loc 1 303 9 is_stmt 1 view .LVU453
 303:Core/Src/AB1805_RK.c ****     }
 1788              		.loc 1 303 16 is_stmt 0 view .LVU454
 1789 0046 F1E7     		b	.L95
 1790              	.LVL213:
 1791              	.L99:
 309:Core/Src/AB1805_RK.c ****         return false;
 1792              		.loc 1 309 9 is_stmt 1 view .LVU455
 1793 0048 3621     		movs	r1, #54
 1794 004a 0248     		ldr	r0, .L100
 1795              	.LVL214:
 309:Core/Src/AB1805_RK.c ****         return false;
 1796              		.loc 1 309 9 is_stmt 0 view .LVU456
 1797 004c FF31     		adds	r1, r1, #255
 1798 004e FFF7FEFF 		bl	printf_
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 98


 1799              	.LVL215:
 310:Core/Src/AB1805_RK.c ****     }
 1800              		.loc 1 310 9 is_stmt 1 view .LVU457
 310:Core/Src/AB1805_RK.c ****     }
 1801              		.loc 1 310 16 is_stmt 0 view .LVU458
 1802 0052 EBE7     		b	.L95
 1803              	.L101:
 1804              		.align	2
 1805              	.L100:
 1806 0054 00000000 		.word	.LC32
 1807              		.cfi_endproc
 1808              	.LFE509:
 1810              		.section	.text.bcdToValue,"ax",%progbits
 1811              		.align	1
 1812              		.global	bcdToValue
 1813              		.syntax unified
 1814              		.code	16
 1815              		.thumb_func
 1817              	bcdToValue:
 1818              	.LVL216:
 1819              	.LFB520:
 605:Core/Src/AB1805_RK.c ****     return (bcd >> 4) * 10 + (bcd & 0x0f);
 1820              		.loc 1 605 1 is_stmt 1 view -0
 1821              		.cfi_startproc
 1822              		@ args = 0, pretend = 0, frame = 0
 1823              		@ frame_needed = 0, uses_anonymous_args = 0
 1824              		@ link register save eliminated.
 606:Core/Src/AB1805_RK.c **** }
 1825              		.loc 1 606 5 view .LVU460
 606:Core/Src/AB1805_RK.c **** }
 1826              		.loc 1 606 17 is_stmt 0 view .LVU461
 1827 0000 0209     		lsrs	r2, r0, #4
 606:Core/Src/AB1805_RK.c **** }
 1828              		.loc 1 606 23 view .LVU462
 1829 0002 9300     		lsls	r3, r2, #2
 1830 0004 9B18     		adds	r3, r3, r2
 1831 0006 5B00     		lsls	r3, r3, #1
 606:Core/Src/AB1805_RK.c **** }
 1832              		.loc 1 606 35 view .LVU463
 1833 0008 0F22     		movs	r2, #15
 1834 000a 1040     		ands	r0, r2
 1835              	.LVL217:
 606:Core/Src/AB1805_RK.c **** }
 1836              		.loc 1 606 28 view .LVU464
 1837 000c 1818     		adds	r0, r3, r0
 607:Core/Src/AB1805_RK.c **** 
 1838              		.loc 1 607 1 view .LVU465
 1839              		@ sp needed
 1840 000e 7047     		bx	lr
 1841              		.cfi_endproc
 1842              	.LFE520:
 1844              		.global	__aeabi_idiv
 1845              		.global	__aeabi_idivmod
 1846              		.section	.text.valueToBcd,"ax",%progbits
 1847              		.align	1
 1848              		.global	valueToBcd
 1849              		.syntax unified
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 99


 1850              		.code	16
 1851              		.thumb_func
 1853              	valueToBcd:
 1854              	.LVL218:
 1855              	.LFB521:
 611:Core/Src/AB1805_RK.c ****     int tens = (value / 10) % 10;
 1856              		.loc 1 611 1 is_stmt 1 view -0
 1857              		.cfi_startproc
 1858              		@ args = 0, pretend = 0, frame = 0
 1859              		@ frame_needed = 0, uses_anonymous_args = 0
 611:Core/Src/AB1805_RK.c ****     int tens = (value / 10) % 10;
 1860              		.loc 1 611 1 is_stmt 0 view .LVU467
 1861 0000 70B5     		push	{r4, r5, r6, lr}
 1862              	.LCFI17:
 1863              		.cfi_def_cfa_offset 16
 1864              		.cfi_offset 4, -16
 1865              		.cfi_offset 5, -12
 1866              		.cfi_offset 6, -8
 1867              		.cfi_offset 14, -4
 1868 0002 0500     		movs	r5, r0
 612:Core/Src/AB1805_RK.c ****     int ones = value % 10;
 1869              		.loc 1 612 5 is_stmt 1 view .LVU468
 612:Core/Src/AB1805_RK.c ****     int ones = value % 10;
 1870              		.loc 1 612 23 is_stmt 0 view .LVU469
 1871 0004 0A21     		movs	r1, #10
 1872 0006 FFF7FEFF 		bl	__aeabi_idiv
 1873              	.LVL219:
 612:Core/Src/AB1805_RK.c ****     int ones = value % 10;
 1874              		.loc 1 612 9 view .LVU470
 1875 000a 0A21     		movs	r1, #10
 1876 000c FFF7FEFF 		bl	__aeabi_idivmod
 1877              	.LVL220:
 1878 0010 0C00     		movs	r4, r1
 1879              	.LVL221:
 613:Core/Src/AB1805_RK.c **** 
 1880              		.loc 1 613 5 is_stmt 1 view .LVU471
 613:Core/Src/AB1805_RK.c **** 
 1881              		.loc 1 613 9 is_stmt 0 view .LVU472
 1882 0012 0A21     		movs	r1, #10
 1883              	.LVL222:
 613:Core/Src/AB1805_RK.c **** 
 1884              		.loc 1 613 9 view .LVU473
 1885 0014 2800     		movs	r0, r5
 1886 0016 FFF7FEFF 		bl	__aeabi_idivmod
 1887              	.LVL223:
 615:Core/Src/AB1805_RK.c **** }
 1888              		.loc 1 615 5 is_stmt 1 view .LVU474
 615:Core/Src/AB1805_RK.c **** }
 1889              		.loc 1 615 28 is_stmt 0 view .LVU475
 1890 001a 2401     		lsls	r4, r4, #4
 1891              	.LVL224:
 615:Core/Src/AB1805_RK.c **** }
 1892              		.loc 1 615 34 view .LVU476
 1893 001c 0C43     		orrs	r4, r1
 615:Core/Src/AB1805_RK.c **** }
 1894              		.loc 1 615 12 view .LVU477
 1895 001e E0B2     		uxtb	r0, r4
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 100


 616:Core/Src/AB1805_RK.c **** 
 1896              		.loc 1 616 1 view .LVU478
 1897              		@ sp needed
 1898              	.LVL225:
 616:Core/Src/AB1805_RK.c **** 
 1899              		.loc 1 616 1 view .LVU479
 1900 0020 70BD     		pop	{r4, r5, r6, pc}
 1901              		.cfi_endproc
 1902              	.LFE521:
 1904              		.section	.text.getWakeReason,"ax",%progbits
 1905              		.align	1
 1906              		.global	getWakeReason
 1907              		.syntax unified
 1908              		.code	16
 1909              		.thumb_func
 1911              	getWakeReason:
 1912              	.LFB522:
 626:Core/Src/AB1805_RK.c ****     return wakeReason;
 1913              		.loc 1 626 1 is_stmt 1 view -0
 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 0
 1916              		@ frame_needed = 0, uses_anonymous_args = 0
 1917              		@ link register save eliminated.
 627:Core/Src/AB1805_RK.c **** };
 1918              		.loc 1 627 5 view .LVU481
 627:Core/Src/AB1805_RK.c **** };
 1919              		.loc 1 627 12 is_stmt 0 view .LVU482
 1920 0000 014B     		ldr	r3, .L105
 1921 0002 1878     		ldrb	r0, [r3]
 628:Core/Src/AB1805_RK.c **** 
 1922              		.loc 1 628 1 view .LVU483
 1923              		@ sp needed
 1924 0004 7047     		bx	lr
 1925              	.L106:
 1926 0006 C046     		.align	2
 1927              	.L105:
 1928 0008 00000000 		.word	wakeReason
 1929              		.cfi_endproc
 1930              	.LFE522:
 1932              		.section	.rodata.hex_dump.str1.4,"aMS",%progbits,1
 1933              		.align	2
 1934              	.LC35:
 1935 0000 23203078 		.ascii	"# 0x%02x: 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x"
 1935      25303278 
 1935      3A203078 
 1935      25303278 
 1935      20307825 
 1936 0033 20307825 		.ascii	" 0x%02x 0x%02x\015\012\000"
 1936      30327820 
 1936      30782530 
 1936      32780D0A 
 1936      00
 1937              		.section	.text.hex_dump,"ax",%progbits
 1938              		.align	1
 1939              		.global	hex_dump
 1940              		.syntax unified
 1941              		.code	16
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 101


 1942              		.thumb_func
 1944              	hex_dump:
 1945              	.LFB526:
 692:Core/Src/AB1805_RK.c ****     uint8_t buffer[9];
 1946              		.loc 1 692 1 is_stmt 1 view -0
 1947              		.cfi_startproc
 1948              		@ args = 0, pretend = 0, frame = 16
 1949              		@ frame_needed = 0, uses_anonymous_args = 0
 1950 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1951              	.LCFI18:
 1952              		.cfi_def_cfa_offset 20
 1953              		.cfi_offset 4, -20
 1954              		.cfi_offset 5, -16
 1955              		.cfi_offset 6, -12
 1956              		.cfi_offset 7, -8
 1957              		.cfi_offset 14, -4
 1958 0002 C646     		mov	lr, r8
 1959 0004 00B5     		push	{lr}
 1960              	.LCFI19:
 1961              		.cfi_def_cfa_offset 24
 1962              		.cfi_offset 8, -24
 1963 0006 8AB0     		sub	sp, sp, #40
 1964              	.LCFI20:
 1965              		.cfi_def_cfa_offset 64
 693:Core/Src/AB1805_RK.c ****     for (uint8_t pos = 0; pos < 0x3F; pos += 8) // 0x7f
 1966              		.loc 1 693 5 view .LVU485
 694:Core/Src/AB1805_RK.c ****     {
 1967              		.loc 1 694 5 view .LVU486
 1968              	.LBB111:
 694:Core/Src/AB1805_RK.c ****     {
 1969              		.loc 1 694 10 view .LVU487
 1970              	.LVL226:
 694:Core/Src/AB1805_RK.c ****     {
 1971              		.loc 1 694 18 is_stmt 0 view .LVU488
 1972 0008 0025     		movs	r5, #0
 694:Core/Src/AB1805_RK.c ****     {
 1973              		.loc 1 694 5 view .LVU489
 1974 000a 22E0     		b	.L108
 1975              	.LVL227:
 1976              	.L109:
 1977              	.LBB112:
 700:Core/Src/AB1805_RK.c ****         }
 1978              		.loc 1 700 13 is_stmt 1 discriminator 3 view .LVU490
 700:Core/Src/AB1805_RK.c ****         }
 1979              		.loc 1 700 26 is_stmt 0 discriminator 3 view .LVU491
 1980 000c 2819     		adds	r0, r5, r4
 1981 000e C0B2     		uxtb	r0, r0
 1982 0010 FFF7FEFF 		bl	read_rtc_register
 1983              	.LVL228:
 700:Core/Src/AB1805_RK.c ****         }
 1984              		.loc 1 700 24 discriminator 3 view .LVU492
 1985 0014 07AB     		add	r3, sp, #28
 1986 0016 1855     		strb	r0, [r3, r4]
 698:Core/Src/AB1805_RK.c ****         {
 1987              		.loc 1 698 32 is_stmt 1 discriminator 3 view .LVU493
 1988 0018 0134     		adds	r4, r4, #1
 1989              	.LVL229:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 102


 698:Core/Src/AB1805_RK.c ****         {
 1990              		.loc 1 698 32 is_stmt 0 discriminator 3 view .LVU494
 1991 001a E4B2     		uxtb	r4, r4
 1992              	.LVL230:
 1993              	.L110:
 698:Core/Src/AB1805_RK.c ****         {
 1994              		.loc 1 698 25 is_stmt 1 discriminator 1 view .LVU495
 1995 001c 062C     		cmp	r4, #6
 1996 001e F5D9     		bls	.L109
 702:Core/Src/AB1805_RK.c ****     }
 1997              		.loc 1 702 9 discriminator 2 view .LVU496
 702:Core/Src/AB1805_RK.c ****     }
 1998              		.loc 1 702 100 is_stmt 0 discriminator 2 view .LVU497
 1999 0020 07A9     		add	r1, sp, #28
 2000 0022 0A78     		ldrb	r2, [r1]
 702:Core/Src/AB1805_RK.c ****     }
 2001              		.loc 1 702 111 discriminator 2 view .LVU498
 2002 0024 4B78     		ldrb	r3, [r1, #1]
 702:Core/Src/AB1805_RK.c ****     }
 2003              		.loc 1 702 122 discriminator 2 view .LVU499
 2004 0026 8C78     		ldrb	r4, [r1, #2]
 2005              	.LVL231:
 702:Core/Src/AB1805_RK.c ****     }
 2006              		.loc 1 702 133 discriminator 2 view .LVU500
 2007 0028 CE78     		ldrb	r6, [r1, #3]
 702:Core/Src/AB1805_RK.c ****     }
 2008              		.loc 1 702 144 discriminator 2 view .LVU501
 2009 002a 0F79     		ldrb	r7, [r1, #4]
 702:Core/Src/AB1805_RK.c ****     }
 2010              		.loc 1 702 155 discriminator 2 view .LVU502
 2011 002c 4879     		ldrb	r0, [r1, #5]
 2012 002e 8446     		mov	ip, r0
 702:Core/Src/AB1805_RK.c ****     }
 2013              		.loc 1 702 166 discriminator 2 view .LVU503
 2014 0030 8879     		ldrb	r0, [r1, #6]
 2015 0032 8046     		mov	r8, r0
 702:Core/Src/AB1805_RK.c ****     }
 2016              		.loc 1 702 177 discriminator 2 view .LVU504
 2017 0034 C979     		ldrb	r1, [r1, #7]
 702:Core/Src/AB1805_RK.c ****     }
 2018              		.loc 1 702 9 discriminator 2 view .LVU505
 2019 0036 0B48     		ldr	r0, .L113
 2020 0038 0591     		str	r1, [sp, #20]
 2021 003a 4146     		mov	r1, r8
 2022 003c 0491     		str	r1, [sp, #16]
 2023 003e 6146     		mov	r1, ip
 2024 0040 0391     		str	r1, [sp, #12]
 2025 0042 0297     		str	r7, [sp, #8]
 2026 0044 0196     		str	r6, [sp, #4]
 2027 0046 0094     		str	r4, [sp]
 2028 0048 2900     		movs	r1, r5
 2029 004a FFF7FEFF 		bl	printf_
 2030              	.LVL232:
 2031              	.LBE112:
 694:Core/Src/AB1805_RK.c ****     {
 2032              		.loc 1 694 43 is_stmt 1 discriminator 2 view .LVU506
 2033 004e 0835     		adds	r5, r5, #8
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 103


 2034              	.LVL233:
 694:Core/Src/AB1805_RK.c ****     {
 2035              		.loc 1 694 43 is_stmt 0 discriminator 2 view .LVU507
 2036 0050 EDB2     		uxtb	r5, r5
 2037              	.LVL234:
 2038              	.L108:
 694:Core/Src/AB1805_RK.c ****     {
 2039              		.loc 1 694 31 is_stmt 1 discriminator 1 view .LVU508
 2040 0052 3E2D     		cmp	r5, #62
 2041 0054 01D8     		bhi	.L112
 2042              	.LBB113:
 698:Core/Src/AB1805_RK.c ****         {
 2043              		.loc 1 698 17 is_stmt 0 view .LVU509
 2044 0056 0024     		movs	r4, #0
 2045 0058 E0E7     		b	.L110
 2046              	.L112:
 2047              	.LBE113:
 2048              	.LBE111:
 704:Core/Src/AB1805_RK.c **** 
 2049              		.loc 1 704 1 view .LVU510
 2050 005a 0AB0     		add	sp, sp, #40
 2051              		@ sp needed
 2052              	.LVL235:
 704:Core/Src/AB1805_RK.c **** 
 2053              		.loc 1 704 1 view .LVU511
 2054 005c 80BC     		pop	{r7}
 2055 005e B846     		mov	r8, r7
 2056 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 2057              	.L114:
 2058 0062 C046     		.align	2
 2059              	.L113:
 2060 0064 00000000 		.word	.LC35
 2061              		.cfi_endproc
 2062              	.LFE526:
 2064              		.section	.rodata.deepPowerDown.str1.4,"aMS",%progbits,1
 2065              		.align	2
 2066              	.LC37:
 2067 0000 64656570 		.ascii	"deepPowerDown %d\012\000"
 2067      506F7765 
 2067      72446F77 
 2067      6E202564 
 2067      0A00
 2068 0012 0000     		.align	2
 2069              	.LC39:
 2070 0014 6661696C 		.ascii	"failure in deepPowerDown %d\012\000"
 2070      75726520 
 2070      696E2064 
 2070      65657050 
 2070      6F776572 
 2071 0031 000000   		.align	2
 2072              	.LC41:
 2073 0034 4F783138 		.ascii	"Ox18: %X  0x19: %X  \012\000"
 2073      3A202558 
 2073      20203078 
 2073      31393A20 
 2073      25582020 
 2074 004a 0000     		.align	2
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 104


 2075              	.LC43:
 2076 004c 5245475F 		.ascii	"REG_SLEEP_CTRL=0x%2x\012\000"
 2076      534C4545 
 2076      505F4354 
 2076      524C3D30 
 2076      78253278 
 2077 0062 0000     		.align	2
 2078              	.LC45:
 2079 0064 6469646E 		.ascii	"didn't power down\012\000"
 2079      27742070 
 2079      6F776572 
 2079      20646F77 
 2079      6E0A00
 2080              		.section	.text.deepPowerDown,"ax",%progbits
 2081              		.align	1
 2082              		.global	deepPowerDown
 2083              		.syntax unified
 2084              		.code	16
 2085              		.thumb_func
 2087              	deepPowerDown:
 2088              	.LVL236:
 2089              	.LFB510:
 317:Core/Src/AB1805_RK.c ****     const char *errorMsg = "failure in deepPowerDown %d\n";
 2090              		.loc 1 317 1 is_stmt 1 view -0
 2091              		.cfi_startproc
 2092              		@ args = 0, pretend = 0, frame = 0
 2093              		@ frame_needed = 0, uses_anonymous_args = 0
 317:Core/Src/AB1805_RK.c ****     const char *errorMsg = "failure in deepPowerDown %d\n";
 2094              		.loc 1 317 1 is_stmt 0 view .LVU513
 2095 0000 70B5     		push	{r4, r5, r6, lr}
 2096              	.LCFI21:
 2097              		.cfi_def_cfa_offset 16
 2098              		.cfi_offset 4, -16
 2099              		.cfi_offset 5, -12
 2100              		.cfi_offset 6, -8
 2101              		.cfi_offset 14, -4
 2102 0002 0500     		movs	r5, r0
 318:Core/Src/AB1805_RK.c ****     bool bResult;
 2103              		.loc 1 318 5 is_stmt 1 view .LVU514
 2104              	.LVL237:
 319:Core/Src/AB1805_RK.c **** 
 2105              		.loc 1 319 5 view .LVU515
 321:Core/Src/AB1805_RK.c **** 
 2106              		.loc 1 321 5 view .LVU516
 2107 0004 4348     		ldr	r0, .L131
 2108              	.LVL238:
 321:Core/Src/AB1805_RK.c **** 
 2109              		.loc 1 321 5 is_stmt 0 view .LVU517
 2110 0006 2900     		movs	r1, r5
 2111 0008 FFF7FEFF 		bl	printf_
 2112              	.LVL239:
 324:Core/Src/AB1805_RK.c ****     if (!bResult)
 2113              		.loc 1 324 5 is_stmt 1 view .LVU518
 324:Core/Src/AB1805_RK.c ****     if (!bResult)
 2114              		.loc 1 324 15 is_stmt 0 view .LVU519
 2115 000c 0020     		movs	r0, #0
 2116 000e FFF7FEFF 		bl	setWDT
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 105


 2117              	.LVL240:
 2118 0012 041E     		subs	r4, r0, #0
 2119              	.LVL241:
 325:Core/Src/AB1805_RK.c ****     {
 2120              		.loc 1 325 5 is_stmt 1 view .LVU520
 325:Core/Src/AB1805_RK.c ****     {
 2121              		.loc 1 325 8 is_stmt 0 view .LVU521
 2122 0014 3DD0     		beq	.L125
 331:Core/Src/AB1805_RK.c ****     if (!bResult)
 2123              		.loc 1 331 5 is_stmt 1 view .LVU522
 331:Core/Src/AB1805_RK.c ****     if (!bResult)
 2124              		.loc 1 331 15 is_stmt 0 view .LVU523
 2125 0016 0021     		movs	r1, #0
 2126 0018 2800     		movs	r0, r5
 2127              	.LVL242:
 331:Core/Src/AB1805_RK.c ****     if (!bResult)
 2128              		.loc 1 331 15 view .LVU524
 2129 001a FFF7FEFF 		bl	setCountdownTimer
 2130              	.LVL243:
 2131 001e 041E     		subs	r4, r0, #0
 2132              	.LVL244:
 332:Core/Src/AB1805_RK.c ****     {
 2133              		.loc 1 332 5 is_stmt 1 view .LVU525
 332:Core/Src/AB1805_RK.c ****     {
 2134              		.loc 1 332 8 is_stmt 0 view .LVU526
 2135 0020 3ED0     		beq	.L126
 337:Core/Src/AB1805_RK.c **** 
 2136              		.loc 1 337 5 is_stmt 1 view .LVU527
 337:Core/Src/AB1805_RK.c **** 
 2137              		.loc 1 337 38 is_stmt 0 view .LVU528
 2138 0022 1820     		movs	r0, #24
 2139              	.LVL245:
 337:Core/Src/AB1805_RK.c **** 
 2140              		.loc 1 337 38 view .LVU529
 2141 0024 FFF7FEFF 		bl	read_rtc_register
 2142              	.LVL246:
 2143 0028 0400     		movs	r4, r0
 2144              	.LVL247:
 337:Core/Src/AB1805_RK.c **** 
 2145              		.loc 1 337 63 view .LVU530
 2146 002a 1920     		movs	r0, #25
 2147 002c FFF7FEFF 		bl	read_rtc_register
 2148              	.LVL248:
 2149 0030 0200     		movs	r2, r0
 337:Core/Src/AB1805_RK.c **** 
 2150              		.loc 1 337 5 view .LVU531
 2151 0032 394B     		ldr	r3, .L131+4
 2152 0034 2100     		movs	r1, r4
 2153 0036 1800     		movs	r0, r3
 2154 0038 FFF7FEFF 		bl	printf_
 2155              	.LVL249:
 342:Core/Src/AB1805_RK.c ****     if (!bResult)
 2156              		.loc 1 342 5 is_stmt 1 view .LVU532
 342:Core/Src/AB1805_RK.c ****     if (!bResult)
 2157              		.loc 1 342 15 is_stmt 0 view .LVU533
 2158 003c 0023     		movs	r3, #0
 2159 003e 0222     		movs	r2, #2
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 106


 2160 0040 7721     		movs	r1, #119
 2161 0042 1020     		movs	r0, #16
 2162 0044 FFF7FEFF 		bl	maskRegister
 2163              	.LVL250:
 2164 0048 041E     		subs	r4, r0, #0
 2165              	.LVL251:
 343:Core/Src/AB1805_RK.c ****     {
 2166              		.loc 1 343 5 is_stmt 1 view .LVU534
 343:Core/Src/AB1805_RK.c ****     {
 2167              		.loc 1 343 8 is_stmt 0 view .LVU535
 2168 004a 2FD0     		beq	.L127
 350:Core/Src/AB1805_RK.c ****     if (!bResult)
 2169              		.loc 1 350 5 is_stmt 1 view .LVU536
 350:Core/Src/AB1805_RK.c ****     if (!bResult)
 2170              		.loc 1 350 15 is_stmt 0 view .LVU537
 2171 004c 0022     		movs	r2, #0
 2172 004e 0421     		movs	r1, #4
 2173 0050 1C20     		movs	r0, #28
 2174              	.LVL252:
 350:Core/Src/AB1805_RK.c ****     if (!bResult)
 2175              		.loc 1 350 15 view .LVU538
 2176 0052 FFF7FEFF 		bl	setRegisterBit
 2177              	.LVL253:
 2178 0056 041E     		subs	r4, r0, #0
 2179              	.LVL254:
 351:Core/Src/AB1805_RK.c ****     {
 2180              		.loc 1 351 5 is_stmt 1 view .LVU539
 351:Core/Src/AB1805_RK.c ****     {
 2181              		.loc 1 351 8 is_stmt 0 view .LVU540
 2182 0058 2ED0     		beq	.L128
 358:Core/Src/AB1805_RK.c ****     if (!bResult)
 2183              		.loc 1 358 5 is_stmt 1 view .LVU541
 358:Core/Src/AB1805_RK.c ****     if (!bResult)
 2184              		.loc 1 358 15 is_stmt 0 view .LVU542
 2185 005a 0023     		movs	r3, #0
 2186 005c 1822     		movs	r2, #24
 2187 005e E321     		movs	r1, #227
 2188 0060 1120     		movs	r0, #17
 2189              	.LVL255:
 358:Core/Src/AB1805_RK.c ****     if (!bResult)
 2190              		.loc 1 358 15 view .LVU543
 2191 0062 FFF7FEFF 		bl	maskRegister
 2192              	.LVL256:
 2193 0066 041E     		subs	r4, r0, #0
 2194              	.LVL257:
 359:Core/Src/AB1805_RK.c ****     {
 2195              		.loc 1 359 5 is_stmt 1 view .LVU544
 359:Core/Src/AB1805_RK.c ****     {
 2196              		.loc 1 359 8 is_stmt 0 view .LVU545
 2197 0068 2CD0     		beq	.L129
 364:Core/Src/AB1805_RK.c ****     HAL_Delay(1000);
 2198              		.loc 1 364 5 is_stmt 1 view .LVU546
 2199 006a FFF7FEFF 		bl	hex_dump
 2200              	.LVL258:
 365:Core/Src/AB1805_RK.c ****     // Enter sleep mode
 2201              		.loc 1 365 5 view .LVU547
 2202 006e FA20     		movs	r0, #250
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 107


 2203 0070 8000     		lsls	r0, r0, #2
 2204 0072 FFF7FEFF 		bl	HAL_Delay
 2205              	.LVL259:
 367:Core/Src/AB1805_RK.c ****     if (!bResult)
 2206              		.loc 1 367 5 view .LVU548
 367:Core/Src/AB1805_RK.c ****     if (!bResult)
 2207              		.loc 1 367 15 is_stmt 0 view .LVU549
 2208 0076 8121     		movs	r1, #129
 2209 0078 1720     		movs	r0, #23
 2210 007a FFF7FEFF 		bl	write_rtc_register
 2211              	.LVL260:
 368:Core/Src/AB1805_RK.c ****     {
 2212              		.loc 1 368 5 is_stmt 1 view .LVU550
 368:Core/Src/AB1805_RK.c ****     {
 2213              		.loc 1 368 8 is_stmt 0 view .LVU551
 2214 007e 0028     		cmp	r0, #0
 2215 0080 26D0     		beq	.L130
 373:Core/Src/AB1805_RK.c ****     // _log.trace("delay in case we didn't power down");
 2216              		.loc 1 373 5 is_stmt 1 view .LVU552
 373:Core/Src/AB1805_RK.c ****     // _log.trace("delay in case we didn't power down");
 2217              		.loc 1 373 15 is_stmt 0 view .LVU553
 2218 0082 C221     		movs	r1, #194
 2219 0084 1820     		movs	r0, #24
 2220              	.LVL261:
 373:Core/Src/AB1805_RK.c ****     // _log.trace("delay in case we didn't power down");
 2221              		.loc 1 373 15 view .LVU554
 2222 0086 FFF7FEFF 		bl	write_rtc_register
 2223              	.LVL262:
 375:Core/Src/AB1805_RK.c ****     while ((HAL_GetTick() - start) < (uint32_t)(seconds * 1000))
 2224              		.loc 1 375 5 is_stmt 1 view .LVU555
 375:Core/Src/AB1805_RK.c ****     while ((HAL_GetTick() - start) < (uint32_t)(seconds * 1000))
 2225              		.loc 1 375 22 is_stmt 0 view .LVU556
 2226 008a FFF7FEFF 		bl	HAL_GetTick
 2227              	.LVL263:
 2228 008e 0600     		movs	r6, r0
 2229              	.LVL264:
 376:Core/Src/AB1805_RK.c ****     {
 2230              		.loc 1 376 5 is_stmt 1 view .LVU557
 376:Core/Src/AB1805_RK.c ****     {
 2231              		.loc 1 376 11 is_stmt 0 view .LVU558
 2232 0090 31E0     		b	.L123
 2233              	.LVL265:
 2234              	.L125:
 327:Core/Src/AB1805_RK.c ****         return false;
 2235              		.loc 1 327 9 is_stmt 1 view .LVU559
 2236 0092 4821     		movs	r1, #72
 2237 0094 2148     		ldr	r0, .L131+8
 2238              	.LVL266:
 327:Core/Src/AB1805_RK.c ****         return false;
 2239              		.loc 1 327 9 is_stmt 0 view .LVU560
 2240 0096 FF31     		adds	r1, r1, #255
 2241 0098 FFF7FEFF 		bl	printf_
 2242              	.LVL267:
 328:Core/Src/AB1805_RK.c ****     }
 2243              		.loc 1 328 9 is_stmt 1 view .LVU561
 2244              	.L117:
 385:Core/Src/AB1805_RK.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 108


 2245              		.loc 1 385 1 is_stmt 0 view .LVU562
 2246 009c 2000     		movs	r0, r4
 2247              		@ sp needed
 2248              	.LVL268:
 385:Core/Src/AB1805_RK.c **** 
 2249              		.loc 1 385 1 view .LVU563
 2250 009e 70BD     		pop	{r4, r5, r6, pc}
 2251              	.LVL269:
 2252              	.L126:
 334:Core/Src/AB1805_RK.c ****         return false;
 2253              		.loc 1 334 9 is_stmt 1 view .LVU564
 2254 00a0 A721     		movs	r1, #167
 2255 00a2 1E48     		ldr	r0, .L131+8
 2256              	.LVL270:
 334:Core/Src/AB1805_RK.c ****         return false;
 2257              		.loc 1 334 9 is_stmt 0 view .LVU565
 2258 00a4 4900     		lsls	r1, r1, #1
 2259 00a6 FFF7FEFF 		bl	printf_
 2260              	.LVL271:
 335:Core/Src/AB1805_RK.c ****     }
 2261              		.loc 1 335 9 is_stmt 1 view .LVU566
 335:Core/Src/AB1805_RK.c ****     }
 2262              		.loc 1 335 16 is_stmt 0 view .LVU567
 2263 00aa F7E7     		b	.L117
 2264              	.LVL272:
 2265              	.L127:
 345:Core/Src/AB1805_RK.c ****         return false;
 2266              		.loc 1 345 9 is_stmt 1 view .LVU568
 2267 00ac 5A21     		movs	r1, #90
 2268 00ae 1B48     		ldr	r0, .L131+8
 2269              	.LVL273:
 345:Core/Src/AB1805_RK.c ****         return false;
 2270              		.loc 1 345 9 is_stmt 0 view .LVU569
 2271 00b0 FF31     		adds	r1, r1, #255
 2272 00b2 FFF7FEFF 		bl	printf_
 2273              	.LVL274:
 346:Core/Src/AB1805_RK.c ****     }
 2274              		.loc 1 346 9 is_stmt 1 view .LVU570
 346:Core/Src/AB1805_RK.c ****     }
 2275              		.loc 1 346 16 is_stmt 0 view .LVU571
 2276 00b6 F1E7     		b	.L117
 2277              	.LVL275:
 2278              	.L128:
 353:Core/Src/AB1805_RK.c ****         return false;
 2279              		.loc 1 353 9 is_stmt 1 view .LVU572
 2280 00b8 6221     		movs	r1, #98
 2281 00ba 1848     		ldr	r0, .L131+8
 2282              	.LVL276:
 353:Core/Src/AB1805_RK.c ****         return false;
 2283              		.loc 1 353 9 is_stmt 0 view .LVU573
 2284 00bc FF31     		adds	r1, r1, #255
 2285 00be FFF7FEFF 		bl	printf_
 2286              	.LVL277:
 354:Core/Src/AB1805_RK.c ****     }
 2287              		.loc 1 354 9 is_stmt 1 view .LVU574
 354:Core/Src/AB1805_RK.c ****     }
 2288              		.loc 1 354 16 is_stmt 0 view .LVU575
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 109


 2289 00c2 EBE7     		b	.L117
 2290              	.LVL278:
 2291              	.L129:
 361:Core/Src/AB1805_RK.c ****         return false;
 2292              		.loc 1 361 9 is_stmt 1 view .LVU576
 2293 00c4 6A21     		movs	r1, #106
 2294 00c6 1548     		ldr	r0, .L131+8
 2295              	.LVL279:
 361:Core/Src/AB1805_RK.c ****         return false;
 2296              		.loc 1 361 9 is_stmt 0 view .LVU577
 2297 00c8 FF31     		adds	r1, r1, #255
 2298 00ca FFF7FEFF 		bl	printf_
 2299              	.LVL280:
 362:Core/Src/AB1805_RK.c ****     }
 2300              		.loc 1 362 9 is_stmt 1 view .LVU578
 362:Core/Src/AB1805_RK.c ****     }
 2301              		.loc 1 362 16 is_stmt 0 view .LVU579
 2302 00ce E5E7     		b	.L117
 2303              	.LVL281:
 2304              	.L130:
 370:Core/Src/AB1805_RK.c ****         return false;
 2305              		.loc 1 370 9 is_stmt 1 view .LVU580
 2306 00d0 B921     		movs	r1, #185
 2307 00d2 1248     		ldr	r0, .L131+8
 2308              	.LVL282:
 370:Core/Src/AB1805_RK.c ****         return false;
 2309              		.loc 1 370 9 is_stmt 0 view .LVU581
 2310 00d4 4900     		lsls	r1, r1, #1
 2311 00d6 FFF7FEFF 		bl	printf_
 2312              	.LVL283:
 371:Core/Src/AB1805_RK.c ****     }
 2313              		.loc 1 371 9 is_stmt 1 view .LVU582
 371:Core/Src/AB1805_RK.c ****     }
 2314              		.loc 1 371 16 is_stmt 0 view .LVU583
 2315 00da 0024     		movs	r4, #0
 2316 00dc DEE7     		b	.L117
 2317              	.LVL284:
 2318              	.L124:
 378:Core/Src/AB1805_RK.c ****         HAL_Delay(1000);
 2319              		.loc 1 378 9 is_stmt 1 view .LVU584
 378:Core/Src/AB1805_RK.c ****         HAL_Delay(1000);
 2320              		.loc 1 378 42 is_stmt 0 view .LVU585
 2321 00de 1720     		movs	r0, #23
 2322 00e0 FFF7FEFF 		bl	read_rtc_register
 2323              	.LVL285:
 2324 00e4 0100     		movs	r1, r0
 378:Core/Src/AB1805_RK.c ****         HAL_Delay(1000);
 2325              		.loc 1 378 9 view .LVU586
 2326 00e6 0E4B     		ldr	r3, .L131+12
 2327 00e8 1800     		movs	r0, r3
 2328 00ea FFF7FEFF 		bl	printf_
 2329              	.LVL286:
 379:Core/Src/AB1805_RK.c ****     }
 2330              		.loc 1 379 9 is_stmt 1 view .LVU587
 2331 00ee FA20     		movs	r0, #250
 2332 00f0 8000     		lsls	r0, r0, #2
 2333 00f2 FFF7FEFF 		bl	HAL_Delay
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 110


 2334              	.LVL287:
 2335              	.L123:
 376:Core/Src/AB1805_RK.c ****     {
 2336              		.loc 1 376 36 view .LVU588
 376:Core/Src/AB1805_RK.c ****     {
 2337              		.loc 1 376 13 is_stmt 0 view .LVU589
 2338 00f6 FFF7FEFF 		bl	HAL_GetTick
 2339              	.LVL288:
 376:Core/Src/AB1805_RK.c ****     {
 2340              		.loc 1 376 27 view .LVU590
 2341 00fa 801B     		subs	r0, r0, r6
 376:Core/Src/AB1805_RK.c ****     {
 2342              		.loc 1 376 57 view .LVU591
 2343 00fc 6B01     		lsls	r3, r5, #5
 2344 00fe 5B1B     		subs	r3, r3, r5
 2345 0100 9B00     		lsls	r3, r3, #2
 2346 0102 5B19     		adds	r3, r3, r5
 2347 0104 DB00     		lsls	r3, r3, #3
 376:Core/Src/AB1805_RK.c ****     {
 2348              		.loc 1 376 36 view .LVU592
 2349 0106 9842     		cmp	r0, r3
 2350 0108 E9D3     		bcc	.L124
 382:Core/Src/AB1805_RK.c **** 
 2351              		.loc 1 382 5 is_stmt 1 view .LVU593
 2352 010a 0648     		ldr	r0, .L131+16
 2353 010c FFF7FEFF 		bl	printf_
 2354              	.LVL289:
 384:Core/Src/AB1805_RK.c **** }
 2355              		.loc 1 384 5 view .LVU594
 384:Core/Src/AB1805_RK.c **** }
 2356              		.loc 1 384 12 is_stmt 0 view .LVU595
 2357 0110 C4E7     		b	.L117
 2358              	.L132:
 2359 0112 C046     		.align	2
 2360              	.L131:
 2361 0114 00000000 		.word	.LC37
 2362 0118 34000000 		.word	.LC41
 2363 011c 14000000 		.word	.LC39
 2364 0120 4C000000 		.word	.LC43
 2365 0124 64000000 		.word	.LC45
 2366              		.cfi_endproc
 2367              	.LFE510:
 2369              		.section	.text.isRTCSet,"ax",%progbits
 2370              		.align	1
 2371              		.global	isRTCSet
 2372              		.syntax unified
 2373              		.code	16
 2374              		.thumb_func
 2376              	isRTCSet:
 2377              	.LFB529:
 716:Core/Src/AB1805_RK.c **** }
 717:Core/Src/AB1805_RK.c **** 
 718:Core/Src/AB1805_RK.c **** bool isRTCSet()
 719:Core/Src/AB1805_RK.c **** {
 2378              		.loc 1 719 1 is_stmt 1 view -0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 111


 2381              		@ frame_needed = 0, uses_anonymous_args = 0
 2382 0000 10B5     		push	{r4, lr}
 2383              	.LCFI22:
 2384              		.cfi_def_cfa_offset 8
 2385              		.cfi_offset 4, -8
 2386              		.cfi_offset 14, -4
 720:Core/Src/AB1805_RK.c ****     return isBitClear(REG_CTRL_1, REG_CTRL_1_WRTC, 0);
 2387              		.loc 1 720 5 view .LVU597
 2388              		.loc 1 720 12 is_stmt 0 view .LVU598
 2389 0002 0022     		movs	r2, #0
 2390 0004 0121     		movs	r1, #1
 2391 0006 1020     		movs	r0, #16
 2392 0008 FFF7FEFF 		bl	isBitClear
 2393              	.LVL290:
 721:Core/Src/AB1805_RK.c **** };
 2394              		.loc 1 721 1 view .LVU599
 2395              		@ sp needed
 2396 000c 10BD     		pop	{r4, pc}
 2397              		.cfi_endproc
 2398              	.LFE529:
 2400              		.section	.text.readRegisters,"ax",%progbits
 2401              		.align	1
 2402              		.global	readRegisters
 2403              		.syntax unified
 2404              		.code	16
 2405              		.thumb_func
 2407              	readRegisters:
 2408              	.LVL291:
 2409              	.LFB530:
 722:Core/Src/AB1805_RK.c **** 
 723:Core/Src/AB1805_RK.c **** // #########################################################################
 724:Core/Src/AB1805_RK.c **** 
 725:Core/Src/AB1805_RK.c **** bool readRegisters(uint8_t offset, uint8_t *buf, uint8_t length)
 726:Core/Src/AB1805_RK.c **** {
 2410              		.loc 1 726 1 is_stmt 1 view -0
 2411              		.cfi_startproc
 2412              		@ args = 0, pretend = 0, frame = 0
 2413              		@ frame_needed = 0, uses_anonymous_args = 0
 2414              		.loc 1 726 1 is_stmt 0 view .LVU601
 2415 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2416              	.LCFI23:
 2417              		.cfi_def_cfa_offset 20
 2418              		.cfi_offset 4, -20
 2419              		.cfi_offset 5, -16
 2420              		.cfi_offset 6, -12
 2421              		.cfi_offset 7, -8
 2422              		.cfi_offset 14, -4
 2423 0002 C646     		mov	lr, r8
 2424 0004 00B5     		push	{lr}
 2425              	.LCFI24:
 2426              		.cfi_def_cfa_offset 24
 2427              		.cfi_offset 8, -24
 2428 0006 0F00     		movs	r7, r1
 2429 0008 1600     		movs	r6, r2
 727:Core/Src/AB1805_RK.c ****     uint8_t address = AB1815_SPI_READ(offset);
 2430              		.loc 1 727 5 is_stmt 1 view .LVU602
 2431              		.loc 1 727 13 is_stmt 0 view .LVU603
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 112


 2432 000a 7F23     		movs	r3, #127
 2433 000c 1840     		ands	r0, r3
 2434              	.LVL292:
 728:Core/Src/AB1805_RK.c ****     uint32_t primask_bit = utils_enter_critical_section();
 2435              		.loc 1 728 5 is_stmt 1 view .LVU604
 2436              	.LBB114:
 2437              	.LBI114:
 706:Core/Src/AB1805_RK.c **** {
 2438              		.loc 1 706 24 view .LVU605
 2439              	.LBB115:
 708:Core/Src/AB1805_RK.c ****     __disable_irq();
 2440              		.loc 1 708 5 view .LVU606
 2441              	.LBB116:
 2442              	.LBI116:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2443              		.loc 3 1204 31 view .LVU607
 2444              	.LBB117:
1206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2445              		.loc 3 1206 3 view .LVU608
1208:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2446              		.loc 3 1208 3 view .LVU609
 2447              		.syntax divided
 2448              	@ 1208 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2449 000e EFF31088 		MRS r8, primask
 2450              	@ 0 "" 2
 2451              	.LVL293:
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2452              		.loc 3 1209 3 view .LVU610
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2453              		.loc 3 1209 3 is_stmt 0 view .LVU611
 2454              		.thumb
 2455              		.syntax unified
 2456              	.LBE117:
 2457              	.LBE116:
 709:Core/Src/AB1805_RK.c ****     return primask_bit;
 2458              		.loc 1 709 5 is_stmt 1 view .LVU612
 2459              	.LBB118:
 2460              	.LBI118:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2461              		.loc 3 960 27 view .LVU613
 2462              	.LBB119:
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2463              		.loc 3 962 3 view .LVU614
 2464              		.syntax divided
 2465              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2466 0012 72B6     		cpsid i
 2467              	@ 0 "" 2
 2468              		.thumb
 2469              		.syntax unified
 2470              	.LBE119:
 2471              	.LBE118:
 710:Core/Src/AB1805_RK.c **** }
 2472              		.loc 1 710 5 view .LVU615
 2473              	.LVL294:
 710:Core/Src/AB1805_RK.c **** }
 2474              		.loc 1 710 5 is_stmt 0 view .LVU616
 2475              	.LBE115:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 113


 2476              	.LBE114:
 729:Core/Src/AB1805_RK.c ****     spi_select_slave(0);
 2477              		.loc 1 729 5 is_stmt 1 view .LVU617
 2478              	.LBB120:
 2479              	.LBI120:
  43:Core/Src/AB1805_RK.c **** {
 2480              		.loc 1 43 20 view .LVU618
 2481              	.LBB121:
  45:Core/Src/AB1805_RK.c ****     {
 2482              		.loc 1 45 5 view .LVU619
  51:Core/Src/AB1805_RK.c ****     }
 2483              		.loc 1 51 9 view .LVU620
 2484 0014 114B     		ldr	r3, .L139
 2485 0016 8022     		movs	r2, #128
 2486              	.LVL295:
  51:Core/Src/AB1805_RK.c ****     }
 2487              		.loc 1 51 9 is_stmt 0 view .LVU621
 2488 0018 D205     		lsls	r2, r2, #23
 2489 001a 9A61     		str	r2, [r3, #24]
 2490              	.LVL296:
  51:Core/Src/AB1805_RK.c ****     }
 2491              		.loc 1 51 9 view .LVU622
 2492              	.LBE121:
 2493              	.LBE120:
 730:Core/Src/AB1805_RK.c **** 
 731:Core/Src/AB1805_RK.c ****     unsigned int i = 0;
 2494              		.loc 1 731 5 is_stmt 1 view .LVU623
 732:Core/Src/AB1805_RK.c ****     if (!((SPI1)->CR1 & SPI_CR1_SPE))
 2495              		.loc 1 732 5 view .LVU624
 2496              		.loc 1 732 17 is_stmt 0 view .LVU625
 2497 001c 104B     		ldr	r3, .L139+4
 2498 001e 1B68     		ldr	r3, [r3]
 2499              		.loc 1 732 8 view .LVU626
 2500 0020 5B06     		lsls	r3, r3, #25
 2501 0022 04D4     		bmi	.L135
 733:Core/Src/AB1805_RK.c ****     {
 734:Core/Src/AB1805_RK.c ****         SPI1->CR1 |= SPI_CR1_SPE;
 2502              		.loc 1 734 9 is_stmt 1 view .LVU627
 2503              		.loc 1 734 13 is_stmt 0 view .LVU628
 2504 0024 0E4A     		ldr	r2, .L139+4
 2505 0026 1368     		ldr	r3, [r2]
 2506              		.loc 1 734 19 view .LVU629
 2507 0028 4021     		movs	r1, #64
 2508              	.LVL297:
 2509              		.loc 1 734 19 view .LVU630
 2510 002a 0B43     		orrs	r3, r1
 2511 002c 1360     		str	r3, [r2]
 2512              	.L135:
 735:Core/Src/AB1805_RK.c ****     }
 736:Core/Src/AB1805_RK.c **** 
 737:Core/Src/AB1805_RK.c ****     SPI1_SendByte(address);
 2513              		.loc 1 737 5 is_stmt 1 view .LVU631
 2514 002e FFF7FEFF 		bl	SPI1_SendByte
 2515              	.LVL298:
 738:Core/Src/AB1805_RK.c ****     while (i < length)
 2516              		.loc 1 738 5 view .LVU632
 731:Core/Src/AB1805_RK.c ****     if (!((SPI1)->CR1 & SPI_CR1_SPE))
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 114


 2517              		.loc 1 731 18 is_stmt 0 view .LVU633
 2518 0032 0024     		movs	r4, #0
 2519              		.loc 1 738 11 view .LVU634
 2520 0034 06E0     		b	.L136
 2521              	.LVL299:
 2522              	.L137:
 739:Core/Src/AB1805_RK.c ****     {
 740:Core/Src/AB1805_RK.c ****         buf[i++] = SPI1_SendByte(0x00); // Send DUMMY to read data
 2523              		.loc 1 740 9 is_stmt 1 view .LVU635
 2524              		.loc 1 740 14 is_stmt 0 view .LVU636
 2525 0036 651C     		adds	r5, r4, #1
 2526              	.LVL300:
 2527              		.loc 1 740 12 view .LVU637
 2528 0038 3C19     		adds	r4, r7, r4
 2529              		.loc 1 740 20 view .LVU638
 2530 003a 0020     		movs	r0, #0
 2531 003c FFF7FEFF 		bl	SPI1_SendByte
 2532              	.LVL301:
 2533              		.loc 1 740 18 view .LVU639
 2534 0040 2070     		strb	r0, [r4]
 2535              		.loc 1 740 14 view .LVU640
 2536 0042 2C00     		movs	r4, r5
 2537              	.LVL302:
 2538              	.L136:
 738:Core/Src/AB1805_RK.c ****     {
 2539              		.loc 1 738 14 is_stmt 1 view .LVU641
 2540 0044 A642     		cmp	r6, r4
 2541 0046 F6D8     		bhi	.L137
 741:Core/Src/AB1805_RK.c ****     }
 742:Core/Src/AB1805_RK.c **** 
 743:Core/Src/AB1805_RK.c ****     spi_select_slave(1);
 2542              		.loc 1 743 5 view .LVU642
 2543              	.LVL303:
 2544              	.LBB122:
 2545              	.LBI122:
  43:Core/Src/AB1805_RK.c **** {
 2546              		.loc 1 43 20 view .LVU643
 2547              	.LBB123:
  45:Core/Src/AB1805_RK.c ****     {
 2548              		.loc 1 45 5 view .LVU644
  47:Core/Src/AB1805_RK.c ****     }
 2549              		.loc 1 47 9 view .LVU645
 2550 0048 044B     		ldr	r3, .L139
 2551 004a 8022     		movs	r2, #128
 2552 004c D201     		lsls	r2, r2, #7
 2553 004e 9A61     		str	r2, [r3, #24]
 2554              	.LVL304:
  47:Core/Src/AB1805_RK.c ****     }
 2555              		.loc 1 47 9 is_stmt 0 view .LVU646
 2556              	.LBE123:
 2557              	.LBE122:
 744:Core/Src/AB1805_RK.c ****     utils_exit_critical_section(primask_bit);
 2558              		.loc 1 744 5 is_stmt 1 view .LVU647
 2559              	.LBB124:
 2560              	.LBI124:
 713:Core/Src/AB1805_RK.c **** {
 2561              		.loc 1 713 20 view .LVU648
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 115


 715:Core/Src/AB1805_RK.c **** }
 2562              		.loc 1 715 5 view .LVU649
 2563              	.LBB125:
 2564              	.LBI125:
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2565              		.loc 3 1234 27 view .LVU650
 2566              	.LBB126:
 2567              		.loc 3 1236 3 view .LVU651
 2568              		.syntax divided
 2569              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2570 0050 88F31088 		MSR primask, r8
 2571              	@ 0 "" 2
 2572              	.LVL305:
 2573              		.loc 3 1236 3 is_stmt 0 view .LVU652
 2574              		.thumb
 2575              		.syntax unified
 2576              	.LBE126:
 2577              	.LBE125:
 2578              	.LBE124:
 745:Core/Src/AB1805_RK.c ****     return true;
 2579              		.loc 1 745 5 is_stmt 1 view .LVU653
 746:Core/Src/AB1805_RK.c **** };
 2580              		.loc 1 746 1 is_stmt 0 view .LVU654
 2581 0054 0120     		movs	r0, #1
 2582              		@ sp needed
 2583              	.LVL306:
 2584              	.LVL307:
 2585              	.LVL308:
 2586              		.loc 1 746 1 view .LVU655
 2587 0056 80BC     		pop	{r7}
 2588 0058 B846     		mov	r8, r7
 2589 005a F0BD     		pop	{r4, r5, r6, r7, pc}
 2590              	.L140:
 2591              		.align	2
 2592              	.L139:
 2593 005c 00040050 		.word	1342178304
 2594 0060 00300140 		.word	1073819648
 2595              		.cfi_endproc
 2596              	.LFE530:
 2598              		.section	.text.readRam,"ax",%progbits
 2599              		.align	1
 2600              		.global	readRam
 2601              		.syntax unified
 2602              		.code	16
 2603              		.thumb_func
 2605              	readRam:
 2606              	.LVL309:
 2607              	.LFB518:
 515:Core/Src/AB1805_RK.c ****     bool bResult = true;
 2608              		.loc 1 515 1 is_stmt 1 view -0
 2609              		.cfi_startproc
 2610              		@ args = 0, pretend = 0, frame = 0
 2611              		@ frame_needed = 0, uses_anonymous_args = 0
 515:Core/Src/AB1805_RK.c ****     bool bResult = true;
 2612              		.loc 1 515 1 is_stmt 0 view .LVU657
 2613 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2614              	.LCFI25:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 116


 2615              		.cfi_def_cfa_offset 20
 2616              		.cfi_offset 4, -20
 2617              		.cfi_offset 5, -16
 2618              		.cfi_offset 6, -12
 2619              		.cfi_offset 7, -8
 2620              		.cfi_offset 14, -4
 2621 0002 C646     		mov	lr, r8
 2622 0004 00B5     		push	{lr}
 2623              	.LCFI26:
 2624              		.cfi_def_cfa_offset 24
 2625              		.cfi_offset 8, -24
 2626 0006 0500     		movs	r5, r0
 2627 0008 0F00     		movs	r7, r1
 2628 000a 1600     		movs	r6, r2
 516:Core/Src/AB1805_RK.c **** 
 2629              		.loc 1 516 5 is_stmt 1 view .LVU658
 2630              	.LVL310:
 518:Core/Src/AB1805_RK.c **** 
 2631              		.loc 1 518 5 view .LVU659
 2632              	.LBB127:
 2633              	.LBI127:
 706:Core/Src/AB1805_RK.c **** {
 2634              		.loc 1 706 24 view .LVU660
 2635              	.LBB128:
 708:Core/Src/AB1805_RK.c ****     __disable_irq();
 2636              		.loc 1 708 5 view .LVU661
 2637              	.LBB129:
 2638              	.LBI129:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2639              		.loc 3 1204 31 view .LVU662
 2640              	.LBB130:
1206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2641              		.loc 3 1206 3 view .LVU663
1208:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2642              		.loc 3 1208 3 view .LVU664
 2643              		.syntax divided
 2644              	@ 1208 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2645 000c EFF31088 		MRS r8, primask
 2646              	@ 0 "" 2
 2647              	.LVL311:
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2648              		.loc 3 1209 3 view .LVU665
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2649              		.loc 3 1209 3 is_stmt 0 view .LVU666
 2650              		.thumb
 2651              		.syntax unified
 2652              	.LBE130:
 2653              	.LBE129:
 709:Core/Src/AB1805_RK.c ****     return primask_bit;
 2654              		.loc 1 709 5 is_stmt 1 view .LVU667
 2655              	.LBB131:
 2656              	.LBI131:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2657              		.loc 3 960 27 view .LVU668
 2658              	.LBB132:
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2659              		.loc 3 962 3 view .LVU669
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 117


 2660              		.syntax divided
 2661              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2662 0010 72B6     		cpsid i
 2663              	@ 0 "" 2
 2664              		.thumb
 2665              		.syntax unified
 2666              	.LBE132:
 2667              	.LBE131:
 710:Core/Src/AB1805_RK.c **** }
 2668              		.loc 1 710 5 view .LVU670
 2669              	.LVL312:
 710:Core/Src/AB1805_RK.c **** }
 2670              		.loc 1 710 5 is_stmt 0 view .LVU671
 2671              	.LBE128:
 2672              	.LBE127:
 520:Core/Src/AB1805_RK.c ****     {
 2673              		.loc 1 520 5 is_stmt 1 view .LVU672
 516:Core/Src/AB1805_RK.c **** 
 2674              		.loc 1 516 10 is_stmt 0 view .LVU673
 2675 0012 0120     		movs	r0, #1
 2676              	.LVL313:
 520:Core/Src/AB1805_RK.c ****     {
 2677              		.loc 1 520 11 view .LVU674
 2678 0014 13E0     		b	.L142
 2679              	.LVL314:
 2680              	.L149:
 2681              	.LBB133:
 526:Core/Src/AB1805_RK.c ****         }
 2682              		.loc 1 526 19 view .LVU675
 2683 0016 2024     		movs	r4, #32
 2684 0018 16E0     		b	.L143
 2685              	.LVL315:
 2686              	.L145:
 533:Core/Src/AB1805_RK.c ****         {
 2687              		.loc 1 533 9 is_stmt 1 view .LVU676
 535:Core/Src/AB1805_RK.c ****         }
 2688              		.loc 1 535 13 view .LVU677
 2689 001a 0022     		movs	r2, #0
 2690 001c 0421     		movs	r1, #4
 2691 001e 3F20     		movs	r0, #63
 2692              	.LVL316:
 535:Core/Src/AB1805_RK.c ****         }
 2693              		.loc 1 535 13 is_stmt 0 view .LVU678
 2694 0020 FFF7FEFF 		bl	clearRegisterBit
 2695              	.LVL317:
 2696              	.L146:
 542:Core/Src/AB1805_RK.c ****         if (!bResult)
 2697              		.loc 1 542 9 is_stmt 1 view .LVU679
 542:Core/Src/AB1805_RK.c ****         if (!bResult)
 2698              		.loc 1 542 56 is_stmt 0 view .LVU680
 2699 0024 7F20     		movs	r0, #127
 2700 0026 2840     		ands	r0, r5
 542:Core/Src/AB1805_RK.c ****         if (!bResult)
 2701              		.loc 1 542 19 view .LVU681
 2702 0028 E2B2     		uxtb	r2, r4
 2703 002a 8038     		subs	r0, r0, #128
 2704 002c C0B2     		uxtb	r0, r0
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 118


 2705 002e 3900     		movs	r1, r7
 2706 0030 FFF7FEFF 		bl	readRegisters
 2707              	.LVL318:
 543:Core/Src/AB1805_RK.c ****         {
 2708              		.loc 1 543 9 is_stmt 1 view .LVU682
 543:Core/Src/AB1805_RK.c ****         {
 2709              		.loc 1 543 12 is_stmt 0 view .LVU683
 2710 0034 0028     		cmp	r0, #0
 2711 0036 15D0     		beq	.L147
 547:Core/Src/AB1805_RK.c ****         dataLen -= count;
 2712              		.loc 1 547 9 is_stmt 1 view .LVU684
 547:Core/Src/AB1805_RK.c ****         dataLen -= count;
 2713              		.loc 1 547 17 is_stmt 0 view .LVU685
 2714 0038 2D19     		adds	r5, r5, r4
 2715              	.LVL319:
 548:Core/Src/AB1805_RK.c ****         data += count;
 2716              		.loc 1 548 9 is_stmt 1 view .LVU686
 548:Core/Src/AB1805_RK.c ****         data += count;
 2717              		.loc 1 548 17 is_stmt 0 view .LVU687
 2718 003a 361B     		subs	r6, r6, r4
 2719              	.LVL320:
 549:Core/Src/AB1805_RK.c ****     }
 2720              		.loc 1 549 9 is_stmt 1 view .LVU688
 549:Core/Src/AB1805_RK.c ****     }
 2721              		.loc 1 549 14 is_stmt 0 view .LVU689
 2722 003c 3F19     		adds	r7, r7, r4
 2723              	.LVL321:
 2724              	.L142:
 549:Core/Src/AB1805_RK.c ****     }
 2725              		.loc 1 549 14 view .LVU690
 2726              	.LBE133:
 520:Core/Src/AB1805_RK.c ****     {
 2727              		.loc 1 520 20 is_stmt 1 view .LVU691
 2728 003e 002E     		cmp	r6, #0
 2729 0040 10D0     		beq	.L147
 2730              	.LBB134:
 522:Core/Src/AB1805_RK.c ****         if (count > 32)
 2731              		.loc 1 522 9 view .LVU692
 2732              	.LVL322:
 523:Core/Src/AB1805_RK.c ****         {
 2733              		.loc 1 523 9 view .LVU693
 523:Core/Src/AB1805_RK.c ****         {
 2734              		.loc 1 523 12 is_stmt 0 view .LVU694
 2735 0042 202E     		cmp	r6, #32
 2736 0044 E7D8     		bhi	.L149
 522:Core/Src/AB1805_RK.c ****         if (count > 32)
 2737              		.loc 1 522 16 view .LVU695
 2738 0046 3400     		movs	r4, r6
 2739              	.L143:
 2740              	.LVL323:
 528:Core/Src/AB1805_RK.c ****         {
 2741              		.loc 1 528 9 is_stmt 1 view .LVU696
 528:Core/Src/AB1805_RK.c ****         {
 2742              		.loc 1 528 12 is_stmt 0 view .LVU697
 2743 0048 7F2D     		cmp	r5, #127
 2744 004a 05D8     		bhi	.L144
 528:Core/Src/AB1805_RK.c ****         {
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 119


 2745              		.loc 1 528 42 discriminator 1 view .LVU698
 2746 004c 2B19     		adds	r3, r5, r4
 528:Core/Src/AB1805_RK.c ****         {
 2747              		.loc 1 528 29 discriminator 1 view .LVU699
 2748 004e 802B     		cmp	r3, #128
 2749 0050 E3D9     		bls	.L145
 531:Core/Src/AB1805_RK.c ****         }
 2750              		.loc 1 531 13 is_stmt 1 view .LVU700
 531:Core/Src/AB1805_RK.c ****         }
 2751              		.loc 1 531 19 is_stmt 0 view .LVU701
 2752 0052 8024     		movs	r4, #128
 2753              	.LVL324:
 531:Core/Src/AB1805_RK.c ****         }
 2754              		.loc 1 531 19 view .LVU702
 2755 0054 641B     		subs	r4, r4, r5
 2756              	.LVL325:
 531:Core/Src/AB1805_RK.c ****         }
 2757              		.loc 1 531 19 view .LVU703
 2758 0056 E0E7     		b	.L145
 2759              	.L144:
 533:Core/Src/AB1805_RK.c ****         {
 2760              		.loc 1 533 9 is_stmt 1 view .LVU704
 539:Core/Src/AB1805_RK.c ****         }
 2761              		.loc 1 539 13 view .LVU705
 2762 0058 0022     		movs	r2, #0
 2763 005a 0421     		movs	r1, #4
 2764 005c 3F20     		movs	r0, #63
 2765              	.LVL326:
 539:Core/Src/AB1805_RK.c ****         }
 2766              		.loc 1 539 13 is_stmt 0 view .LVU706
 2767 005e FFF7FEFF 		bl	setRegisterBit
 2768              	.LVL327:
 2769 0062 DFE7     		b	.L146
 2770              	.LVL328:
 2771              	.L147:
 539:Core/Src/AB1805_RK.c ****         }
 2772              		.loc 1 539 13 view .LVU707
 2773              	.LBE134:
 552:Core/Src/AB1805_RK.c **** 
 2774              		.loc 1 552 5 is_stmt 1 view .LVU708
 2775              	.LBB135:
 2776              	.LBI135:
 713:Core/Src/AB1805_RK.c **** {
 2777              		.loc 1 713 20 view .LVU709
 715:Core/Src/AB1805_RK.c **** }
 2778              		.loc 1 715 5 view .LVU710
 2779              	.LBB136:
 2780              	.LBI136:
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2781              		.loc 3 1234 27 view .LVU711
 2782              	.LBB137:
 2783              		.loc 3 1236 3 view .LVU712
 2784              		.syntax divided
 2785              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2786 0064 88F31088 		MSR primask, r8
 2787              	@ 0 "" 2
 2788              	.LVL329:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 120


 2789              		.loc 3 1236 3 is_stmt 0 view .LVU713
 2790              		.thumb
 2791              		.syntax unified
 2792              	.LBE137:
 2793              	.LBE136:
 2794              	.LBE135:
 554:Core/Src/AB1805_RK.c **** }
 2795              		.loc 1 554 5 is_stmt 1 view .LVU714
 555:Core/Src/AB1805_RK.c **** 
 2796              		.loc 1 555 1 is_stmt 0 view .LVU715
 2797              		@ sp needed
 2798              	.LVL330:
 2799              	.LVL331:
 2800              	.LVL332:
 2801              	.LVL333:
 555:Core/Src/AB1805_RK.c **** 
 2802              		.loc 1 555 1 view .LVU716
 2803 0068 80BC     		pop	{r7}
 2804 006a B846     		mov	r8, r7
 2805 006c F0BD     		pop	{r4, r5, r6, r7, pc}
 2806              		.cfi_endproc
 2807              	.LFE518:
 2809              		.section	.text.writeRegisters,"ax",%progbits
 2810              		.align	1
 2811              		.global	writeRegisters
 2812              		.syntax unified
 2813              		.code	16
 2814              		.thumb_func
 2816              	writeRegisters:
 2817              	.LVL334:
 2818              	.LFB531:
 747:Core/Src/AB1805_RK.c **** 
 748:Core/Src/AB1805_RK.c **** // ##########################################################################
 749:Core/Src/AB1805_RK.c **** bool writeRegisters(uint8_t offset, uint8_t *buf, uint8_t length)
 750:Core/Src/AB1805_RK.c **** {
 2819              		.loc 1 750 1 is_stmt 1 view -0
 2820              		.cfi_startproc
 2821              		@ args = 0, pretend = 0, frame = 0
 2822              		@ frame_needed = 0, uses_anonymous_args = 0
 2823              		.loc 1 750 1 is_stmt 0 view .LVU718
 2824 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2825              	.LCFI27:
 2826              		.cfi_def_cfa_offset 24
 2827              		.cfi_offset 3, -24
 2828              		.cfi_offset 4, -20
 2829              		.cfi_offset 5, -16
 2830              		.cfi_offset 6, -12
 2831              		.cfi_offset 7, -8
 2832              		.cfi_offset 14, -4
 2833 0002 0E00     		movs	r6, r1
 2834 0004 1500     		movs	r5, r2
 751:Core/Src/AB1805_RK.c ****     uint8_t address = AB1815_SPI_WRITE(offset);
 2835              		.loc 1 751 5 is_stmt 1 view .LVU719
 2836              		.loc 1 751 13 is_stmt 0 view .LVU720
 2837 0006 8023     		movs	r3, #128
 2838 0008 5B42     		rsbs	r3, r3, #0
 2839 000a 1843     		orrs	r0, r3
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 121


 2840              	.LVL335:
 2841              		.loc 1 751 13 view .LVU721
 2842 000c C0B2     		uxtb	r0, r0
 2843              	.LVL336:
 752:Core/Src/AB1805_RK.c **** 
 753:Core/Src/AB1805_RK.c ****     uint32_t primask_bit = utils_enter_critical_section();
 2844              		.loc 1 753 5 is_stmt 1 view .LVU722
 2845              	.LBB138:
 2846              	.LBI138:
 706:Core/Src/AB1805_RK.c **** {
 2847              		.loc 1 706 24 view .LVU723
 2848              	.LBB139:
 708:Core/Src/AB1805_RK.c ****     __disable_irq();
 2849              		.loc 1 708 5 view .LVU724
 2850              	.LBB140:
 2851              	.LBI140:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2852              		.loc 3 1204 31 view .LVU725
 2853              	.LBB141:
1206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2854              		.loc 3 1206 3 view .LVU726
1208:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2855              		.loc 3 1208 3 view .LVU727
 2856              		.syntax divided
 2857              	@ 1208 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2858 000e EFF31087 		MRS r7, primask
 2859              	@ 0 "" 2
 2860              	.LVL337:
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2861              		.loc 3 1209 3 view .LVU728
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2862              		.loc 3 1209 3 is_stmt 0 view .LVU729
 2863              		.thumb
 2864              		.syntax unified
 2865              	.LBE141:
 2866              	.LBE140:
 709:Core/Src/AB1805_RK.c ****     return primask_bit;
 2867              		.loc 1 709 5 is_stmt 1 view .LVU730
 2868              	.LBB142:
 2869              	.LBI142:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2870              		.loc 3 960 27 view .LVU731
 2871              	.LBB143:
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2872              		.loc 3 962 3 view .LVU732
 2873              		.syntax divided
 2874              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2875 0012 72B6     		cpsid i
 2876              	@ 0 "" 2
 2877              		.thumb
 2878              		.syntax unified
 2879              	.LBE143:
 2880              	.LBE142:
 710:Core/Src/AB1805_RK.c **** }
 2881              		.loc 1 710 5 view .LVU733
 2882              	.LVL338:
 710:Core/Src/AB1805_RK.c **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 122


 2883              		.loc 1 710 5 is_stmt 0 view .LVU734
 2884              	.LBE139:
 2885              	.LBE138:
 754:Core/Src/AB1805_RK.c ****     spi_select_slave(0);
 2886              		.loc 1 754 5 is_stmt 1 view .LVU735
 2887              	.LBB144:
 2888              	.LBI144:
  43:Core/Src/AB1805_RK.c **** {
 2889              		.loc 1 43 20 view .LVU736
 2890              	.LBB145:
  45:Core/Src/AB1805_RK.c ****     {
 2891              		.loc 1 45 5 view .LVU737
  51:Core/Src/AB1805_RK.c ****     }
 2892              		.loc 1 51 9 view .LVU738
 2893 0014 104B     		ldr	r3, .L155
 2894 0016 8022     		movs	r2, #128
 2895              	.LVL339:
  51:Core/Src/AB1805_RK.c ****     }
 2896              		.loc 1 51 9 is_stmt 0 view .LVU739
 2897 0018 D205     		lsls	r2, r2, #23
 2898 001a 9A61     		str	r2, [r3, #24]
 2899              	.LVL340:
  51:Core/Src/AB1805_RK.c ****     }
 2900              		.loc 1 51 9 view .LVU740
 2901              	.LBE145:
 2902              	.LBE144:
 755:Core/Src/AB1805_RK.c **** 
 756:Core/Src/AB1805_RK.c ****     uint8_t i = 0;
 2903              		.loc 1 756 5 is_stmt 1 view .LVU741
 757:Core/Src/AB1805_RK.c ****     if (!((SPI1)->CR1 & SPI_CR1_SPE))
 2904              		.loc 1 757 5 view .LVU742
 2905              		.loc 1 757 17 is_stmt 0 view .LVU743
 2906 001c 0F4B     		ldr	r3, .L155+4
 2907 001e 1B68     		ldr	r3, [r3]
 2908              		.loc 1 757 8 view .LVU744
 2909 0020 5B06     		lsls	r3, r3, #25
 2910 0022 04D4     		bmi	.L151
 758:Core/Src/AB1805_RK.c ****     {
 759:Core/Src/AB1805_RK.c ****         SPI1->CR1 |= SPI_CR1_SPE;
 2911              		.loc 1 759 9 is_stmt 1 view .LVU745
 2912              		.loc 1 759 13 is_stmt 0 view .LVU746
 2913 0024 0D4A     		ldr	r2, .L155+4
 2914 0026 1368     		ldr	r3, [r2]
 2915              		.loc 1 759 19 view .LVU747
 2916 0028 4021     		movs	r1, #64
 2917              	.LVL341:
 2918              		.loc 1 759 19 view .LVU748
 2919 002a 0B43     		orrs	r3, r1
 2920 002c 1360     		str	r3, [r2]
 2921              	.L151:
 760:Core/Src/AB1805_RK.c ****     }
 761:Core/Src/AB1805_RK.c **** 
 762:Core/Src/AB1805_RK.c ****     SPI1_SendByte(address);
 2922              		.loc 1 762 5 is_stmt 1 view .LVU749
 2923 002e FFF7FEFF 		bl	SPI1_SendByte
 2924              	.LVL342:
 763:Core/Src/AB1805_RK.c ****     while (i < length)
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 123


 2925              		.loc 1 763 5 view .LVU750
 756:Core/Src/AB1805_RK.c ****     if (!((SPI1)->CR1 & SPI_CR1_SPE))
 2926              		.loc 1 756 13 is_stmt 0 view .LVU751
 2927 0032 0023     		movs	r3, #0
 2928              		.loc 1 763 11 view .LVU752
 2929 0034 05E0     		b	.L152
 2930              	.LVL343:
 2931              	.L153:
 764:Core/Src/AB1805_RK.c ****     {
 765:Core/Src/AB1805_RK.c ****         SPI1_SendByte(buf[i++]); // Send Data to write
 2932              		.loc 1 765 9 is_stmt 1 view .LVU753
 2933              		.loc 1 765 28 is_stmt 0 view .LVU754
 2934 0036 5C1C     		adds	r4, r3, #1
 2935 0038 E4B2     		uxtb	r4, r4
 2936              	.LVL344:
 2937              		.loc 1 765 9 view .LVU755
 2938 003a F05C     		ldrb	r0, [r6, r3]
 2939 003c FFF7FEFF 		bl	SPI1_SendByte
 2940              	.LVL345:
 2941              		.loc 1 765 28 view .LVU756
 2942 0040 2300     		movs	r3, r4
 2943              	.LVL346:
 2944              	.L152:
 763:Core/Src/AB1805_RK.c ****     {
 2945              		.loc 1 763 14 is_stmt 1 view .LVU757
 2946 0042 AB42     		cmp	r3, r5
 2947 0044 F7D3     		bcc	.L153
 766:Core/Src/AB1805_RK.c ****     }
 767:Core/Src/AB1805_RK.c **** 
 768:Core/Src/AB1805_RK.c ****     spi_select_slave(1); // set 1
 2948              		.loc 1 768 5 view .LVU758
 2949              	.LVL347:
 2950              	.LBB146:
 2951              	.LBI146:
  43:Core/Src/AB1805_RK.c **** {
 2952              		.loc 1 43 20 view .LVU759
 2953              	.LBB147:
  45:Core/Src/AB1805_RK.c ****     {
 2954              		.loc 1 45 5 view .LVU760
  47:Core/Src/AB1805_RK.c ****     }
 2955              		.loc 1 47 9 view .LVU761
 2956 0046 044B     		ldr	r3, .L155
 2957              	.LVL348:
  47:Core/Src/AB1805_RK.c ****     }
 2958              		.loc 1 47 9 is_stmt 0 view .LVU762
 2959 0048 8022     		movs	r2, #128
 2960 004a D201     		lsls	r2, r2, #7
 2961 004c 9A61     		str	r2, [r3, #24]
 2962              	.LVL349:
  47:Core/Src/AB1805_RK.c ****     }
 2963              		.loc 1 47 9 view .LVU763
 2964              	.LBE147:
 2965              	.LBE146:
 769:Core/Src/AB1805_RK.c ****     utils_exit_critical_section(primask_bit);
 2966              		.loc 1 769 5 is_stmt 1 view .LVU764
 2967              	.LBB148:
 2968              	.LBI148:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 124


 713:Core/Src/AB1805_RK.c **** {
 2969              		.loc 1 713 20 view .LVU765
 715:Core/Src/AB1805_RK.c **** }
 2970              		.loc 1 715 5 view .LVU766
 2971              	.LBB149:
 2972              	.LBI149:
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2973              		.loc 3 1234 27 view .LVU767
 2974              	.LBB150:
 2975              		.loc 3 1236 3 view .LVU768
 2976              		.syntax divided
 2977              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2978 004e 87F31088 		MSR primask, r7
 2979              	@ 0 "" 2
 2980              	.LVL350:
 2981              		.loc 3 1236 3 is_stmt 0 view .LVU769
 2982              		.thumb
 2983              		.syntax unified
 2984              	.LBE150:
 2985              	.LBE149:
 2986              	.LBE148:
 770:Core/Src/AB1805_RK.c ****     return true;
 2987              		.loc 1 770 5 is_stmt 1 view .LVU770
 771:Core/Src/AB1805_RK.c **** };
 2988              		.loc 1 771 1 is_stmt 0 view .LVU771
 2989 0052 0120     		movs	r0, #1
 2990              		@ sp needed
 2991              	.LVL351:
 2992              	.LVL352:
 2993              		.loc 1 771 1 view .LVU772
 2994 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2995              	.L156:
 2996 0056 C046     		.align	2
 2997              	.L155:
 2998 0058 00040050 		.word	1342178304
 2999 005c 00300140 		.word	1073819648
 3000              		.cfi_endproc
 3001              	.LFE531:
 3003              		.section	.text.writeRam,"ax",%progbits
 3004              		.align	1
 3005              		.global	writeRam
 3006              		.syntax unified
 3007              		.code	16
 3008              		.thumb_func
 3010              	writeRam:
 3011              	.LVL353:
 3012              	.LFB519:
 565:Core/Src/AB1805_RK.c ****     bool bResult = true;
 3013              		.loc 1 565 1 is_stmt 1 view -0
 3014              		.cfi_startproc
 3015              		@ args = 0, pretend = 0, frame = 0
 3016              		@ frame_needed = 0, uses_anonymous_args = 0
 565:Core/Src/AB1805_RK.c ****     bool bResult = true;
 3017              		.loc 1 565 1 is_stmt 0 view .LVU774
 3018 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3019              	.LCFI28:
 3020              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 125


 3021              		.cfi_offset 3, -24
 3022              		.cfi_offset 4, -20
 3023              		.cfi_offset 5, -16
 3024              		.cfi_offset 6, -12
 3025              		.cfi_offset 7, -8
 3026              		.cfi_offset 14, -4
 3027 0002 0500     		movs	r5, r0
 3028 0004 0F00     		movs	r7, r1
 3029 0006 1600     		movs	r6, r2
 566:Core/Src/AB1805_RK.c **** 
 3030              		.loc 1 566 5 is_stmt 1 view .LVU775
 3031              	.LVL354:
 568:Core/Src/AB1805_RK.c ****     {
 3032              		.loc 1 568 5 view .LVU776
 566:Core/Src/AB1805_RK.c **** 
 3033              		.loc 1 566 10 is_stmt 0 view .LVU777
 3034 0008 0120     		movs	r0, #1
 3035              	.LVL355:
 568:Core/Src/AB1805_RK.c ****     {
 3036              		.loc 1 568 11 view .LVU778
 3037 000a 13E0     		b	.L158
 3038              	.LVL356:
 3039              	.L165:
 3040              	.LBB151:
 574:Core/Src/AB1805_RK.c ****         }
 3041              		.loc 1 574 19 view .LVU779
 3042 000c 1F24     		movs	r4, #31
 3043 000e 16E0     		b	.L159
 3044              	.LVL357:
 3045              	.L161:
 581:Core/Src/AB1805_RK.c ****         {
 3046              		.loc 1 581 9 is_stmt 1 view .LVU780
 583:Core/Src/AB1805_RK.c ****         }
 3047              		.loc 1 583 13 view .LVU781
 3048 0010 0022     		movs	r2, #0
 3049 0012 0421     		movs	r1, #4
 3050 0014 3F20     		movs	r0, #63
 3051              	.LVL358:
 583:Core/Src/AB1805_RK.c ****         }
 3052              		.loc 1 583 13 is_stmt 0 view .LVU782
 3053 0016 FFF7FEFF 		bl	clearRegisterBit
 3054              	.LVL359:
 3055              	.L162:
 590:Core/Src/AB1805_RK.c ****         if (!bResult)
 3056              		.loc 1 590 9 is_stmt 1 view .LVU783
 590:Core/Src/AB1805_RK.c ****         if (!bResult)
 3057              		.loc 1 590 57 is_stmt 0 view .LVU784
 3058 001a 7F20     		movs	r0, #127
 3059 001c 2840     		ands	r0, r5
 590:Core/Src/AB1805_RK.c ****         if (!bResult)
 3060              		.loc 1 590 19 view .LVU785
 3061 001e E2B2     		uxtb	r2, r4
 3062 0020 8038     		subs	r0, r0, #128
 3063 0022 C0B2     		uxtb	r0, r0
 3064 0024 3900     		movs	r1, r7
 3065 0026 FFF7FEFF 		bl	writeRegisters
 3066              	.LVL360:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 126


 591:Core/Src/AB1805_RK.c ****         {
 3067              		.loc 1 591 9 is_stmt 1 view .LVU786
 591:Core/Src/AB1805_RK.c ****         {
 3068              		.loc 1 591 12 is_stmt 0 view .LVU787
 3069 002a 0028     		cmp	r0, #0
 3070 002c 15D0     		beq	.L163
 595:Core/Src/AB1805_RK.c ****         dataLen -= count;
 3071              		.loc 1 595 9 is_stmt 1 view .LVU788
 595:Core/Src/AB1805_RK.c ****         dataLen -= count;
 3072              		.loc 1 595 17 is_stmt 0 view .LVU789
 3073 002e 2D19     		adds	r5, r5, r4
 3074              	.LVL361:
 596:Core/Src/AB1805_RK.c ****         data += count;
 3075              		.loc 1 596 9 is_stmt 1 view .LVU790
 596:Core/Src/AB1805_RK.c ****         data += count;
 3076              		.loc 1 596 17 is_stmt 0 view .LVU791
 3077 0030 361B     		subs	r6, r6, r4
 3078              	.LVL362:
 597:Core/Src/AB1805_RK.c ****     }
 3079              		.loc 1 597 9 is_stmt 1 view .LVU792
 597:Core/Src/AB1805_RK.c ****     }
 3080              		.loc 1 597 14 is_stmt 0 view .LVU793
 3081 0032 3F19     		adds	r7, r7, r4
 3082              	.LVL363:
 3083              	.L158:
 597:Core/Src/AB1805_RK.c ****     }
 3084              		.loc 1 597 14 view .LVU794
 3085              	.LBE151:
 568:Core/Src/AB1805_RK.c ****     {
 3086              		.loc 1 568 20 is_stmt 1 view .LVU795
 3087 0034 002E     		cmp	r6, #0
 3088 0036 10D0     		beq	.L163
 3089              	.LBB152:
 570:Core/Src/AB1805_RK.c ****         if (count > 31)
 3090              		.loc 1 570 9 view .LVU796
 3091              	.LVL364:
 571:Core/Src/AB1805_RK.c ****         {
 3092              		.loc 1 571 9 view .LVU797
 571:Core/Src/AB1805_RK.c ****         {
 3093              		.loc 1 571 12 is_stmt 0 view .LVU798
 3094 0038 1F2E     		cmp	r6, #31
 3095 003a E7D8     		bhi	.L165
 570:Core/Src/AB1805_RK.c ****         if (count > 31)
 3096              		.loc 1 570 16 view .LVU799
 3097 003c 3400     		movs	r4, r6
 3098              	.L159:
 3099              	.LVL365:
 576:Core/Src/AB1805_RK.c ****         {
 3100              		.loc 1 576 9 is_stmt 1 view .LVU800
 576:Core/Src/AB1805_RK.c ****         {
 3101              		.loc 1 576 12 is_stmt 0 view .LVU801
 3102 003e 7F2D     		cmp	r5, #127
 3103 0040 05D8     		bhi	.L160
 576:Core/Src/AB1805_RK.c ****         {
 3104              		.loc 1 576 42 discriminator 1 view .LVU802
 3105 0042 2B19     		adds	r3, r5, r4
 576:Core/Src/AB1805_RK.c ****         {
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 127


 3106              		.loc 1 576 29 discriminator 1 view .LVU803
 3107 0044 802B     		cmp	r3, #128
 3108 0046 E3D9     		bls	.L161
 579:Core/Src/AB1805_RK.c ****         }
 3109              		.loc 1 579 13 is_stmt 1 view .LVU804
 579:Core/Src/AB1805_RK.c ****         }
 3110              		.loc 1 579 19 is_stmt 0 view .LVU805
 3111 0048 8024     		movs	r4, #128
 3112              	.LVL366:
 579:Core/Src/AB1805_RK.c ****         }
 3113              		.loc 1 579 19 view .LVU806
 3114 004a 641B     		subs	r4, r4, r5
 3115              	.LVL367:
 579:Core/Src/AB1805_RK.c ****         }
 3116              		.loc 1 579 19 view .LVU807
 3117 004c E0E7     		b	.L161
 3118              	.L160:
 581:Core/Src/AB1805_RK.c ****         {
 3119              		.loc 1 581 9 is_stmt 1 view .LVU808
 587:Core/Src/AB1805_RK.c ****         }
 3120              		.loc 1 587 13 view .LVU809
 3121 004e 0022     		movs	r2, #0
 3122 0050 0421     		movs	r1, #4
 3123 0052 3F20     		movs	r0, #63
 3124              	.LVL368:
 587:Core/Src/AB1805_RK.c ****         }
 3125              		.loc 1 587 13 is_stmt 0 view .LVU810
 3126 0054 FFF7FEFF 		bl	setRegisterBit
 3127              	.LVL369:
 3128 0058 DFE7     		b	.L162
 3129              	.LVL370:
 3130              	.L163:
 587:Core/Src/AB1805_RK.c ****         }
 3131              		.loc 1 587 13 view .LVU811
 3132              	.LBE152:
 600:Core/Src/AB1805_RK.c **** }
 3133              		.loc 1 600 5 is_stmt 1 view .LVU812
 601:Core/Src/AB1805_RK.c **** 
 3134              		.loc 1 601 1 is_stmt 0 view .LVU813
 3135              		@ sp needed
 3136              	.LVL371:
 3137              	.LVL372:
 3138              	.LVL373:
 601:Core/Src/AB1805_RK.c **** 
 3139              		.loc 1 601 1 view .LVU814
 3140 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3141              		.cfi_endproc
 3142              	.LFE519:
 3144              		.section	.rodata.eraseRam.str1.4,"aMS",%progbits,1
 3145              		.align	2
 3146              	.LC47:
 3147 0000 65726173 		.ascii	"erase failed addr=%u\012\000"
 3147      65206661 
 3147      696C6564 
 3147      20616464 
 3147      723D2575 
 3148              		.section	.text.eraseRam,"ax",%progbits
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 128


 3149              		.align	1
 3150              		.global	eraseRam
 3151              		.syntax unified
 3152              		.code	16
 3153              		.thumb_func
 3155              	eraseRam:
 3156              	.LVL374:
 3157              	.LFB517:
 497:Core/Src/AB1805_RK.c ****     bool bResult = true;
 3158              		.loc 1 497 1 is_stmt 1 view -0
 3159              		.cfi_startproc
 3160              		@ args = 0, pretend = 0, frame = 16
 3161              		@ frame_needed = 0, uses_anonymous_args = 0
 497:Core/Src/AB1805_RK.c ****     bool bResult = true;
 3162              		.loc 1 497 1 is_stmt 0 view .LVU816
 3163 0000 70B5     		push	{r4, r5, r6, lr}
 3164              	.LCFI29:
 3165              		.cfi_def_cfa_offset 16
 3166              		.cfi_offset 4, -16
 3167              		.cfi_offset 5, -12
 3168              		.cfi_offset 6, -8
 3169              		.cfi_offset 14, -4
 3170 0002 84B0     		sub	sp, sp, #16
 3171              	.LCFI30:
 3172              		.cfi_def_cfa_offset 32
 498:Core/Src/AB1805_RK.c ****     uint8_t array[16];
 3173              		.loc 1 498 5 is_stmt 1 view .LVU817
 3174              	.LVL375:
 499:Core/Src/AB1805_RK.c **** 
 3175              		.loc 1 499 5 view .LVU818
 501:Core/Src/AB1805_RK.c ****     for (size_t ii = 0; ii < 16; ii++)
 3176              		.loc 1 501 5 view .LVU819
 3177 0004 1022     		movs	r2, #16
 3178 0006 0021     		movs	r1, #0
 3179 0008 6846     		mov	r0, sp
 3180              	.LVL376:
 501:Core/Src/AB1805_RK.c ****     for (size_t ii = 0; ii < 16; ii++)
 3181              		.loc 1 501 5 is_stmt 0 view .LVU820
 3182 000a FFF7FEFF 		bl	memset
 3183              	.LVL377:
 502:Core/Src/AB1805_RK.c ****     {
 3184              		.loc 1 502 5 is_stmt 1 view .LVU821
 3185              	.LBB153:
 502:Core/Src/AB1805_RK.c ****     {
 3186              		.loc 1 502 10 view .LVU822
 502:Core/Src/AB1805_RK.c ****     {
 3187              		.loc 1 502 17 is_stmt 0 view .LVU823
 3188 000e 0025     		movs	r5, #0
 3189              	.LBE153:
 498:Core/Src/AB1805_RK.c ****     uint8_t array[16];
 3190              		.loc 1 498 10 view .LVU824
 3191 0010 0124     		movs	r4, #1
 3192              	.LVL378:
 3193              	.L167:
 3194              	.LBB154:
 502:Core/Src/AB1805_RK.c ****     {
 3195              		.loc 1 502 28 is_stmt 1 discriminator 1 view .LVU825
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 129


 3196 0012 0F2D     		cmp	r5, #15
 3197 0014 0ED8     		bhi	.L169
 504:Core/Src/AB1805_RK.c ****         if (!bResult)
 3198              		.loc 1 504 9 view .LVU826
 504:Core/Src/AB1805_RK.c ****         if (!bResult)
 3199              		.loc 1 504 19 is_stmt 0 view .LVU827
 3200 0016 2E01     		lsls	r6, r5, #4
 3201 0018 0023     		movs	r3, #0
 3202 001a 1022     		movs	r2, #16
 3203 001c 6946     		mov	r1, sp
 3204 001e 3000     		movs	r0, r6
 3205 0020 FFF7FEFF 		bl	writeRam
 3206              	.LVL379:
 3207 0024 041E     		subs	r4, r0, #0
 3208              	.LVL380:
 505:Core/Src/AB1805_RK.c ****         {
 3209              		.loc 1 505 9 is_stmt 1 view .LVU828
 505:Core/Src/AB1805_RK.c ****         {
 3210              		.loc 1 505 12 is_stmt 0 view .LVU829
 3211 0026 01D0     		beq	.L171
 502:Core/Src/AB1805_RK.c ****     {
 3212              		.loc 1 502 36 is_stmt 1 discriminator 2 view .LVU830
 3213 0028 0135     		adds	r5, r5, #1
 3214              	.LVL381:
 502:Core/Src/AB1805_RK.c ****     {
 3215              		.loc 1 502 36 is_stmt 0 discriminator 2 view .LVU831
 3216 002a F2E7     		b	.L167
 3217              	.L171:
 507:Core/Src/AB1805_RK.c ****             break;
 3218              		.loc 1 507 13 is_stmt 1 view .LVU832
 3219 002c 0348     		ldr	r0, .L172
 3220              	.LVL382:
 507:Core/Src/AB1805_RK.c ****             break;
 3221              		.loc 1 507 13 is_stmt 0 view .LVU833
 3222 002e 3100     		movs	r1, r6
 3223 0030 FFF7FEFF 		bl	printf_
 3224              	.LVL383:
 508:Core/Src/AB1805_RK.c ****         }
 3225              		.loc 1 508 13 is_stmt 1 view .LVU834
 3226              	.L169:
 508:Core/Src/AB1805_RK.c ****         }
 3227              		.loc 1 508 13 is_stmt 0 view .LVU835
 3228              	.LBE154:
 511:Core/Src/AB1805_RK.c **** }
 3229              		.loc 1 511 5 is_stmt 1 view .LVU836
 512:Core/Src/AB1805_RK.c **** 
 3230              		.loc 1 512 1 is_stmt 0 view .LVU837
 3231 0034 2000     		movs	r0, r4
 3232 0036 04B0     		add	sp, sp, #16
 3233              		@ sp needed
 3234              	.LVL384:
 3235              	.LVL385:
 512:Core/Src/AB1805_RK.c **** 
 3236              		.loc 1 512 1 view .LVU838
 3237 0038 70BD     		pop	{r4, r5, r6, pc}
 3238              	.L173:
 3239 003a C046     		.align	2
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 130


 3240              	.L172:
 3241 003c 00000000 		.word	.LC47
 3242              		.cfi_endproc
 3243              	.LFE517:
 3245              		.section	.text.stopWDT,"ax",%progbits
 3246              		.align	1
 3247              		.global	stopWDT
 3248              		.syntax unified
 3249              		.code	16
 3250              		.thumb_func
 3252              	stopWDT:
 3253              	.LFB532:
 772:Core/Src/AB1805_RK.c **** 
 773:Core/Src/AB1805_RK.c **** /**
 774:Core/Src/AB1805_RK.c ****  * @brief Stops the watchdog timer. Useful before entering sleep mode.
 775:Core/Src/AB1805_RK.c ****  *
 776:Core/Src/AB1805_RK.c ****  * This is done automatically right before reset (using the reset system event)
 777:Core/Src/AB1805_RK.c ****  * so the watchdog won't trigger during a firmware update.
 778:Core/Src/AB1805_RK.c ****  */
 779:Core/Src/AB1805_RK.c **** bool stopWDT()
 780:Core/Src/AB1805_RK.c **** {
 3254              		.loc 1 780 1 is_stmt 1 view -0
 3255              		.cfi_startproc
 3256              		@ args = 0, pretend = 0, frame = 0
 3257              		@ frame_needed = 0, uses_anonymous_args = 0
 3258 0000 10B5     		push	{r4, lr}
 3259              	.LCFI31:
 3260              		.cfi_def_cfa_offset 8
 3261              		.cfi_offset 4, -8
 3262              		.cfi_offset 14, -4
 781:Core/Src/AB1805_RK.c ****     return setWDT(0);
 3263              		.loc 1 781 5 view .LVU840
 3264              		.loc 1 781 12 is_stmt 0 view .LVU841
 3265 0002 0020     		movs	r0, #0
 3266 0004 FFF7FEFF 		bl	setWDT
 3267              	.LVL386:
 782:Core/Src/AB1805_RK.c **** }
 3268              		.loc 1 782 1 view .LVU842
 3269              		@ sp needed
 3270 0008 10BD     		pop	{r4, pc}
 3271              		.cfi_endproc
 3272              	.LFE532:
 3274              		.section	.text.resumeWDT,"ax",%progbits
 3275              		.align	1
 3276              		.global	resumeWDT
 3277              		.syntax unified
 3278              		.code	16
 3279              		.thumb_func
 3281              	resumeWDT:
 3282              	.LFB533:
 783:Core/Src/AB1805_RK.c **** 
 784:Core/Src/AB1805_RK.c **** /**
 785:Core/Src/AB1805_RK.c ****  * @brief Resumes watchdog with same settings as before
 786:Core/Src/AB1805_RK.c ****  *
 787:Core/Src/AB1805_RK.c ****  * This is useful after returning from `System.sleep()` in STOP or ULTRA_LOW_POWER
 788:Core/Src/AB1805_RK.c ****  * sleep modes where executinon continues. You may also want to call `updateWakeReason()`.
 789:Core/Src/AB1805_RK.c ****  *
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 131


 790:Core/Src/AB1805_RK.c ****  * It's safe to call resumeWDT() even if the WDT has never been set, it does nothing
 791:Core/Src/AB1805_RK.c ****  * in this case, leaving the watchdog off.
 792:Core/Src/AB1805_RK.c ****  */
 793:Core/Src/AB1805_RK.c **** bool resumeWDT()
 794:Core/Src/AB1805_RK.c **** {
 3283              		.loc 1 794 1 is_stmt 1 view -0
 3284              		.cfi_startproc
 3285              		@ args = 0, pretend = 0, frame = 0
 3286              		@ frame_needed = 0, uses_anonymous_args = 0
 3287 0000 10B5     		push	{r4, lr}
 3288              	.LCFI32:
 3289              		.cfi_def_cfa_offset 8
 3290              		.cfi_offset 4, -8
 3291              		.cfi_offset 14, -4
 795:Core/Src/AB1805_RK.c ****     return setWDT(-1);
 3292              		.loc 1 795 5 view .LVU844
 3293              		.loc 1 795 12 is_stmt 0 view .LVU845
 3294 0002 0120     		movs	r0, #1
 3295 0004 4042     		rsbs	r0, r0, #0
 3296 0006 FFF7FEFF 		bl	setWDT
 3297              	.LVL387:
 796:Core/Src/AB1805_RK.c **** }
 3298              		.loc 1 796 1 view .LVU846
 3299              		@ sp needed
 3300 000a 10BD     		pop	{r4, pc}
 3301              		.cfi_endproc
 3302              	.LFE533:
 3304              		.section	.rodata.__func__.0,"a"
 3305              		.align	2
 3308              	__func__.0:
 3309 0000 53504931 		.ascii	"SPI1_SendByte\000"
 3309      5F53656E 
 3309      64427974 
 3309      6500
 3310              		.global	REG_ALT_RAM
 3311              		.section	.rodata.REG_ALT_RAM,"a"
 3314              	REG_ALT_RAM:
 3315 0000 80       		.byte	-128
 3316              		.global	REG_RAM
 3317              		.section	.rodata.REG_RAM,"a"
 3320              	REG_RAM:
 3321 0000 40       		.byte	64
 3322              		.global	REG_EXT_ADDR_XADS
 3323              		.section	.rodata.REG_EXT_ADDR_XADS,"a"
 3326              	REG_EXT_ADDR_XADS:
 3327 0000 03       		.byte	3
 3328              		.global	REG_EXT_ADDR_XADA
 3329              		.section	.rodata.REG_EXT_ADDR_XADA,"a"
 3332              	REG_EXT_ADDR_XADA:
 3333 0000 04       		.byte	4
 3334              		.global	REG_EXT_ADDR_EXIN
 3335              		.section	.rodata.REG_EXT_ADDR_EXIN,"a"
 3338              	REG_EXT_ADDR_EXIN:
 3339 0000 10       		.byte	16
 3340              		.global	REG_EXT_ADDR_WDIN
 3341              		.section	.rodata.REG_EXT_ADDR_WDIN,"a"
 3344              	REG_EXT_ADDR_WDIN:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 132


 3345 0000 20       		.byte	32
 3346              		.global	REG_EXT_ADDR_BPOL
 3347              		.section	.rodata.REG_EXT_ADDR_BPOL,"a"
 3350              	REG_EXT_ADDR_BPOL:
 3351 0000 40       		.byte	64
 3352              		.global	REG_EXT_ADDR_O4MB
 3353              		.section	.rodata.REG_EXT_ADDR_O4MB,"a"
 3356              	REG_EXT_ADDR_O4MB:
 3357 0000 80       		.byte	-128
 3358              		.global	REG_EXT_ADDR
 3359              		.section	.rodata.REG_EXT_ADDR,"a"
 3362              	REG_EXT_ADDR:
 3363 0000 3F       		.byte	63
 3364              		.global	REG_OCTRL_DEFAULT
 3365              		.section	.rodata.REG_OCTRL_DEFAULT,"a"
 3368              	REG_OCTRL_DEFAULT:
 3369 0000 00       		.space	1
 3370              		.global	REG_OCTRL_O1EN
 3371              		.section	.rodata.REG_OCTRL_O1EN,"a"
 3374              	REG_OCTRL_O1EN:
 3375 0000 01       		.byte	1
 3376              		.global	REG_OCTRL_O3EN
 3377              		.section	.rodata.REG_OCTRL_O3EN,"a"
 3380              	REG_OCTRL_O3EN:
 3381 0000 02       		.byte	2
 3382              		.global	REG_OCTRL_O4EN
 3383              		.section	.rodata.REG_OCTRL_O4EN,"a"
 3386              	REG_OCTRL_O4EN:
 3387 0000 04       		.byte	4
 3388              		.global	REG_OCTRL_RSEN
 3389              		.section	.rodata.REG_OCTRL_RSEN,"a"
 3392              	REG_OCTRL_RSEN:
 3393 0000 08       		.byte	8
 3394              		.global	REG_OCTRL_EXDS
 3395              		.section	.rodata.REG_OCTRL_EXDS,"a"
 3398              	REG_OCTRL_EXDS:
 3399 0000 10       		.byte	16
 3400              		.global	REG_OCTRL_WDDS
 3401              		.section	.rodata.REG_OCTRL_WDDS,"a"
 3404              	REG_OCTRL_WDDS:
 3405 0000 20       		.byte	32
 3406              		.global	REG_OCTRL_EXBM
 3407              		.section	.rodata.REG_OCTRL_EXBM,"a"
 3410              	REG_OCTRL_EXBM:
 3411 0000 40       		.byte	64
 3412              		.global	REG_OCTRL_WDBM
 3413              		.section	.rodata.REG_OCTRL_WDBM,"a"
 3416              	REG_OCTRL_WDBM:
 3417 0000 80       		.byte	-128
 3418              		.global	REG_OCTRL
 3419              		.section	.rodata.REG_OCTRL,"a"
 3422              	REG_OCTRL:
 3423 0000 30       		.byte	48
 3424              		.global	REG_ASTAT_VINIT
 3425              		.section	.rodata.REG_ASTAT_VINIT,"a"
 3428              	REG_ASTAT_VINIT:
 3429 0000 02       		.byte	2
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 133


 3430              		.global	REG_ASTAT_BMIN
 3431              		.section	.rodata.REG_ASTAT_BMIN,"a"
 3434              	REG_ASTAT_BMIN:
 3435 0000 40       		.byte	64
 3436              		.global	REG_ASTAT_BBOD
 3437              		.section	.rodata.REG_ASTAT_BBOD,"a"
 3440              	REG_ASTAT_BBOD:
 3441 0000 80       		.byte	-128
 3442              		.global	REG_ASTAT
 3443              		.section	.rodata.REG_ASTAT,"a"
 3446              	REG_ASTAT:
 3447 0000 2F       		.byte	47
 3448              		.global	REG_ID6
 3449              		.section	.rodata.REG_ID6,"a"
 3452              	REG_ID6:
 3453 0000 2E       		.byte	46
 3454              		.global	REG_ID5
 3455              		.section	.rodata.REG_ID5,"a"
 3458              	REG_ID5:
 3459 0000 2D       		.byte	45
 3460              		.global	REG_ID4
 3461              		.section	.rodata.REG_ID4,"a"
 3464              	REG_ID4:
 3465 0000 2C       		.byte	44
 3466              		.global	REG_ID3
 3467              		.section	.rodata.REG_ID3,"a"
 3470              	REG_ID3:
 3471 0000 2B       		.byte	43
 3472              		.global	REG_ID2
 3473              		.section	.rodata.REG_ID2,"a"
 3476              	REG_ID2:
 3477 0000 2A       		.byte	42
 3478              		.global	REG_ID1_ABXX15
 3479              		.section	.rodata.REG_ID1_ABXX15,"a"
 3482              	REG_ID1_ABXX15:
 3483 0000 05       		.byte	5
 3484              		.global	REG_ID1_ABXX05
 3485              		.section	.rodata.REG_ID1_ABXX05,"a"
 3488              	REG_ID1_ABXX05:
 3489 0000 05       		.byte	5
 3490              		.global	REG_ID1
 3491              		.section	.rodata.REG_ID1,"a"
 3494              	REG_ID1:
 3495 0000 29       		.byte	41
 3496              		.global	REG_ID0_AB18XX
 3497              		.section	.rodata.REG_ID0_AB18XX,"a"
 3500              	REG_ID0_AB18XX:
 3501 0000 18       		.byte	24
 3502              		.global	REG_ID0_AB08XX
 3503              		.section	.rodata.REG_ID0_AB08XX,"a"
 3506              	REG_ID0_AB08XX:
 3507 0000 18       		.byte	24
 3508              		.global	REG_ID0
 3509              		.section	.rodata.REG_ID0,"a"
 3512              	REG_ID0:
 3513 0000 28       		.byte	40
 3514              		.global	REG_BATMODE_IO_IOBM
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 134


 3515              		.section	.rodata.REG_BATMODE_IO_IOBM,"a"
 3518              	REG_BATMODE_IO_IOBM:
 3519 0000 80       		.byte	-128
 3520              		.global	REG_BATMODE_IO_DEFAULT
 3521              		.section	.rodata.REG_BATMODE_IO_DEFAULT,"a"
 3524              	REG_BATMODE_IO_DEFAULT:
 3525 0000 80       		.byte	-128
 3526              		.global	REG_BATMODE_IO
 3527              		.section	.rodata.REG_BATMODE_IO,"a"
 3530              	REG_BATMODE_IO:
 3531 0000 27       		.byte	39
 3532              		.global	REG_AFCTRL_DEFAULT
 3533              		.section	.rodata.REG_AFCTRL_DEFAULT,"a"
 3536              	REG_AFCTRL_DEFAULT:
 3537 0000 00       		.space	1
 3538              		.global	REG_AFCTRL_DISABLE
 3539              		.section	.rodata.REG_AFCTRL_DISABLE,"a"
 3542              	REG_AFCTRL_DISABLE:
 3543 0000 00       		.space	1
 3544              		.global	REG_AFCTRL_ENABLE
 3545              		.section	.rodata.REG_AFCTRL_ENABLE,"a"
 3548              	REG_AFCTRL_ENABLE:
 3549 0000 A0       		.byte	-96
 3550              		.global	REG_AFCTRL
 3551              		.section	.rodata.REG_AFCTRL,"a"
 3554              	REG_AFCTRL:
 3555 0000 26       		.byte	38
 3556              		.global	REG_BREF_CTRL_14_16
 3557              		.section	.rodata.REG_BREF_CTRL_14_16,"a"
 3560              	REG_BREF_CTRL_14_16:
 3561 0000 F0       		.byte	-16
 3562              		.global	REG_BREF_CTRL_18_22
 3563              		.section	.rodata.REG_BREF_CTRL_18_22,"a"
 3566              	REG_BREF_CTRL_18_22:
 3567 0000 D0       		.byte	-48
 3568              		.global	REG_BREF_CTRL_21_25
 3569              		.section	.rodata.REG_BREF_CTRL_21_25,"a"
 3572              	REG_BREF_CTRL_21_25:
 3573 0000 B0       		.byte	-80
 3574              		.global	REG_BREF_CTRL_25_30
 3575              		.section	.rodata.REG_BREF_CTRL_25_30,"a"
 3578              	REG_BREF_CTRL_25_30:
 3579 0000 70       		.byte	112
 3580              		.global	REG_BREF_CTRL_DEFAULT
 3581              		.section	.rodata.REG_BREF_CTRL_DEFAULT,"a"
 3584              	REG_BREF_CTRL_DEFAULT:
 3585 0000 F0       		.byte	-16
 3586              		.global	REG_BREF_CTRL
 3587              		.section	.rodata.REG_BREF_CTRL,"a"
 3590              	REG_BREF_CTRL:
 3591 0000 21       		.byte	33
 3592              		.global	REG_TRICKLE_ROUT_DISABLE
 3593              		.section	.rodata.REG_TRICKLE_ROUT_DISABLE,"a"
 3596              	REG_TRICKLE_ROUT_DISABLE:
 3597 0000 00       		.space	1
 3598              		.global	REG_TRICKLE_ROUT_3K
 3599              		.section	.rodata.REG_TRICKLE_ROUT_3K,"a"
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 135


 3602              	REG_TRICKLE_ROUT_3K:
 3603 0000 01       		.byte	1
 3604              		.global	REG_TRICKLE_ROUT_6K
 3605              		.section	.rodata.REG_TRICKLE_ROUT_6K,"a"
 3608              	REG_TRICKLE_ROUT_6K:
 3609 0000 02       		.byte	2
 3610              		.global	REG_TRICKLE_ROUT_11K
 3611              		.section	.rodata.REG_TRICKLE_ROUT_11K,"a"
 3614              	REG_TRICKLE_ROUT_11K:
 3615 0000 03       		.byte	3
 3616              		.global	REG_TRICKLE_ROUT_MASK
 3617              		.section	.rodata.REG_TRICKLE_ROUT_MASK,"a"
 3620              	REG_TRICKLE_ROUT_MASK:
 3621 0000 03       		.byte	3
 3622              		.global	REG_TRICKLE_DIODE_0_3
 3623              		.section	.rodata.REG_TRICKLE_DIODE_0_3,"a"
 3626              	REG_TRICKLE_DIODE_0_3:
 3627 0000 04       		.byte	4
 3628              		.global	REG_TRICKLE_DIODE_0_6
 3629              		.section	.rodata.REG_TRICKLE_DIODE_0_6,"a"
 3632              	REG_TRICKLE_DIODE_0_6:
 3633 0000 08       		.byte	8
 3634              		.global	REG_TRICKLE_DIODE_MASK
 3635              		.section	.rodata.REG_TRICKLE_DIODE_MASK,"a"
 3638              	REG_TRICKLE_DIODE_MASK:
 3639 0000 0C       		.byte	12
 3640              		.global	REG_TRICKLE_TCS_ENABLE
 3641              		.section	.rodata.REG_TRICKLE_TCS_ENABLE,"a"
 3644              	REG_TRICKLE_TCS_ENABLE:
 3645 0000 A0       		.byte	-96
 3646              		.global	REG_TRICKLE_TCS_MASK
 3647              		.section	.rodata.REG_TRICKLE_TCS_MASK,"a"
 3650              	REG_TRICKLE_TCS_MASK:
 3651 0000 F0       		.byte	-16
 3652              		.global	REG_TRICKLE_DEFAULT
 3653              		.section	.rodata.REG_TRICKLE_DEFAULT,"a"
 3656              	REG_TRICKLE_DEFAULT:
 3657 0000 00       		.space	1
 3658              		.global	REG_TRICKLE
 3659              		.section	.rodata.REG_TRICKLE,"a"
 3662              	REG_TRICKLE:
 3663 0000 20       		.byte	32
 3664              		.global	REG_CONFIG_KEY_OTHER
 3665              		.section	.rodata.REG_CONFIG_KEY_OTHER,"a"
 3668              	REG_CONFIG_KEY_OTHER:
 3669 0000 9D       		.byte	-99
 3670              		.global	REG_CONFIG_KEY_SW_RESET
 3671              		.section	.rodata.REG_CONFIG_KEY_SW_RESET,"a"
 3674              	REG_CONFIG_KEY_SW_RESET:
 3675 0000 3C       		.byte	60
 3676              		.global	REG_CONFIG_KEY_OSC_CTRL
 3677              		.section	.rodata.REG_CONFIG_KEY_OSC_CTRL,"a"
 3680              	REG_CONFIG_KEY_OSC_CTRL:
 3681 0000 A1       		.byte	-95
 3682              		.global	REG_CONFIG_KEY
 3683              		.section	.rodata.REG_CONFIG_KEY,"a"
 3686              	REG_CONFIG_KEY:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 136


 3687 0000 1F       		.byte	31
 3688              		.global	REG_OSC_STATUS_ACF
 3689              		.section	.rodata.REG_OSC_STATUS_ACF,"a"
 3692              	REG_OSC_STATUS_ACF:
 3693 0000 01       		.byte	1
 3694              		.global	REG_OSC_STATUS_OF
 3695              		.section	.rodata.REG_OSC_STATUS_OF,"a"
 3698              	REG_OSC_STATUS_OF:
 3699 0000 02       		.byte	2
 3700              		.global	REG_OSC_STATUS_OMODE
 3701              		.section	.rodata.REG_OSC_STATUS_OMODE,"a"
 3704              	REG_OSC_STATUS_OMODE:
 3705 0000 01       		.byte	1
 3706              		.global	REG_OSC_STATUS_LKO2
 3707              		.section	.rodata.REG_OSC_STATUS_LKO2,"a"
 3710              	REG_OSC_STATUS_LKO2:
 3711 0000 04       		.byte	4
 3712              		.global	REG_OSC_STATUS_XTCAL
 3713              		.section	.rodata.REG_OSC_STATUS_XTCAL,"a"
 3716              	REG_OSC_STATUS_XTCAL:
 3717 0000 0C       		.byte	12
 3718              		.global	REG_OSC_STATUS
 3719              		.section	.rodata.REG_OSC_STATUS,"a"
 3722              	REG_OSC_STATUS:
 3723 0000 1D       		.byte	29
 3724              		.global	REG_OSC_CTRL_DEFAULT
 3725              		.section	.rodata.REG_OSC_CTRL_DEFAULT,"a"
 3728              	REG_OSC_CTRL_DEFAULT:
 3729 0000 00       		.space	1
 3730              		.global	REG_OSC_CTRL_ACIE
 3731              		.section	.rodata.REG_OSC_CTRL_ACIE,"a"
 3734              	REG_OSC_CTRL_ACIE:
 3735 0000 01       		.byte	1
 3736              		.global	REG_OSC_CTRL_OFIE
 3737              		.section	.rodata.REG_OSC_CTRL_OFIE,"a"
 3740              	REG_OSC_CTRL_OFIE:
 3741 0000 02       		.byte	2
 3742              		.global	REG_OSC_CTRL_PWGT
 3743              		.section	.rodata.REG_OSC_CTRL_PWGT,"a"
 3746              	REG_OSC_CTRL_PWGT:
 3747 0000 04       		.byte	4
 3748              		.global	REG_OSC_CTRL_FOS
 3749              		.section	.rodata.REG_OSC_CTRL_FOS,"a"
 3752              	REG_OSC_CTRL_FOS:
 3753 0000 08       		.byte	8
 3754              		.global	REG_OSC_CTRL_AOS
 3755              		.section	.rodata.REG_OSC_CTRL_AOS,"a"
 3758              	REG_OSC_CTRL_AOS:
 3759 0000 10       		.byte	16
 3760              		.global	REG_OSC_CTRL_ACAL
 3761              		.section	.rodata.REG_OSC_CTRL_ACAL,"a"
 3764              	REG_OSC_CTRL_ACAL:
 3765 0000 60       		.byte	96
 3766              		.global	REG_OSC_CTRL_OSEL
 3767              		.section	.rodata.REG_OSC_CTRL_OSEL,"a"
 3770              	REG_OSC_CTRL_OSEL:
 3771 0000 80       		.byte	-128
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 137


 3772              		.global	REG_OSC_CTRL
 3773              		.section	.rodata.REG_OSC_CTRL,"a"
 3776              	REG_OSC_CTRL:
 3777 0000 1C       		.byte	28
 3778              		.global	REG_WDT_DEFAULT
 3779              		.section	.rodata.REG_WDT_DEFAULT,"a"
 3782              	REG_WDT_DEFAULT:
 3783 0000 00       		.space	1
 3784              		.global	REG_WDT_WRB_1_4_HZ
 3785              		.section	.rodata.REG_WDT_WRB_1_4_HZ,"a"
 3788              	REG_WDT_WRB_1_4_HZ:
 3789 0000 03       		.byte	3
 3790              		.global	REG_WDT_WRB_1_HZ
 3791              		.section	.rodata.REG_WDT_WRB_1_HZ,"a"
 3794              	REG_WDT_WRB_1_HZ:
 3795 0000 02       		.byte	2
 3796              		.global	REG_WDT_WRB_4_HZ
 3797              		.section	.rodata.REG_WDT_WRB_4_HZ,"a"
 3800              	REG_WDT_WRB_4_HZ:
 3801 0000 01       		.byte	1
 3802              		.global	REG_WDT_WRB_16_HZ
 3803              		.section	.rodata.REG_WDT_WRB_16_HZ,"a"
 3806              	REG_WDT_WRB_16_HZ:
 3807 0000 00       		.space	1
 3808              		.global	REG_WDT_RESET
 3809              		.section	.rodata.REG_WDT_RESET,"a"
 3812              	REG_WDT_RESET:
 3813 0000 80       		.byte	-128
 3814              		.global	REG_WDT
 3815              		.section	.rodata.REG_WDT,"a"
 3818              	REG_WDT:
 3819 0000 1B       		.byte	27
 3820              		.global	REG_TIMER_INITIAL_DEFAULT
 3821              		.section	.rodata.REG_TIMER_INITIAL_DEFAULT,"a"
 3824              	REG_TIMER_INITIAL_DEFAULT:
 3825 0000 00       		.space	1
 3826              		.global	REG_TIMER_INITIAL
 3827              		.section	.rodata.REG_TIMER_INITIAL,"a"
 3830              	REG_TIMER_INITIAL:
 3831 0000 1A       		.byte	26
 3832              		.global	REG_TIMER_DEFAULT
 3833              		.section	.rodata.REG_TIMER_DEFAULT,"a"
 3836              	REG_TIMER_DEFAULT:
 3837 0000 00       		.space	1
 3838              		.global	REG_TIMER
 3839              		.section	.rodata.REG_TIMER,"a"
 3842              	REG_TIMER:
 3843 0000 19       		.byte	25
 3844              		.global	REG_TIMER_CTRL_DEFAULT
 3845              		.section	.rodata.REG_TIMER_CTRL_DEFAULT,"a"
 3848              	REG_TIMER_CTRL_DEFAULT:
 3849 0000 23       		.byte	35
 3850              		.global	REG_TIMER_CTRL_TFS_1_60
 3851              		.section	.rodata.REG_TIMER_CTRL_TFS_1_60,"a"
 3854              	REG_TIMER_CTRL_TFS_1_60:
 3855 0000 03       		.byte	3
 3856              		.global	REG_TIMER_CTRL_TFS_1
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 138


 3857              		.section	.rodata.REG_TIMER_CTRL_TFS_1,"a"
 3860              	REG_TIMER_CTRL_TFS_1:
 3861 0000 02       		.byte	2
 3862              		.global	REG_TIMER_CTRL_TFS_64
 3863              		.section	.rodata.REG_TIMER_CTRL_TFS_64,"a"
 3866              	REG_TIMER_CTRL_TFS_64:
 3867 0000 01       		.byte	1
 3868              		.global	REG_TIMER_CTRL_TFS_FAST
 3869              		.section	.rodata.REG_TIMER_CTRL_TFS_FAST,"a"
 3872              	REG_TIMER_CTRL_TFS_FAST:
 3873 0000 00       		.space	1
 3874              		.global	REG_TIMER_CTRL_TFS_MASK
 3875              		.section	.rodata.REG_TIMER_CTRL_TFS_MASK,"a"
 3878              	REG_TIMER_CTRL_TFS_MASK:
 3879 0000 03       		.byte	3
 3880              		.global	REG_TIMER_CTRL_RPT_DIS
 3881              		.section	.rodata.REG_TIMER_CTRL_RPT_DIS,"a"
 3884              	REG_TIMER_CTRL_RPT_DIS:
 3885 0000 00       		.space	1
 3886              		.global	REG_TIMER_CTRL_RPT_MON
 3887              		.section	.rodata.REG_TIMER_CTRL_RPT_MON,"a"
 3890              	REG_TIMER_CTRL_RPT_MON:
 3891 0000 04       		.byte	4
 3892              		.global	REG_TIMER_CTRL_RPT_DATE
 3893              		.section	.rodata.REG_TIMER_CTRL_RPT_DATE,"a"
 3896              	REG_TIMER_CTRL_RPT_DATE:
 3897 0000 08       		.byte	8
 3898              		.global	REG_TIMER_CTRL_RPT_WKDY
 3899              		.section	.rodata.REG_TIMER_CTRL_RPT_WKDY,"a"
 3902              	REG_TIMER_CTRL_RPT_WKDY:
 3903 0000 0C       		.byte	12
 3904              		.global	REG_TIMER_CTRL_RPT_HOUR
 3905              		.section	.rodata.REG_TIMER_CTRL_RPT_HOUR,"a"
 3908              	REG_TIMER_CTRL_RPT_HOUR:
 3909 0000 10       		.byte	16
 3910              		.global	REG_TIMER_CTRL_RPT_MIN
 3911              		.section	.rodata.REG_TIMER_CTRL_RPT_MIN,"a"
 3914              	REG_TIMER_CTRL_RPT_MIN:
 3915 0000 14       		.byte	20
 3916              		.global	REG_TIMER_CTRL_RPT_SEC
 3917              		.section	.rodata.REG_TIMER_CTRL_RPT_SEC,"a"
 3920              	REG_TIMER_CTRL_RPT_SEC:
 3921 0000 18       		.byte	24
 3922              		.global	REG_TIMER_CTRL_RPT_HUN
 3923              		.section	.rodata.REG_TIMER_CTRL_RPT_HUN,"a"
 3926              	REG_TIMER_CTRL_RPT_HUN:
 3927 0000 1C       		.byte	28
 3928              		.global	REG_TIMER_CTRL_RPT_MASK
 3929              		.section	.rodata.REG_TIMER_CTRL_RPT_MASK,"a"
 3932              	REG_TIMER_CTRL_RPT_MASK:
 3933 0000 1C       		.byte	28
 3934              		.global	REG_TIMER_CTRL_TRPT
 3935              		.section	.rodata.REG_TIMER_CTRL_TRPT,"a"
 3938              	REG_TIMER_CTRL_TRPT:
 3939 0000 20       		.byte	32
 3940              		.global	REG_TIMER_CTRL_TM
 3941              		.section	.rodata.REG_TIMER_CTRL_TM,"a"
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 139


 3944              	REG_TIMER_CTRL_TM:
 3945 0000 40       		.byte	64
 3946              		.global	REG_TIMER_CTRL_TE
 3947              		.section	.rodata.REG_TIMER_CTRL_TE,"a"
 3950              	REG_TIMER_CTRL_TE:
 3951 0000 80       		.byte	-128
 3952              		.global	REG_TIMER_CTRL
 3953              		.section	.rodata.REG_TIMER_CTRL,"a"
 3956              	REG_TIMER_CTRL:
 3957 0000 18       		.byte	24
 3958              		.global	REG_SLEEP_CTRL_DEFAULT
 3959              		.section	.rodata.REG_SLEEP_CTRL_DEFAULT,"a"
 3962              	REG_SLEEP_CTRL_DEFAULT:
 3963 0000 00       		.space	1
 3964              		.global	REG_SLEEP_CTRL_SLTO_MASK
 3965              		.section	.rodata.REG_SLEEP_CTRL_SLTO_MASK,"a"
 3968              	REG_SLEEP_CTRL_SLTO_MASK:
 3969 0000 07       		.byte	7
 3970              		.global	REG_SLEEP_CTRL_SLST
 3971              		.section	.rodata.REG_SLEEP_CTRL_SLST,"a"
 3974              	REG_SLEEP_CTRL_SLST:
 3975 0000 08       		.byte	8
 3976              		.global	REG_SLEEP_CTRL_EX1P
 3977              		.section	.rodata.REG_SLEEP_CTRL_EX1P,"a"
 3980              	REG_SLEEP_CTRL_EX1P:
 3981 0000 10       		.byte	16
 3982              		.global	REG_SLEEP_CTRL_EX2P
 3983              		.section	.rodata.REG_SLEEP_CTRL_EX2P,"a"
 3986              	REG_SLEEP_CTRL_EX2P:
 3987 0000 20       		.byte	32
 3988              		.global	REG_SLEEP_CTRL_SLRES
 3989              		.section	.rodata.REG_SLEEP_CTRL_SLRES,"a"
 3992              	REG_SLEEP_CTRL_SLRES:
 3993 0000 40       		.byte	64
 3994              		.global	REG_SLEEP_CTRL_SLP
 3995              		.section	.rodata.REG_SLEEP_CTRL_SLP,"a"
 3998              	REG_SLEEP_CTRL_SLP:
 3999 0000 80       		.byte	-128
 4000              		.global	REG_SLEEP_CTRL
 4001              		.section	.rodata.REG_SLEEP_CTRL,"a"
 4004              	REG_SLEEP_CTRL:
 4005 0000 17       		.byte	23
 4006              		.global	REG_CAL_RC_LOW
 4007              		.section	.rodata.REG_CAL_RC_LOW,"a"
 4010              	REG_CAL_RC_LOW:
 4011 0000 16       		.byte	22
 4012              		.global	REG_CAL_RC_HIGH
 4013              		.section	.rodata.REG_CAL_RC_HIGH,"a"
 4016              	REG_CAL_RC_HIGH:
 4017 0000 15       		.byte	21
 4018              		.global	REG_CAL_XT
 4019              		.section	.rodata.REG_CAL_XT,"a"
 4022              	REG_CAL_XT:
 4023 0000 14       		.byte	20
 4024              		.global	REG_SQW_DEFAULT
 4025              		.section	.rodata.REG_SQW_DEFAULT,"a"
 4028              	REG_SQW_DEFAULT:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 140


 4029 0000 26       		.byte	38
 4030              		.global	REG_SQW_SQWE
 4031              		.section	.rodata.REG_SQW_SQWE,"a"
 4034              	REG_SQW_SQWE:
 4035 0000 80       		.byte	-128
 4036              		.global	REG_SQW
 4037              		.section	.rodata.REG_SQW,"a"
 4040              	REG_SQW:
 4041 0000 13       		.byte	19
 4042              		.global	REG_INT_MASK_DEFAULT
 4043              		.section	.rodata.REG_INT_MASK_DEFAULT,"a"
 4046              	REG_INT_MASK_DEFAULT:
 4047 0000 E0       		.byte	-32
 4048              		.global	REG_INT_MASK_EX1E
 4049              		.section	.rodata.REG_INT_MASK_EX1E,"a"
 4052              	REG_INT_MASK_EX1E:
 4053 0000 01       		.byte	1
 4054              		.global	REG_INT_MASK_EX2E
 4055              		.section	.rodata.REG_INT_MASK_EX2E,"a"
 4058              	REG_INT_MASK_EX2E:
 4059 0000 02       		.byte	2
 4060              		.global	REG_INT_MASK_AIE
 4061              		.section	.rodata.REG_INT_MASK_AIE,"a"
 4064              	REG_INT_MASK_AIE:
 4065 0000 04       		.byte	4
 4066              		.global	REG_INT_MASK_TIE
 4067              		.section	.rodata.REG_INT_MASK_TIE,"a"
 4070              	REG_INT_MASK_TIE:
 4071 0000 08       		.byte	8
 4072              		.global	REG_INT_MASK_BLIE
 4073              		.section	.rodata.REG_INT_MASK_BLIE,"a"
 4076              	REG_INT_MASK_BLIE:
 4077 0000 10       		.byte	16
 4078              		.global	REG_INT_MASK_IM
 4079              		.section	.rodata.REG_INT_MASK_IM,"a"
 4082              	REG_INT_MASK_IM:
 4083 0000 60       		.byte	96
 4084              		.global	REG_INT_MASK_CEB
 4085              		.section	.rodata.REG_INT_MASK_CEB,"a"
 4088              	REG_INT_MASK_CEB:
 4089 0000 80       		.byte	-128
 4090              		.global	REG_INT_MASK
 4091              		.section	.rodata.REG_INT_MASK,"a"
 4094              	REG_INT_MASK:
 4095 0000 12       		.byte	18
 4096              		.global	REG_CTRL_2_DEFAULT
 4097              		.section	.rodata.REG_CTRL_2_DEFAULT,"a"
 4100              	REG_CTRL_2_DEFAULT:
 4101 0000 3C       		.byte	60
 4102              		.global	REG_CTRL_2_OUT1S_nAIRQ
 4103              		.section	.rodata.REG_CTRL_2_OUT1S_nAIRQ,"a"
 4106              	REG_CTRL_2_OUT1S_nAIRQ:
 4107 0000 03       		.byte	3
 4108              		.global	REG_CTRL_2_OUT1S_SQW_nIRQ
 4109              		.section	.rodata.REG_CTRL_2_OUT1S_SQW_nIRQ,"a"
 4112              	REG_CTRL_2_OUT1S_SQW_nIRQ:
 4113 0000 02       		.byte	2
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 141


 4114              		.global	REG_CTRL_2_OUT1S_SQW
 4115              		.section	.rodata.REG_CTRL_2_OUT1S_SQW,"a"
 4118              	REG_CTRL_2_OUT1S_SQW:
 4119 0000 01       		.byte	1
 4120              		.global	REG_CTRL_2_OUT1S_nIRQ
 4121              		.section	.rodata.REG_CTRL_2_OUT1S_nIRQ,"a"
 4124              	REG_CTRL_2_OUT1S_nIRQ:
 4125 0000 00       		.space	1
 4126              		.global	REG_CTRL_2_OUT1S_MASK
 4127              		.section	.rodata.REG_CTRL_2_OUT1S_MASK,"a"
 4130              	REG_CTRL_2_OUT1S_MASK:
 4131 0000 03       		.byte	3
 4132              		.global	REG_CTRL_2_OUT2S_OUTB
 4133              		.section	.rodata.REG_CTRL_2_OUT2S_OUTB,"a"
 4136              	REG_CTRL_2_OUT2S_OUTB:
 4137 0000 1C       		.byte	28
 4138              		.global	REG_CTRL_2_OUT2S_SLEEP
 4139              		.section	.rodata.REG_CTRL_2_OUT2S_SLEEP,"a"
 4142              	REG_CTRL_2_OUT2S_SLEEP:
 4143 0000 18       		.byte	24
 4144              		.global	REG_CTRL_2_OUT2S_nTIRQ
 4145              		.section	.rodata.REG_CTRL_2_OUT2S_nTIRQ,"a"
 4148              	REG_CTRL_2_OUT2S_nTIRQ:
 4149 0000 14       		.byte	20
 4150              		.global	REG_CTRL_2_OUT2S_TIRQ
 4151              		.section	.rodata.REG_CTRL_2_OUT2S_TIRQ,"a"
 4154              	REG_CTRL_2_OUT2S_TIRQ:
 4155 0000 10       		.byte	16
 4156              		.global	REG_CTRL_2_OUT2S_nAIRQ
 4157              		.section	.rodata.REG_CTRL_2_OUT2S_nAIRQ,"a"
 4160              	REG_CTRL_2_OUT2S_nAIRQ:
 4161 0000 0C       		.byte	12
 4162              		.global	REG_CTRL_2_OUT2S_SQW
 4163              		.section	.rodata.REG_CTRL_2_OUT2S_SQW,"a"
 4166              	REG_CTRL_2_OUT2S_SQW:
 4167 0000 04       		.byte	4
 4168              		.global	REG_CTRL_2_OUT2S_nIRQ
 4169              		.section	.rodata.REG_CTRL_2_OUT2S_nIRQ,"a"
 4172              	REG_CTRL_2_OUT2S_nIRQ:
 4173 0000 00       		.space	1
 4174              		.global	REG_CTRL_2_OUT2S_MASK
 4175              		.section	.rodata.REG_CTRL_2_OUT2S_MASK,"a"
 4178              	REG_CTRL_2_OUT2S_MASK:
 4179 0000 1C       		.byte	28
 4180              		.global	REG_CTRL_2_RS1E
 4181              		.section	.rodata.REG_CTRL_2_RS1E,"a"
 4184              	REG_CTRL_2_RS1E:
 4185 0000 20       		.byte	32
 4186              		.global	REG_CTRL_2
 4187              		.section	.rodata.REG_CTRL_2,"a"
 4190              	REG_CTRL_2:
 4191 0000 11       		.byte	17
 4192              		.global	REG_CTRL_1_DEFAULT
 4193              		.section	.rodata.REG_CTRL_1_DEFAULT,"a"
 4196              	REG_CTRL_1_DEFAULT:
 4197 0000 12       		.byte	18
 4198              		.global	REG_CTRL_1_WRTC
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 142


 4199              		.section	.rodata.REG_CTRL_1_WRTC,"a"
 4202              	REG_CTRL_1_WRTC:
 4203 0000 01       		.byte	1
 4204              		.global	REG_CTRL_1_PWR2
 4205              		.section	.rodata.REG_CTRL_1_PWR2,"a"
 4208              	REG_CTRL_1_PWR2:
 4209 0000 02       		.byte	2
 4210              		.global	REG_CTRL_1_ARST
 4211              		.section	.rodata.REG_CTRL_1_ARST,"a"
 4214              	REG_CTRL_1_ARST:
 4215 0000 04       		.byte	4
 4216              		.global	REG_CTRL_1_RSP
 4217              		.section	.rodata.REG_CTRL_1_RSP,"a"
 4220              	REG_CTRL_1_RSP:
 4221 0000 08       		.byte	8
 4222              		.global	REG_CTRL_1_OUT
 4223              		.section	.rodata.REG_CTRL_1_OUT,"a"
 4226              	REG_CTRL_1_OUT:
 4227 0000 10       		.byte	16
 4228              		.global	REG_CTRL_1_OUTB
 4229              		.section	.rodata.REG_CTRL_1_OUTB,"a"
 4232              	REG_CTRL_1_OUTB:
 4233 0000 20       		.byte	32
 4234              		.global	REG_CTRL_1_12_24
 4235              		.section	.rodata.REG_CTRL_1_12_24,"a"
 4238              	REG_CTRL_1_12_24:
 4239 0000 40       		.byte	64
 4240              		.global	REG_CTRL_1_STOP
 4241              		.section	.rodata.REG_CTRL_1_STOP,"a"
 4244              	REG_CTRL_1_STOP:
 4245 0000 80       		.byte	-128
 4246              		.global	REG_CTRL_1
 4247              		.section	.rodata.REG_CTRL_1,"a"
 4250              	REG_CTRL_1:
 4251 0000 10       		.byte	16
 4252              		.global	REG_STATUS_DEFAULT
 4253              		.section	.rodata.REG_STATUS_DEFAULT,"a"
 4256              	REG_STATUS_DEFAULT:
 4257 0000 00       		.space	1
 4258              		.global	REG_STATUS_EX1
 4259              		.section	.rodata.REG_STATUS_EX1,"a"
 4262              	REG_STATUS_EX1:
 4263 0000 01       		.byte	1
 4264              		.global	REG_STATUS_EX2
 4265              		.section	.rodata.REG_STATUS_EX2,"a"
 4268              	REG_STATUS_EX2:
 4269 0000 02       		.byte	2
 4270              		.global	REG_STATUS_ALM
 4271              		.section	.rodata.REG_STATUS_ALM,"a"
 4274              	REG_STATUS_ALM:
 4275 0000 04       		.byte	4
 4276              		.global	REG_STATUS_TIM
 4277              		.section	.rodata.REG_STATUS_TIM,"a"
 4280              	REG_STATUS_TIM:
 4281 0000 08       		.byte	8
 4282              		.global	REG_STATUS_BL
 4283              		.section	.rodata.REG_STATUS_BL,"a"
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 143


 4286              	REG_STATUS_BL:
 4287 0000 10       		.byte	16
 4288              		.global	REG_STATUS_WDT
 4289              		.section	.rodata.REG_STATUS_WDT,"a"
 4292              	REG_STATUS_WDT:
 4293 0000 20       		.byte	32
 4294              		.global	REG_STATUS_BAT
 4295              		.section	.rodata.REG_STATUS_BAT,"a"
 4298              	REG_STATUS_BAT:
 4299 0000 40       		.byte	64
 4300              		.global	REG_STATUS_CB
 4301              		.section	.rodata.REG_STATUS_CB,"a"
 4304              	REG_STATUS_CB:
 4305 0000 80       		.byte	-128
 4306              		.global	REG_STATUS
 4307              		.section	.rodata.REG_STATUS,"a"
 4310              	REG_STATUS:
 4311 0000 0F       		.byte	15
 4312              		.global	REG_WEEKDAY_ALARM
 4313              		.section	.rodata.REG_WEEKDAY_ALARM,"a"
 4316              	REG_WEEKDAY_ALARM:
 4317 0000 0E       		.byte	14
 4318              		.global	REG_MONTH_ALARM
 4319              		.section	.rodata.REG_MONTH_ALARM,"a"
 4322              	REG_MONTH_ALARM:
 4323 0000 0D       		.byte	13
 4324              		.global	REG_DATE_ALARM
 4325              		.section	.rodata.REG_DATE_ALARM,"a"
 4328              	REG_DATE_ALARM:
 4329 0000 0C       		.byte	12
 4330              		.global	REG_HOUR_ALARM
 4331              		.section	.rodata.REG_HOUR_ALARM,"a"
 4334              	REG_HOUR_ALARM:
 4335 0000 0B       		.byte	11
 4336              		.global	REG_MINUTE_ALARM
 4337              		.section	.rodata.REG_MINUTE_ALARM,"a"
 4340              	REG_MINUTE_ALARM:
 4341 0000 0A       		.byte	10
 4342              		.global	REG_SECOND_ALARM
 4343              		.section	.rodata.REG_SECOND_ALARM,"a"
 4346              	REG_SECOND_ALARM:
 4347 0000 09       		.byte	9
 4348              		.global	REG_HUNDREDTH_ALARM
 4349              		.section	.rodata.REG_HUNDREDTH_ALARM,"a"
 4352              	REG_HUNDREDTH_ALARM:
 4353 0000 08       		.byte	8
 4354              		.global	REG_WEEKDAY
 4355              		.section	.rodata.REG_WEEKDAY,"a"
 4358              	REG_WEEKDAY:
 4359 0000 07       		.byte	7
 4360              		.global	REG_YEAR
 4361              		.section	.rodata.REG_YEAR,"a"
 4364              	REG_YEAR:
 4365 0000 06       		.byte	6
 4366              		.global	REG_MONTH
 4367              		.section	.rodata.REG_MONTH,"a"
 4370              	REG_MONTH:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 144


 4371 0000 05       		.byte	5
 4372              		.global	REG_DATE
 4373              		.section	.rodata.REG_DATE,"a"
 4376              	REG_DATE:
 4377 0000 04       		.byte	4
 4378              		.global	REG_HOUR
 4379              		.section	.rodata.REG_HOUR,"a"
 4382              	REG_HOUR:
 4383 0000 03       		.byte	3
 4384              		.global	REG_MINUTE
 4385              		.section	.rodata.REG_MINUTE,"a"
 4388              	REG_MINUTE:
 4389 0000 02       		.byte	2
 4390              		.global	REG_SECOND
 4391              		.section	.rodata.REG_SECOND,"a"
 4394              	REG_SECOND:
 4395 0000 01       		.byte	1
 4396              		.global	REG_HUNDREDTH
 4397              		.section	.rodata.REG_HUNDREDTH,"a"
 4400              	REG_HUNDREDTH:
 4401 0000 00       		.space	1
 4402              		.global	WATCHDOG_MAX_SECONDS
 4403              		.section	.rodata.WATCHDOG_MAX_SECONDS,"a"
 4404              		.align	2
 4407              	WATCHDOG_MAX_SECONDS:
 4408 0000 7C000000 		.word	124
 4409              		.global	RESET_DISABLE_XT
 4410              		.section	.rodata.RESET_DISABLE_XT,"a"
 4411              		.align	2
 4414              	RESET_DISABLE_XT:
 4415 0000 02000000 		.word	2
 4416              		.global	RESET_PRESERVE_REPEATING_TIMER
 4417              		.section	.rodata.RESET_PRESERVE_REPEATING_TIMER,"a"
 4418              		.align	2
 4421              	RESET_PRESERVE_REPEATING_TIMER:
 4422 0000 01000000 		.word	1
 4423              		.global	watchdogUpdatePeriod
 4424              		.section	.bss.watchdogUpdatePeriod,"aw",%nobits
 4425              		.align	2
 4428              	watchdogUpdatePeriod:
 4429 0000 00000000 		.space	4
 4430              		.global	lastWatchdogMillis
 4431              		.section	.bss.lastWatchdogMillis,"aw",%nobits
 4432              		.align	2
 4435              	lastWatchdogMillis:
 4436 0000 00000000 		.space	4
 4437              		.global	watchdogSecs
 4438              		.section	.bss.watchdogSecs,"aw",%nobits
 4439              		.align	2
 4442              	watchdogSecs:
 4443 0000 00000000 		.space	4
 4444              		.global	wakeReason
 4445              		.section	.bss.wakeReason,"aw",%nobits
 4448              	wakeReason:
 4449 0000 00       		.space	1
 4450              		.text
 4451              	.Letext0:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 145


 4452              		.file 4 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 4453              		.file 5 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 4454              		.file 6 "Drivers/CMSIS/Device/ST/STM32U0xx/Include/stm32u073xx.h"
 4455              		.file 7 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/inc
 4456              		.file 8 "Drivers/CMSIS/Device/ST/STM32U0xx/Include/stm32u0xx.h"
 4457              		.file 9 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_hal_gpio.h"
 4458              		.file 10 "Core/Inc/AB1805_RK.h"
 4459              		.file 11 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_hal.h"
 4460              		.file 12 "Core/Inc/main.h"
 4461              		.file 13 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/..
 4462              		.file 14 "Core/Inc/printf.h"
 4463              		.file 15 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_dma.h"
 4464              		.file 16 "<built-in>"
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 146


DEFINED SYMBOLS
                            *ABS*:00000000 AB1805_RK.c
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:19     .text.SPI1_SendByte:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:24     .text.SPI1_SendByte:00000000 SPI1_SendByte
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:165    .text.SPI1_SendByte:00000060 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3308   .rodata.__func__.0:00000000 __func__.0
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:172    .text.read_rtc_register:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:177    .text.read_rtc_register:00000000 read_rtc_register
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:292    .text.read_rtc_register:0000002c $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:297    .text.write_rtc_register:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:302    .text.write_rtc_register:00000000 write_rtc_register
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:455    .text.write_rtc_register:00000044 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:461    .text.loop:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:467    .text.loop:00000000 loop
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:482    .rodata.detectChip.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:489    .text.detectChip:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:495    .text.detectChip:00000000 detectChip
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:597    .text.detectChip:00000050 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:604    .text.usingRCOscillator:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:610    .text.usingRCOscillator:00000000 usingRCOscillator
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:639    .rodata.setWDT.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:649    .text.setWDT:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:655    .text.setWDT:00000000 setWDT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:810    .text.setWDT:0000008c $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4442   .bss.watchdogSecs:00000000 watchdogSecs
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4428   .bss.watchdogUpdatePeriod:00000000 watchdogUpdatePeriod
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:819    .text.maskRegister:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:825    .text.maskRegister:00000000 maskRegister
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:878    .rodata.resetConfig.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:882    .text.resetConfig:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:888    .text.resetConfig:00000000 resetConfig
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:999    .text.resetConfig:0000008c $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1004   .text.isBitClear:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1010   .text.isBitClear:00000000 isBitClear
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1051   .text.isBitSet:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1057   .text.isBitSet:00000000 isBitSet
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1086   .text.clearRegisterBit:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1092   .text.clearRegisterBit:00000000 clearRegisterBit
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1124   .rodata.updateWakeReason.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1140   .text.updateWakeReason:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1146   .text.updateWakeReason:00000000 updateWakeReason
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1273   .text.updateWakeReason:00000074 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4448   .bss.wakeReason:00000000 wakeReason
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1283   .rodata.setup.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1287   .text.setup:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1293   .text.setup:00000000 setup
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1330   .text.setup:00000018 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1335   .rodata.clearRepeatingInterrupt.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1339   .text.clearRepeatingInterrupt:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1345   .text.clearRepeatingInterrupt:00000000 clearRepeatingInterrupt
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1449   .text.clearRepeatingInterrupt:00000058 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1454   .text.setRegisterBit:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1460   .text.setRegisterBit:00000000 setRegisterBit
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1491   .rodata.setCountdownTimer.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1495   .text.setCountdownTimer:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1501   .text.setCountdownTimer:00000000 setCountdownTimer
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1680   .text.setCountdownTimer:00000098 $d
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 147


C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1685   .rodata.interruptCountdownTimer.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1689   .text.interruptCountdownTimer:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1695   .text.interruptCountdownTimer:00000000 interruptCountdownTimer
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1806   .text.interruptCountdownTimer:00000054 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1811   .text.bcdToValue:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1817   .text.bcdToValue:00000000 bcdToValue
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1847   .text.valueToBcd:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1853   .text.valueToBcd:00000000 valueToBcd
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1905   .text.getWakeReason:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1911   .text.getWakeReason:00000000 getWakeReason
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1928   .text.getWakeReason:00000008 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1933   .rodata.hex_dump.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1938   .text.hex_dump:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:1944   .text.hex_dump:00000000 hex_dump
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2060   .text.hex_dump:00000064 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2065   .rodata.deepPowerDown.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2081   .text.deepPowerDown:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2087   .text.deepPowerDown:00000000 deepPowerDown
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2361   .text.deepPowerDown:00000114 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2370   .text.isRTCSet:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2376   .text.isRTCSet:00000000 isRTCSet
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2401   .text.readRegisters:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2407   .text.readRegisters:00000000 readRegisters
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2593   .text.readRegisters:0000005c $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2599   .text.readRam:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2605   .text.readRam:00000000 readRam
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2810   .text.writeRegisters:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2816   .text.writeRegisters:00000000 writeRegisters
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:2998   .text.writeRegisters:00000058 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3004   .text.writeRam:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3010   .text.writeRam:00000000 writeRam
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3145   .rodata.eraseRam.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3149   .text.eraseRam:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3155   .text.eraseRam:00000000 eraseRam
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3241   .text.eraseRam:0000003c $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3246   .text.stopWDT:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3252   .text.stopWDT:00000000 stopWDT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3275   .text.resumeWDT:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3281   .text.resumeWDT:00000000 resumeWDT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3305   .rodata.__func__.0:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3314   .rodata.REG_ALT_RAM:00000000 REG_ALT_RAM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3320   .rodata.REG_RAM:00000000 REG_RAM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3326   .rodata.REG_EXT_ADDR_XADS:00000000 REG_EXT_ADDR_XADS
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3332   .rodata.REG_EXT_ADDR_XADA:00000000 REG_EXT_ADDR_XADA
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3338   .rodata.REG_EXT_ADDR_EXIN:00000000 REG_EXT_ADDR_EXIN
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3344   .rodata.REG_EXT_ADDR_WDIN:00000000 REG_EXT_ADDR_WDIN
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3350   .rodata.REG_EXT_ADDR_BPOL:00000000 REG_EXT_ADDR_BPOL
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3356   .rodata.REG_EXT_ADDR_O4MB:00000000 REG_EXT_ADDR_O4MB
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3362   .rodata.REG_EXT_ADDR:00000000 REG_EXT_ADDR
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3368   .rodata.REG_OCTRL_DEFAULT:00000000 REG_OCTRL_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3369   .rodata.REG_OCTRL_DEFAULT:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3374   .rodata.REG_OCTRL_O1EN:00000000 REG_OCTRL_O1EN
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3380   .rodata.REG_OCTRL_O3EN:00000000 REG_OCTRL_O3EN
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3386   .rodata.REG_OCTRL_O4EN:00000000 REG_OCTRL_O4EN
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3392   .rodata.REG_OCTRL_RSEN:00000000 REG_OCTRL_RSEN
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3398   .rodata.REG_OCTRL_EXDS:00000000 REG_OCTRL_EXDS
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3404   .rodata.REG_OCTRL_WDDS:00000000 REG_OCTRL_WDDS
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 148


C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3410   .rodata.REG_OCTRL_EXBM:00000000 REG_OCTRL_EXBM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3416   .rodata.REG_OCTRL_WDBM:00000000 REG_OCTRL_WDBM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3422   .rodata.REG_OCTRL:00000000 REG_OCTRL
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3428   .rodata.REG_ASTAT_VINIT:00000000 REG_ASTAT_VINIT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3434   .rodata.REG_ASTAT_BMIN:00000000 REG_ASTAT_BMIN
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3440   .rodata.REG_ASTAT_BBOD:00000000 REG_ASTAT_BBOD
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3446   .rodata.REG_ASTAT:00000000 REG_ASTAT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3452   .rodata.REG_ID6:00000000 REG_ID6
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3458   .rodata.REG_ID5:00000000 REG_ID5
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3464   .rodata.REG_ID4:00000000 REG_ID4
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3470   .rodata.REG_ID3:00000000 REG_ID3
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3476   .rodata.REG_ID2:00000000 REG_ID2
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3482   .rodata.REG_ID1_ABXX15:00000000 REG_ID1_ABXX15
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3488   .rodata.REG_ID1_ABXX05:00000000 REG_ID1_ABXX05
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3494   .rodata.REG_ID1:00000000 REG_ID1
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3500   .rodata.REG_ID0_AB18XX:00000000 REG_ID0_AB18XX
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3506   .rodata.REG_ID0_AB08XX:00000000 REG_ID0_AB08XX
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3512   .rodata.REG_ID0:00000000 REG_ID0
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3518   .rodata.REG_BATMODE_IO_IOBM:00000000 REG_BATMODE_IO_IOBM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3524   .rodata.REG_BATMODE_IO_DEFAULT:00000000 REG_BATMODE_IO_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3530   .rodata.REG_BATMODE_IO:00000000 REG_BATMODE_IO
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3536   .rodata.REG_AFCTRL_DEFAULT:00000000 REG_AFCTRL_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3537   .rodata.REG_AFCTRL_DEFAULT:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3542   .rodata.REG_AFCTRL_DISABLE:00000000 REG_AFCTRL_DISABLE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3543   .rodata.REG_AFCTRL_DISABLE:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3548   .rodata.REG_AFCTRL_ENABLE:00000000 REG_AFCTRL_ENABLE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3554   .rodata.REG_AFCTRL:00000000 REG_AFCTRL
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3560   .rodata.REG_BREF_CTRL_14_16:00000000 REG_BREF_CTRL_14_16
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3566   .rodata.REG_BREF_CTRL_18_22:00000000 REG_BREF_CTRL_18_22
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3572   .rodata.REG_BREF_CTRL_21_25:00000000 REG_BREF_CTRL_21_25
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3578   .rodata.REG_BREF_CTRL_25_30:00000000 REG_BREF_CTRL_25_30
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3584   .rodata.REG_BREF_CTRL_DEFAULT:00000000 REG_BREF_CTRL_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3590   .rodata.REG_BREF_CTRL:00000000 REG_BREF_CTRL
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3596   .rodata.REG_TRICKLE_ROUT_DISABLE:00000000 REG_TRICKLE_ROUT_DISABLE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3597   .rodata.REG_TRICKLE_ROUT_DISABLE:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3602   .rodata.REG_TRICKLE_ROUT_3K:00000000 REG_TRICKLE_ROUT_3K
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3608   .rodata.REG_TRICKLE_ROUT_6K:00000000 REG_TRICKLE_ROUT_6K
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3614   .rodata.REG_TRICKLE_ROUT_11K:00000000 REG_TRICKLE_ROUT_11K
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3620   .rodata.REG_TRICKLE_ROUT_MASK:00000000 REG_TRICKLE_ROUT_MASK
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3626   .rodata.REG_TRICKLE_DIODE_0_3:00000000 REG_TRICKLE_DIODE_0_3
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3632   .rodata.REG_TRICKLE_DIODE_0_6:00000000 REG_TRICKLE_DIODE_0_6
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3638   .rodata.REG_TRICKLE_DIODE_MASK:00000000 REG_TRICKLE_DIODE_MASK
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3644   .rodata.REG_TRICKLE_TCS_ENABLE:00000000 REG_TRICKLE_TCS_ENABLE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3650   .rodata.REG_TRICKLE_TCS_MASK:00000000 REG_TRICKLE_TCS_MASK
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3656   .rodata.REG_TRICKLE_DEFAULT:00000000 REG_TRICKLE_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3657   .rodata.REG_TRICKLE_DEFAULT:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3662   .rodata.REG_TRICKLE:00000000 REG_TRICKLE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3668   .rodata.REG_CONFIG_KEY_OTHER:00000000 REG_CONFIG_KEY_OTHER
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3674   .rodata.REG_CONFIG_KEY_SW_RESET:00000000 REG_CONFIG_KEY_SW_RESET
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3680   .rodata.REG_CONFIG_KEY_OSC_CTRL:00000000 REG_CONFIG_KEY_OSC_CTRL
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3686   .rodata.REG_CONFIG_KEY:00000000 REG_CONFIG_KEY
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3692   .rodata.REG_OSC_STATUS_ACF:00000000 REG_OSC_STATUS_ACF
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3698   .rodata.REG_OSC_STATUS_OF:00000000 REG_OSC_STATUS_OF
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3704   .rodata.REG_OSC_STATUS_OMODE:00000000 REG_OSC_STATUS_OMODE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3710   .rodata.REG_OSC_STATUS_LKO2:00000000 REG_OSC_STATUS_LKO2
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3716   .rodata.REG_OSC_STATUS_XTCAL:00000000 REG_OSC_STATUS_XTCAL
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3722   .rodata.REG_OSC_STATUS:00000000 REG_OSC_STATUS
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 149


C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3728   .rodata.REG_OSC_CTRL_DEFAULT:00000000 REG_OSC_CTRL_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3729   .rodata.REG_OSC_CTRL_DEFAULT:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3734   .rodata.REG_OSC_CTRL_ACIE:00000000 REG_OSC_CTRL_ACIE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3740   .rodata.REG_OSC_CTRL_OFIE:00000000 REG_OSC_CTRL_OFIE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3746   .rodata.REG_OSC_CTRL_PWGT:00000000 REG_OSC_CTRL_PWGT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3752   .rodata.REG_OSC_CTRL_FOS:00000000 REG_OSC_CTRL_FOS
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3758   .rodata.REG_OSC_CTRL_AOS:00000000 REG_OSC_CTRL_AOS
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3764   .rodata.REG_OSC_CTRL_ACAL:00000000 REG_OSC_CTRL_ACAL
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3770   .rodata.REG_OSC_CTRL_OSEL:00000000 REG_OSC_CTRL_OSEL
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3776   .rodata.REG_OSC_CTRL:00000000 REG_OSC_CTRL
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3782   .rodata.REG_WDT_DEFAULT:00000000 REG_WDT_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3783   .rodata.REG_WDT_DEFAULT:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3788   .rodata.REG_WDT_WRB_1_4_HZ:00000000 REG_WDT_WRB_1_4_HZ
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3794   .rodata.REG_WDT_WRB_1_HZ:00000000 REG_WDT_WRB_1_HZ
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3800   .rodata.REG_WDT_WRB_4_HZ:00000000 REG_WDT_WRB_4_HZ
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3806   .rodata.REG_WDT_WRB_16_HZ:00000000 REG_WDT_WRB_16_HZ
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3807   .rodata.REG_WDT_WRB_16_HZ:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3812   .rodata.REG_WDT_RESET:00000000 REG_WDT_RESET
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3818   .rodata.REG_WDT:00000000 REG_WDT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3824   .rodata.REG_TIMER_INITIAL_DEFAULT:00000000 REG_TIMER_INITIAL_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3825   .rodata.REG_TIMER_INITIAL_DEFAULT:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3830   .rodata.REG_TIMER_INITIAL:00000000 REG_TIMER_INITIAL
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3836   .rodata.REG_TIMER_DEFAULT:00000000 REG_TIMER_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3837   .rodata.REG_TIMER_DEFAULT:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3842   .rodata.REG_TIMER:00000000 REG_TIMER
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3848   .rodata.REG_TIMER_CTRL_DEFAULT:00000000 REG_TIMER_CTRL_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3854   .rodata.REG_TIMER_CTRL_TFS_1_60:00000000 REG_TIMER_CTRL_TFS_1_60
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3860   .rodata.REG_TIMER_CTRL_TFS_1:00000000 REG_TIMER_CTRL_TFS_1
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3866   .rodata.REG_TIMER_CTRL_TFS_64:00000000 REG_TIMER_CTRL_TFS_64
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3872   .rodata.REG_TIMER_CTRL_TFS_FAST:00000000 REG_TIMER_CTRL_TFS_FAST
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3873   .rodata.REG_TIMER_CTRL_TFS_FAST:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3878   .rodata.REG_TIMER_CTRL_TFS_MASK:00000000 REG_TIMER_CTRL_TFS_MASK
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3884   .rodata.REG_TIMER_CTRL_RPT_DIS:00000000 REG_TIMER_CTRL_RPT_DIS
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3885   .rodata.REG_TIMER_CTRL_RPT_DIS:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3890   .rodata.REG_TIMER_CTRL_RPT_MON:00000000 REG_TIMER_CTRL_RPT_MON
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3896   .rodata.REG_TIMER_CTRL_RPT_DATE:00000000 REG_TIMER_CTRL_RPT_DATE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3902   .rodata.REG_TIMER_CTRL_RPT_WKDY:00000000 REG_TIMER_CTRL_RPT_WKDY
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3908   .rodata.REG_TIMER_CTRL_RPT_HOUR:00000000 REG_TIMER_CTRL_RPT_HOUR
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3914   .rodata.REG_TIMER_CTRL_RPT_MIN:00000000 REG_TIMER_CTRL_RPT_MIN
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3920   .rodata.REG_TIMER_CTRL_RPT_SEC:00000000 REG_TIMER_CTRL_RPT_SEC
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3926   .rodata.REG_TIMER_CTRL_RPT_HUN:00000000 REG_TIMER_CTRL_RPT_HUN
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3932   .rodata.REG_TIMER_CTRL_RPT_MASK:00000000 REG_TIMER_CTRL_RPT_MASK
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3938   .rodata.REG_TIMER_CTRL_TRPT:00000000 REG_TIMER_CTRL_TRPT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3944   .rodata.REG_TIMER_CTRL_TM:00000000 REG_TIMER_CTRL_TM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3950   .rodata.REG_TIMER_CTRL_TE:00000000 REG_TIMER_CTRL_TE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3956   .rodata.REG_TIMER_CTRL:00000000 REG_TIMER_CTRL
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3962   .rodata.REG_SLEEP_CTRL_DEFAULT:00000000 REG_SLEEP_CTRL_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3963   .rodata.REG_SLEEP_CTRL_DEFAULT:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3968   .rodata.REG_SLEEP_CTRL_SLTO_MASK:00000000 REG_SLEEP_CTRL_SLTO_MASK
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3974   .rodata.REG_SLEEP_CTRL_SLST:00000000 REG_SLEEP_CTRL_SLST
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3980   .rodata.REG_SLEEP_CTRL_EX1P:00000000 REG_SLEEP_CTRL_EX1P
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3986   .rodata.REG_SLEEP_CTRL_EX2P:00000000 REG_SLEEP_CTRL_EX2P
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3992   .rodata.REG_SLEEP_CTRL_SLRES:00000000 REG_SLEEP_CTRL_SLRES
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:3998   .rodata.REG_SLEEP_CTRL_SLP:00000000 REG_SLEEP_CTRL_SLP
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4004   .rodata.REG_SLEEP_CTRL:00000000 REG_SLEEP_CTRL
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4010   .rodata.REG_CAL_RC_LOW:00000000 REG_CAL_RC_LOW
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4016   .rodata.REG_CAL_RC_HIGH:00000000 REG_CAL_RC_HIGH
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 150


C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4022   .rodata.REG_CAL_XT:00000000 REG_CAL_XT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4028   .rodata.REG_SQW_DEFAULT:00000000 REG_SQW_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4034   .rodata.REG_SQW_SQWE:00000000 REG_SQW_SQWE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4040   .rodata.REG_SQW:00000000 REG_SQW
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4046   .rodata.REG_INT_MASK_DEFAULT:00000000 REG_INT_MASK_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4052   .rodata.REG_INT_MASK_EX1E:00000000 REG_INT_MASK_EX1E
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4058   .rodata.REG_INT_MASK_EX2E:00000000 REG_INT_MASK_EX2E
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4064   .rodata.REG_INT_MASK_AIE:00000000 REG_INT_MASK_AIE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4070   .rodata.REG_INT_MASK_TIE:00000000 REG_INT_MASK_TIE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4076   .rodata.REG_INT_MASK_BLIE:00000000 REG_INT_MASK_BLIE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4082   .rodata.REG_INT_MASK_IM:00000000 REG_INT_MASK_IM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4088   .rodata.REG_INT_MASK_CEB:00000000 REG_INT_MASK_CEB
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4094   .rodata.REG_INT_MASK:00000000 REG_INT_MASK
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4100   .rodata.REG_CTRL_2_DEFAULT:00000000 REG_CTRL_2_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4106   .rodata.REG_CTRL_2_OUT1S_nAIRQ:00000000 REG_CTRL_2_OUT1S_nAIRQ
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4112   .rodata.REG_CTRL_2_OUT1S_SQW_nIRQ:00000000 REG_CTRL_2_OUT1S_SQW_nIRQ
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4118   .rodata.REG_CTRL_2_OUT1S_SQW:00000000 REG_CTRL_2_OUT1S_SQW
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4124   .rodata.REG_CTRL_2_OUT1S_nIRQ:00000000 REG_CTRL_2_OUT1S_nIRQ
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4125   .rodata.REG_CTRL_2_OUT1S_nIRQ:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4130   .rodata.REG_CTRL_2_OUT1S_MASK:00000000 REG_CTRL_2_OUT1S_MASK
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4136   .rodata.REG_CTRL_2_OUT2S_OUTB:00000000 REG_CTRL_2_OUT2S_OUTB
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4142   .rodata.REG_CTRL_2_OUT2S_SLEEP:00000000 REG_CTRL_2_OUT2S_SLEEP
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4148   .rodata.REG_CTRL_2_OUT2S_nTIRQ:00000000 REG_CTRL_2_OUT2S_nTIRQ
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4154   .rodata.REG_CTRL_2_OUT2S_TIRQ:00000000 REG_CTRL_2_OUT2S_TIRQ
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4160   .rodata.REG_CTRL_2_OUT2S_nAIRQ:00000000 REG_CTRL_2_OUT2S_nAIRQ
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4166   .rodata.REG_CTRL_2_OUT2S_SQW:00000000 REG_CTRL_2_OUT2S_SQW
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4172   .rodata.REG_CTRL_2_OUT2S_nIRQ:00000000 REG_CTRL_2_OUT2S_nIRQ
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4173   .rodata.REG_CTRL_2_OUT2S_nIRQ:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4178   .rodata.REG_CTRL_2_OUT2S_MASK:00000000 REG_CTRL_2_OUT2S_MASK
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4184   .rodata.REG_CTRL_2_RS1E:00000000 REG_CTRL_2_RS1E
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4190   .rodata.REG_CTRL_2:00000000 REG_CTRL_2
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4196   .rodata.REG_CTRL_1_DEFAULT:00000000 REG_CTRL_1_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4202   .rodata.REG_CTRL_1_WRTC:00000000 REG_CTRL_1_WRTC
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4208   .rodata.REG_CTRL_1_PWR2:00000000 REG_CTRL_1_PWR2
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4214   .rodata.REG_CTRL_1_ARST:00000000 REG_CTRL_1_ARST
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4220   .rodata.REG_CTRL_1_RSP:00000000 REG_CTRL_1_RSP
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4226   .rodata.REG_CTRL_1_OUT:00000000 REG_CTRL_1_OUT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4232   .rodata.REG_CTRL_1_OUTB:00000000 REG_CTRL_1_OUTB
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4238   .rodata.REG_CTRL_1_12_24:00000000 REG_CTRL_1_12_24
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4244   .rodata.REG_CTRL_1_STOP:00000000 REG_CTRL_1_STOP
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4250   .rodata.REG_CTRL_1:00000000 REG_CTRL_1
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4256   .rodata.REG_STATUS_DEFAULT:00000000 REG_STATUS_DEFAULT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4257   .rodata.REG_STATUS_DEFAULT:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4262   .rodata.REG_STATUS_EX1:00000000 REG_STATUS_EX1
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4268   .rodata.REG_STATUS_EX2:00000000 REG_STATUS_EX2
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4274   .rodata.REG_STATUS_ALM:00000000 REG_STATUS_ALM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4280   .rodata.REG_STATUS_TIM:00000000 REG_STATUS_TIM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4286   .rodata.REG_STATUS_BL:00000000 REG_STATUS_BL
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4292   .rodata.REG_STATUS_WDT:00000000 REG_STATUS_WDT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4298   .rodata.REG_STATUS_BAT:00000000 REG_STATUS_BAT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4304   .rodata.REG_STATUS_CB:00000000 REG_STATUS_CB
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4310   .rodata.REG_STATUS:00000000 REG_STATUS
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4316   .rodata.REG_WEEKDAY_ALARM:00000000 REG_WEEKDAY_ALARM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4322   .rodata.REG_MONTH_ALARM:00000000 REG_MONTH_ALARM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4328   .rodata.REG_DATE_ALARM:00000000 REG_DATE_ALARM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4334   .rodata.REG_HOUR_ALARM:00000000 REG_HOUR_ALARM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4340   .rodata.REG_MINUTE_ALARM:00000000 REG_MINUTE_ALARM
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s 			page 151


C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4346   .rodata.REG_SECOND_ALARM:00000000 REG_SECOND_ALARM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4352   .rodata.REG_HUNDREDTH_ALARM:00000000 REG_HUNDREDTH_ALARM
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4358   .rodata.REG_WEEKDAY:00000000 REG_WEEKDAY
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4364   .rodata.REG_YEAR:00000000 REG_YEAR
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4370   .rodata.REG_MONTH:00000000 REG_MONTH
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4376   .rodata.REG_DATE:00000000 REG_DATE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4382   .rodata.REG_HOUR:00000000 REG_HOUR
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4388   .rodata.REG_MINUTE:00000000 REG_MINUTE
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4394   .rodata.REG_SECOND:00000000 REG_SECOND
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4400   .rodata.REG_HUNDREDTH:00000000 REG_HUNDREDTH
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4401   .rodata.REG_HUNDREDTH:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4407   .rodata.WATCHDOG_MAX_SECONDS:00000000 WATCHDOG_MAX_SECONDS
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4404   .rodata.WATCHDOG_MAX_SECONDS:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4414   .rodata.RESET_DISABLE_XT:00000000 RESET_DISABLE_XT
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4411   .rodata.RESET_DISABLE_XT:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4421   .rodata.RESET_PRESERVE_REPEATING_TIMER:00000000 RESET_PRESERVE_REPEATING_TIMER
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4418   .rodata.RESET_PRESERVE_REPEATING_TIMER:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4425   .bss.watchdogUpdatePeriod:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4435   .bss.lastWatchdogMillis:00000000 lastWatchdogMillis
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4432   .bss.lastWatchdogMillis:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4439   .bss.watchdogSecs:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc1JsS8h.s:4449   .bss.wakeReason:00000000 $d

UNDEFINED SYMBOLS
HAL_GetTick
print_error
HAL_GPIO_ReadPin
printf_
__aeabi_idiv
__aeabi_idivmod
HAL_Delay
memset
