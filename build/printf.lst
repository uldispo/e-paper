ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"printf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/printf.c"
  18              		.section	.text._out_buffer,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	_out_buffer:
  25              	.LVL0:
  26              	.LFB426:
   1:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
   2:Core/Src/printf.c **** // \author (c) Marco Paland (info@paland.com)
   3:Core/Src/printf.c **** //             2014-2019, PALANDesign Hannover, Germany
   4:Core/Src/printf.c **** //
   5:Core/Src/printf.c **** // \license The MIT License (MIT)
   6:Core/Src/printf.c **** //
   7:Core/Src/printf.c **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   8:Core/Src/printf.c **** // of this software and associated documentation files (the "Software"), to deal
   9:Core/Src/printf.c **** // in the Software without restriction, including without limitation the rights
  10:Core/Src/printf.c **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:Core/Src/printf.c **** // copies of the Software, and to permit persons to whom the Software is
  12:Core/Src/printf.c **** // furnished to do so, subject to the following conditions:
  13:Core/Src/printf.c **** //
  14:Core/Src/printf.c **** // The above copyright notice and this permission notice shall be included in
  15:Core/Src/printf.c **** // all copies or substantial portions of the Software.
  16:Core/Src/printf.c **** //
  17:Core/Src/printf.c **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Core/Src/printf.c **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:Core/Src/printf.c **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:Core/Src/printf.c **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:Core/Src/printf.c **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:Core/Src/printf.c **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  23:Core/Src/printf.c **** // THE SOFTWARE.
  24:Core/Src/printf.c **** //
  25:Core/Src/printf.c **** // \brief Tiny printf, sprintf and (v)snprintf implementation, optimized for speed on
  26:Core/Src/printf.c **** //        embedded systems with a very limited resources. These routines are thread
  27:Core/Src/printf.c **** //        safe and reentrant!
  28:Core/Src/printf.c **** //        Use this instead of the bloated standard/newlib printf cause these use
  29:Core/Src/printf.c **** //        malloc for printf (and may not be thread safe).
  30:Core/Src/printf.c **** //
  31:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  32:Core/Src/printf.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 2


  33:Core/Src/printf.c **** #include <stdbool.h>
  34:Core/Src/printf.c **** #include <stdint.h>
  35:Core/Src/printf.c **** 
  36:Core/Src/printf.c **** #include "printf.h"
  37:Core/Src/printf.c **** #include "main.h"
  38:Core/Src/printf.c **** 
  39:Core/Src/printf.c **** 
  40:Core/Src/printf.c **** // define this globally (e.g. gcc -DPRINTF_INCLUDE_CONFIG_H ...) to include the
  41:Core/Src/printf.c **** // printf_config.h header file
  42:Core/Src/printf.c **** // default: undefined
  43:Core/Src/printf.c **** #ifdef PRINTF_INCLUDE_CONFIG_H
  44:Core/Src/printf.c **** #include "printf_config.h"
  45:Core/Src/printf.c **** #endif
  46:Core/Src/printf.c **** 
  47:Core/Src/printf.c **** 
  48:Core/Src/printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  49:Core/Src/printf.c **** // numeric number including padded zeros (dynamically created on stack)
  50:Core/Src/printf.c **** // default: 32 byte
  51:Core/Src/printf.c **** #ifndef PRINTF_NTOA_BUFFER_SIZE
  52:Core/Src/printf.c **** #define PRINTF_NTOA_BUFFER_SIZE    32U
  53:Core/Src/printf.c **** #endif
  54:Core/Src/printf.c **** 
  55:Core/Src/printf.c **** // 'ftoa' conversion buffer size, this must be big enough to hold one converted
  56:Core/Src/printf.c **** // float number including padded zeros (dynamically created on stack)
  57:Core/Src/printf.c **** // default: 32 byte
  58:Core/Src/printf.c **** #ifndef PRINTF_FTOA_BUFFER_SIZE
  59:Core/Src/printf.c **** #define PRINTF_FTOA_BUFFER_SIZE    32U
  60:Core/Src/printf.c **** #endif
  61:Core/Src/printf.c **** 
  62:Core/Src/printf.c **** // support for the floating point type (%f)
  63:Core/Src/printf.c **** // default: activated
  64:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_FLOAT
  65:Core/Src/printf.c **** #define PRINTF_SUPPORT_FLOAT
  66:Core/Src/printf.c **** #endif
  67:Core/Src/printf.c **** 
  68:Core/Src/printf.c **** // support for exponential floating point notation (%e/%g)
  69:Core/Src/printf.c **** // default: activated
  70:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_EXPONENTIAL
  71:Core/Src/printf.c **** #define PRINTF_SUPPORT_EXPONENTIAL
  72:Core/Src/printf.c **** #endif
  73:Core/Src/printf.c **** 
  74:Core/Src/printf.c **** // define the default floating point precision
  75:Core/Src/printf.c **** // default: 6 digits
  76:Core/Src/printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
  77:Core/Src/printf.c **** #define PRINTF_DEFAULT_FLOAT_PRECISION  6U
  78:Core/Src/printf.c **** #endif
  79:Core/Src/printf.c **** 
  80:Core/Src/printf.c **** // define the largest float suitable to print with %f
  81:Core/Src/printf.c **** // default: 1e9
  82:Core/Src/printf.c **** #ifndef PRINTF_MAX_FLOAT
  83:Core/Src/printf.c **** #define PRINTF_MAX_FLOAT  1e9
  84:Core/Src/printf.c **** #endif
  85:Core/Src/printf.c **** 
  86:Core/Src/printf.c **** // support for the long long types (%llu or %p)
  87:Core/Src/printf.c **** // default: activated
  88:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_LONG_LONG
  89:Core/Src/printf.c **** #define PRINTF_SUPPORT_LONG_LONG
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 3


  90:Core/Src/printf.c **** #endif
  91:Core/Src/printf.c **** 
  92:Core/Src/printf.c **** // support for the ptrdiff_t type (%t)
  93:Core/Src/printf.c **** // ptrdiff_t is normally defined in <stddef.h> as long or long long type
  94:Core/Src/printf.c **** // default: activated
  95:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_PTRDIFF_T
  96:Core/Src/printf.c **** #define PRINTF_SUPPORT_PTRDIFF_T
  97:Core/Src/printf.c **** #endif
  98:Core/Src/printf.c **** 
  99:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
 100:Core/Src/printf.c **** 
 101:Core/Src/printf.c **** // internal flag definitions
 102:Core/Src/printf.c **** #define FLAGS_ZEROPAD   (1U <<  0U)
 103:Core/Src/printf.c **** #define FLAGS_LEFT      (1U <<  1U)
 104:Core/Src/printf.c **** #define FLAGS_PLUS      (1U <<  2U)
 105:Core/Src/printf.c **** #define FLAGS_SPACE     (1U <<  3U)
 106:Core/Src/printf.c **** #define FLAGS_HASH      (1U <<  4U)
 107:Core/Src/printf.c **** #define FLAGS_UPPERCASE (1U <<  5U)
 108:Core/Src/printf.c **** #define FLAGS_CHAR      (1U <<  6U)
 109:Core/Src/printf.c **** #define FLAGS_SHORT     (1U <<  7U)
 110:Core/Src/printf.c **** #define FLAGS_LONG      (1U <<  8U)
 111:Core/Src/printf.c **** #define FLAGS_LONG_LONG (1U <<  9U)
 112:Core/Src/printf.c **** #define FLAGS_PRECISION (1U << 10U)
 113:Core/Src/printf.c **** #define FLAGS_ADAPT_EXP (1U << 11U)
 114:Core/Src/printf.c **** 
 115:Core/Src/printf.c **** 
 116:Core/Src/printf.c **** // import float.h for DBL_MAX
 117:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 118:Core/Src/printf.c **** #include <float.h>
 119:Core/Src/printf.c **** #endif
 120:Core/Src/printf.c **** 
 121:Core/Src/printf.c **** 
 122:Core/Src/printf.c **** // output function type
 123:Core/Src/printf.c **** typedef void (*out_fct_type)(char character, void* buffer, size_t idx, size_t maxlen);
 124:Core/Src/printf.c **** 
 125:Core/Src/printf.c **** 
 126:Core/Src/printf.c **** // wrapper (used as buffer) for output function type
 127:Core/Src/printf.c **** typedef struct {
 128:Core/Src/printf.c ****   void  (*fct)(char character, void* arg);
 129:Core/Src/printf.c ****   void* arg;
 130:Core/Src/printf.c **** } out_fct_wrap_type;
 131:Core/Src/printf.c **** 
 132:Core/Src/printf.c **** 
 133:Core/Src/printf.c **** // internal buffer output
 134:Core/Src/printf.c **** static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
 135:Core/Src/printf.c **** {
  27              		.loc 1 135 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 136:Core/Src/printf.c ****   if (idx < maxlen) {
  32              		.loc 1 136 3 view .LVU1
  33              		.loc 1 136 6 is_stmt 0 view .LVU2
  34 0000 9A42     		cmp	r2, r3
  35 0002 00D2     		bcs	.L1
 137:Core/Src/printf.c ****     ((char*)buffer)[idx] = character;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 4


  36              		.loc 1 137 5 is_stmt 1 view .LVU3
  37              		.loc 1 137 26 is_stmt 0 view .LVU4
  38 0004 8854     		strb	r0, [r1, r2]
  39              	.L1:
 138:Core/Src/printf.c ****   }
 139:Core/Src/printf.c **** }
  40              		.loc 1 139 1 view .LVU5
  41              		@ sp needed
  42 0006 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE426:
  46              		.section	.text._out_null,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.code	16
  50              		.thumb_func
  52              	_out_null:
  53              	.LVL1:
  54              	.LFB427:
 140:Core/Src/printf.c **** 
 141:Core/Src/printf.c **** 
 142:Core/Src/printf.c **** // internal null output
 143:Core/Src/printf.c **** static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
 144:Core/Src/printf.c **** {
  55              		.loc 1 144 1 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
 145:Core/Src/printf.c ****   (void)character; (void)buffer; (void)idx; (void)maxlen;
  60              		.loc 1 145 3 view .LVU7
  61              		.loc 1 145 20 view .LVU8
  62              		.loc 1 145 34 view .LVU9
  63              		.loc 1 145 45 view .LVU10
 146:Core/Src/printf.c **** }
  64              		.loc 1 146 1 is_stmt 0 view .LVU11
  65              		@ sp needed
  66 0000 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE427:
  70              		.section	.text._out_fct,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.code	16
  74              		.thumb_func
  76              	_out_fct:
  77              	.LVL2:
  78              	.LFB429:
 147:Core/Src/printf.c **** 
 148:Core/Src/printf.c **** 
 149:Core/Src/printf.c **** // internal _putchar wrapper
 150:Core/Src/printf.c **** static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
 151:Core/Src/printf.c **** {
 152:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 153:Core/Src/printf.c ****   if (character) {
 154:Core/Src/printf.c ****     _putchar(character);
 155:Core/Src/printf.c ****   }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 5


 156:Core/Src/printf.c **** }
 157:Core/Src/printf.c **** 
 158:Core/Src/printf.c **** 
 159:Core/Src/printf.c **** // internal output function wrapper
 160:Core/Src/printf.c **** static inline void _out_fct(char character, void* buffer, size_t idx, size_t maxlen)
 161:Core/Src/printf.c **** {
  79              		.loc 1 161 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		.loc 1 161 1 is_stmt 0 view .LVU13
  84 0000 10B5     		push	{r4, lr}
  85              	.LCFI0:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
 162:Core/Src/printf.c ****   (void)idx; (void)maxlen;
  89              		.loc 1 162 3 is_stmt 1 view .LVU14
  90              		.loc 1 162 14 view .LVU15
 163:Core/Src/printf.c ****   if (character) {
  91              		.loc 1 163 3 view .LVU16
  92              		.loc 1 163 6 is_stmt 0 view .LVU17
  93 0002 0028     		cmp	r0, #0
  94 0004 02D0     		beq	.L4
 164:Core/Src/printf.c ****     // buffer is the output fct pointer
 165:Core/Src/printf.c ****     ((out_fct_wrap_type*)buffer)->fct(character, ((out_fct_wrap_type*)buffer)->arg);
  95              		.loc 1 165 5 is_stmt 1 view .LVU18
  96              		.loc 1 165 33 is_stmt 0 view .LVU19
  97 0006 0B68     		ldr	r3, [r1]
  98              	.LVL3:
  99              		.loc 1 165 6 view .LVU20
 100 0008 4968     		ldr	r1, [r1, #4]
 101              	.LVL4:
 102              		.loc 1 165 6 view .LVU21
 103 000a 9847     		blx	r3
 104              	.LVL5:
 105              	.L4:
 166:Core/Src/printf.c ****   }
 167:Core/Src/printf.c **** }
 106              		.loc 1 167 1 view .LVU22
 107              		@ sp needed
 108 000c 10BD     		pop	{r4, pc}
 109              		.cfi_endproc
 110              	.LFE429:
 112              		.section	.text._atoi,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.code	16
 116              		.thumb_func
 118              	_atoi:
 119              	.LVL6:
 120              	.LFB432:
 168:Core/Src/printf.c **** 
 169:Core/Src/printf.c **** 
 170:Core/Src/printf.c **** // internal secure strlen
 171:Core/Src/printf.c **** // \return The length of the string (excluding the terminating 0) limited by 'maxsize'
 172:Core/Src/printf.c **** static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 6


 173:Core/Src/printf.c **** {
 174:Core/Src/printf.c ****   const char* s;
 175:Core/Src/printf.c ****   for (s = str; *s && maxsize--; ++s);
 176:Core/Src/printf.c ****   return (unsigned int)(s - str);
 177:Core/Src/printf.c **** }
 178:Core/Src/printf.c **** 
 179:Core/Src/printf.c **** 
 180:Core/Src/printf.c **** // internal test if char is a digit (0-9)
 181:Core/Src/printf.c **** // \return true if char is a digit
 182:Core/Src/printf.c **** static inline bool _is_digit(char ch)
 183:Core/Src/printf.c **** {
 184:Core/Src/printf.c ****   return (ch >= '0') && (ch <= '9');
 185:Core/Src/printf.c **** }
 186:Core/Src/printf.c **** 
 187:Core/Src/printf.c **** 
 188:Core/Src/printf.c **** // internal ASCII string to unsigned int conversion
 189:Core/Src/printf.c **** static unsigned int _atoi(const char** str)
 190:Core/Src/printf.c **** {
 121              		.loc 1 190 1 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              		.loc 1 190 1 is_stmt 0 view .LVU24
 127 0000 0100     		movs	r1, r0
 191:Core/Src/printf.c ****   unsigned int i = 0U;
 128              		.loc 1 191 3 is_stmt 1 view .LVU25
 129              	.LVL7:
 192:Core/Src/printf.c ****   while (_is_digit(**str)) {
 130              		.loc 1 192 3 view .LVU26
 191:Core/Src/printf.c ****   unsigned int i = 0U;
 131              		.loc 1 191 16 is_stmt 0 view .LVU27
 132 0002 0020     		movs	r0, #0
 133              	.LVL8:
 134              		.loc 1 192 9 view .LVU28
 135 0004 07E0     		b	.L7
 136              	.LVL9:
 137              	.L8:
 193:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 138              		.loc 1 193 5 is_stmt 1 view .LVU29
 139              		.loc 1 193 11 is_stmt 0 view .LVU30
 140 0006 8300     		lsls	r3, r0, #2
 141 0008 1B18     		adds	r3, r3, r0
 142 000a 5B00     		lsls	r3, r3, #1
 143              		.loc 1 193 42 view .LVU31
 144 000c 501C     		adds	r0, r2, #1
 145              	.LVL10:
 146              		.loc 1 193 42 view .LVU32
 147 000e 0860     		str	r0, [r1]
 148              		.loc 1 193 34 view .LVU33
 149 0010 1078     		ldrb	r0, [r2]
 150              		.loc 1 193 17 view .LVU34
 151 0012 C018     		adds	r0, r0, r3
 152              		.loc 1 193 7 view .LVU35
 153 0014 3038     		subs	r0, r0, #48
 154              	.LVL11:
 155              	.L7:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 7


 192:Core/Src/printf.c ****   while (_is_digit(**str)) {
 156              		.loc 1 192 10 is_stmt 1 view .LVU36
 192:Core/Src/printf.c ****   while (_is_digit(**str)) {
 157              		.loc 1 192 21 is_stmt 0 view .LVU37
 158 0016 0A68     		ldr	r2, [r1]
 192:Core/Src/printf.c ****   while (_is_digit(**str)) {
 159              		.loc 1 192 10 view .LVU38
 160 0018 1378     		ldrb	r3, [r2]
 161              	.LVL12:
 162              	.LBB20:
 163              	.LBI20:
 182:Core/Src/printf.c **** {
 164              		.loc 1 182 20 is_stmt 1 view .LVU39
 165              	.LBB21:
 184:Core/Src/printf.c **** }
 166              		.loc 1 184 3 view .LVU40
 184:Core/Src/printf.c **** }
 167              		.loc 1 184 22 is_stmt 0 view .LVU41
 168 001a 303B     		subs	r3, r3, #48
 169 001c DBB2     		uxtb	r3, r3
 170              	.LVL13:
 184:Core/Src/printf.c **** }
 171              		.loc 1 184 22 view .LVU42
 172              	.LBE21:
 173              	.LBE20:
 192:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 174              		.loc 1 192 10 view .LVU43
 175 001e 092B     		cmp	r3, #9
 176 0020 F1D9     		bls	.L8
 194:Core/Src/printf.c ****   }
 195:Core/Src/printf.c ****   return i;
 177              		.loc 1 195 3 is_stmt 1 view .LVU44
 196:Core/Src/printf.c **** }
 178              		.loc 1 196 1 is_stmt 0 view .LVU45
 179              		@ sp needed
 180 0022 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE432:
 184              		.section	.text._out_rev,"ax",%progbits
 185              		.align	1
 186              		.syntax unified
 187              		.code	16
 188              		.thumb_func
 190              	_out_rev:
 191              	.LVL14:
 192              	.LFB433:
 197:Core/Src/printf.c **** 
 198:Core/Src/printf.c **** 
 199:Core/Src/printf.c **** // output the specified string in reverse, taking care of any zero-padding
 200:Core/Src/printf.c **** static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, 
 201:Core/Src/printf.c **** {
 193              		.loc 1 201 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 16, pretend = 0, frame = 8
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		.loc 1 201 1 is_stmt 0 view .LVU47
 198 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 8


 199              	.LCFI1:
 200              		.cfi_def_cfa_offset 20
 201              		.cfi_offset 4, -20
 202              		.cfi_offset 5, -16
 203              		.cfi_offset 6, -12
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 DE46     		mov	lr, fp
 207 0004 5746     		mov	r7, r10
 208 0006 4E46     		mov	r6, r9
 209 0008 4546     		mov	r5, r8
 210 000a E0B5     		push	{r5, r6, r7, lr}
 211              	.LCFI2:
 212              		.cfi_def_cfa_offset 36
 213              		.cfi_offset 8, -36
 214              		.cfi_offset 9, -32
 215              		.cfi_offset 10, -28
 216              		.cfi_offset 11, -24
 217 000c 83B0     		sub	sp, sp, #12
 218              	.LCFI3:
 219              		.cfi_def_cfa_offset 48
 220 000e 9346     		mov	fp, r2
 221 0010 1F00     		movs	r7, r3
 222 0012 0C9B     		ldr	r3, [sp, #48]
 223              	.LVL15:
 224              		.loc 1 201 1 view .LVU48
 225 0014 9A46     		mov	r10, r3
 226 0016 0D9C     		ldr	r4, [sp, #52]
 227 0018 0E9B     		ldr	r3, [sp, #56]
 228 001a 9946     		mov	r9, r3
 202:Core/Src/printf.c ****   const size_t start_idx = idx;
 229              		.loc 1 202 3 is_stmt 1 view .LVU49
 230              	.LVL16:
 203:Core/Src/printf.c **** 
 204:Core/Src/printf.c ****   // pad spaces up to given width
 205:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 231              		.loc 1 205 3 view .LVU50
 232              		.loc 1 205 6 is_stmt 0 view .LVU51
 233 001c 0F9B     		ldr	r3, [sp, #60]
 234 001e 9B07     		lsls	r3, r3, #30
 235 0020 03D0     		beq	.L18
 236 0022 B846     		mov	r8, r7
 237 0024 0F00     		movs	r7, r1
 238              	.LVL17:
 239              		.loc 1 205 6 view .LVU52
 240 0026 0600     		movs	r6, r0
 241 0028 22E0     		b	.L11
 242              	.LVL18:
 243              	.L18:
 244              		.loc 1 205 6 view .LVU53
 245 002a 0192     		str	r2, [sp, #4]
 246 002c A346     		mov	fp, r4
 247 002e 8846     		mov	r8, r1
 248 0030 4E46     		mov	r6, r9
 249 0032 B946     		mov	r9, r7
 250 0034 0700     		movs	r7, r0
 251              	.LVL19:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 9


 252              	.L10:
 253              	.LBB22:
 206:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 254              		.loc 1 206 28 is_stmt 1 discriminator 1 view .LVU54
 255 0036 B442     		cmp	r4, r6
 256 0038 07D2     		bcs	.L20
 207:Core/Src/printf.c ****       out(' ', buffer, idx++, maxlen);
 257              		.loc 1 207 7 discriminator 3 view .LVU55
 258 003a 551C     		adds	r5, r2, #1
 259              	.LVL20:
 260              		.loc 1 207 7 is_stmt 0 discriminator 3 view .LVU56
 261 003c 4B46     		mov	r3, r9
 262 003e 4146     		mov	r1, r8
 263 0040 2020     		movs	r0, #32
 264 0042 B847     		blx	r7
 265              	.LVL21:
 206:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 266              		.loc 1 206 38 is_stmt 1 discriminator 3 view .LVU57
 267 0044 0134     		adds	r4, r4, #1
 268              	.LVL22:
 269              		.loc 1 207 7 is_stmt 0 discriminator 3 view .LVU58
 270 0046 2A00     		movs	r2, r5
 271 0048 F5E7     		b	.L10
 272              	.LVL23:
 273              	.L20:
 274              		.loc 1 207 7 discriminator 3 view .LVU59
 275 004a 3D00     		movs	r5, r7
 276 004c 4F46     		mov	r7, r9
 277              	.LVL24:
 278              		.loc 1 207 7 discriminator 3 view .LVU60
 279 004e 5C46     		mov	r4, fp
 280              	.LVL25:
 281              		.loc 1 207 7 discriminator 3 view .LVU61
 282 0050 019B     		ldr	r3, [sp, #4]
 283 0052 9B46     		mov	fp, r3
 284 0054 B146     		mov	r9, r6
 285              	.LVL26:
 286              		.loc 1 207 7 discriminator 3 view .LVU62
 287 0056 4646     		mov	r6, r8
 288 0058 B846     		mov	r8, r7
 289              	.LVL27:
 290              		.loc 1 207 7 discriminator 3 view .LVU63
 291 005a 3700     		movs	r7, r6
 292              	.LVL28:
 293              		.loc 1 207 7 discriminator 3 view .LVU64
 294 005c 2E00     		movs	r6, r5
 295              	.LVL29:
 296              		.loc 1 207 7 discriminator 3 view .LVU65
 297 005e 07E0     		b	.L11
 298              	.LVL30:
 299              	.L14:
 300              		.loc 1 207 7 discriminator 3 view .LVU66
 301              	.LBE22:
 208:Core/Src/printf.c ****     }
 209:Core/Src/printf.c ****   }
 210:Core/Src/printf.c **** 
 211:Core/Src/printf.c ****   // reverse string
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 10


 212:Core/Src/printf.c ****   while (len) {
 213:Core/Src/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 302              		.loc 1 213 5 is_stmt 1 view .LVU67
 303 0060 013C     		subs	r4, r4, #1
 304              	.LVL31:
 305              		.loc 1 213 5 is_stmt 0 view .LVU68
 306 0062 551C     		adds	r5, r2, #1
 307              	.LVL32:
 308              		.loc 1 213 5 view .LVU69
 309 0064 5346     		mov	r3, r10
 310 0066 185D     		ldrb	r0, [r3, r4]
 311 0068 4346     		mov	r3, r8
 312 006a 3900     		movs	r1, r7
 313 006c B047     		blx	r6
 314              	.LVL33:
 315 006e 2A00     		movs	r2, r5
 316              	.LVL34:
 317              	.L11:
 212:Core/Src/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 318              		.loc 1 212 10 is_stmt 1 view .LVU70
 319 0070 002C     		cmp	r4, #0
 320 0072 F5D1     		bne	.L14
 214:Core/Src/printf.c ****   }
 215:Core/Src/printf.c **** 
 216:Core/Src/printf.c ****   // append pad spaces up to given width
 217:Core/Src/printf.c ****   if (flags & FLAGS_LEFT) {
 321              		.loc 1 217 6 is_stmt 0 view .LVU71
 322 0074 3500     		movs	r5, r6
 323 0076 3E00     		movs	r6, r7
 324              	.LVL35:
 325              		.loc 1 217 6 view .LVU72
 326 0078 4746     		mov	r7, r8
 327              	.LVL36:
 328              		.loc 1 217 3 is_stmt 1 view .LVU73
 329              		.loc 1 217 6 is_stmt 0 view .LVU74
 330 007a 0F9B     		ldr	r3, [sp, #60]
 331 007c 9B07     		lsls	r3, r3, #30
 332 007e 07D4     		bmi	.L19
 333              	.LVL37:
 334              	.L9:
 218:Core/Src/printf.c ****     while (idx - start_idx < width) {
 219:Core/Src/printf.c ****       out(' ', buffer, idx++, maxlen);
 220:Core/Src/printf.c ****     }
 221:Core/Src/printf.c ****   }
 222:Core/Src/printf.c **** 
 223:Core/Src/printf.c ****   return idx;
 224:Core/Src/printf.c **** }
 335              		.loc 1 224 1 view .LVU75
 336 0080 1000     		movs	r0, r2
 337 0082 03B0     		add	sp, sp, #12
 338              		@ sp needed
 339 0084 F0BC     		pop	{r4, r5, r6, r7}
 340 0086 BB46     		mov	fp, r7
 341 0088 B246     		mov	r10, r6
 342 008a A946     		mov	r9, r5
 343 008c A046     		mov	r8, r4
 344 008e F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 11


 345              	.LVL38:
 346              	.L19:
 347              		.loc 1 224 1 view .LVU76
 348 0090 B046     		mov	r8, r6
 349 0092 4E46     		mov	r6, r9
 350              	.LVL39:
 351              		.loc 1 224 1 view .LVU77
 352 0094 B946     		mov	r9, r7
 353 0096 2F00     		movs	r7, r5
 354              	.LVL40:
 355              		.loc 1 224 1 view .LVU78
 356 0098 5D46     		mov	r5, fp
 357              	.LVL41:
 358              	.L15:
 218:Core/Src/printf.c ****     while (idx - start_idx < width) {
 359              		.loc 1 218 28 is_stmt 1 view .LVU79
 218:Core/Src/printf.c ****     while (idx - start_idx < width) {
 360              		.loc 1 218 16 is_stmt 0 view .LVU80
 361 009a 531B     		subs	r3, r2, r5
 218:Core/Src/printf.c ****     while (idx - start_idx < width) {
 362              		.loc 1 218 28 view .LVU81
 363 009c B342     		cmp	r3, r6
 364 009e EFD2     		bcs	.L9
 219:Core/Src/printf.c ****     }
 365              		.loc 1 219 7 is_stmt 1 view .LVU82
 366 00a0 541C     		adds	r4, r2, #1
 367              	.LVL42:
 219:Core/Src/printf.c ****     }
 368              		.loc 1 219 7 is_stmt 0 view .LVU83
 369 00a2 4B46     		mov	r3, r9
 370 00a4 4146     		mov	r1, r8
 371 00a6 2020     		movs	r0, #32
 372 00a8 B847     		blx	r7
 373              	.LVL43:
 374 00aa 2200     		movs	r2, r4
 375 00ac F5E7     		b	.L15
 376              		.cfi_endproc
 377              	.LFE433:
 379              		.section	.text._ntoa_format,"ax",%progbits
 380              		.align	1
 381              		.syntax unified
 382              		.code	16
 383              		.thumb_func
 385              	_ntoa_format:
 386              	.LVL44:
 387              	.LFB434:
 225:Core/Src/printf.c **** 
 226:Core/Src/printf.c **** 
 227:Core/Src/printf.c **** // internal itoa format
 228:Core/Src/printf.c **** static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, si
 229:Core/Src/printf.c **** {
 388              		.loc 1 229 1 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 28, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		.loc 1 229 1 is_stmt 0 view .LVU85
 393 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 12


 394              	.LCFI4:
 395              		.cfi_def_cfa_offset 20
 396              		.cfi_offset 4, -20
 397              		.cfi_offset 5, -16
 398              		.cfi_offset 6, -12
 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 401 0002 CE46     		mov	lr, r9
 402 0004 4746     		mov	r7, r8
 403 0006 80B5     		push	{r7, lr}
 404              	.LCFI5:
 405              		.cfi_def_cfa_offset 28
 406              		.cfi_offset 8, -28
 407              		.cfi_offset 9, -24
 408 0008 85B0     		sub	sp, sp, #20
 409              	.LCFI6:
 410              		.cfi_def_cfa_offset 48
 411 000a 9446     		mov	ip, r2
 412 000c 9846     		mov	r8, r3
 413 000e 0C9D     		ldr	r5, [sp, #48]
 414 0010 0D9C     		ldr	r4, [sp, #52]
 415 0012 0EAB     		add	r3, sp, #56
 416              	.LVL45:
 417              		.loc 1 229 1 view .LVU86
 418 0014 1B78     		ldrb	r3, [r3]
 419              	.LVL46:
 420              		.loc 1 229 1 view .LVU87
 421 0016 9946     		mov	r9, r3
 422 0018 109A     		ldr	r2, [sp, #64]
 423              	.LVL47:
 424              		.loc 1 229 1 view .LVU88
 425 001a 119B     		ldr	r3, [sp, #68]
 426 001c 129E     		ldr	r6, [sp, #72]
 230:Core/Src/printf.c ****   // pad leading zeros
 231:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT)) {
 427              		.loc 1 231 3 is_stmt 1 view .LVU89
 428              		.loc 1 231 6 is_stmt 0 view .LVU90
 429 001e B707     		lsls	r7, r6, #30
 430 0020 1CD4     		bmi	.L22
 232:Core/Src/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 431              		.loc 1 232 5 is_stmt 1 view .LVU91
 432              		.loc 1 232 8 is_stmt 0 view .LVU92
 433 0022 002B     		cmp	r3, #0
 434 0024 0CD0     		beq	.L25
 435              		.loc 1 232 15 discriminator 1 view .LVU93
 436 0026 F707     		lsls	r7, r6, #31
 437 0028 0AD5     		bpl	.L25
 438              		.loc 1 232 42 discriminator 2 view .LVU94
 439 002a 4F46     		mov	r7, r9
 440 002c 002F     		cmp	r7, #0
 441 002e 02D1     		bne	.L24
 442              		.loc 1 232 65 discriminator 3 view .LVU95
 443 0030 0C37     		adds	r7, r7, #12
 444              		.loc 1 232 55 discriminator 3 view .LVU96
 445 0032 3742     		tst	r7, r6
 446 0034 04D0     		beq	.L25
 447              	.L24:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 13


 233:Core/Src/printf.c ****       width--;
 448              		.loc 1 233 7 is_stmt 1 view .LVU97
 449              		.loc 1 233 12 is_stmt 0 view .LVU98
 450 0036 013B     		subs	r3, r3, #1
 451              	.LVL48:
 452              		.loc 1 233 12 view .LVU99
 453 0038 02E0     		b	.L25
 454              	.LVL49:
 455              	.L27:
 234:Core/Src/printf.c ****     }
 235:Core/Src/printf.c ****     while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 236:Core/Src/printf.c ****       buf[len++] = '0';
 456              		.loc 1 236 7 is_stmt 1 view .LVU100
 457              		.loc 1 236 18 is_stmt 0 view .LVU101
 458 003a 3027     		movs	r7, #48
 459 003c 2F55     		strb	r7, [r5, r4]
 460              		.loc 1 236 14 view .LVU102
 461 003e 0134     		adds	r4, r4, #1
 462              	.LVL50:
 463              	.L25:
 235:Core/Src/printf.c ****       buf[len++] = '0';
 464              		.loc 1 235 25 is_stmt 1 view .LVU103
 465 0040 9442     		cmp	r4, r2
 466 0042 01D2     		bcs	.L28
 235:Core/Src/printf.c ****       buf[len++] = '0';
 467              		.loc 1 235 25 is_stmt 0 discriminator 1 view .LVU104
 468 0044 1F2C     		cmp	r4, #31
 469 0046 F8D9     		bls	.L27
 470              	.L28:
 237:Core/Src/printf.c ****     }
 238:Core/Src/printf.c ****     while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 471              		.loc 1 238 53 is_stmt 1 view .LVU105
 472 0048 F707     		lsls	r7, r6, #31
 473 004a 07D5     		bpl	.L22
 474              		.loc 1 238 36 is_stmt 0 discriminator 1 view .LVU106
 475 004c 9C42     		cmp	r4, r3
 476 004e 05D2     		bcs	.L22
 477              		.loc 1 238 53 discriminator 2 view .LVU107
 478 0050 1F2C     		cmp	r4, #31
 479 0052 03D8     		bhi	.L22
 239:Core/Src/printf.c ****       buf[len++] = '0';
 480              		.loc 1 239 7 is_stmt 1 view .LVU108
 481              	.LVL51:
 482              		.loc 1 239 18 is_stmt 0 view .LVU109
 483 0054 3027     		movs	r7, #48
 484 0056 2F55     		strb	r7, [r5, r4]
 485              		.loc 1 239 14 view .LVU110
 486 0058 0134     		adds	r4, r4, #1
 487              	.LVL52:
 488              		.loc 1 239 14 view .LVU111
 489 005a F5E7     		b	.L28
 490              	.LVL53:
 491              	.L22:
 240:Core/Src/printf.c ****     }
 241:Core/Src/printf.c ****   }
 242:Core/Src/printf.c **** 
 243:Core/Src/printf.c ****   // handle hash
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 14


 244:Core/Src/printf.c ****   if (flags & FLAGS_HASH) {
 492              		.loc 1 244 3 is_stmt 1 view .LVU112
 493              		.loc 1 244 6 is_stmt 0 view .LVU113
 494 005c F706     		lsls	r7, r6, #27
 495 005e 12D5     		bpl	.L30
 245:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 496              		.loc 1 245 5 is_stmt 1 view .LVU114
 497              		.loc 1 245 8 is_stmt 0 view .LVU115
 498 0060 7705     		lsls	r7, r6, #21
 499 0062 05D4     		bmi	.L31
 500              		.loc 1 245 36 discriminator 1 view .LVU116
 501 0064 002C     		cmp	r4, #0
 502 0066 03D0     		beq	.L31
 503              		.loc 1 245 43 discriminator 2 view .LVU117
 504 0068 9442     		cmp	r4, r2
 505 006a 21D0     		beq	.L32
 506              		.loc 1 245 61 discriminator 3 view .LVU118
 507 006c 9C42     		cmp	r4, r3
 508 006e 1FD0     		beq	.L32
 509              	.L31:
 246:Core/Src/printf.c ****       len--;
 247:Core/Src/printf.c ****       if (len && (base == 16U)) {
 248:Core/Src/printf.c ****         len--;
 249:Core/Src/printf.c ****       }
 250:Core/Src/printf.c ****     }
 251:Core/Src/printf.c ****     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 510              		.loc 1 251 5 is_stmt 1 view .LVU119
 511              		.loc 1 251 8 is_stmt 0 view .LVU120
 512 0070 0F9A     		ldr	r2, [sp, #60]
 513 0072 102A     		cmp	r2, #16
 514 0074 32D0     		beq	.L49
 515              	.LVL54:
 516              	.L34:
 252:Core/Src/printf.c ****       buf[len++] = 'x';
 253:Core/Src/printf.c ****     }
 254:Core/Src/printf.c ****     else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 255:Core/Src/printf.c ****       buf[len++] = 'X';
 256:Core/Src/printf.c ****     }
 257:Core/Src/printf.c ****     else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 517              		.loc 1 257 10 is_stmt 1 view .LVU121
 518              		.loc 1 257 13 is_stmt 0 view .LVU122
 519 0076 0F9A     		ldr	r2, [sp, #60]
 520 0078 022A     		cmp	r2, #2
 521 007a 37D0     		beq	.L50
 522              	.L35:
 523              	.LVL55:
 258:Core/Src/printf.c ****       buf[len++] = 'b';
 259:Core/Src/printf.c ****     }
 260:Core/Src/printf.c ****     if (len < PRINTF_NTOA_BUFFER_SIZE) {
 524              		.loc 1 260 5 is_stmt 1 view .LVU123
 525              		.loc 1 260 8 is_stmt 0 view .LVU124
 526 007c 1F2C     		cmp	r4, #31
 527 007e 0AD8     		bhi	.L36
 261:Core/Src/printf.c ****       buf[len++] = '0';
 528              		.loc 1 261 7 is_stmt 1 view .LVU125
 529              	.LVL56:
 530              		.loc 1 261 18 is_stmt 0 view .LVU126
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 15


 531 0080 3022     		movs	r2, #48
 532 0082 2A55     		strb	r2, [r5, r4]
 533              		.loc 1 261 14 view .LVU127
 534 0084 0134     		adds	r4, r4, #1
 535              	.LVL57:
 536              	.L30:
 262:Core/Src/printf.c ****     }
 263:Core/Src/printf.c ****   }
 264:Core/Src/printf.c **** 
 265:Core/Src/printf.c ****   if (len < PRINTF_NTOA_BUFFER_SIZE) {
 537              		.loc 1 265 3 is_stmt 1 view .LVU128
 538              		.loc 1 265 6 is_stmt 0 view .LVU129
 539 0086 1F2C     		cmp	r4, #31
 540 0088 05D8     		bhi	.L36
 266:Core/Src/printf.c ****     if (negative) {
 541              		.loc 1 266 5 is_stmt 1 view .LVU130
 542              		.loc 1 266 8 is_stmt 0 view .LVU131
 543 008a 4A46     		mov	r2, r9
 544 008c 002A     		cmp	r2, #0
 545 008e 33D0     		beq	.L37
 267:Core/Src/printf.c ****       buf[len++] = '-';
 546              		.loc 1 267 7 is_stmt 1 view .LVU132
 547              	.LVL58:
 548              		.loc 1 267 18 is_stmt 0 view .LVU133
 549 0090 2D22     		movs	r2, #45
 550 0092 2A55     		strb	r2, [r5, r4]
 551              		.loc 1 267 14 view .LVU134
 552 0094 0134     		adds	r4, r4, #1
 553              	.LVL59:
 554              	.L36:
 268:Core/Src/printf.c ****     }
 269:Core/Src/printf.c ****     else if (flags & FLAGS_PLUS) {
 270:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 271:Core/Src/printf.c ****     }
 272:Core/Src/printf.c ****     else if (flags & FLAGS_SPACE) {
 273:Core/Src/printf.c ****       buf[len++] = ' ';
 274:Core/Src/printf.c ****     }
 275:Core/Src/printf.c ****   }
 276:Core/Src/printf.c **** 
 277:Core/Src/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 555              		.loc 1 277 3 is_stmt 1 view .LVU135
 556              		.loc 1 277 10 is_stmt 0 view .LVU136
 557 0096 0396     		str	r6, [sp, #12]
 558 0098 0293     		str	r3, [sp, #8]
 559 009a 0194     		str	r4, [sp, #4]
 560 009c 0095     		str	r5, [sp]
 561 009e 4346     		mov	r3, r8
 562              	.LVL60:
 563              		.loc 1 277 10 view .LVU137
 564 00a0 6246     		mov	r2, ip
 565 00a2 FFF7FEFF 		bl	_out_rev
 566              	.LVL61:
 278:Core/Src/printf.c **** }
 567              		.loc 1 278 1 view .LVU138
 568 00a6 05B0     		add	sp, sp, #20
 569              		@ sp needed
 570              	.LVL62:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 16


 571              	.LVL63:
 572              		.loc 1 278 1 view .LVU139
 573 00a8 C0BC     		pop	{r6, r7}
 574 00aa B946     		mov	r9, r7
 575 00ac B046     		mov	r8, r6
 576 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 577              	.LVL64:
 578              	.L32:
 246:Core/Src/printf.c ****       if (len && (base == 16U)) {
 579              		.loc 1 246 7 is_stmt 1 view .LVU140
 246:Core/Src/printf.c ****       if (len && (base == 16U)) {
 580              		.loc 1 246 10 is_stmt 0 view .LVU141
 581 00b0 621E     		subs	r2, r4, #1
 582              	.LVL65:
 247:Core/Src/printf.c ****         len--;
 583              		.loc 1 247 7 is_stmt 1 view .LVU142
 247:Core/Src/printf.c ****         len--;
 584              		.loc 1 247 10 is_stmt 0 view .LVU143
 585 00b2 012C     		cmp	r4, #1
 586 00b4 10D0     		beq	.L39
 247:Core/Src/printf.c ****         len--;
 587              		.loc 1 247 15 discriminator 1 view .LVU144
 588 00b6 0F9F     		ldr	r7, [sp, #60]
 589 00b8 102F     		cmp	r7, #16
 590 00ba 0BD0     		beq	.L51
 246:Core/Src/printf.c ****       if (len && (base == 16U)) {
 591              		.loc 1 246 10 view .LVU145
 592 00bc 1400     		movs	r4, r2
 593              	.LVL66:
 594              	.L33:
 254:Core/Src/printf.c ****       buf[len++] = 'X';
 595              		.loc 1 254 10 is_stmt 1 view .LVU146
 254:Core/Src/printf.c ****       buf[len++] = 'X';
 596              		.loc 1 254 13 is_stmt 0 view .LVU147
 597 00be 0F9A     		ldr	r2, [sp, #60]
 598 00c0 102A     		cmp	r2, #16
 599 00c2 D8D1     		bne	.L34
 254:Core/Src/printf.c ****       buf[len++] = 'X';
 600              		.loc 1 254 28 discriminator 1 view .LVU148
 601 00c4 B206     		lsls	r2, r6, #26
 602 00c6 D6D5     		bpl	.L34
 254:Core/Src/printf.c ****       buf[len++] = 'X';
 603              		.loc 1 254 57 discriminator 2 view .LVU149
 604 00c8 1F2C     		cmp	r4, #31
 605 00ca D4D8     		bhi	.L34
 255:Core/Src/printf.c ****     }
 606              		.loc 1 255 7 is_stmt 1 view .LVU150
 607              	.LVL67:
 255:Core/Src/printf.c ****     }
 608              		.loc 1 255 18 is_stmt 0 view .LVU151
 609 00cc 5822     		movs	r2, #88
 610 00ce 2A55     		strb	r2, [r5, r4]
 255:Core/Src/printf.c ****     }
 611              		.loc 1 255 14 view .LVU152
 612 00d0 0134     		adds	r4, r4, #1
 613              	.LVL68:
 255:Core/Src/printf.c ****     }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 17


 614              		.loc 1 255 18 view .LVU153
 615 00d2 D3E7     		b	.L35
 616              	.LVL69:
 617              	.L51:
 248:Core/Src/printf.c ****       }
 618              		.loc 1 248 9 is_stmt 1 view .LVU154
 248:Core/Src/printf.c ****       }
 619              		.loc 1 248 12 is_stmt 0 view .LVU155
 620 00d4 023C     		subs	r4, r4, #2
 621              	.LVL70:
 248:Core/Src/printf.c ****       }
 622              		.loc 1 248 12 view .LVU156
 623 00d6 CBE7     		b	.L31
 624              	.LVL71:
 625              	.L39:
 246:Core/Src/printf.c ****       if (len && (base == 16U)) {
 626              		.loc 1 246 10 view .LVU157
 627 00d8 1400     		movs	r4, r2
 628 00da C9E7     		b	.L31
 629              	.LVL72:
 630              	.L49:
 251:Core/Src/printf.c ****       buf[len++] = 'x';
 631              		.loc 1 251 23 discriminator 1 view .LVU158
 632 00dc B206     		lsls	r2, r6, #26
 633 00de EED4     		bmi	.L33
 251:Core/Src/printf.c ****       buf[len++] = 'x';
 634              		.loc 1 251 53 discriminator 2 view .LVU159
 635 00e0 1F2C     		cmp	r4, #31
 636 00e2 ECD8     		bhi	.L33
 252:Core/Src/printf.c ****     }
 637              		.loc 1 252 7 is_stmt 1 view .LVU160
 638              	.LVL73:
 252:Core/Src/printf.c ****     }
 639              		.loc 1 252 18 is_stmt 0 view .LVU161
 640 00e4 7822     		movs	r2, #120
 641 00e6 2A55     		strb	r2, [r5, r4]
 252:Core/Src/printf.c ****     }
 642              		.loc 1 252 14 view .LVU162
 643 00e8 0134     		adds	r4, r4, #1
 644              	.LVL74:
 252:Core/Src/printf.c ****     }
 645              		.loc 1 252 18 view .LVU163
 646 00ea C7E7     		b	.L35
 647              	.LVL75:
 648              	.L50:
 257:Core/Src/printf.c ****       buf[len++] = 'b';
 649              		.loc 1 257 27 discriminator 1 view .LVU164
 650 00ec 1F2C     		cmp	r4, #31
 651 00ee D2D8     		bhi	.L36
 258:Core/Src/printf.c ****     }
 652              		.loc 1 258 7 is_stmt 1 view .LVU165
 653              	.LVL76:
 258:Core/Src/printf.c ****     }
 654              		.loc 1 258 18 is_stmt 0 view .LVU166
 655 00f0 6032     		adds	r2, r2, #96
 656 00f2 2A55     		strb	r2, [r5, r4]
 258:Core/Src/printf.c ****     }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 18


 657              		.loc 1 258 14 view .LVU167
 658 00f4 0134     		adds	r4, r4, #1
 659              	.LVL77:
 258:Core/Src/printf.c ****     }
 660              		.loc 1 258 14 view .LVU168
 661 00f6 C1E7     		b	.L35
 662              	.L37:
 269:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 663              		.loc 1 269 10 is_stmt 1 view .LVU169
 269:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 664              		.loc 1 269 13 is_stmt 0 view .LVU170
 665 00f8 7207     		lsls	r2, r6, #29
 666 00fa 03D5     		bpl	.L38
 270:Core/Src/printf.c ****     }
 667              		.loc 1 270 7 is_stmt 1 view .LVU171
 668              	.LVL78:
 270:Core/Src/printf.c ****     }
 669              		.loc 1 270 18 is_stmt 0 view .LVU172
 670 00fc 2B22     		movs	r2, #43
 671 00fe 2A55     		strb	r2, [r5, r4]
 270:Core/Src/printf.c ****     }
 672              		.loc 1 270 14 view .LVU173
 673 0100 0134     		adds	r4, r4, #1
 674              	.LVL79:
 270:Core/Src/printf.c ****     }
 675              		.loc 1 270 14 view .LVU174
 676 0102 C8E7     		b	.L36
 677              	.L38:
 272:Core/Src/printf.c ****       buf[len++] = ' ';
 678              		.loc 1 272 10 is_stmt 1 view .LVU175
 272:Core/Src/printf.c ****       buf[len++] = ' ';
 679              		.loc 1 272 13 is_stmt 0 view .LVU176
 680 0104 3207     		lsls	r2, r6, #28
 681 0106 C6D5     		bpl	.L36
 273:Core/Src/printf.c ****     }
 682              		.loc 1 273 7 is_stmt 1 view .LVU177
 683              	.LVL80:
 273:Core/Src/printf.c ****     }
 684              		.loc 1 273 18 is_stmt 0 view .LVU178
 685 0108 2022     		movs	r2, #32
 686 010a 2A55     		strb	r2, [r5, r4]
 273:Core/Src/printf.c ****     }
 687              		.loc 1 273 14 view .LVU179
 688 010c 0134     		adds	r4, r4, #1
 689              	.LVL81:
 273:Core/Src/printf.c ****     }
 690              		.loc 1 273 14 view .LVU180
 691 010e C2E7     		b	.L36
 692              		.cfi_endproc
 693              	.LFE434:
 695              		.global	__aeabi_uidivmod
 696              		.global	__aeabi_uidiv
 697              		.section	.text._ntoa_long,"ax",%progbits
 698              		.align	1
 699              		.syntax unified
 700              		.code	16
 701              		.thumb_func
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 19


 703              	_ntoa_long:
 704              	.LVL82:
 705              	.LFB435:
 279:Core/Src/printf.c **** 
 280:Core/Src/printf.c **** 
 281:Core/Src/printf.c **** // internal itoa for 'long' type
 282:Core/Src/printf.c **** static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long v
 283:Core/Src/printf.c **** {
 706              		.loc 1 283 1 is_stmt 1 view -0
 707              		.cfi_startproc
 708              		@ args = 24, pretend = 0, frame = 40
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710              		.loc 1 283 1 is_stmt 0 view .LVU182
 711 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 712              	.LCFI7:
 713              		.cfi_def_cfa_offset 20
 714              		.cfi_offset 4, -20
 715              		.cfi_offset 5, -16
 716              		.cfi_offset 6, -12
 717              		.cfi_offset 7, -8
 718              		.cfi_offset 14, -4
 719 0002 DE46     		mov	lr, fp
 720 0004 5746     		mov	r7, r10
 721 0006 4E46     		mov	r6, r9
 722 0008 4546     		mov	r5, r8
 723 000a E0B5     		push	{r5, r6, r7, lr}
 724              	.LCFI8:
 725              		.cfi_def_cfa_offset 36
 726              		.cfi_offset 8, -36
 727              		.cfi_offset 9, -32
 728              		.cfi_offset 10, -28
 729              		.cfi_offset 11, -24
 730 000c 93B0     		sub	sp, sp, #76
 731              	.LCFI9:
 732              		.cfi_def_cfa_offset 112
 733 000e 8146     		mov	r9, r0
 734 0010 8A46     		mov	r10, r1
 735 0012 0892     		str	r2, [sp, #32]
 736 0014 0993     		str	r3, [sp, #36]
 737 0016 1CAB     		add	r3, sp, #112
 738              	.LVL83:
 739              		.loc 1 283 1 view .LVU183
 740 0018 10CB     		ldmia	r3!, {r4}
 741              	.LVL84:
 742              		.loc 1 283 1 view .LVU184
 743 001a 1B78     		ldrb	r3, [r3]
 744              	.LVL85:
 745              		.loc 1 283 1 view .LVU185
 746 001c 9B46     		mov	fp, r3
 747 001e 1E9D     		ldr	r5, [sp, #120]
 748 0020 219B     		ldr	r3, [sp, #132]
 749 0022 9846     		mov	r8, r3
 284:Core/Src/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 750              		.loc 1 284 3 is_stmt 1 view .LVU186
 285:Core/Src/printf.c ****   size_t len = 0U;
 751              		.loc 1 285 3 view .LVU187
 752              	.LVL86:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 20


 286:Core/Src/printf.c **** 
 287:Core/Src/printf.c ****   // no hash for 0 values
 288:Core/Src/printf.c ****   if (!value) {
 753              		.loc 1 288 3 view .LVU188
 754              		.loc 1 288 6 is_stmt 0 view .LVU189
 755 0024 002C     		cmp	r4, #0
 756 0026 03D1     		bne	.L53
 289:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 757              		.loc 1 289 5 is_stmt 1 view .LVU190
 758              		.loc 1 289 11 is_stmt 0 view .LVU191
 759 0028 1023     		movs	r3, #16
 760 002a 4246     		mov	r2, r8
 761              	.LVL87:
 762              		.loc 1 289 11 view .LVU192
 763 002c 9A43     		bics	r2, r3
 764 002e 9046     		mov	r8, r2
 765              	.LVL88:
 766              	.L53:
 290:Core/Src/printf.c ****   }
 291:Core/Src/printf.c **** 
 292:Core/Src/printf.c ****   // write if precision != 0 and value is != 0
 293:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 767              		.loc 1 293 3 is_stmt 1 view .LVU193
 768              		.loc 1 293 15 is_stmt 0 view .LVU194
 769 0030 8023     		movs	r3, #128
 770 0032 DB00     		lsls	r3, r3, #3
 771 0034 4646     		mov	r6, r8
 772 0036 1E40     		ands	r6, r3
 773              		.loc 1 293 6 view .LVU195
 774 0038 4246     		mov	r2, r8
 775 003a 1A42     		tst	r2, r3
 776 003c 12D0     		beq	.L59
 777              		.loc 1 293 34 discriminator 1 view .LVU196
 778 003e 002C     		cmp	r4, #0
 779 0040 22D0     		beq	.L60
 780 0042 0026     		movs	r6, #0
 781 0044 0EE0     		b	.L59
 782              	.LVL89:
 783              	.L63:
 784              	.LBB23:
 294:Core/Src/printf.c ****     do {
 295:Core/Src/printf.c ****       const char digit = (char)(value % base);
 296:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 785              		.loc 1 296 18 discriminator 1 view .LVU197
 786 0046 3033     		adds	r3, r3, #48
 787              	.LVL90:
 788              		.loc 1 296 18 discriminator 1 view .LVU198
 789 0048 D9B2     		uxtb	r1, r3
 790              	.LVL91:
 791              	.L57:
 792              		.loc 1 296 14 discriminator 8 view .LVU199
 793 004a 771C     		adds	r7, r6, #1
 794              	.LVL92:
 795              		.loc 1 296 18 discriminator 8 view .LVU200
 796 004c 0AAB     		add	r3, sp, #40
 797 004e 9955     		strb	r1, [r3, r6]
 297:Core/Src/printf.c ****       value /= base;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 21


 798              		.loc 1 297 7 is_stmt 1 discriminator 8 view .LVU201
 799              		.loc 1 297 13 is_stmt 0 discriminator 8 view .LVU202
 800 0050 2900     		movs	r1, r5
 801 0052 2000     		movs	r0, r4
 802 0054 FFF7FEFF 		bl	__aeabi_uidiv
 803              	.LVL93:
 804              		.loc 1 297 13 discriminator 8 view .LVU203
 805              	.LBE23:
 298:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 806              		.loc 1 298 20 is_stmt 1 discriminator 8 view .LVU204
 807 0058 AC42     		cmp	r4, r5
 808 005a 16D3     		bcc	.L55
 809              		.loc 1 298 20 is_stmt 0 discriminator 1 view .LVU205
 810 005c 1F2F     		cmp	r7, #31
 811 005e 14D8     		bhi	.L55
 812              	.LBB24:
 296:Core/Src/printf.c ****       value /= base;
 813              		.loc 1 296 14 view .LVU206
 814 0060 3E00     		movs	r6, r7
 297:Core/Src/printf.c ****       value /= base;
 815              		.loc 1 297 13 view .LVU207
 816 0062 0400     		movs	r4, r0
 817              	.LVL94:
 818              	.L59:
 297:Core/Src/printf.c ****       value /= base;
 819              		.loc 1 297 13 view .LVU208
 820              	.LBE24:
 294:Core/Src/printf.c ****       const char digit = (char)(value % base);
 821              		.loc 1 294 5 is_stmt 1 view .LVU209
 822              	.LBB25:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 823              		.loc 1 295 7 view .LVU210
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 824              		.loc 1 295 39 is_stmt 0 view .LVU211
 825 0064 2900     		movs	r1, r5
 826 0066 2000     		movs	r0, r4
 827 0068 FFF7FEFF 		bl	__aeabi_uidivmod
 828              	.LVL95:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 829              		.loc 1 295 18 view .LVU212
 830 006c CBB2     		uxtb	r3, r1
 831              	.LVL96:
 296:Core/Src/printf.c ****       value /= base;
 832              		.loc 1 296 7 is_stmt 1 view .LVU213
 296:Core/Src/printf.c ****       value /= base;
 833              		.loc 1 296 18 is_stmt 0 view .LVU214
 834 006e 092B     		cmp	r3, #9
 835 0070 E9D9     		bls	.L63
 296:Core/Src/printf.c ****       value /= base;
 836              		.loc 1 296 85 discriminator 2 view .LVU215
 837 0072 4246     		mov	r2, r8
 838 0074 9206     		lsls	r2, r2, #26
 839 0076 05D5     		bpl	.L61
 296:Core/Src/printf.c ****       value /= base;
 840              		.loc 1 296 85 view .LVU216
 841 0078 4121     		movs	r1, #65
 842              	.L58:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 22


 296:Core/Src/printf.c ****       value /= base;
 843              		.loc 1 296 85 discriminator 7 view .LVU217
 844 007a C918     		adds	r1, r1, r3
 845 007c C9B2     		uxtb	r1, r1
 296:Core/Src/printf.c ****       value /= base;
 846              		.loc 1 296 18 discriminator 7 view .LVU218
 847 007e 0A39     		subs	r1, r1, #10
 848 0080 C9B2     		uxtb	r1, r1
 849 0082 E2E7     		b	.L57
 850              	.L61:
 296:Core/Src/printf.c ****       value /= base;
 851              		.loc 1 296 85 view .LVU219
 852 0084 6121     		movs	r1, #97
 853 0086 F8E7     		b	.L58
 854              	.LVL97:
 855              	.L60:
 296:Core/Src/printf.c ****       value /= base;
 856              		.loc 1 296 85 view .LVU220
 857              	.LBE25:
 285:Core/Src/printf.c **** 
 858              		.loc 1 285 10 view .LVU221
 859 0088 2700     		movs	r7, r4
 860              	.LVL98:
 861              	.L55:
 299:Core/Src/printf.c ****   }
 300:Core/Src/printf.c **** 
 301:Core/Src/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 862              		.loc 1 301 3 is_stmt 1 view .LVU222
 863              		.loc 1 301 10 is_stmt 0 view .LVU223
 864 008a 4346     		mov	r3, r8
 865 008c 0693     		str	r3, [sp, #24]
 866 008e 209B     		ldr	r3, [sp, #128]
 867 0090 0593     		str	r3, [sp, #20]
 868 0092 1F9B     		ldr	r3, [sp, #124]
 869 0094 0493     		str	r3, [sp, #16]
 870 0096 0395     		str	r5, [sp, #12]
 871 0098 5B46     		mov	r3, fp
 872 009a 0293     		str	r3, [sp, #8]
 873 009c 0197     		str	r7, [sp, #4]
 874 009e 0AAB     		add	r3, sp, #40
 875 00a0 0093     		str	r3, [sp]
 876 00a2 099B     		ldr	r3, [sp, #36]
 877 00a4 089A     		ldr	r2, [sp, #32]
 878 00a6 5146     		mov	r1, r10
 879 00a8 4846     		mov	r0, r9
 880 00aa FFF7FEFF 		bl	_ntoa_format
 881              	.LVL99:
 302:Core/Src/printf.c **** }
 882              		.loc 1 302 1 view .LVU224
 883 00ae 13B0     		add	sp, sp, #76
 884              		@ sp needed
 885              	.LVL100:
 886              	.LVL101:
 887              	.LVL102:
 888              	.LVL103:
 889              		.loc 1 302 1 view .LVU225
 890 00b0 F0BC     		pop	{r4, r5, r6, r7}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 23


 891 00b2 BB46     		mov	fp, r7
 892 00b4 B246     		mov	r10, r6
 893 00b6 A946     		mov	r9, r5
 894 00b8 A046     		mov	r8, r4
 895 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 896              		.cfi_endproc
 897              	.LFE435:
 899              		.global	__aeabi_uldivmod
 900              		.section	.text._ntoa_long_long,"ax",%progbits
 901              		.align	1
 902              		.syntax unified
 903              		.code	16
 904              		.thumb_func
 906              	_ntoa_long_long:
 907              	.LVL104:
 908              	.LFB436:
 303:Core/Src/printf.c **** 
 304:Core/Src/printf.c **** 
 305:Core/Src/printf.c **** // internal itoa for 'long long' type
 306:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 307:Core/Src/printf.c **** static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned l
 308:Core/Src/printf.c **** {
 909              		.loc 1 308 1 is_stmt 1 view -0
 910              		.cfi_startproc
 911              		@ args = 36, pretend = 0, frame = 56
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              		.loc 1 308 1 is_stmt 0 view .LVU227
 914 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 915              	.LCFI10:
 916              		.cfi_def_cfa_offset 20
 917              		.cfi_offset 4, -20
 918              		.cfi_offset 5, -16
 919              		.cfi_offset 6, -12
 920              		.cfi_offset 7, -8
 921              		.cfi_offset 14, -4
 922 0002 DE46     		mov	lr, fp
 923 0004 5746     		mov	r7, r10
 924 0006 4E46     		mov	r6, r9
 925 0008 4546     		mov	r5, r8
 926 000a E0B5     		push	{r5, r6, r7, lr}
 927              	.LCFI11:
 928              		.cfi_def_cfa_offset 36
 929              		.cfi_offset 8, -36
 930              		.cfi_offset 9, -32
 931              		.cfi_offset 10, -28
 932              		.cfi_offset 11, -24
 933 000c 97B0     		sub	sp, sp, #92
 934              	.LCFI12:
 935              		.cfi_def_cfa_offset 128
 936 000e 0A90     		str	r0, [sp, #40]
 937 0010 0B91     		str	r1, [sp, #44]
 938 0012 0C92     		str	r2, [sp, #48]
 939 0014 9A46     		mov	r10, r3
 940 0016 209B     		ldr	r3, [sp, #128]
 941              	.LVL105:
 942              		.loc 1 308 1 view .LVU228
 943 0018 9946     		mov	r9, r3
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 24


 944 001a 219F     		ldr	r7, [sp, #132]
 945 001c 22AA     		add	r2, sp, #136
 946              	.LVL106:
 947              		.loc 1 308 1 view .LVU229
 948 001e 1378     		ldrb	r3, [r2]
 949 0020 9B46     		mov	fp, r3
 950 0022 249B     		ldr	r3, [sp, #144]
 951 0024 0993     		str	r3, [sp, #36]
 952 0026 259C     		ldr	r4, [sp, #148]
 953 0028 289B     		ldr	r3, [sp, #160]
 954 002a 9846     		mov	r8, r3
 309:Core/Src/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 955              		.loc 1 309 3 is_stmt 1 view .LVU230
 310:Core/Src/printf.c ****   size_t len = 0U;
 956              		.loc 1 310 3 view .LVU231
 957              	.LVL107:
 311:Core/Src/printf.c **** 
 312:Core/Src/printf.c ****   // no hash for 0 values
 313:Core/Src/printf.c ****   if (!value) {
 958              		.loc 1 313 3 view .LVU232
 959              		.loc 1 313 6 is_stmt 0 view .LVU233
 960 002c 4A46     		mov	r2, r9
 961              	.LVL108:
 962              		.loc 1 313 6 view .LVU234
 963 002e 3A43     		orrs	r2, r7
 964 0030 02D1     		bne	.L65
 314:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 965              		.loc 1 314 5 is_stmt 1 view .LVU235
 966              		.loc 1 314 11 is_stmt 0 view .LVU236
 967 0032 1032     		adds	r2, r2, #16
 968 0034 9343     		bics	r3, r2
 969 0036 9846     		mov	r8, r3
 970              	.LVL109:
 971              	.L65:
 315:Core/Src/printf.c ****   }
 316:Core/Src/printf.c **** 
 317:Core/Src/printf.c ****   // write if precision != 0 and value is != 0
 318:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 972              		.loc 1 318 3 is_stmt 1 view .LVU237
 973              		.loc 1 318 15 is_stmt 0 view .LVU238
 974 0038 8022     		movs	r2, #128
 975 003a D200     		lsls	r2, r2, #3
 976 003c 4546     		mov	r5, r8
 977 003e 1540     		ands	r5, r2
 978              		.loc 1 318 6 view .LVU239
 979 0040 4346     		mov	r3, r8
 980 0042 1342     		tst	r3, r2
 981 0044 0AD0     		beq	.L78
 982              		.loc 1 318 34 discriminator 1 view .LVU240
 983 0046 4A46     		mov	r2, r9
 984 0048 3A43     		orrs	r2, r7
 985 004a 41D0     		beq	.L74
 986 004c 0025     		movs	r5, #0
 987 004e 2E00     		movs	r6, r5
 988 0050 5346     		mov	r3, r10
 989 0052 0D93     		str	r3, [sp, #52]
 990 0054 4D46     		mov	r5, r9
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 25


 991 0056 099B     		ldr	r3, [sp, #36]
 992 0058 9A46     		mov	r10, r3
 993              	.LVL110:
 994              		.loc 1 318 34 discriminator 1 view .LVU241
 995 005a 1BE0     		b	.L73
 996              	.LVL111:
 997              	.L78:
 998              		.loc 1 318 34 discriminator 1 view .LVU242
 999 005c 2E00     		movs	r6, r5
 1000 005e 5346     		mov	r3, r10
 1001              	.LVL112:
 1002              		.loc 1 318 34 discriminator 1 view .LVU243
 1003 0060 0D93     		str	r3, [sp, #52]
 1004 0062 4D46     		mov	r5, r9
 1005 0064 099B     		ldr	r3, [sp, #36]
 1006 0066 9A46     		mov	r10, r3
 1007              	.LVL113:
 1008              		.loc 1 318 34 discriminator 1 view .LVU244
 1009 0068 14E0     		b	.L73
 1010              	.LVL114:
 1011              	.L83:
 1012              	.LBB26:
 319:Core/Src/printf.c ****     do {
 320:Core/Src/printf.c ****       const char digit = (char)(value % base);
 321:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 1013              		.loc 1 321 18 discriminator 1 view .LVU245
 1014 006a 3033     		adds	r3, r3, #48
 1015              	.LVL115:
 1016              		.loc 1 321 18 discriminator 1 view .LVU246
 1017 006c DAB2     		uxtb	r2, r3
 1018              	.LVL116:
 1019              	.L70:
 1020              		.loc 1 321 14 discriminator 8 view .LVU247
 1021 006e 731C     		adds	r3, r6, #1
 1022 0070 9946     		mov	r9, r3
 1023              	.LVL117:
 1024              		.loc 1 321 18 discriminator 8 view .LVU248
 1025 0072 0EAB     		add	r3, sp, #56
 1026              	.LVL118:
 1027              		.loc 1 321 18 discriminator 8 view .LVU249
 1028 0074 9A55     		strb	r2, [r3, r6]
 322:Core/Src/printf.c ****       value /= base;
 1029              		.loc 1 322 7 is_stmt 1 discriminator 8 view .LVU250
 1030              		.loc 1 322 13 is_stmt 0 discriminator 8 view .LVU251
 1031 0076 5246     		mov	r2, r10
 1032 0078 2300     		movs	r3, r4
 1033 007a 2800     		movs	r0, r5
 1034 007c 3900     		movs	r1, r7
 1035 007e FFF7FEFF 		bl	__aeabi_uldivmod
 1036              	.LVL119:
 1037              		.loc 1 322 13 discriminator 8 view .LVU252
 1038              	.LBE26:
 323:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 1039              		.loc 1 323 20 is_stmt 1 discriminator 8 view .LVU253
 1040 0082 BC42     		cmp	r4, r7
 1041 0084 26D8     		bhi	.L79
 1042 0086 19D0     		beq	.L81
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 26


 1043              	.L77:
 1044              		.loc 1 323 20 is_stmt 0 discriminator 1 view .LVU254
 1045 0088 4B46     		mov	r3, r9
 1046 008a 1F2B     		cmp	r3, #31
 1047 008c 1CD8     		bhi	.L82
 1048              	.LVL120:
 1049              	.LBB27:
 321:Core/Src/printf.c ****       value /= base;
 1050              		.loc 1 321 14 view .LVU255
 1051 008e 4E46     		mov	r6, r9
 322:Core/Src/printf.c ****       value /= base;
 1052              		.loc 1 322 13 view .LVU256
 1053 0090 0500     		movs	r5, r0
 1054 0092 0F00     		movs	r7, r1
 1055              	.LVL121:
 1056              	.L73:
 322:Core/Src/printf.c ****       value /= base;
 1057              		.loc 1 322 13 view .LVU257
 1058              	.LBE27:
 319:Core/Src/printf.c ****       const char digit = (char)(value % base);
 1059              		.loc 1 319 5 is_stmt 1 view .LVU258
 1060              	.LBB28:
 320:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 1061              		.loc 1 320 7 view .LVU259
 320:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 1062              		.loc 1 320 39 is_stmt 0 view .LVU260
 1063 0094 5246     		mov	r2, r10
 1064 0096 2300     		movs	r3, r4
 1065 0098 2800     		movs	r0, r5
 1066 009a 3900     		movs	r1, r7
 1067 009c FFF7FEFF 		bl	__aeabi_uldivmod
 1068              	.LVL122:
 320:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 1069              		.loc 1 320 18 view .LVU261
 1070 00a0 D3B2     		uxtb	r3, r2
 1071              	.LVL123:
 321:Core/Src/printf.c ****       value /= base;
 1072              		.loc 1 321 7 is_stmt 1 view .LVU262
 321:Core/Src/printf.c ****       value /= base;
 1073              		.loc 1 321 18 is_stmt 0 view .LVU263
 1074 00a2 092B     		cmp	r3, #9
 1075 00a4 E1D9     		bls	.L83
 321:Core/Src/printf.c ****       value /= base;
 1076              		.loc 1 321 85 discriminator 2 view .LVU264
 1077 00a6 4246     		mov	r2, r8
 1078 00a8 9206     		lsls	r2, r2, #26
 1079 00aa 05D5     		bpl	.L75
 321:Core/Src/printf.c ****       value /= base;
 1080              		.loc 1 321 85 view .LVU265
 1081 00ac 4122     		movs	r2, #65
 1082              	.L71:
 321:Core/Src/printf.c ****       value /= base;
 1083              		.loc 1 321 85 discriminator 7 view .LVU266
 1084 00ae D218     		adds	r2, r2, r3
 1085 00b0 D2B2     		uxtb	r2, r2
 321:Core/Src/printf.c ****       value /= base;
 1086              		.loc 1 321 18 discriminator 7 view .LVU267
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 27


 1087 00b2 0A3A     		subs	r2, r2, #10
 1088 00b4 D2B2     		uxtb	r2, r2
 1089 00b6 DAE7     		b	.L70
 1090              	.L75:
 321:Core/Src/printf.c ****       value /= base;
 1091              		.loc 1 321 85 view .LVU268
 1092 00b8 6122     		movs	r2, #97
 1093 00ba F8E7     		b	.L71
 1094              	.LVL124:
 1095              	.L81:
 321:Core/Src/printf.c ****       value /= base;
 1096              		.loc 1 321 85 view .LVU269
 1097              	.LBE28:
 1098              		.loc 1 323 20 discriminator 8 view .LVU270
 1099 00bc AA45     		cmp	r10, r5
 1100 00be E3D9     		bls	.L77
 1101 00c0 4E46     		mov	r6, r9
 1102 00c2 0D9B     		ldr	r3, [sp, #52]
 1103 00c4 9A46     		mov	r10, r3
 1104 00c6 08E0     		b	.L67
 1105              	.LVL125:
 1106              	.L82:
 1107              		.loc 1 323 20 discriminator 8 view .LVU271
 1108 00c8 4E46     		mov	r6, r9
 1109 00ca 0D9B     		ldr	r3, [sp, #52]
 1110              	.LVL126:
 1111              		.loc 1 323 20 discriminator 8 view .LVU272
 1112 00cc 9A46     		mov	r10, r3
 1113 00ce 04E0     		b	.L67
 1114              	.LVL127:
 1115              	.L74:
 310:Core/Src/printf.c **** 
 1116              		.loc 1 310 10 view .LVU273
 1117 00d0 0026     		movs	r6, #0
 1118 00d2 02E0     		b	.L67
 1119              	.LVL128:
 1120              	.L79:
 310:Core/Src/printf.c **** 
 1121              		.loc 1 310 10 view .LVU274
 1122 00d4 4E46     		mov	r6, r9
 1123 00d6 0D9B     		ldr	r3, [sp, #52]
 1124 00d8 9A46     		mov	r10, r3
 1125              	.LVL129:
 1126              	.L67:
 324:Core/Src/printf.c ****   }
 325:Core/Src/printf.c **** 
 326:Core/Src/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 1127              		.loc 1 326 3 is_stmt 1 view .LVU275
 1128              		.loc 1 326 10 is_stmt 0 view .LVU276
 1129 00da 4346     		mov	r3, r8
 1130 00dc 0693     		str	r3, [sp, #24]
 1131 00de 279B     		ldr	r3, [sp, #156]
 1132 00e0 0593     		str	r3, [sp, #20]
 1133 00e2 269B     		ldr	r3, [sp, #152]
 1134 00e4 0493     		str	r3, [sp, #16]
 1135 00e6 099B     		ldr	r3, [sp, #36]
 1136 00e8 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 28


 1137 00ea 5B46     		mov	r3, fp
 1138 00ec 0293     		str	r3, [sp, #8]
 1139 00ee 0196     		str	r6, [sp, #4]
 1140 00f0 0EAB     		add	r3, sp, #56
 1141 00f2 0093     		str	r3, [sp]
 1142 00f4 5346     		mov	r3, r10
 1143 00f6 0C9A     		ldr	r2, [sp, #48]
 1144 00f8 0B99     		ldr	r1, [sp, #44]
 1145 00fa 0A98     		ldr	r0, [sp, #40]
 1146 00fc FFF7FEFF 		bl	_ntoa_format
 1147              	.LVL130:
 327:Core/Src/printf.c **** }
 1148              		.loc 1 327 1 view .LVU277
 1149 0100 17B0     		add	sp, sp, #92
 1150              		@ sp needed
 1151              	.LVL131:
 1152              	.LVL132:
 1153              		.loc 1 327 1 view .LVU278
 1154 0102 F0BC     		pop	{r4, r5, r6, r7}
 1155 0104 BB46     		mov	fp, r7
 1156 0106 B246     		mov	r10, r6
 1157 0108 A946     		mov	r9, r5
 1158 010a A046     		mov	r8, r4
 1159 010c F0BD     		pop	{r4, r5, r6, r7, pc}
 1160              		.cfi_endproc
 1161              	.LFE436:
 1163              		.global	__aeabi_dcmpeq
 1164              		.global	__aeabi_dcmpgt
 1165              		.global	__aeabi_dcmplt
 1166              		.global	__aeabi_i2d
 1167              		.global	__aeabi_dmul
 1168              		.global	__aeabi_dadd
 1169              		.global	__aeabi_dsub
 1170              		.global	__aeabi_d2iz
 1171              		.global	__aeabi_ddiv
 1172              		.global	__aeabi_dcmpge
 1173              		.section	.text._etoa,"ax",%progbits
 1174              		.align	1
 1175              		.syntax unified
 1176              		.code	16
 1177              		.thumb_func
 1179              	_etoa:
 1180              	.LVL133:
 1181              	.LFB438:
 328:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_LONG_LONG
 329:Core/Src/printf.c **** 
 330:Core/Src/printf.c **** 
 331:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 332:Core/Src/printf.c **** 
 333:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 334:Core/Src/printf.c **** // forward declaration so that _ftoa can switch to exp notation for values > PRINTF_MAX_FLOAT
 335:Core/Src/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 336:Core/Src/printf.c **** #endif
 337:Core/Src/printf.c **** 
 338:Core/Src/printf.c **** 
 339:Core/Src/printf.c **** // internal ftoa for fixed decimal floating point
 340:Core/Src/printf.c **** static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 29


 341:Core/Src/printf.c **** {
 342:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 343:Core/Src/printf.c ****   size_t len  = 0U;
 344:Core/Src/printf.c ****   double diff = 0.0;
 345:Core/Src/printf.c **** 
 346:Core/Src/printf.c ****   // powers of 10
 347:Core/Src/printf.c ****   static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 10
 348:Core/Src/printf.c **** 
 349:Core/Src/printf.c ****   // test for special values
 350:Core/Src/printf.c ****   if (value != value)
 351:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 352:Core/Src/printf.c ****   if (value < -DBL_MAX)
 353:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 354:Core/Src/printf.c ****   if (value > DBL_MAX)
 355:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 356:Core/Src/printf.c **** 
 357:Core/Src/printf.c ****   // test for very large values
 358:Core/Src/printf.c ****   // standard printf behavior is to print EVERY whole number digit -- which could be 100s of charac
 359:Core/Src/printf.c ****   if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 360:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 361:Core/Src/printf.c ****     return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 362:Core/Src/printf.c **** #else
 363:Core/Src/printf.c ****     return 0U;
 364:Core/Src/printf.c **** #endif
 365:Core/Src/printf.c ****   }
 366:Core/Src/printf.c **** 
 367:Core/Src/printf.c ****   // test for negative
 368:Core/Src/printf.c ****   bool negative = false;
 369:Core/Src/printf.c ****   if (value < 0) {
 370:Core/Src/printf.c ****     negative = true;
 371:Core/Src/printf.c ****     value = 0 - value;
 372:Core/Src/printf.c ****   }
 373:Core/Src/printf.c **** 
 374:Core/Src/printf.c ****   // set default precision, if not set explicitly
 375:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 376:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 377:Core/Src/printf.c ****   }
 378:Core/Src/printf.c ****   // limit precision to 9, cause a prec >= 10 can lead to overflow errors
 379:Core/Src/printf.c ****   while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 380:Core/Src/printf.c ****     buf[len++] = '0';
 381:Core/Src/printf.c ****     prec--;
 382:Core/Src/printf.c ****   }
 383:Core/Src/printf.c **** 
 384:Core/Src/printf.c ****   int whole = (int)value;
 385:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 386:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 387:Core/Src/printf.c ****   diff = tmp - frac;
 388:Core/Src/printf.c **** 
 389:Core/Src/printf.c ****   if (diff > 0.5) {
 390:Core/Src/printf.c ****     ++frac;
 391:Core/Src/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 392:Core/Src/printf.c ****     if (frac >= pow10[prec]) {
 393:Core/Src/printf.c ****       frac = 0;
 394:Core/Src/printf.c ****       ++whole;
 395:Core/Src/printf.c ****     }
 396:Core/Src/printf.c ****   }
 397:Core/Src/printf.c ****   else if (diff < 0.5) {
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 30


 398:Core/Src/printf.c ****   }
 399:Core/Src/printf.c ****   else if ((frac == 0U) || (frac & 1U)) {
 400:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 401:Core/Src/printf.c ****     ++frac;
 402:Core/Src/printf.c ****   }
 403:Core/Src/printf.c **** 
 404:Core/Src/printf.c ****   if (prec == 0U) {
 405:Core/Src/printf.c ****     diff = value - (double)whole;
 406:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 407:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 408:Core/Src/printf.c ****       // 1.5 -> 2, but 2.5 -> 2
 409:Core/Src/printf.c ****       ++whole;
 410:Core/Src/printf.c ****     }
 411:Core/Src/printf.c ****   }
 412:Core/Src/printf.c ****   else {
 413:Core/Src/printf.c ****     unsigned int count = prec;
 414:Core/Src/printf.c ****     // now do fractional part, as an unsigned number
 415:Core/Src/printf.c ****     while (len < PRINTF_FTOA_BUFFER_SIZE) {
 416:Core/Src/printf.c ****       --count;
 417:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 418:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 419:Core/Src/printf.c ****         break;
 420:Core/Src/printf.c ****       }
 421:Core/Src/printf.c ****     }
 422:Core/Src/printf.c ****     // add extra 0s
 423:Core/Src/printf.c ****     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 424:Core/Src/printf.c ****       buf[len++] = '0';
 425:Core/Src/printf.c ****     }
 426:Core/Src/printf.c ****     if (len < PRINTF_FTOA_BUFFER_SIZE) {
 427:Core/Src/printf.c ****       // add decimal
 428:Core/Src/printf.c ****       buf[len++] = '.';
 429:Core/Src/printf.c ****     }
 430:Core/Src/printf.c ****   }
 431:Core/Src/printf.c **** 
 432:Core/Src/printf.c ****   // do whole part, number is reversed
 433:Core/Src/printf.c ****   while (len < PRINTF_FTOA_BUFFER_SIZE) {
 434:Core/Src/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 435:Core/Src/printf.c ****     if (!(whole /= 10)) {
 436:Core/Src/printf.c ****       break;
 437:Core/Src/printf.c ****     }
 438:Core/Src/printf.c ****   }
 439:Core/Src/printf.c **** 
 440:Core/Src/printf.c ****   // pad leading zeros
 441:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 442:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 443:Core/Src/printf.c ****       width--;
 444:Core/Src/printf.c ****     }
 445:Core/Src/printf.c ****     while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 446:Core/Src/printf.c ****       buf[len++] = '0';
 447:Core/Src/printf.c ****     }
 448:Core/Src/printf.c ****   }
 449:Core/Src/printf.c **** 
 450:Core/Src/printf.c ****   if (len < PRINTF_FTOA_BUFFER_SIZE) {
 451:Core/Src/printf.c ****     if (negative) {
 452:Core/Src/printf.c ****       buf[len++] = '-';
 453:Core/Src/printf.c ****     }
 454:Core/Src/printf.c ****     else if (flags & FLAGS_PLUS) {
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 31


 455:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 456:Core/Src/printf.c ****     }
 457:Core/Src/printf.c ****     else if (flags & FLAGS_SPACE) {
 458:Core/Src/printf.c ****       buf[len++] = ' ';
 459:Core/Src/printf.c ****     }
 460:Core/Src/printf.c ****   }
 461:Core/Src/printf.c **** 
 462:Core/Src/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 463:Core/Src/printf.c **** }
 464:Core/Src/printf.c **** 
 465:Core/Src/printf.c **** 
 466:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 467:Core/Src/printf.c **** // internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.ja
 468:Core/Src/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 469:Core/Src/printf.c **** {
 1182              		.loc 1 469 1 is_stmt 1 view -0
 1183              		.cfi_startproc
 1184              		@ args = 20, pretend = 0, frame = 40
 1185              		@ frame_needed = 0, uses_anonymous_args = 0
 1186              		.loc 1 469 1 is_stmt 0 view .LVU280
 1187 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1188              	.LCFI13:
 1189              		.cfi_def_cfa_offset 20
 1190              		.cfi_offset 4, -20
 1191              		.cfi_offset 5, -16
 1192              		.cfi_offset 6, -12
 1193              		.cfi_offset 7, -8
 1194              		.cfi_offset 14, -4
 1195 0002 DE46     		mov	lr, fp
 1196 0004 5746     		mov	r7, r10
 1197 0006 4E46     		mov	r6, r9
 1198 0008 4546     		mov	r5, r8
 1199 000a E0B5     		push	{r5, r6, r7, lr}
 1200              	.LCFI14:
 1201              		.cfi_def_cfa_offset 36
 1202              		.cfi_offset 8, -36
 1203              		.cfi_offset 9, -32
 1204              		.cfi_offset 10, -28
 1205              		.cfi_offset 11, -24
 1206 000c 91B0     		sub	sp, sp, #68
 1207              	.LCFI15:
 1208              		.cfi_def_cfa_offset 104
 1209 000e 8146     		mov	r9, r0
 1210 0010 8846     		mov	r8, r1
 1211 0012 9246     		mov	r10, r2
 1212 0014 0E93     		str	r3, [sp, #56]
 1213 0016 1A9E     		ldr	r6, [sp, #104]
 1214 0018 1B9F     		ldr	r7, [sp, #108]
 470:Core/Src/printf.c ****   // check for NaN and special values
 471:Core/Src/printf.c ****   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 1215              		.loc 1 471 3 is_stmt 1 view .LVU281
 1216              		.loc 1 471 6 is_stmt 0 view .LVU282
 1217 001a 3200     		movs	r2, r6
 1218              	.LVL134:
 1219              		.loc 1 471 6 view .LVU283
 1220 001c 3B00     		movs	r3, r7
 1221              	.LVL135:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 32


 1222              		.loc 1 471 6 view .LVU284
 1223 001e 3000     		movs	r0, r6
 1224              	.LVL136:
 1225              		.loc 1 471 6 view .LVU285
 1226 0020 3900     		movs	r1, r7
 1227              	.LVL137:
 1228              		.loc 1 471 6 view .LVU286
 1229 0022 FFF7FEFF 		bl	__aeabi_dcmpeq
 1230              	.LVL138:
 1231 0026 0028     		cmp	r0, #0
 1232 0028 00D1     		bne	.LCB1305
 1233 002a 03E1     		b	.L85	@long jump
 1234              	.LCB1305:
 1235              		.loc 1 471 24 discriminator 1 view .LVU287
 1236 002c 0122     		movs	r2, #1
 1237 002e 5242     		rsbs	r2, r2, #0
 1238 0030 D54B     		ldr	r3, .L126
 1239 0032 3000     		movs	r0, r6
 1240 0034 3900     		movs	r1, r7
 1241 0036 FFF7FEFF 		bl	__aeabi_dcmpgt
 1242              	.LVL139:
 1243 003a 0028     		cmp	r0, #0
 1244 003c 00D0     		beq	.LCB1314
 1245 003e F9E0     		b	.L85	@long jump
 1246              	.LCB1314:
 1247              		.loc 1 471 45 discriminator 2 view .LVU288
 1248 0040 0122     		movs	r2, #1
 1249 0042 5242     		rsbs	r2, r2, #0
 1250 0044 D14B     		ldr	r3, .L126+4
 1251 0046 3000     		movs	r0, r6
 1252 0048 3900     		movs	r1, r7
 1253 004a FFF7FEFF 		bl	__aeabi_dcmplt
 1254              	.LVL140:
 1255 004e 0028     		cmp	r0, #0
 1256 0050 00D0     		beq	.LCB1323
 1257 0052 EFE0     		b	.L85	@long jump
 1258              	.LCB1323:
 472:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 473:Core/Src/printf.c ****   }
 474:Core/Src/printf.c **** 
 475:Core/Src/printf.c ****   // determine the sign
 476:Core/Src/printf.c ****   const bool negative = value < 0;
 1259              		.loc 1 476 3 is_stmt 1 view .LVU289
 1260              	.LVL141:
 477:Core/Src/printf.c ****   if (negative) {
 1261              		.loc 1 477 3 view .LVU290
 1262              		.loc 1 477 6 is_stmt 0 view .LVU291
 1263 0054 0022     		movs	r2, #0
 1264 0056 0023     		movs	r3, #0
 1265 0058 3000     		movs	r0, r6
 1266 005a 3900     		movs	r1, r7
 1267 005c FFF7FEFF 		bl	__aeabi_dcmplt
 1268              	.LVL142:
 1269 0060 0028     		cmp	r0, #0
 1270 0062 00D0     		beq	.LCB1334
 1271 0064 FBE0     		b	.L124	@long jump
 1272              	.LCB1334:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 33


 1273 0066 0696     		str	r6, [sp, #24]
 1274 0068 0797     		str	r7, [sp, #28]
 1275              	.LVL143:
 1276              	.L89:
 478:Core/Src/printf.c ****     value = -value;
 479:Core/Src/printf.c ****   }
 480:Core/Src/printf.c **** 
 481:Core/Src/printf.c ****   // default precision
 482:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 1277              		.loc 1 482 3 is_stmt 1 view .LVU292
 1278              		.loc 1 482 15 is_stmt 0 view .LVU293
 1279 006a 8023     		movs	r3, #128
 1280 006c DB00     		lsls	r3, r3, #3
 1281 006e 1E9A     		ldr	r2, [sp, #120]
 1282 0070 1A40     		ands	r2, r3
 1283 0072 0F92     		str	r2, [sp, #60]
 1284              		.loc 1 482 6 view .LVU294
 1285 0074 1E9A     		ldr	r2, [sp, #120]
 1286 0076 1A42     		tst	r2, r3
 1287 0078 01D1     		bne	.L91
 483:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1288              		.loc 1 483 10 view .LVU295
 1289 007a 0623     		movs	r3, #6
 1290 007c 1C93     		str	r3, [sp, #112]
 1291              	.LVL144:
 1292              	.L91:
 484:Core/Src/printf.c ****   }
 485:Core/Src/printf.c **** 
 486:Core/Src/printf.c ****   // determine the decimal exponent
 487:Core/Src/printf.c ****   // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 488:Core/Src/printf.c ****   union {
 1293              		.loc 1 488 3 is_stmt 1 view .LVU296
 489:Core/Src/printf.c ****     uint64_t U;
 490:Core/Src/printf.c ****     double   F;
 491:Core/Src/printf.c ****   } conv;
 492:Core/Src/printf.c **** 
 493:Core/Src/printf.c ****   conv.F = value;
 1294              		.loc 1 493 3 view .LVU297
 494:Core/Src/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 1295              		.loc 1 494 3 view .LVU298
 1296 007e 0699     		ldr	r1, [sp, #24]
 1297 0080 079A     		ldr	r2, [sp, #28]
 1298 0082 0B00     		movs	r3, r1
 1299              		.loc 1 494 28 is_stmt 0 view .LVU299
 1300 0084 100D     		lsrs	r0, r2, #20
 1301              		.loc 1 494 14 view .LVU300
 1302 0086 4005     		lsls	r0, r0, #21
 1303 0088 400D     		lsrs	r0, r0, #21
 1304              		.loc 1 494 7 view .LVU301
 1305 008a C14C     		ldr	r4, .L126+8
 1306 008c A446     		mov	ip, r4
 1307 008e 6044     		add	r0, r0, ip
 1308              	.LVL145:
 495:Core/Src/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 1309              		.loc 1 495 3 is_stmt 1 view .LVU302
 1310              		.loc 1 495 20 is_stmt 0 view .LVU303
 1311 0090 1203     		lsls	r2, r2, #12
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 34


 1312 0092 120B     		lsrs	r2, r2, #12
 1313              		.loc 1 495 44 view .LVU304
 1314 0094 1C00     		movs	r4, r3
 1315 0096 BF4B     		ldr	r3, .L126+12
 1316 0098 1343     		orrs	r3, r2
 1317 009a 1D00     		movs	r5, r3
 496:Core/Src/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 497:Core/Src/printf.c ****   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.28952965460216
 1318              		.loc 1 497 3 is_stmt 1 view .LVU305
 1319              		.loc 1 497 45 is_stmt 0 view .LVU306
 1320 009c FFF7FEFF 		bl	__aeabi_i2d
 1321              	.LVL146:
 1322              		.loc 1 497 45 view .LVU307
 1323 00a0 BD4A     		ldr	r2, .L126+16
 1324 00a2 BE4B     		ldr	r3, .L126+20
 1325 00a4 FFF7FEFF 		bl	__aeabi_dmul
 1326              	.LVL147:
 1327              		.loc 1 497 38 view .LVU308
 1328 00a8 BD4A     		ldr	r2, .L126+24
 1329 00aa BE4B     		ldr	r3, .L126+28
 1330 00ac FFF7FEFF 		bl	__aeabi_dadd
 1331              	.LVL148:
 1332 00b0 0890     		str	r0, [sp, #32]
 1333 00b2 0991     		str	r1, [sp, #36]
 1334              		.loc 1 497 75 view .LVU309
 1335 00b4 0022     		movs	r2, #0
 1336 00b6 BC4B     		ldr	r3, .L126+32
 1337 00b8 2000     		movs	r0, r4
 1338 00ba 2900     		movs	r1, r5
 1339 00bc FFF7FEFF 		bl	__aeabi_dsub
 1340              	.LVL149:
 1341              		.loc 1 497 82 view .LVU310
 1342 00c0 BA4A     		ldr	r2, .L126+36
 1343 00c2 BB4B     		ldr	r3, .L126+40
 1344 00c4 FFF7FEFF 		bl	__aeabi_dmul
 1345              	.LVL150:
 1346 00c8 0200     		movs	r2, r0
 1347 00ca 0B00     		movs	r3, r1
 1348              		.loc 1 497 65 view .LVU311
 1349 00cc 0898     		ldr	r0, [sp, #32]
 1350 00ce 0999     		ldr	r1, [sp, #36]
 1351 00d0 FFF7FEFF 		bl	__aeabi_dadd
 1352              	.LVL151:
 1353              		.loc 1 497 7 view .LVU312
 1354 00d4 FFF7FEFF 		bl	__aeabi_d2iz
 1355              	.LVL152:
 1356 00d8 8346     		mov	fp, r0
 1357              	.LVL153:
 498:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 499:Core/Src/printf.c ****   exp2 = (int)(expval * 3.321928094887362 + 0.5);
 1358              		.loc 1 499 3 is_stmt 1 view .LVU313
 1359              		.loc 1 499 23 is_stmt 0 view .LVU314
 1360 00da FFF7FEFF 		bl	__aeabi_i2d
 1361              	.LVL154:
 1362              		.loc 1 499 23 view .LVU315
 1363 00de 0400     		movs	r4, r0
 1364 00e0 0D00     		movs	r5, r1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 35


 1365 00e2 B44A     		ldr	r2, .L126+44
 1366 00e4 B44B     		ldr	r3, .L126+48
 1367 00e6 FFF7FEFF 		bl	__aeabi_dmul
 1368              	.LVL155:
 1369              		.loc 1 499 43 view .LVU316
 1370 00ea 0022     		movs	r2, #0
 1371 00ec B34B     		ldr	r3, .L126+52
 1372 00ee FFF7FEFF 		bl	__aeabi_dadd
 1373              	.LVL156:
 1374              		.loc 1 499 8 view .LVU317
 1375 00f2 FFF7FEFF 		bl	__aeabi_d2iz
 1376              	.LVL157:
 1377 00f6 0890     		str	r0, [sp, #32]
 1378              	.LVL158:
 500:Core/Src/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1379              		.loc 1 500 3 is_stmt 1 view .LVU318
 1380              		.loc 1 500 28 is_stmt 0 view .LVU319
 1381 00f8 B14A     		ldr	r2, .L126+56
 1382 00fa B24B     		ldr	r3, .L126+60
 1383 00fc 2000     		movs	r0, r4
 1384              	.LVL159:
 1385              		.loc 1 500 28 view .LVU320
 1386 00fe 2900     		movs	r1, r5
 1387 0100 FFF7FEFF 		bl	__aeabi_dmul
 1388              	.LVL160:
 1389 0104 0400     		movs	r4, r0
 1390 0106 0D00     		movs	r5, r1
 1391              		.loc 1 500 55 view .LVU321
 1392 0108 0898     		ldr	r0, [sp, #32]
 1393 010a FFF7FEFF 		bl	__aeabi_i2d
 1394              	.LVL161:
 1395 010e AE4A     		ldr	r2, .L126+64
 1396 0110 AE4B     		ldr	r3, .L126+68
 1397 0112 FFF7FEFF 		bl	__aeabi_dmul
 1398              	.LVL162:
 1399 0116 0200     		movs	r2, r0
 1400 0118 0B00     		movs	r3, r1
 1401              		.loc 1 500 16 view .LVU322
 1402 011a 2000     		movs	r0, r4
 1403 011c 2900     		movs	r1, r5
 1404 011e FFF7FEFF 		bl	__aeabi_dsub
 1405              	.LVL163:
 1406 0122 0400     		movs	r4, r0
 1407 0124 0D00     		movs	r5, r1
 1408              	.LVL164:
 501:Core/Src/printf.c ****   const double z2 = z * z;
 1409              		.loc 1 501 3 is_stmt 1 view .LVU323
 1410              		.loc 1 501 16 is_stmt 0 view .LVU324
 1411 0126 0200     		movs	r2, r0
 1412 0128 0B00     		movs	r3, r1
 1413 012a FFF7FEFF 		bl	__aeabi_dmul
 1414              	.LVL165:
 1415 012e 0A90     		str	r0, [sp, #40]
 1416 0130 0B91     		str	r1, [sp, #44]
 1417              	.LVL166:
 502:Core/Src/printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 1418              		.loc 1 502 3 is_stmt 1 view .LVU325
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 36


 1419              		.loc 1 502 28 is_stmt 0 view .LVU326
 1420 0132 089B     		ldr	r3, [sp, #32]
 1421 0134 A64A     		ldr	r2, .L126+72
 1422 0136 9446     		mov	ip, r2
 1423 0138 6344     		add	r3, r3, ip
 1424              		.loc 1 502 36 view .LVU327
 1425 013a 0021     		movs	r1, #0
 1426 013c 0022     		movs	r2, #0
 1427 013e 0891     		str	r1, [sp, #32]
 1428 0140 0992     		str	r2, [sp, #36]
 1429              	.LVL167:
 1430              		.loc 1 502 36 view .LVU328
 1431 0142 1B05     		lsls	r3, r3, #20
 1432              	.LVL168:
 1433              		.loc 1 502 36 view .LVU329
 1434 0144 0993     		str	r3, [sp, #36]
 1435 0146 0023     		movs	r3, #0
 1436 0148 0893     		str	r3, [sp, #32]
 503:Core/Src/printf.c ****   // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_functi
 504:Core/Src/printf.c ****   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1437              		.loc 1 504 3 is_stmt 1 view .LVU330
 1438              		.loc 1 504 19 is_stmt 0 view .LVU331
 1439 014a 2200     		movs	r2, r4
 1440 014c 2B00     		movs	r3, r5
 1441 014e 2000     		movs	r0, r4
 1442              	.LVL169:
 1443              		.loc 1 504 19 view .LVU332
 1444 0150 2900     		movs	r1, r5
 1445 0152 FFF7FEFF 		bl	__aeabi_dadd
 1446              	.LVL170:
 1447 0156 0C90     		str	r0, [sp, #48]
 1448 0158 0D91     		str	r1, [sp, #52]
 1449              		.loc 1 504 28 view .LVU333
 1450 015a 2200     		movs	r2, r4
 1451 015c 2B00     		movs	r3, r5
 1452 015e 0020     		movs	r0, #0
 1453 0160 8021     		movs	r1, #128
 1454 0162 C905     		lsls	r1, r1, #23
 1455 0164 FFF7FEFF 		bl	__aeabi_dsub
 1456              	.LVL171:
 1457 0168 0400     		movs	r4, r0
 1458              	.LVL172:
 1459              		.loc 1 504 28 view .LVU334
 1460 016a 0D00     		movs	r5, r1
 1461              		.loc 1 504 60 view .LVU335
 1462 016c 0022     		movs	r2, #0
 1463 016e 994B     		ldr	r3, .L126+76
 1464 0170 0A98     		ldr	r0, [sp, #40]
 1465 0172 0B99     		ldr	r1, [sp, #44]
 1466 0174 FFF7FEFF 		bl	__aeabi_ddiv
 1467              	.LVL173:
 1468              		.loc 1 504 55 view .LVU336
 1469 0178 0022     		movs	r2, #0
 1470 017a 974B     		ldr	r3, .L126+80
 1471 017c FFF7FEFF 		bl	__aeabi_dadd
 1472              	.LVL174:
 1473 0180 0200     		movs	r2, r0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 37


 1474 0182 0B00     		movs	r3, r1
 1475              		.loc 1 504 49 view .LVU337
 1476 0184 0A98     		ldr	r0, [sp, #40]
 1477 0186 0B99     		ldr	r1, [sp, #44]
 1478 0188 FFF7FEFF 		bl	__aeabi_ddiv
 1479              	.LVL175:
 1480              		.loc 1 504 43 view .LVU338
 1481 018c 0022     		movs	r2, #0
 1482 018e 934B     		ldr	r3, .L126+84
 1483 0190 FFF7FEFF 		bl	__aeabi_dadd
 1484              	.LVL176:
 1485 0194 0200     		movs	r2, r0
 1486 0196 0B00     		movs	r3, r1
 1487              		.loc 1 504 38 view .LVU339
 1488 0198 0A98     		ldr	r0, [sp, #40]
 1489 019a 0B99     		ldr	r1, [sp, #44]
 1490 019c FFF7FEFF 		bl	__aeabi_ddiv
 1491              	.LVL177:
 1492 01a0 0200     		movs	r2, r0
 1493 01a2 0B00     		movs	r3, r1
 1494              		.loc 1 504 32 view .LVU340
 1495 01a4 2000     		movs	r0, r4
 1496 01a6 2900     		movs	r1, r5
 1497 01a8 FFF7FEFF 		bl	__aeabi_dadd
 1498              	.LVL178:
 1499 01ac 0200     		movs	r2, r0
 1500 01ae 0B00     		movs	r3, r1
 1501              		.loc 1 504 23 view .LVU341
 1502 01b0 0C98     		ldr	r0, [sp, #48]
 1503 01b2 0D99     		ldr	r1, [sp, #52]
 1504 01b4 FFF7FEFF 		bl	__aeabi_ddiv
 1505              	.LVL179:
 1506              		.loc 1 504 15 view .LVU342
 1507 01b8 0022     		movs	r2, #0
 1508 01ba 764B     		ldr	r3, .L126+12
 1509 01bc FFF7FEFF 		bl	__aeabi_dadd
 1510              	.LVL180:
 1511              		.loc 1 504 10 view .LVU343
 1512 01c0 089A     		ldr	r2, [sp, #32]
 1513 01c2 099B     		ldr	r3, [sp, #36]
 1514 01c4 FFF7FEFF 		bl	__aeabi_dmul
 1515              	.LVL181:
 1516 01c8 0400     		movs	r4, r0
 1517 01ca 0D00     		movs	r5, r1
 1518 01cc 0894     		str	r4, [sp, #32]
 1519 01ce 0995     		str	r5, [sp, #36]
 505:Core/Src/printf.c ****   // correct for rounding errors
 506:Core/Src/printf.c ****   if (value < conv.F) {
 1520              		.loc 1 506 3 is_stmt 1 view .LVU344
 1521              		.loc 1 506 6 is_stmt 0 view .LVU345
 1522 01d0 069A     		ldr	r2, [sp, #24]
 1523 01d2 079B     		ldr	r3, [sp, #28]
 1524 01d4 FFF7FEFF 		bl	__aeabi_dcmpgt
 1525              	.LVL182:
 1526 01d8 0028     		cmp	r0, #0
 1527 01da 0BD0     		beq	.L92
 507:Core/Src/printf.c ****     expval--;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 38


 1528              		.loc 1 507 5 is_stmt 1 view .LVU346
 1529              		.loc 1 507 11 is_stmt 0 view .LVU347
 1530 01dc 0123     		movs	r3, #1
 1531 01de 5B42     		rsbs	r3, r3, #0
 1532 01e0 9C46     		mov	ip, r3
 1533 01e2 E344     		add	fp, fp, ip
 1534              	.LVL183:
 508:Core/Src/printf.c ****     conv.F /= 10;
 1535              		.loc 1 508 5 is_stmt 1 view .LVU348
 1536              		.loc 1 508 12 is_stmt 0 view .LVU349
 1537 01e4 0022     		movs	r2, #0
 1538 01e6 7C4B     		ldr	r3, .L126+80
 1539 01e8 2000     		movs	r0, r4
 1540 01ea 2900     		movs	r1, r5
 1541 01ec FFF7FEFF 		bl	__aeabi_ddiv
 1542              	.LVL184:
 1543 01f0 0890     		str	r0, [sp, #32]
 1544 01f2 0991     		str	r1, [sp, #36]
 1545              	.L92:
 509:Core/Src/printf.c ****   }
 510:Core/Src/printf.c **** 
 511:Core/Src/printf.c ****   // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
 512:Core/Src/printf.c ****   unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
 1546              		.loc 1 512 3 is_stmt 1 view .LVU350
 1547              		.loc 1 512 43 is_stmt 0 view .LVU351
 1548 01f4 5B46     		mov	r3, fp
 1549 01f6 6333     		adds	r3, r3, #99
 1550              		.loc 1 512 68 view .LVU352
 1551 01f8 C62B     		cmp	r3, #198
 1552 01fa 3CD8     		bhi	.L110
 1553              		.loc 1 512 68 view .LVU353
 1554 01fc 0424     		movs	r4, #4
 1555              	.L94:
 1556              	.LVL185:
 513:Core/Src/printf.c **** 
 514:Core/Src/printf.c ****   // in "%g" mode, "prec" is the number of *significant figures* not decimals
 515:Core/Src/printf.c ****   if (flags & FLAGS_ADAPT_EXP) {
 1557              		.loc 1 515 3 is_stmt 1 discriminator 4 view .LVU354
 1558              		.loc 1 515 6 is_stmt 0 discriminator 4 view .LVU355
 1559 01fe 1E9B     		ldr	r3, [sp, #120]
 1560 0200 1B05     		lsls	r3, r3, #20
 1561 0202 44D5     		bpl	.L95
 516:Core/Src/printf.c ****     // do we want to fall-back to "%f" mode?
 517:Core/Src/printf.c ****     if ((value >= 1e-4) && (value < 1e6)) {
 1562              		.loc 1 517 5 is_stmt 1 view .LVU356
 1563              		.loc 1 517 8 is_stmt 0 view .LVU357
 1564 0204 764A     		ldr	r2, .L126+88
 1565 0206 774B     		ldr	r3, .L126+92
 1566 0208 0698     		ldr	r0, [sp, #24]
 1567 020a 0799     		ldr	r1, [sp, #28]
 1568 020c FFF7FEFF 		bl	__aeabi_dcmpge
 1569              	.LVL186:
 1570 0210 0028     		cmp	r0, #0
 1571 0212 41D0     		beq	.L96
 1572              		.loc 1 517 25 discriminator 1 view .LVU358
 1573 0214 0022     		movs	r2, #0
 1574 0216 744B     		ldr	r3, .L126+96
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 39


 1575 0218 0698     		ldr	r0, [sp, #24]
 1576 021a 0799     		ldr	r1, [sp, #28]
 1577 021c FFF7FEFF 		bl	__aeabi_dcmplt
 1578              	.LVL187:
 1579 0220 0028     		cmp	r0, #0
 1580 0222 39D0     		beq	.L96
 518:Core/Src/printf.c ****       if ((int)prec > expval) {
 1581              		.loc 1 518 7 is_stmt 1 view .LVU359
 1582              		.loc 1 518 10 is_stmt 0 view .LVU360
 1583 0224 1C9B     		ldr	r3, [sp, #112]
 1584 0226 5B45     		cmp	r3, fp
 1585 0228 27DD     		ble	.L111
 519:Core/Src/printf.c ****         prec = (unsigned)((int)prec - expval - 1);
 1586              		.loc 1 519 9 is_stmt 1 view .LVU361
 1587              		.loc 1 519 37 is_stmt 0 view .LVU362
 1588 022a 5A46     		mov	r2, fp
 1589 022c 9B1A     		subs	r3, r3, r2
 1590              		.loc 1 519 46 view .LVU363
 1591 022e 013B     		subs	r3, r3, #1
 1592 0230 1C93     		str	r3, [sp, #112]
 1593              	.LVL188:
 1594              		.loc 1 519 46 view .LVU364
 1595 0232 24E0     		b	.L99
 1596              	.LVL189:
 1597              	.L85:
 472:Core/Src/printf.c ****   }
 1598              		.loc 1 472 5 is_stmt 1 view .LVU365
 472:Core/Src/printf.c ****   }
 1599              		.loc 1 472 12 is_stmt 0 view .LVU366
 1600 0234 1E9B     		ldr	r3, [sp, #120]
 1601 0236 0493     		str	r3, [sp, #16]
 1602 0238 1D9B     		ldr	r3, [sp, #116]
 1603 023a 0393     		str	r3, [sp, #12]
 1604 023c 1C9B     		ldr	r3, [sp, #112]
 1605 023e 0293     		str	r3, [sp, #8]
 1606 0240 0096     		str	r6, [sp]
 1607 0242 0197     		str	r7, [sp, #4]
 1608 0244 0E9B     		ldr	r3, [sp, #56]
 1609 0246 5246     		mov	r2, r10
 1610 0248 4146     		mov	r1, r8
 1611 024a 4846     		mov	r0, r9
 1612 024c FFF7FEFF 		bl	_ftoa
 1613              	.LVL190:
 1614              	.L88:
 520:Core/Src/printf.c ****       }
 521:Core/Src/printf.c ****       else {
 522:Core/Src/printf.c ****         prec = 0;
 523:Core/Src/printf.c ****       }
 524:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
 525:Core/Src/printf.c ****       // no characters in exponent
 526:Core/Src/printf.c ****       minwidth = 0U;
 527:Core/Src/printf.c ****       expval   = 0;
 528:Core/Src/printf.c ****     }
 529:Core/Src/printf.c ****     else {
 530:Core/Src/printf.c ****       // we use one sigfig for the whole part
 531:Core/Src/printf.c ****       if ((prec > 0) && (flags & FLAGS_PRECISION)) {
 532:Core/Src/printf.c ****         --prec;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 40


 533:Core/Src/printf.c ****       }
 534:Core/Src/printf.c ****     }
 535:Core/Src/printf.c ****   }
 536:Core/Src/printf.c **** 
 537:Core/Src/printf.c ****   // will everything fit?
 538:Core/Src/printf.c ****   unsigned int fwidth = width;
 539:Core/Src/printf.c ****   if (width > minwidth) {
 540:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 541:Core/Src/printf.c ****     fwidth -= minwidth;
 542:Core/Src/printf.c ****   } else {
 543:Core/Src/printf.c ****     // not enough characters, so go back to default sizing
 544:Core/Src/printf.c ****     fwidth = 0U;
 545:Core/Src/printf.c ****   }
 546:Core/Src/printf.c ****   if ((flags & FLAGS_LEFT) && minwidth) {
 547:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 548:Core/Src/printf.c ****     fwidth = 0U;
 549:Core/Src/printf.c ****   }
 550:Core/Src/printf.c **** 
 551:Core/Src/printf.c ****   // rescale the float value
 552:Core/Src/printf.c ****   if (expval) {
 553:Core/Src/printf.c ****     value /= conv.F;
 554:Core/Src/printf.c ****   }
 555:Core/Src/printf.c **** 
 556:Core/Src/printf.c ****   // output the floating part
 557:Core/Src/printf.c ****   const size_t start_idx = idx;
 558:Core/Src/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 559:Core/Src/printf.c **** 
 560:Core/Src/printf.c ****   // output the exponent part
 561:Core/Src/printf.c ****   if (minwidth) {
 562:Core/Src/printf.c ****     // output the exponential symbol
 563:Core/Src/printf.c ****     out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
 564:Core/Src/printf.c ****     // output the exponent value
 565:Core/Src/printf.c ****     idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, 
 566:Core/Src/printf.c ****     // might need to right-pad spaces
 567:Core/Src/printf.c ****     if (flags & FLAGS_LEFT) {
 568:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 569:Core/Src/printf.c ****     }
 570:Core/Src/printf.c ****   }
 571:Core/Src/printf.c ****   return idx;
 572:Core/Src/printf.c **** }
 1615              		.loc 1 572 1 view .LVU367
 1616 0250 11B0     		add	sp, sp, #68
 1617              		@ sp needed
 1618              	.LVL191:
 1619              		.loc 1 572 1 view .LVU368
 1620 0252 F0BC     		pop	{r4, r5, r6, r7}
 1621 0254 BB46     		mov	fp, r7
 1622 0256 B246     		mov	r10, r6
 1623 0258 A946     		mov	r9, r5
 1624 025a A046     		mov	r8, r4
 1625 025c F0BD     		pop	{r4, r5, r6, r7, pc}
 1626              	.LVL192:
 1627              	.L124:
 478:Core/Src/printf.c ****   }
 1628              		.loc 1 478 5 is_stmt 1 view .LVU369
 478:Core/Src/printf.c ****   }
 1629              		.loc 1 478 11 is_stmt 0 view .LVU370
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 41


 1630 025e 0021     		movs	r1, #0
 1631 0260 0022     		movs	r2, #0
 1632 0262 0691     		str	r1, [sp, #24]
 1633 0264 0792     		str	r2, [sp, #28]
 1634 0266 0696     		str	r6, [sp, #24]
 1635 0268 8023     		movs	r3, #128
 1636 026a 1B06     		lsls	r3, r3, #24
 1637 026c 9C46     		mov	ip, r3
 1638 026e BC44     		add	ip, ip, r7
 1639 0270 6346     		mov	r3, ip
 1640 0272 0793     		str	r3, [sp, #28]
 1641              	.LVL193:
 478:Core/Src/printf.c ****   }
 1642              		.loc 1 478 11 view .LVU371
 1643 0274 F9E6     		b	.L89
 1644              	.LVL194:
 1645              	.L110:
 512:Core/Src/printf.c **** 
 1646              		.loc 1 512 68 view .LVU372
 1647 0276 0524     		movs	r4, #5
 1648 0278 C1E7     		b	.L94
 1649              	.LVL195:
 1650              	.L111:
 522:Core/Src/printf.c ****       }
 1651              		.loc 1 522 14 view .LVU373
 1652 027a 0023     		movs	r3, #0
 1653 027c 1C93     		str	r3, [sp, #112]
 1654              	.LVL196:
 1655              	.L99:
 524:Core/Src/printf.c ****       // no characters in exponent
 1656              		.loc 1 524 7 is_stmt 1 view .LVU374
 524:Core/Src/printf.c ****       // no characters in exponent
 1657              		.loc 1 524 13 is_stmt 0 view .LVU375
 1658 027e 8023     		movs	r3, #128
 1659 0280 DB00     		lsls	r3, r3, #3
 1660 0282 1E9A     		ldr	r2, [sp, #120]
 1661 0284 1A43     		orrs	r2, r3
 1662 0286 1E92     		str	r2, [sp, #120]
 1663              	.LVL197:
 526:Core/Src/printf.c ****       expval   = 0;
 1664              		.loc 1 526 7 is_stmt 1 view .LVU376
 527:Core/Src/printf.c ****     }
 1665              		.loc 1 527 7 view .LVU377
 526:Core/Src/printf.c ****       expval   = 0;
 1666              		.loc 1 526 16 is_stmt 0 view .LVU378
 1667 0288 0024     		movs	r4, #0
 527:Core/Src/printf.c ****     }
 1668              		.loc 1 527 16 view .LVU379
 1669 028a 0023     		movs	r3, #0
 1670 028c 9B46     		mov	fp, r3
 1671              	.LVL198:
 1672              	.L95:
 538:Core/Src/printf.c ****   if (width > minwidth) {
 1673              		.loc 1 538 3 is_stmt 1 view .LVU380
 539:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1674              		.loc 1 539 3 view .LVU381
 539:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 42


 1675              		.loc 1 539 6 is_stmt 0 view .LVU382
 1676 028e 1D9B     		ldr	r3, [sp, #116]
 1677 0290 9C42     		cmp	r4, r3
 1678 0292 0BD2     		bcs	.L112
 541:Core/Src/printf.c ****   } else {
 1679              		.loc 1 541 5 is_stmt 1 view .LVU383
 541:Core/Src/printf.c ****   } else {
 1680              		.loc 1 541 12 is_stmt 0 view .LVU384
 1681 0294 1D1B     		subs	r5, r3, r4
 1682              	.LVL199:
 541:Core/Src/printf.c ****   } else {
 1683              		.loc 1 541 12 view .LVU385
 1684 0296 0AE0     		b	.L100
 1685              	.LVL200:
 1686              	.L96:
 531:Core/Src/printf.c ****         --prec;
 1687              		.loc 1 531 7 is_stmt 1 view .LVU386
 531:Core/Src/printf.c ****         --prec;
 1688              		.loc 1 531 10 is_stmt 0 view .LVU387
 1689 0298 1C9B     		ldr	r3, [sp, #112]
 1690 029a 002B     		cmp	r3, #0
 1691 029c F7D0     		beq	.L95
 531:Core/Src/printf.c ****         --prec;
 1692              		.loc 1 531 22 discriminator 1 view .LVU388
 1693 029e 0F9B     		ldr	r3, [sp, #60]
 1694 02a0 002B     		cmp	r3, #0
 1695 02a2 F4D0     		beq	.L95
 532:Core/Src/printf.c ****       }
 1696              		.loc 1 532 9 is_stmt 1 view .LVU389
 1697 02a4 1C9B     		ldr	r3, [sp, #112]
 1698 02a6 013B     		subs	r3, r3, #1
 1699 02a8 1C93     		str	r3, [sp, #112]
 1700              	.LVL201:
 532:Core/Src/printf.c ****       }
 1701              		.loc 1 532 9 is_stmt 0 view .LVU390
 1702 02aa F0E7     		b	.L95
 1703              	.LVL202:
 1704              	.L112:
 544:Core/Src/printf.c ****   }
 1705              		.loc 1 544 12 view .LVU391
 1706 02ac 0025     		movs	r5, #0
 1707              	.LVL203:
 1708              	.L100:
 546:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1709              		.loc 1 546 3 is_stmt 1 view .LVU392
 546:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1710              		.loc 1 546 14 is_stmt 0 view .LVU393
 1711 02ae 0223     		movs	r3, #2
 1712 02b0 1E9A     		ldr	r2, [sp, #120]
 1713 02b2 1A40     		ands	r2, r3
 1714 02b4 0A92     		str	r2, [sp, #40]
 1715              	.LVL204:
 546:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1716              		.loc 1 546 6 view .LVU394
 1717 02b6 1E9A     		ldr	r2, [sp, #120]
 1718 02b8 1342     		tst	r3, r2
 1719 02ba 02D0     		beq	.L101
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 43


 546:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1720              		.loc 1 546 28 discriminator 1 view .LVU395
 1721 02bc 002C     		cmp	r4, #0
 1722 02be 00D0     		beq	.L101
 548:Core/Src/printf.c ****   }
 1723              		.loc 1 548 12 view .LVU396
 1724 02c0 0025     		movs	r5, #0
 1725              	.LVL205:
 1726              	.L101:
 552:Core/Src/printf.c ****     value /= conv.F;
 1727              		.loc 1 552 3 is_stmt 1 view .LVU397
 552:Core/Src/printf.c ****     value /= conv.F;
 1728              		.loc 1 552 6 is_stmt 0 view .LVU398
 1729 02c2 5B46     		mov	r3, fp
 1730 02c4 002B     		cmp	r3, #0
 1731 02c6 07D0     		beq	.L102
 1732              	.LVL206:
 553:Core/Src/printf.c ****   }
 1733              		.loc 1 553 5 is_stmt 1 view .LVU399
 553:Core/Src/printf.c ****   }
 1734              		.loc 1 553 18 is_stmt 0 view .LVU400
 1735 02c8 089A     		ldr	r2, [sp, #32]
 1736 02ca 099B     		ldr	r3, [sp, #36]
 553:Core/Src/printf.c ****   }
 1737              		.loc 1 553 11 view .LVU401
 1738 02cc 0698     		ldr	r0, [sp, #24]
 1739 02ce 0799     		ldr	r1, [sp, #28]
 1740 02d0 FFF7FEFF 		bl	__aeabi_ddiv
 1741              	.LVL207:
 553:Core/Src/printf.c ****   }
 1742              		.loc 1 553 11 view .LVU402
 1743 02d4 0690     		str	r0, [sp, #24]
 1744 02d6 0791     		str	r1, [sp, #28]
 1745              	.LVL208:
 1746              	.L102:
 557:Core/Src/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 1747              		.loc 1 557 3 is_stmt 1 view .LVU403
 558:Core/Src/printf.c **** 
 1748              		.loc 1 558 3 view .LVU404
 558:Core/Src/printf.c **** 
 1749              		.loc 1 558 9 is_stmt 0 view .LVU405
 1750 02d8 0022     		movs	r2, #0
 1751 02da 0023     		movs	r3, #0
 1752 02dc 3000     		movs	r0, r6
 1753 02de 3900     		movs	r1, r7
 1754 02e0 FFF7FEFF 		bl	__aeabi_dcmplt
 1755              	.LVL209:
 1756 02e4 0028     		cmp	r0, #0
 1757 02e6 3FD1     		bne	.L125
 1758              	.LVL210:
 1759              	.L103:
 558:Core/Src/printf.c **** 
 1760              		.loc 1 558 9 discriminator 4 view .LVU406
 1761 02e8 404B     		ldr	r3, .L126+100
 1762 02ea 1E9A     		ldr	r2, [sp, #120]
 1763 02ec 1340     		ands	r3, r2
 1764 02ee 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 44


 1765 02f0 0395     		str	r5, [sp, #12]
 1766 02f2 1C9B     		ldr	r3, [sp, #112]
 1767 02f4 0293     		str	r3, [sp, #8]
 1768 02f6 069A     		ldr	r2, [sp, #24]
 1769 02f8 079B     		ldr	r3, [sp, #28]
 1770 02fa 0092     		str	r2, [sp]
 1771 02fc 0193     		str	r3, [sp, #4]
 1772 02fe 0E9B     		ldr	r3, [sp, #56]
 1773 0300 5246     		mov	r2, r10
 1774 0302 4146     		mov	r1, r8
 1775 0304 4846     		mov	r0, r9
 1776 0306 FFF7FEFF 		bl	_ftoa
 1777              	.LVL211:
 561:Core/Src/printf.c ****     // output the exponential symbol
 1778              		.loc 1 561 3 is_stmt 1 discriminator 4 view .LVU407
 561:Core/Src/printf.c ****     // output the exponential symbol
 1779              		.loc 1 561 6 is_stmt 0 discriminator 4 view .LVU408
 1780 030a 002C     		cmp	r4, #0
 1781 030c A0D0     		beq	.L88
 563:Core/Src/printf.c ****     // output the exponent value
 1782              		.loc 1 563 5 is_stmt 1 view .LVU409
 1783 030e 1E9B     		ldr	r3, [sp, #120]
 1784 0310 9B06     		lsls	r3, r3, #26
 1785 0312 35D5     		bpl	.L114
 1786 0314 4523     		movs	r3, #69
 1787 0316 9C46     		mov	ip, r3
 1788              	.L105:
 563:Core/Src/printf.c ****     // output the exponent value
 1789              		.loc 1 563 5 is_stmt 0 discriminator 4 view .LVU410
 1790 0318 451C     		adds	r5, r0, #1
 1791              	.LVL212:
 563:Core/Src/printf.c ****     // output the exponent value
 1792              		.loc 1 563 5 discriminator 4 view .LVU411
 1793 031a 0E9E     		ldr	r6, [sp, #56]
 1794 031c 3300     		movs	r3, r6
 1795 031e 0200     		movs	r2, r0
 1796 0320 4146     		mov	r1, r8
 1797 0322 6046     		mov	r0, ip
 1798 0324 C847     		blx	r9
 1799              	.LVL213:
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 1800              		.loc 1 565 5 is_stmt 1 discriminator 4 view .LVU412
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 1801              		.loc 1 565 71 is_stmt 0 discriminator 4 view .LVU413
 1802 0326 5A46     		mov	r2, fp
 1803 0328 D317     		asrs	r3, r2, #31
 1804 032a D218     		adds	r2, r2, r3
 1805 032c 5A40     		eors	r2, r3
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 1806              		.loc 1 565 11 discriminator 4 view .LVU414
 1807 032e 0523     		movs	r3, #5
 1808 0330 0593     		str	r3, [sp, #20]
 1809 0332 013C     		subs	r4, r4, #1
 1810              	.LVL214:
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 1811              		.loc 1 565 11 discriminator 4 view .LVU415
 1812 0334 0494     		str	r4, [sp, #16]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 45


 1813 0336 0023     		movs	r3, #0
 1814 0338 0393     		str	r3, [sp, #12]
 1815 033a 0A33     		adds	r3, r3, #10
 1816 033c 0293     		str	r3, [sp, #8]
 1817 033e 5946     		mov	r1, fp
 1818 0340 CB0F     		lsrs	r3, r1, #31
 1819 0342 0193     		str	r3, [sp, #4]
 1820 0344 0092     		str	r2, [sp]
 1821 0346 3300     		movs	r3, r6
 1822 0348 2A00     		movs	r2, r5
 1823 034a 4146     		mov	r1, r8
 1824 034c 4846     		mov	r0, r9
 1825 034e FFF7FEFF 		bl	_ntoa_long
 1826              	.LVL215:
 567:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1827              		.loc 1 567 5 is_stmt 1 discriminator 4 view .LVU416
 567:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1828              		.loc 1 567 8 is_stmt 0 discriminator 4 view .LVU417
 1829 0352 0A9B     		ldr	r3, [sp, #40]
 1830 0354 002B     		cmp	r3, #0
 1831 0356 00D1     		bne	.LCB1855
 1832 0358 7AE7     		b	.L88	@long jump
 1833              	.LCB1855:
 1834 035a 0200     		movs	r2, r0
 1835 035c 4E46     		mov	r6, r9
 1836 035e 4746     		mov	r7, r8
 1837 0360 5546     		mov	r5, r10
 1838 0362 0E9B     		ldr	r3, [sp, #56]
 1839 0364 9846     		mov	r8, r3
 1840              	.LVL216:
 567:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1841              		.loc 1 567 8 discriminator 4 view .LVU418
 1842 0366 49E0     		b	.L106
 1843              	.LVL217:
 1844              	.L125:
 558:Core/Src/printf.c **** 
 1845              		.loc 1 558 9 discriminator 1 view .LVU419
 1846 0368 069E     		ldr	r6, [sp, #24]
 1847 036a 079F     		ldr	r7, [sp, #28]
 1848              	.LVL218:
 558:Core/Src/printf.c **** 
 1849              		.loc 1 558 9 discriminator 1 view .LVU420
 1850 036c 3200     		movs	r2, r6
 1851 036e 3900     		movs	r1, r7
 1852 0370 8020     		movs	r0, #128
 1853 0372 0006     		lsls	r0, r0, #24
 1854 0374 8446     		mov	ip, r0
 1855 0376 6144     		add	r1, r1, ip
 1856 0378 0B00     		movs	r3, r1
 1857 037a 0692     		str	r2, [sp, #24]
 1858 037c 0793     		str	r3, [sp, #28]
 1859              	.LVL219:
 558:Core/Src/printf.c **** 
 1860              		.loc 1 558 9 discriminator 1 view .LVU421
 1861 037e B3E7     		b	.L103
 1862              	.LVL220:
 1863              	.L114:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 46


 563:Core/Src/printf.c ****     // output the exponent value
 1864              		.loc 1 563 5 view .LVU422
 1865 0380 6523     		movs	r3, #101
 1866 0382 9C46     		mov	ip, r3
 1867 0384 C8E7     		b	.L105
 1868              	.L127:
 1869 0386 C046     		.align	2
 1870              	.L126:
 1871 0388 FFFFEF7F 		.word	2146435071
 1872 038c FFFFEFFF 		.word	-1048577
 1873 0390 01FCFFFF 		.word	-1023
 1874 0394 0000F03F 		.word	1072693248
 1875 0398 FB799F50 		.word	1352628731
 1876 039c 1344D33F 		.word	1070810131
 1877 03a0 B3C8608B 		.word	-1956591437
 1878 03a4 288AC63F 		.word	1069976104
 1879 03a8 0000F83F 		.word	1073217536
 1880 03ac 61436F63 		.word	1668236129
 1881 03b0 A787D23F 		.word	1070761895
 1882 03b4 71A37909 		.word	158966641
 1883 03b8 4F930A40 		.word	1074434895
 1884 03bc 0000E03F 		.word	1071644672
 1885 03c0 1655B5BB 		.word	-1145744106
 1886 03c4 B16B0240 		.word	1073900465
 1887 03c8 EF39FAFE 		.word	-17155601
 1888 03cc 422EE63F 		.word	1072049730
 1889 03d0 FF030000 		.word	1023
 1890 03d4 00002C40 		.word	1076625408
 1891 03d8 00002440 		.word	1076101120
 1892 03dc 00001840 		.word	1075314688
 1893 03e0 2D431CEB 		.word	-350469331
 1894 03e4 E2361A3F 		.word	1058682594
 1895 03e8 80842E41 		.word	1093567616
 1896 03ec FFF7FFFF 		.word	-2049
 1897              	.LVL221:
 1898              	.L107:
 568:Core/Src/printf.c ****     }
 1899              		.loc 1 568 39 is_stmt 1 discriminator 2 view .LVU423
 1900 03f0 541C     		adds	r4, r2, #1
 1901              	.LVL222:
 568:Core/Src/printf.c ****     }
 1902              		.loc 1 568 39 is_stmt 0 discriminator 2 view .LVU424
 1903 03f2 4346     		mov	r3, r8
 1904 03f4 3900     		movs	r1, r7
 1905 03f6 2020     		movs	r0, #32
 1906 03f8 B047     		blx	r6
 1907              	.LVL223:
 1908 03fa 2200     		movs	r2, r4
 1909              	.LVL224:
 1910              	.L106:
 568:Core/Src/printf.c ****     }
 1911              		.loc 1 568 30 is_stmt 1 discriminator 1 view .LVU425
 568:Core/Src/printf.c ****     }
 1912              		.loc 1 568 18 is_stmt 0 discriminator 1 view .LVU426
 1913 03fc 531B     		subs	r3, r2, r5
 568:Core/Src/printf.c ****     }
 1914              		.loc 1 568 30 discriminator 1 view .LVU427
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 47


 1915 03fe 1D99     		ldr	r1, [sp, #116]
 1916 0400 8B42     		cmp	r3, r1
 1917 0402 F5D3     		bcc	.L107
 568:Core/Src/printf.c ****     }
 1918              		.loc 1 568 30 discriminator 1 view .LVU428
 1919 0404 1000     		movs	r0, r2
 1920 0406 23E7     		b	.L88
 1921              		.cfi_endproc
 1922              	.LFE438:
 1924              		.section	.rodata._ftoa.str1.4,"aMS",%progbits,1
 1925              		.align	2
 1926              	.LC0:
 1927 0000 666E692B 		.ascii	"fni+\000"
 1927      00
 1928 0005 000000   		.align	2
 1929              	.LC2:
 1930 0008 666E6900 		.ascii	"fni\000"
 1931              		.align	2
 1932              	.LC4:
 1933 000c 6E616E00 		.ascii	"nan\000"
 1934              		.align	2
 1935              	.LC6:
 1936 0010 666E692D 		.ascii	"fni-\000"
 1936      00
 1937              		.global	__aeabi_d2uiz
 1938              		.global	__aeabi_ui2d
 1939              		.global	__aeabi_dcmple
 1940              		.global	__aeabi_idivmod
 1941              		.global	__aeabi_idiv
 1942              		.section	.text._ftoa,"ax",%progbits
 1943              		.align	1
 1944              		.syntax unified
 1945              		.code	16
 1946              		.thumb_func
 1948              	_ftoa:
 1949              	.LVL225:
 1950              	.LFB437:
 341:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1951              		.loc 1 341 1 is_stmt 1 view -0
 1952              		.cfi_startproc
 1953              		@ args = 20, pretend = 0, frame = 56
 1954              		@ frame_needed = 0, uses_anonymous_args = 0
 341:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1955              		.loc 1 341 1 is_stmt 0 view .LVU430
 1956 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1957              	.LCFI16:
 1958              		.cfi_def_cfa_offset 20
 1959              		.cfi_offset 4, -20
 1960              		.cfi_offset 5, -16
 1961              		.cfi_offset 6, -12
 1962              		.cfi_offset 7, -8
 1963              		.cfi_offset 14, -4
 1964 0002 DE46     		mov	lr, fp
 1965 0004 5746     		mov	r7, r10
 1966 0006 4E46     		mov	r6, r9
 1967 0008 4546     		mov	r5, r8
 1968 000a E0B5     		push	{r5, r6, r7, lr}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 48


 1969              	.LCFI17:
 1970              		.cfi_def_cfa_offset 36
 1971              		.cfi_offset 8, -36
 1972              		.cfi_offset 9, -32
 1973              		.cfi_offset 10, -28
 1974              		.cfi_offset 11, -24
 1975 000c 95B0     		sub	sp, sp, #84
 1976              	.LCFI18:
 1977              		.cfi_def_cfa_offset 120
 1978 000e 0890     		str	r0, [sp, #32]
 1979 0010 8946     		mov	r9, r1
 1980 0012 9246     		mov	r10, r2
 1981 0014 9B46     		mov	fp, r3
 1982 0016 209D     		ldr	r5, [sp, #128]
 342:Core/Src/printf.c ****   size_t len  = 0U;
 1983              		.loc 1 342 3 is_stmt 1 view .LVU431
 343:Core/Src/printf.c ****   double diff = 0.0;
 1984              		.loc 1 343 3 view .LVU432
 1985              	.LVL226:
 344:Core/Src/printf.c **** 
 1986              		.loc 1 344 3 view .LVU433
 347:Core/Src/printf.c **** 
 1987              		.loc 1 347 3 view .LVU434
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1988              		.loc 1 350 3 view .LVU435
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1989              		.loc 1 350 6 is_stmt 0 view .LVU436
 1990 0018 1E9A     		ldr	r2, [sp, #120]
 1991 001a 1F9B     		ldr	r3, [sp, #124]
 1992              	.LVL227:
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1993              		.loc 1 350 6 view .LVU437
 1994 001c 1000     		movs	r0, r2
 1995              	.LVL228:
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1996              		.loc 1 350 6 view .LVU438
 1997 001e 1900     		movs	r1, r3
 1998              	.LVL229:
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1999              		.loc 1 350 6 view .LVU439
 2000 0020 FFF7FEFF 		bl	__aeabi_dcmpeq
 2001              	.LVL230:
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 2002              		.loc 1 350 6 view .LVU440
 2003 0024 0028     		cmp	r0, #0
 2004 0026 39D0     		beq	.L202
 352:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 2005              		.loc 1 352 3 is_stmt 1 view .LVU441
 352:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 2006              		.loc 1 352 6 is_stmt 0 view .LVU442
 2007 0028 0122     		movs	r2, #1
 2008 002a 5242     		rsbs	r2, r2, #0
 2009 002c BD4B     		ldr	r3, .L208
 2010 002e 1E98     		ldr	r0, [sp, #120]
 2011 0030 1F99     		ldr	r1, [sp, #124]
 2012 0032 FFF7FEFF 		bl	__aeabi_dcmplt
 2013              	.LVL231:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 49


 2014 0036 0028     		cmp	r0, #0
 2015 0038 3FD1     		bne	.L203
 354:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 2016              		.loc 1 354 3 is_stmt 1 view .LVU443
 354:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 2017              		.loc 1 354 6 is_stmt 0 view .LVU444
 2018 003a 0122     		movs	r2, #1
 2019 003c 5242     		rsbs	r2, r2, #0
 2020 003e BA4B     		ldr	r3, .L208+4
 2021 0040 1E98     		ldr	r0, [sp, #120]
 2022 0042 1F99     		ldr	r1, [sp, #124]
 2023 0044 FFF7FEFF 		bl	__aeabi_dcmpgt
 2024              	.LVL232:
 2025 0048 0028     		cmp	r0, #0
 2026 004a 45D1     		bne	.L204
 359:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 2027              		.loc 1 359 3 is_stmt 1 view .LVU445
 359:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 2028              		.loc 1 359 6 is_stmt 0 view .LVU446
 2029 004c 0022     		movs	r2, #0
 2030 004e B74B     		ldr	r3, .L208+8
 2031 0050 1E98     		ldr	r0, [sp, #120]
 2032 0052 1F99     		ldr	r1, [sp, #124]
 2033 0054 FFF7FEFF 		bl	__aeabi_dcmpgt
 2034              	.LVL233:
 2035 0058 0028     		cmp	r0, #0
 2036 005a 58D1     		bne	.L138
 359:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 2037              		.loc 1 359 34 discriminator 1 view .LVU447
 2038 005c 0022     		movs	r2, #0
 2039 005e B44B     		ldr	r3, .L208+12
 2040 0060 1E98     		ldr	r0, [sp, #120]
 2041 0062 1F99     		ldr	r1, [sp, #124]
 2042 0064 FFF7FEFF 		bl	__aeabi_dcmplt
 2043              	.LVL234:
 2044 0068 0028     		cmp	r0, #0
 2045 006a 50D1     		bne	.L138
 368:Core/Src/printf.c ****   if (value < 0) {
 2046              		.loc 1 368 3 is_stmt 1 view .LVU448
 2047              	.LVL235:
 369:Core/Src/printf.c ****     negative = true;
 2048              		.loc 1 369 3 view .LVU449
 369:Core/Src/printf.c ****     negative = true;
 2049              		.loc 1 369 6 is_stmt 0 view .LVU450
 2050 006c 0022     		movs	r2, #0
 2051 006e 0023     		movs	r3, #0
 2052 0070 1E98     		ldr	r0, [sp, #120]
 2053 0072 1F99     		ldr	r1, [sp, #124]
 2054 0074 FFF7FEFF 		bl	__aeabi_dcmplt
 2055              	.LVL236:
 2056 0078 0028     		cmp	r0, #0
 2057 007a 58D1     		bne	.L205
 368:Core/Src/printf.c ****   if (value < 0) {
 2058              		.loc 1 368 8 view .LVU451
 2059 007c 0023     		movs	r3, #0
 2060 007e 0993     		str	r3, [sp, #36]
 2061              	.LVL237:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 50


 2062              	.L141:
 375:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 2063              		.loc 1 375 3 is_stmt 1 view .LVU452
 375:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 2064              		.loc 1 375 6 is_stmt 0 view .LVU453
 2065 0080 229B     		ldr	r3, [sp, #136]
 2066 0082 5B05     		lsls	r3, r3, #21
 2067 0084 5ED5     		bpl	.L177
 2068              	.L143:
 2069              	.LVL238:
 376:Core/Src/printf.c ****   }
 2070              		.loc 1 376 10 view .LVU454
 2071 0086 0024     		movs	r4, #0
 2072              	.LVL239:
 2073              	.L145:
 379:Core/Src/printf.c ****     buf[len++] = '0';
 2074              		.loc 1 379 42 is_stmt 1 view .LVU455
 2075 0088 1F2C     		cmp	r4, #31
 2076 008a 5DD8     		bhi	.L146
 379:Core/Src/printf.c ****     buf[len++] = '0';
 2077              		.loc 1 379 42 is_stmt 0 discriminator 1 view .LVU456
 2078 008c 092D     		cmp	r5, #9
 2079 008e 5BD9     		bls	.L146
 380:Core/Src/printf.c ****     prec--;
 2080              		.loc 1 380 5 is_stmt 1 view .LVU457
 2081              	.LVL240:
 380:Core/Src/printf.c ****     prec--;
 2082              		.loc 1 380 16 is_stmt 0 view .LVU458
 2083 0090 0CAB     		add	r3, sp, #48
 2084 0092 3022     		movs	r2, #48
 2085 0094 1A55     		strb	r2, [r3, r4]
 381:Core/Src/printf.c ****   }
 2086              		.loc 1 381 5 is_stmt 1 view .LVU459
 381:Core/Src/printf.c ****   }
 2087              		.loc 1 381 9 is_stmt 0 view .LVU460
 2088 0096 013D     		subs	r5, r5, #1
 2089              	.LVL241:
 380:Core/Src/printf.c ****     prec--;
 2090              		.loc 1 380 12 view .LVU461
 2091 0098 0134     		adds	r4, r4, #1
 2092              	.LVL242:
 380:Core/Src/printf.c ****     prec--;
 2093              		.loc 1 380 12 view .LVU462
 2094 009a F5E7     		b	.L145
 2095              	.LVL243:
 2096              	.L202:
 351:Core/Src/printf.c ****   if (value < -DBL_MAX)
 2097              		.loc 1 351 5 is_stmt 1 view .LVU463
 351:Core/Src/printf.c ****   if (value < -DBL_MAX)
 2098              		.loc 1 351 12 is_stmt 0 view .LVU464
 2099 009c 229B     		ldr	r3, [sp, #136]
 2100 009e 0393     		str	r3, [sp, #12]
 2101 00a0 219B     		ldr	r3, [sp, #132]
 2102 00a2 0293     		str	r3, [sp, #8]
 2103 00a4 0323     		movs	r3, #3
 2104 00a6 0193     		str	r3, [sp, #4]
 2105 00a8 A24B     		ldr	r3, .L208+16
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 51


 2106 00aa 0093     		str	r3, [sp]
 2107 00ac 5B46     		mov	r3, fp
 2108 00ae 5246     		mov	r2, r10
 2109 00b0 4946     		mov	r1, r9
 2110 00b2 0898     		ldr	r0, [sp, #32]
 2111 00b4 FFF7FEFF 		bl	_out_rev
 2112              	.LVL244:
 2113 00b8 05E1     		b	.L128
 2114              	.L203:
 353:Core/Src/printf.c ****   if (value > DBL_MAX)
 2115              		.loc 1 353 5 is_stmt 1 view .LVU465
 353:Core/Src/printf.c ****   if (value > DBL_MAX)
 2116              		.loc 1 353 12 is_stmt 0 view .LVU466
 2117 00ba 229B     		ldr	r3, [sp, #136]
 2118 00bc 0393     		str	r3, [sp, #12]
 2119 00be 219B     		ldr	r3, [sp, #132]
 2120 00c0 0293     		str	r3, [sp, #8]
 2121 00c2 0423     		movs	r3, #4
 2122 00c4 0193     		str	r3, [sp, #4]
 2123 00c6 9C4B     		ldr	r3, .L208+20
 2124 00c8 0093     		str	r3, [sp]
 2125 00ca 5B46     		mov	r3, fp
 2126 00cc 5246     		mov	r2, r10
 2127 00ce 4946     		mov	r1, r9
 2128 00d0 0898     		ldr	r0, [sp, #32]
 2129 00d2 FFF7FEFF 		bl	_out_rev
 2130              	.LVL245:
 2131 00d6 F6E0     		b	.L128
 2132              	.L204:
 355:Core/Src/printf.c **** 
 2133              		.loc 1 355 5 is_stmt 1 view .LVU467
 355:Core/Src/printf.c **** 
 2134              		.loc 1 355 54 is_stmt 0 view .LVU468
 2135 00d8 0423     		movs	r3, #4
 2136 00da 229A     		ldr	r2, [sp, #136]
 2137 00dc 1A40     		ands	r2, r3
 355:Core/Src/printf.c **** 
 2138              		.loc 1 355 12 view .LVU469
 2139 00de 2299     		ldr	r1, [sp, #136]
 2140 00e0 0B42     		tst	r3, r1
 2141 00e2 10D0     		beq	.L174
 2142 00e4 954B     		ldr	r3, .L208+24
 2143              	.L136:
 355:Core/Src/printf.c **** 
 2144              		.loc 1 355 12 discriminator 4 view .LVU470
 2145 00e6 002A     		cmp	r2, #0
 2146 00e8 0FD0     		beq	.L175
 355:Core/Src/printf.c **** 
 2147              		.loc 1 355 12 view .LVU471
 2148 00ea 0422     		movs	r2, #4
 2149              	.L137:
 355:Core/Src/printf.c **** 
 2150              		.loc 1 355 12 discriminator 8 view .LVU472
 2151 00ec 2299     		ldr	r1, [sp, #136]
 2152 00ee 0391     		str	r1, [sp, #12]
 2153 00f0 2199     		ldr	r1, [sp, #132]
 2154 00f2 0291     		str	r1, [sp, #8]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 52


 2155 00f4 0192     		str	r2, [sp, #4]
 2156 00f6 0093     		str	r3, [sp]
 2157 00f8 5B46     		mov	r3, fp
 2158 00fa 5246     		mov	r2, r10
 2159 00fc 4946     		mov	r1, r9
 2160 00fe 0898     		ldr	r0, [sp, #32]
 2161 0100 FFF7FEFF 		bl	_out_rev
 2162              	.LVL246:
 2163 0104 DFE0     		b	.L128
 2164              	.L174:
 355:Core/Src/printf.c **** 
 2165              		.loc 1 355 12 view .LVU473
 2166 0106 8E4B     		ldr	r3, .L208+28
 2167 0108 EDE7     		b	.L136
 2168              	.L175:
 2169 010a 0322     		movs	r2, #3
 2170 010c EEE7     		b	.L137
 2171              	.L138:
 361:Core/Src/printf.c **** #else
 2172              		.loc 1 361 5 is_stmt 1 view .LVU474
 361:Core/Src/printf.c **** #else
 2173              		.loc 1 361 12 is_stmt 0 view .LVU475
 2174 010e 229B     		ldr	r3, [sp, #136]
 2175 0110 0493     		str	r3, [sp, #16]
 2176 0112 219B     		ldr	r3, [sp, #132]
 2177 0114 0393     		str	r3, [sp, #12]
 2178 0116 0295     		str	r5, [sp, #8]
 2179 0118 1E9B     		ldr	r3, [sp, #120]
 2180 011a 1F9C     		ldr	r4, [sp, #124]
 2181 011c 0093     		str	r3, [sp]
 2182 011e 0194     		str	r4, [sp, #4]
 2183 0120 5B46     		mov	r3, fp
 2184 0122 5246     		mov	r2, r10
 2185 0124 4946     		mov	r1, r9
 2186 0126 0898     		ldr	r0, [sp, #32]
 2187 0128 FFF7FEFF 		bl	_etoa
 2188              	.LVL247:
 2189 012c CBE0     		b	.L128
 2190              	.LVL248:
 2191              	.L205:
 370:Core/Src/printf.c ****     value = 0 - value;
 2192              		.loc 1 370 5 is_stmt 1 view .LVU476
 371:Core/Src/printf.c ****   }
 2193              		.loc 1 371 5 view .LVU477
 371:Core/Src/printf.c ****   }
 2194              		.loc 1 371 11 is_stmt 0 view .LVU478
 2195 012e 1E9A     		ldr	r2, [sp, #120]
 2196 0130 1F9B     		ldr	r3, [sp, #124]
 2197 0132 0020     		movs	r0, #0
 2198 0134 0021     		movs	r1, #0
 2199 0136 FFF7FEFF 		bl	__aeabi_dsub
 2200              	.LVL249:
 2201 013a 1E90     		str	r0, [sp, #120]
 2202 013c 1F91     		str	r1, [sp, #124]
 2203              	.LVL250:
 370:Core/Src/printf.c ****     value = 0 - value;
 2204              		.loc 1 370 14 view .LVU479
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 53


 2205 013e 0123     		movs	r3, #1
 2206 0140 0993     		str	r3, [sp, #36]
 2207 0142 9DE7     		b	.L141
 2208              	.LVL251:
 2209              	.L177:
 376:Core/Src/printf.c ****   }
 2210              		.loc 1 376 10 view .LVU480
 2211 0144 0625     		movs	r5, #6
 2212 0146 9EE7     		b	.L143
 2213              	.LVL252:
 2214              	.L146:
 384:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 2215              		.loc 1 384 3 is_stmt 1 view .LVU481
 384:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 2216              		.loc 1 384 7 is_stmt 0 view .LVU482
 2217 0148 1E98     		ldr	r0, [sp, #120]
 2218 014a 1F99     		ldr	r1, [sp, #124]
 2219 014c FFF7FEFF 		bl	__aeabi_d2iz
 2220              	.LVL253:
 2221 0150 0700     		movs	r7, r0
 2222              	.LVL254:
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 2223              		.loc 1 385 3 is_stmt 1 view .LVU483
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 2224              		.loc 1 385 23 is_stmt 0 view .LVU484
 2225 0152 FFF7FEFF 		bl	__aeabi_i2d
 2226              	.LVL255:
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 2227              		.loc 1 385 23 view .LVU485
 2228 0156 0200     		movs	r2, r0
 2229 0158 0B00     		movs	r3, r1
 2230 015a 1E98     		ldr	r0, [sp, #120]
 2231 015c 1F99     		ldr	r1, [sp, #124]
 2232 015e FFF7FEFF 		bl	__aeabi_dsub
 2233              	.LVL256:
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 2234              		.loc 1 385 39 view .LVU486
 2235 0162 784B     		ldr	r3, .L208+32
 2236 0164 EA00     		lsls	r2, r5, #3
 2237 0166 9B18     		adds	r3, r3, r2
 2238 0168 1A68     		ldr	r2, [r3]
 2239 016a 5B68     		ldr	r3, [r3, #4]
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 2240              		.loc 1 385 10 view .LVU487
 2241 016c 0A92     		str	r2, [sp, #40]
 2242 016e 0B93     		str	r3, [sp, #44]
 2243 0170 FFF7FEFF 		bl	__aeabi_dmul
 2244              	.LVL257:
 386:Core/Src/printf.c ****   diff = tmp - frac;
 2245              		.loc 1 386 3 is_stmt 1 view .LVU488
 386:Core/Src/printf.c ****   diff = tmp - frac;
 2246              		.loc 1 386 17 is_stmt 0 view .LVU489
 2247 0174 0690     		str	r0, [sp, #24]
 2248 0176 0791     		str	r1, [sp, #28]
 2249 0178 FFF7FEFF 		bl	__aeabi_d2uiz
 2250              	.LVL258:
 386:Core/Src/printf.c ****   diff = tmp - frac;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 54


 2251              		.loc 1 386 17 view .LVU490
 2252 017c 0600     		movs	r6, r0
 2253              	.LVL259:
 387:Core/Src/printf.c **** 
 2254              		.loc 1 387 3 is_stmt 1 view .LVU491
 387:Core/Src/printf.c **** 
 2255              		.loc 1 387 14 is_stmt 0 view .LVU492
 2256 017e FFF7FEFF 		bl	__aeabi_ui2d
 2257              	.LVL260:
 387:Core/Src/printf.c **** 
 2258              		.loc 1 387 14 view .LVU493
 2259 0182 0200     		movs	r2, r0
 2260 0184 0B00     		movs	r3, r1
 387:Core/Src/printf.c **** 
 2261              		.loc 1 387 8 view .LVU494
 2262 0186 0698     		ldr	r0, [sp, #24]
 2263 0188 0799     		ldr	r1, [sp, #28]
 2264 018a FFF7FEFF 		bl	__aeabi_dsub
 2265              	.LVL261:
 2266 018e 0690     		str	r0, [sp, #24]
 2267 0190 0791     		str	r1, [sp, #28]
 2268              	.LVL262:
 389:Core/Src/printf.c ****     ++frac;
 2269              		.loc 1 389 3 is_stmt 1 view .LVU495
 389:Core/Src/printf.c ****     ++frac;
 2270              		.loc 1 389 6 is_stmt 0 view .LVU496
 2271 0192 0022     		movs	r2, #0
 2272 0194 6C4B     		ldr	r3, .L208+36
 2273 0196 FFF7FEFF 		bl	__aeabi_dcmpgt
 2274              	.LVL263:
 389:Core/Src/printf.c ****     ++frac;
 2275              		.loc 1 389 6 view .LVU497
 2276 019a 0028     		cmp	r0, #0
 2277 019c 2CD0     		beq	.L192
 390:Core/Src/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 2278              		.loc 1 390 5 is_stmt 1 view .LVU498
 2279 019e 0136     		adds	r6, r6, #1
 2280              	.LVL264:
 392:Core/Src/printf.c ****       frac = 0;
 2281              		.loc 1 392 5 view .LVU499
 392:Core/Src/printf.c ****       frac = 0;
 2282              		.loc 1 392 14 is_stmt 0 view .LVU500
 2283 01a0 3000     		movs	r0, r6
 2284 01a2 FFF7FEFF 		bl	__aeabi_ui2d
 2285              	.LVL265:
 2286 01a6 0200     		movs	r2, r0
 2287 01a8 0B00     		movs	r3, r1
 392:Core/Src/printf.c ****       frac = 0;
 2288              		.loc 1 392 8 view .LVU501
 2289 01aa 0A98     		ldr	r0, [sp, #40]
 2290 01ac 0B99     		ldr	r1, [sp, #44]
 2291 01ae FFF7FEFF 		bl	__aeabi_dcmple
 2292              	.LVL266:
 2293 01b2 0028     		cmp	r0, #0
 2294 01b4 01D0     		beq	.L150
 393:Core/Src/printf.c ****       ++whole;
 2295              		.loc 1 393 7 is_stmt 1 view .LVU502
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 55


 2296              	.LVL267:
 394:Core/Src/printf.c ****     }
 2297              		.loc 1 394 7 view .LVU503
 2298 01b6 0137     		adds	r7, r7, #1
 2299              	.LVL268:
 393:Core/Src/printf.c ****       ++whole;
 2300              		.loc 1 393 12 is_stmt 0 view .LVU504
 2301 01b8 0026     		movs	r6, #0
 2302              	.LVL269:
 2303              	.L150:
 404:Core/Src/printf.c ****     diff = value - (double)whole;
 2304              		.loc 1 404 3 is_stmt 1 view .LVU505
 404:Core/Src/printf.c ****     diff = value - (double)whole;
 2305              		.loc 1 404 6 is_stmt 0 view .LVU506
 2306 01ba 002D     		cmp	r5, #0
 2307 01bc 2AD1     		bne	.L196
 405:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2308              		.loc 1 405 5 is_stmt 1 view .LVU507
 405:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2309              		.loc 1 405 20 is_stmt 0 view .LVU508
 2310 01be 3800     		movs	r0, r7
 2311 01c0 FFF7FEFF 		bl	__aeabi_i2d
 2312              	.LVL270:
 2313 01c4 0200     		movs	r2, r0
 2314 01c6 0B00     		movs	r3, r1
 405:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2315              		.loc 1 405 10 view .LVU509
 2316 01c8 1E98     		ldr	r0, [sp, #120]
 2317 01ca 1F99     		ldr	r1, [sp, #124]
 2318 01cc FFF7FEFF 		bl	__aeabi_dsub
 2319              	.LVL271:
 2320 01d0 0500     		movs	r5, r0
 2321              	.LVL272:
 405:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2322              		.loc 1 405 10 view .LVU510
 2323 01d2 0E00     		movs	r6, r1
 2324              	.LVL273:
 406:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2325              		.loc 1 406 5 is_stmt 1 view .LVU511
 406:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2326              		.loc 1 406 8 is_stmt 0 view .LVU512
 2327 01d4 0022     		movs	r2, #0
 2328 01d6 5C4B     		ldr	r3, .L208+36
 2329 01d8 FFF7FEFF 		bl	__aeabi_dcmplt
 2330              	.LVL274:
 2331 01dc 0028     		cmp	r0, #0
 2332 01de 07D0     		beq	.L154
 406:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2333              		.loc 1 406 24 discriminator 2 view .LVU513
 2334 01e0 0022     		movs	r2, #0
 2335 01e2 594B     		ldr	r3, .L208+36
 2336 01e4 2800     		movs	r0, r5
 2337 01e6 3100     		movs	r1, r6
 2338 01e8 FFF7FEFF 		bl	__aeabi_dcmpgt
 2339              	.LVL275:
 2340 01ec 0028     		cmp	r0, #0
 2341 01ee 3CD0     		beq	.L164
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 56


 2342              	.L154:
 406:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2343              		.loc 1 406 41 discriminator 3 view .LVU514
 2344 01f0 FB07     		lsls	r3, r7, #31
 2345 01f2 3AD5     		bpl	.L164
 409:Core/Src/printf.c ****     }
 2346              		.loc 1 409 7 is_stmt 1 view .LVU515
 2347 01f4 0137     		adds	r7, r7, #1
 2348              	.LVL276:
 409:Core/Src/printf.c ****     }
 2349              		.loc 1 409 7 is_stmt 0 view .LVU516
 2350 01f6 38E0     		b	.L164
 2351              	.LVL277:
 2352              	.L192:
 397:Core/Src/printf.c ****   }
 2353              		.loc 1 397 8 is_stmt 1 view .LVU517
 397:Core/Src/printf.c ****   }
 2354              		.loc 1 397 11 is_stmt 0 view .LVU518
 2355 01f8 0022     		movs	r2, #0
 2356 01fa 534B     		ldr	r3, .L208+36
 2357 01fc 0698     		ldr	r0, [sp, #24]
 2358 01fe 0799     		ldr	r1, [sp, #28]
 2359 0200 FFF7FEFF 		bl	__aeabi_dcmplt
 2360              	.LVL278:
 2361 0204 0028     		cmp	r0, #0
 2362 0206 D8D1     		bne	.L150
 399:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2363              		.loc 1 399 8 is_stmt 1 view .LVU519
 399:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2364              		.loc 1 399 11 is_stmt 0 view .LVU520
 2365 0208 002E     		cmp	r6, #0
 2366 020a 01D0     		beq	.L152
 399:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2367              		.loc 1 399 25 discriminator 1 view .LVU521
 2368 020c F307     		lsls	r3, r6, #31
 2369 020e D4D5     		bpl	.L150
 2370              	.L152:
 401:Core/Src/printf.c ****   }
 2371              		.loc 1 401 5 is_stmt 1 view .LVU522
 2372 0210 0136     		adds	r6, r6, #1
 2373              	.LVL279:
 401:Core/Src/printf.c ****   }
 2374              		.loc 1 401 5 is_stmt 0 view .LVU523
 2375 0212 D2E7     		b	.L150
 2376              	.L196:
 401:Core/Src/printf.c ****   }
 2377              		.loc 1 401 5 view .LVU524
 2378 0214 B846     		mov	r8, r7
 2379              	.LVL280:
 2380              	.L153:
 2381              	.LBB29:
 415:Core/Src/printf.c ****       --count;
 2382              		.loc 1 415 16 is_stmt 1 view .LVU525
 2383 0216 1F2C     		cmp	r4, #31
 2384 0218 11D8     		bhi	.L206
 416:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 2385              		.loc 1 416 7 view .LVU526
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 57


 2386 021a 013D     		subs	r5, r5, #1
 2387              	.LVL281:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2388              		.loc 1 417 7 view .LVU527
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2389              		.loc 1 417 39 is_stmt 0 view .LVU528
 2390 021c 0A21     		movs	r1, #10
 2391 021e 3000     		movs	r0, r6
 2392 0220 FFF7FEFF 		bl	__aeabi_uidivmod
 2393              	.LVL282:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2394              		.loc 1 417 14 view .LVU529
 2395 0224 671C     		adds	r7, r4, #1
 2396              	.LVL283:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2397              		.loc 1 417 20 view .LVU530
 2398 0226 3031     		adds	r1, r1, #48
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2399              		.loc 1 417 18 view .LVU531
 2400 0228 0CAB     		add	r3, sp, #48
 2401 022a 1955     		strb	r1, [r3, r4]
 418:Core/Src/printf.c ****         break;
 2402              		.loc 1 418 7 is_stmt 1 view .LVU532
 418:Core/Src/printf.c ****         break;
 2403              		.loc 1 418 18 is_stmt 0 view .LVU533
 2404 022c 0A21     		movs	r1, #10
 2405 022e 3000     		movs	r0, r6
 2406 0230 FFF7FEFF 		bl	__aeabi_uidiv
 2407              	.LVL284:
 418:Core/Src/printf.c ****         break;
 2408              		.loc 1 418 10 view .LVU534
 2409 0234 092E     		cmp	r6, #9
 2410 0236 0ED9     		bls	.L178
 418:Core/Src/printf.c ****         break;
 2411              		.loc 1 418 18 view .LVU535
 2412 0238 0600     		movs	r6, r0
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2413              		.loc 1 417 14 view .LVU536
 2414 023a 3C00     		movs	r4, r7
 2415 023c EBE7     		b	.L153
 2416              	.LVL285:
 2417              	.L206:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2418              		.loc 1 417 14 view .LVU537
 2419 023e 4746     		mov	r7, r8
 2420              	.LVL286:
 2421              	.L160:
 423:Core/Src/printf.c ****       buf[len++] = '0';
 2422              		.loc 1 423 44 is_stmt 1 view .LVU538
 2423 0240 1F2C     		cmp	r4, #31
 2424 0242 0CD8     		bhi	.L161
 423:Core/Src/printf.c ****       buf[len++] = '0';
 2425              		.loc 1 423 53 is_stmt 0 discriminator 1 view .LVU539
 2426 0244 6B1E     		subs	r3, r5, #1
 2427              	.LVL287:
 423:Core/Src/printf.c ****       buf[len++] = '0';
 2428              		.loc 1 423 44 discriminator 1 view .LVU540
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 58


 2429 0246 002D     		cmp	r5, #0
 2430 0248 09D0     		beq	.L161
 424:Core/Src/printf.c ****     }
 2431              		.loc 1 424 7 is_stmt 1 view .LVU541
 2432              	.LVL288:
 424:Core/Src/printf.c ****     }
 2433              		.loc 1 424 18 is_stmt 0 view .LVU542
 2434 024a 0CAA     		add	r2, sp, #48
 2435 024c 3021     		movs	r1, #48
 2436 024e 1155     		strb	r1, [r2, r4]
 423:Core/Src/printf.c ****       buf[len++] = '0';
 2437              		.loc 1 423 53 view .LVU543
 2438 0250 1D00     		movs	r5, r3
 424:Core/Src/printf.c ****     }
 2439              		.loc 1 424 14 view .LVU544
 2440 0252 0134     		adds	r4, r4, #1
 2441              	.LVL289:
 424:Core/Src/printf.c ****     }
 2442              		.loc 1 424 14 view .LVU545
 2443 0254 F4E7     		b	.L160
 2444              	.LVL290:
 2445              	.L178:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2446              		.loc 1 417 14 view .LVU546
 2447 0256 3B00     		movs	r3, r7
 2448 0258 4746     		mov	r7, r8
 2449              	.LVL291:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2450              		.loc 1 417 14 view .LVU547
 2451 025a 1C00     		movs	r4, r3
 2452 025c F0E7     		b	.L160
 2453              	.LVL292:
 2454              	.L161:
 426:Core/Src/printf.c ****       // add decimal
 2455              		.loc 1 426 5 is_stmt 1 view .LVU548
 426:Core/Src/printf.c ****       // add decimal
 2456              		.loc 1 426 8 is_stmt 0 view .LVU549
 2457 025e 1F2C     		cmp	r4, #31
 2458 0260 03D8     		bhi	.L164
 428:Core/Src/printf.c ****     }
 2459              		.loc 1 428 7 is_stmt 1 view .LVU550
 2460              	.LVL293:
 428:Core/Src/printf.c ****     }
 2461              		.loc 1 428 18 is_stmt 0 view .LVU551
 2462 0262 0CAB     		add	r3, sp, #48
 2463 0264 2E22     		movs	r2, #46
 2464 0266 1A55     		strb	r2, [r3, r4]
 428:Core/Src/printf.c ****     }
 2465              		.loc 1 428 14 view .LVU552
 2466 0268 0134     		adds	r4, r4, #1
 2467              	.LVL294:
 2468              	.L164:
 428:Core/Src/printf.c ****     }
 2469              		.loc 1 428 14 view .LVU553
 2470              	.LBE29:
 433:Core/Src/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 2471              		.loc 1 433 14 is_stmt 1 view .LVU554
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 59


 2472 026a 1F2C     		cmp	r4, #31
 2473 026c 10D8     		bhi	.L163
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2474              		.loc 1 434 5 view .LVU555
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2475              		.loc 1 434 37 is_stmt 0 view .LVU556
 2476 026e 0A21     		movs	r1, #10
 2477 0270 3800     		movs	r0, r7
 2478 0272 FFF7FEFF 		bl	__aeabi_idivmod
 2479              	.LVL295:
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2480              		.loc 1 434 12 view .LVU557
 2481 0276 651C     		adds	r5, r4, #1
 2482              	.LVL296:
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2483              		.loc 1 434 18 view .LVU558
 2484 0278 3031     		adds	r1, r1, #48
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2485              		.loc 1 434 16 view .LVU559
 2486 027a 0CAB     		add	r3, sp, #48
 2487 027c 1955     		strb	r1, [r3, r4]
 435:Core/Src/printf.c ****       break;
 2488              		.loc 1 435 5 is_stmt 1 view .LVU560
 435:Core/Src/printf.c ****       break;
 2489              		.loc 1 435 17 is_stmt 0 view .LVU561
 2490 027e 0A21     		movs	r1, #10
 2491 0280 3800     		movs	r0, r7
 2492 0282 FFF7FEFF 		bl	__aeabi_idiv
 2493              	.LVL297:
 2494 0286 071E     		subs	r7, r0, #0
 2495              	.LVL298:
 435:Core/Src/printf.c ****       break;
 2496              		.loc 1 435 8 view .LVU562
 2497 0288 01D0     		beq	.L179
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2498              		.loc 1 434 12 view .LVU563
 2499 028a 2C00     		movs	r4, r5
 2500 028c EDE7     		b	.L164
 2501              	.L179:
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2502              		.loc 1 434 12 view .LVU564
 2503 028e 2C00     		movs	r4, r5
 2504              	.LVL299:
 2505              	.L163:
 441:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2506              		.loc 1 441 3 is_stmt 1 view .LVU565
 441:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2507              		.loc 1 441 29 is_stmt 0 view .LVU566
 2508 0290 0323     		movs	r3, #3
 2509 0292 229A     		ldr	r2, [sp, #136]
 2510 0294 1340     		ands	r3, r2
 441:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2511              		.loc 1 441 6 view .LVU567
 2512 0296 012B     		cmp	r3, #1
 2513 0298 1CD0     		beq	.L207
 2514              	.L166:
 450:Core/Src/printf.c ****     if (negative) {
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 60


 2515              		.loc 1 450 3 is_stmt 1 view .LVU568
 450:Core/Src/printf.c ****     if (negative) {
 2516              		.loc 1 450 6 is_stmt 0 view .LVU569
 2517 029a 1F2C     		cmp	r4, #31
 2518 029c 06D8     		bhi	.L171
 451:Core/Src/printf.c ****       buf[len++] = '-';
 2519              		.loc 1 451 5 is_stmt 1 view .LVU570
 451:Core/Src/printf.c ****       buf[len++] = '-';
 2520              		.loc 1 451 8 is_stmt 0 view .LVU571
 2521 029e 099B     		ldr	r3, [sp, #36]
 2522 02a0 002B     		cmp	r3, #0
 2523 02a2 2ED0     		beq	.L172
 452:Core/Src/printf.c ****     }
 2524              		.loc 1 452 7 is_stmt 1 view .LVU572
 2525              	.LVL300:
 452:Core/Src/printf.c ****     }
 2526              		.loc 1 452 18 is_stmt 0 view .LVU573
 2527 02a4 0CAB     		add	r3, sp, #48
 2528 02a6 2D22     		movs	r2, #45
 2529 02a8 1A55     		strb	r2, [r3, r4]
 452:Core/Src/printf.c ****     }
 2530              		.loc 1 452 14 view .LVU574
 2531 02aa 0134     		adds	r4, r4, #1
 2532              	.LVL301:
 2533              	.L171:
 462:Core/Src/printf.c **** }
 2534              		.loc 1 462 3 is_stmt 1 view .LVU575
 462:Core/Src/printf.c **** }
 2535              		.loc 1 462 10 is_stmt 0 view .LVU576
 2536 02ac 229B     		ldr	r3, [sp, #136]
 2537 02ae 0393     		str	r3, [sp, #12]
 2538 02b0 219B     		ldr	r3, [sp, #132]
 2539 02b2 0293     		str	r3, [sp, #8]
 2540 02b4 0194     		str	r4, [sp, #4]
 2541 02b6 0CAB     		add	r3, sp, #48
 2542 02b8 0093     		str	r3, [sp]
 2543 02ba 5B46     		mov	r3, fp
 2544 02bc 5246     		mov	r2, r10
 2545 02be 4946     		mov	r1, r9
 2546 02c0 0898     		ldr	r0, [sp, #32]
 2547 02c2 FFF7FEFF 		bl	_out_rev
 2548              	.LVL302:
 2549              	.L128:
 463:Core/Src/printf.c **** 
 2550              		.loc 1 463 1 view .LVU577
 2551 02c6 15B0     		add	sp, sp, #84
 2552              		@ sp needed
 2553              	.LVL303:
 2554              	.LVL304:
 2555              	.LVL305:
 463:Core/Src/printf.c **** 
 2556              		.loc 1 463 1 view .LVU578
 2557 02c8 F0BC     		pop	{r4, r5, r6, r7}
 2558 02ca BB46     		mov	fp, r7
 2559 02cc B246     		mov	r10, r6
 2560 02ce A946     		mov	r9, r5
 2561 02d0 A046     		mov	r8, r4
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 61


 2562 02d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 2563              	.LVL306:
 2564              	.L207:
 442:Core/Src/printf.c ****       width--;
 2565              		.loc 1 442 5 is_stmt 1 view .LVU579
 442:Core/Src/printf.c ****       width--;
 2566              		.loc 1 442 8 is_stmt 0 view .LVU580
 2567 02d4 219B     		ldr	r3, [sp, #132]
 2568 02d6 002B     		cmp	r3, #0
 2569 02d8 0DD0     		beq	.L169
 442:Core/Src/printf.c ****       width--;
 2570              		.loc 1 442 15 discriminator 1 view .LVU581
 2571 02da 099B     		ldr	r3, [sp, #36]
 2572 02dc 002B     		cmp	r3, #0
 2573 02de 02D1     		bne	.L168
 442:Core/Src/printf.c ****       width--;
 2574              		.loc 1 442 38 discriminator 2 view .LVU582
 2575 02e0 0C33     		adds	r3, r3, #12
 442:Core/Src/printf.c ****       width--;
 2576              		.loc 1 442 28 discriminator 2 view .LVU583
 2577 02e2 1342     		tst	r3, r2
 2578 02e4 07D0     		beq	.L169
 2579              	.L168:
 443:Core/Src/printf.c ****     }
 2580              		.loc 1 443 7 is_stmt 1 view .LVU584
 443:Core/Src/printf.c ****     }
 2581              		.loc 1 443 12 is_stmt 0 view .LVU585
 2582 02e6 219B     		ldr	r3, [sp, #132]
 2583 02e8 013B     		subs	r3, r3, #1
 2584 02ea 2193     		str	r3, [sp, #132]
 2585              	.LVL307:
 443:Core/Src/printf.c ****     }
 2586              		.loc 1 443 12 view .LVU586
 2587 02ec 03E0     		b	.L169
 2588              	.L170:
 446:Core/Src/printf.c ****     }
 2589              		.loc 1 446 7 is_stmt 1 view .LVU587
 2590              	.LVL308:
 446:Core/Src/printf.c ****     }
 2591              		.loc 1 446 18 is_stmt 0 view .LVU588
 2592 02ee 0CAB     		add	r3, sp, #48
 2593              	.LVL309:
 446:Core/Src/printf.c ****     }
 2594              		.loc 1 446 18 view .LVU589
 2595 02f0 3022     		movs	r2, #48
 2596 02f2 1A55     		strb	r2, [r3, r4]
 446:Core/Src/printf.c ****     }
 2597              		.loc 1 446 14 view .LVU590
 2598 02f4 0134     		adds	r4, r4, #1
 2599              	.LVL310:
 2600              	.L169:
 445:Core/Src/printf.c ****       buf[len++] = '0';
 2601              		.loc 1 445 26 is_stmt 1 view .LVU591
 2602 02f6 219B     		ldr	r3, [sp, #132]
 2603 02f8 9C42     		cmp	r4, r3
 2604 02fa CED2     		bcs	.L166
 445:Core/Src/printf.c ****       buf[len++] = '0';
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 62


 2605              		.loc 1 445 26 is_stmt 0 discriminator 1 view .LVU592
 2606 02fc 1F2C     		cmp	r4, #31
 2607 02fe F6D9     		bls	.L170
 2608 0300 CBE7     		b	.L166
 2609              	.L172:
 454:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2610              		.loc 1 454 10 is_stmt 1 view .LVU593
 454:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2611              		.loc 1 454 13 is_stmt 0 view .LVU594
 2612 0302 229B     		ldr	r3, [sp, #136]
 2613 0304 5B07     		lsls	r3, r3, #29
 2614 0306 04D5     		bpl	.L173
 455:Core/Src/printf.c ****     }
 2615              		.loc 1 455 7 is_stmt 1 view .LVU595
 2616              	.LVL311:
 455:Core/Src/printf.c ****     }
 2617              		.loc 1 455 18 is_stmt 0 view .LVU596
 2618 0308 0CAB     		add	r3, sp, #48
 2619 030a 2B22     		movs	r2, #43
 2620 030c 1A55     		strb	r2, [r3, r4]
 455:Core/Src/printf.c ****     }
 2621              		.loc 1 455 14 view .LVU597
 2622 030e 0134     		adds	r4, r4, #1
 2623              	.LVL312:
 455:Core/Src/printf.c ****     }
 2624              		.loc 1 455 14 view .LVU598
 2625 0310 CCE7     		b	.L171
 2626              	.L173:
 457:Core/Src/printf.c ****       buf[len++] = ' ';
 2627              		.loc 1 457 10 is_stmt 1 view .LVU599
 457:Core/Src/printf.c ****       buf[len++] = ' ';
 2628              		.loc 1 457 13 is_stmt 0 view .LVU600
 2629 0312 229B     		ldr	r3, [sp, #136]
 2630 0314 1B07     		lsls	r3, r3, #28
 2631 0316 C9D5     		bpl	.L171
 458:Core/Src/printf.c ****     }
 2632              		.loc 1 458 7 is_stmt 1 view .LVU601
 2633              	.LVL313:
 458:Core/Src/printf.c ****     }
 2634              		.loc 1 458 18 is_stmt 0 view .LVU602
 2635 0318 0CAB     		add	r3, sp, #48
 2636 031a 2022     		movs	r2, #32
 2637 031c 1A55     		strb	r2, [r3, r4]
 458:Core/Src/printf.c ****     }
 2638              		.loc 1 458 14 view .LVU603
 2639 031e 0134     		adds	r4, r4, #1
 2640              	.LVL314:
 458:Core/Src/printf.c ****     }
 2641              		.loc 1 458 14 view .LVU604
 2642 0320 C4E7     		b	.L171
 2643              	.L209:
 2644 0322 C046     		.align	2
 2645              	.L208:
 2646 0324 FFFFEFFF 		.word	-1048577
 2647 0328 FFFFEF7F 		.word	2146435071
 2648 032c 65CDCD41 		.word	1104006501
 2649 0330 65CDCDC1 		.word	-1043477147
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 63


 2650 0334 0C000000 		.word	.LC4
 2651 0338 10000000 		.word	.LC6
 2652 033c 00000000 		.word	.LC0
 2653 0340 08000000 		.word	.LC2
 2654 0344 00000000 		.word	pow10.0
 2655 0348 0000E03F 		.word	1071644672
 2656              		.cfi_endproc
 2657              	.LFE437:
 2659              		.section	.text._vsnprintf,"ax",%progbits
 2660              		.align	1
 2661              		.syntax unified
 2662              		.code	16
 2663              		.thumb_func
 2665              	_vsnprintf:
 2666              	.LVL315:
 2667              	.LFB439:
 573:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 574:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 575:Core/Src/printf.c **** 
 576:Core/Src/printf.c **** 
 577:Core/Src/printf.c **** // internal vsnprintf
 578:Core/Src/printf.c **** static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_l
 579:Core/Src/printf.c **** {
 2668              		.loc 1 579 1 is_stmt 1 view -0
 2669              		.cfi_startproc
 2670              		@ args = 4, pretend = 0, frame = 32
 2671              		@ frame_needed = 0, uses_anonymous_args = 0
 2672              		.loc 1 579 1 is_stmt 0 view .LVU606
 2673 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2674              	.LCFI19:
 2675              		.cfi_def_cfa_offset 20
 2676              		.cfi_offset 4, -20
 2677              		.cfi_offset 5, -16
 2678              		.cfi_offset 6, -12
 2679              		.cfi_offset 7, -8
 2680              		.cfi_offset 14, -4
 2681 0002 DE46     		mov	lr, fp
 2682 0004 5746     		mov	r7, r10
 2683 0006 4E46     		mov	r6, r9
 2684 0008 4546     		mov	r5, r8
 2685 000a E0B5     		push	{r5, r6, r7, lr}
 2686              	.LCFI20:
 2687              		.cfi_def_cfa_offset 36
 2688              		.cfi_offset 8, -36
 2689              		.cfi_offset 9, -32
 2690              		.cfi_offset 10, -28
 2691              		.cfi_offset 11, -24
 2692 000c 93B0     		sub	sp, sp, #76
 2693              	.LCFI21:
 2694              		.cfi_def_cfa_offset 112
 2695 000e 8246     		mov	r10, r0
 2696 0010 8846     		mov	r8, r1
 2697 0012 9346     		mov	fp, r2
 2698 0014 1193     		str	r3, [sp, #68]
 580:Core/Src/printf.c ****   unsigned int flags, width, precision, n;
 2699              		.loc 1 580 3 is_stmt 1 view .LVU607
 581:Core/Src/printf.c ****   size_t idx = 0U;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 64


 2700              		.loc 1 581 3 view .LVU608
 2701              	.LVL316:
 582:Core/Src/printf.c **** 
 583:Core/Src/printf.c ****   if (!buffer) {
 2702              		.loc 1 583 3 view .LVU609
 2703              		.loc 1 583 6 is_stmt 0 view .LVU610
 2704 0016 0029     		cmp	r1, #0
 2705 0018 00D1     		bne	.LCB2768
 2706 001a 06E3     		b	.L311	@long jump
 2707              	.LCB2768:
 2708              	.LVL317:
 2709              	.L211:
 2710              	.LBB30:
 584:Core/Src/printf.c ****     // use null output function
 585:Core/Src/printf.c ****     out = _out_null;
 586:Core/Src/printf.c ****   }
 587:Core/Src/printf.c **** 
 588:Core/Src/printf.c ****   while (*format)
 589:Core/Src/printf.c ****   {
 590:Core/Src/printf.c ****     // format specifier?  %[flags][width][.precision][length]
 591:Core/Src/printf.c ****     if (*format != '%') {
 592:Core/Src/printf.c ****       // no
 593:Core/Src/printf.c ****       out(*format, buffer, idx++, maxlen);
 594:Core/Src/printf.c ****       format++;
 595:Core/Src/printf.c ****       continue;
 596:Core/Src/printf.c ****     }
 597:Core/Src/printf.c ****     else {
 598:Core/Src/printf.c ****       // yes, evaluate it
 599:Core/Src/printf.c ****       format++;
 600:Core/Src/printf.c ****     }
 601:Core/Src/printf.c **** 
 602:Core/Src/printf.c ****     // evaluate flags
 603:Core/Src/printf.c ****     flags = 0U;
 604:Core/Src/printf.c ****     do {
 605:Core/Src/printf.c ****       switch (*format) {
 606:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 607:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 608:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 609:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 610:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 611:Core/Src/printf.c ****         default :                                   n = 0U; break;
 612:Core/Src/printf.c ****       }
 613:Core/Src/printf.c ****     } while (n);
 614:Core/Src/printf.c **** 
 615:Core/Src/printf.c ****     // evaluate width field
 616:Core/Src/printf.c ****     width = 0U;
 617:Core/Src/printf.c ****     if (_is_digit(*format)) {
 618:Core/Src/printf.c ****       width = _atoi(&format);
 619:Core/Src/printf.c ****     }
 620:Core/Src/printf.c ****     else if (*format == '*') {
 621:Core/Src/printf.c ****       const int w = va_arg(va, int);
 622:Core/Src/printf.c ****       if (w < 0) {
 623:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 624:Core/Src/printf.c ****         width = (unsigned int)-w;
 625:Core/Src/printf.c ****       }
 626:Core/Src/printf.c ****       else {
 627:Core/Src/printf.c ****         width = (unsigned int)w;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 65


 628:Core/Src/printf.c ****       }
 629:Core/Src/printf.c ****       format++;
 630:Core/Src/printf.c ****     }
 631:Core/Src/printf.c **** 
 632:Core/Src/printf.c ****     // evaluate precision field
 633:Core/Src/printf.c ****     precision = 0U;
 634:Core/Src/printf.c ****     if (*format == '.') {
 635:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 636:Core/Src/printf.c ****       format++;
 637:Core/Src/printf.c ****       if (_is_digit(*format)) {
 638:Core/Src/printf.c ****         precision = _atoi(&format);
 639:Core/Src/printf.c ****       }
 640:Core/Src/printf.c ****       else if (*format == '*') {
 641:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 642:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 643:Core/Src/printf.c ****         format++;
 644:Core/Src/printf.c ****       }
 645:Core/Src/printf.c ****     }
 646:Core/Src/printf.c **** 
 647:Core/Src/printf.c ****     // evaluate length field
 648:Core/Src/printf.c ****     switch (*format) {
 649:Core/Src/printf.c ****       case 'l' :
 650:Core/Src/printf.c ****         flags |= FLAGS_LONG;
 651:Core/Src/printf.c ****         format++;
 652:Core/Src/printf.c ****         if (*format == 'l') {
 653:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 654:Core/Src/printf.c ****           format++;
 655:Core/Src/printf.c ****         }
 656:Core/Src/printf.c ****         break;
 657:Core/Src/printf.c ****       case 'h' :
 658:Core/Src/printf.c ****         flags |= FLAGS_SHORT;
 659:Core/Src/printf.c ****         format++;
 660:Core/Src/printf.c ****         if (*format == 'h') {
 661:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 662:Core/Src/printf.c ****           format++;
 663:Core/Src/printf.c ****         }
 664:Core/Src/printf.c ****         break;
 665:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 666:Core/Src/printf.c ****       case 't' :
 667:Core/Src/printf.c ****         flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 668:Core/Src/printf.c ****         format++;
 669:Core/Src/printf.c ****         break;
 670:Core/Src/printf.c **** #endif
 671:Core/Src/printf.c ****       case 'j' :
 672:Core/Src/printf.c ****         flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 673:Core/Src/printf.c ****         format++;
 674:Core/Src/printf.c ****         break;
 675:Core/Src/printf.c ****       case 'z' :
 676:Core/Src/printf.c ****         flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 677:Core/Src/printf.c ****         format++;
 678:Core/Src/printf.c ****         break;
 679:Core/Src/printf.c ****       default :
 680:Core/Src/printf.c ****         break;
 681:Core/Src/printf.c ****     }
 682:Core/Src/printf.c **** 
 683:Core/Src/printf.c ****     // evaluate specifier
 684:Core/Src/printf.c ****     switch (*format) {
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 66


 685:Core/Src/printf.c ****       case 'd' :
 686:Core/Src/printf.c ****       case 'i' :
 687:Core/Src/printf.c ****       case 'u' :
 688:Core/Src/printf.c ****       case 'x' :
 689:Core/Src/printf.c ****       case 'X' :
 690:Core/Src/printf.c ****       case 'o' :
 691:Core/Src/printf.c ****       case 'b' : {
 692:Core/Src/printf.c ****         // set the base
 693:Core/Src/printf.c ****         unsigned int base;
 694:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 695:Core/Src/printf.c ****           base = 16U;
 696:Core/Src/printf.c ****         }
 697:Core/Src/printf.c ****         else if (*format == 'o') {
 698:Core/Src/printf.c ****           base =  8U;
 699:Core/Src/printf.c ****         }
 700:Core/Src/printf.c ****         else if (*format == 'b') {
 701:Core/Src/printf.c ****           base =  2U;
 702:Core/Src/printf.c ****         }
 703:Core/Src/printf.c ****         else {
 704:Core/Src/printf.c ****           base = 10U;
 705:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 706:Core/Src/printf.c ****         }
 707:Core/Src/printf.c ****         // uppercase
 708:Core/Src/printf.c ****         if (*format == 'X') {
 709:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 710:Core/Src/printf.c ****         }
 711:Core/Src/printf.c **** 
 712:Core/Src/printf.c ****         // no plus or space flag for u, x, X, o, b
 713:Core/Src/printf.c ****         if ((*format != 'i') && (*format != 'd')) {
 714:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 715:Core/Src/printf.c ****         }
 716:Core/Src/printf.c **** 
 717:Core/Src/printf.c ****         // ignore '0' flag when precision is given
 718:Core/Src/printf.c ****         if (flags & FLAGS_PRECISION) {
 719:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 720:Core/Src/printf.c ****         }
 721:Core/Src/printf.c **** 
 722:Core/Src/printf.c ****         // convert the integer
 723:Core/Src/printf.c ****         if ((*format == 'i') || (*format == 'd')) {
 724:Core/Src/printf.c ****           // signed
 725:Core/Src/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 726:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 727:Core/Src/printf.c ****             const long long value = va_arg(va, long long);
 728:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 729:Core/Src/printf.c **** #endif
 730:Core/Src/printf.c ****           }
 731:Core/Src/printf.c ****           else if (flags & FLAGS_LONG) {
 732:Core/Src/printf.c ****             const long value = va_arg(va, long);
 733:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 734:Core/Src/printf.c ****           }
 735:Core/Src/printf.c ****           else {
 736:Core/Src/printf.c ****             const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) 
 737:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 738:Core/Src/printf.c ****           }
 739:Core/Src/printf.c ****         }
 740:Core/Src/printf.c ****         else {
 741:Core/Src/printf.c ****           // unsigned
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 67


 742:Core/Src/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 743:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 744:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, 
 745:Core/Src/printf.c **** #endif
 746:Core/Src/printf.c ****           }
 747:Core/Src/printf.c ****           else if (flags & FLAGS_LONG) {
 748:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 749:Core/Src/printf.c ****           }
 750:Core/Src/printf.c ****           else {
 751:Core/Src/printf.c ****             const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned in
 752:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 753:Core/Src/printf.c ****           }
 754:Core/Src/printf.c ****         }
 755:Core/Src/printf.c ****         format++;
 756:Core/Src/printf.c ****         break;
 757:Core/Src/printf.c ****       }
 758:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 759:Core/Src/printf.c ****       case 'f' :
 760:Core/Src/printf.c ****       case 'F' :
 761:Core/Src/printf.c ****         if (*format == 'F') flags |= FLAGS_UPPERCASE;
 762:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 763:Core/Src/printf.c ****         format++;
 764:Core/Src/printf.c ****         break;
 765:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 766:Core/Src/printf.c ****       case 'e':
 767:Core/Src/printf.c ****       case 'E':
 768:Core/Src/printf.c ****       case 'g':
 769:Core/Src/printf.c ****       case 'G':
 770:Core/Src/printf.c ****         if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
 771:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 772:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 773:Core/Src/printf.c ****         format++;
 774:Core/Src/printf.c ****         break;
 775:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 776:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 777:Core/Src/printf.c ****       case 'c' : {
 778:Core/Src/printf.c ****         unsigned int l = 1U;
 779:Core/Src/printf.c ****         // pre padding
 780:Core/Src/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 781:Core/Src/printf.c ****           while (l++ < width) {
 782:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 783:Core/Src/printf.c ****           }
 784:Core/Src/printf.c ****         }
 785:Core/Src/printf.c ****         // char output
 786:Core/Src/printf.c ****         out((char)va_arg(va, int), buffer, idx++, maxlen);
 787:Core/Src/printf.c ****         // post padding
 788:Core/Src/printf.c ****         if (flags & FLAGS_LEFT) {
 789:Core/Src/printf.c ****           while (l++ < width) {
 790:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 791:Core/Src/printf.c ****           }
 792:Core/Src/printf.c ****         }
 793:Core/Src/printf.c ****         format++;
 794:Core/Src/printf.c ****         break;
 2711              		.loc 1 794 9 view .LVU611
 2712 001c 0025     		movs	r5, #0
 2713 001e 5646     		mov	r6, r10
 2714              	.LVL318:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 68


 2715              	.L293:
 2716              		.loc 1 794 9 view .LVU612
 2717              	.LBE30:
 588:Core/Src/printf.c ****   {
 2718              		.loc 1 588 10 is_stmt 1 view .LVU613
 2719 0020 119B     		ldr	r3, [sp, #68]
 2720 0022 1878     		ldrb	r0, [r3]
 2721 0024 0028     		cmp	r0, #0
 2722 0026 00D1     		bne	.LCB2789
 2723 0028 02E3     		b	.L312	@long jump
 2724              	.LCB2789:
 591:Core/Src/printf.c ****       // no
 2725              		.loc 1 591 5 view .LVU614
 591:Core/Src/printf.c ****       // no
 2726              		.loc 1 591 8 is_stmt 0 view .LVU615
 2727 002a 2528     		cmp	r0, #37
 2728 002c 09D0     		beq	.L213
 593:Core/Src/printf.c ****       format++;
 2729              		.loc 1 593 7 is_stmt 1 discriminator 1 view .LVU616
 2730 002e 6C1C     		adds	r4, r5, #1
 2731              	.LVL319:
 593:Core/Src/printf.c ****       format++;
 2732              		.loc 1 593 7 is_stmt 0 discriminator 1 view .LVU617
 2733 0030 5B46     		mov	r3, fp
 2734 0032 2A00     		movs	r2, r5
 2735 0034 4146     		mov	r1, r8
 2736 0036 B047     		blx	r6
 2737              	.LVL320:
 594:Core/Src/printf.c ****       continue;
 2738              		.loc 1 594 7 is_stmt 1 discriminator 1 view .LVU618
 594:Core/Src/printf.c ****       continue;
 2739              		.loc 1 594 13 is_stmt 0 discriminator 1 view .LVU619
 2740 0038 119B     		ldr	r3, [sp, #68]
 2741 003a 0133     		adds	r3, r3, #1
 2742 003c 1193     		str	r3, [sp, #68]
 595:Core/Src/printf.c ****     }
 2743              		.loc 1 595 7 is_stmt 1 discriminator 1 view .LVU620
 593:Core/Src/printf.c ****       format++;
 2744              		.loc 1 593 7 is_stmt 0 discriminator 1 view .LVU621
 2745 003e 2500     		movs	r5, r4
 595:Core/Src/printf.c ****     }
 2746              		.loc 1 595 7 discriminator 1 view .LVU622
 2747 0040 EEE7     		b	.L293
 2748              	.LVL321:
 2749              	.L213:
 599:Core/Src/printf.c ****     }
 2750              		.loc 1 599 7 is_stmt 1 view .LVU623
 599:Core/Src/printf.c ****     }
 2751              		.loc 1 599 13 is_stmt 0 view .LVU624
 2752 0042 0133     		adds	r3, r3, #1
 2753 0044 1193     		str	r3, [sp, #68]
 603:Core/Src/printf.c ****     do {
 2754              		.loc 1 603 5 is_stmt 1 view .LVU625
 2755              	.LVL322:
 603:Core/Src/printf.c ****     do {
 2756              		.loc 1 603 11 is_stmt 0 view .LVU626
 2757 0046 0027     		movs	r7, #0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 69


 2758 0048 20E0     		b	.L222
 2759              	.LVL323:
 2760              	.L216:
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2761              		.loc 1 606 19 is_stmt 1 view .LVU627
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2762              		.loc 1 606 25 is_stmt 0 view .LVU628
 2763 004a 0123     		movs	r3, #1
 2764 004c 1F43     		orrs	r7, r3
 2765              	.LVL324:
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2766              		.loc 1 606 43 is_stmt 1 view .LVU629
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2767              		.loc 1 606 49 is_stmt 0 view .LVU630
 2768 004e 0132     		adds	r2, r2, #1
 2769 0050 1192     		str	r2, [sp, #68]
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2770              		.loc 1 606 53 is_stmt 1 view .LVU631
 2771              	.LVL325:
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2772              		.loc 1 606 61 view .LVU632
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2773              		.loc 1 606 55 is_stmt 0 view .LVU633
 2774 0052 0124     		movs	r4, #1
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2775              		.loc 1 606 61 view .LVU634
 2776 0054 18E0     		b	.L215
 2777              	.LVL326:
 2778              	.L218:
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2779              		.loc 1 607 19 is_stmt 1 view .LVU635
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2780              		.loc 1 607 25 is_stmt 0 view .LVU636
 2781 0056 0223     		movs	r3, #2
 2782 0058 1F43     		orrs	r7, r3
 2783              	.LVL327:
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2784              		.loc 1 607 43 is_stmt 1 view .LVU637
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2785              		.loc 1 607 49 is_stmt 0 view .LVU638
 2786 005a 0132     		adds	r2, r2, #1
 2787 005c 1192     		str	r2, [sp, #68]
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2788              		.loc 1 607 53 is_stmt 1 view .LVU639
 2789              	.LVL328:
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2790              		.loc 1 607 61 view .LVU640
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2791              		.loc 1 607 55 is_stmt 0 view .LVU641
 2792 005e 0124     		movs	r4, #1
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2793              		.loc 1 607 61 view .LVU642
 2794 0060 12E0     		b	.L215
 2795              	.LVL329:
 2796              	.L219:
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2797              		.loc 1 608 19 is_stmt 1 view .LVU643
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 70


 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2798              		.loc 1 608 25 is_stmt 0 view .LVU644
 2799 0062 0423     		movs	r3, #4
 2800 0064 1F43     		orrs	r7, r3
 2801              	.LVL330:
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2802              		.loc 1 608 43 is_stmt 1 view .LVU645
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2803              		.loc 1 608 49 is_stmt 0 view .LVU646
 2804 0066 0132     		adds	r2, r2, #1
 2805 0068 1192     		str	r2, [sp, #68]
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2806              		.loc 1 608 53 is_stmt 1 view .LVU647
 2807              	.LVL331:
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2808              		.loc 1 608 61 view .LVU648
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2809              		.loc 1 608 55 is_stmt 0 view .LVU649
 2810 006a 0124     		movs	r4, #1
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2811              		.loc 1 608 61 view .LVU650
 2812 006c 0CE0     		b	.L215
 2813              	.LVL332:
 2814              	.L221:
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2815              		.loc 1 609 19 is_stmt 1 view .LVU651
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2816              		.loc 1 609 25 is_stmt 0 view .LVU652
 2817 006e 0823     		movs	r3, #8
 2818 0070 1F43     		orrs	r7, r3
 2819              	.LVL333:
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2820              		.loc 1 609 43 is_stmt 1 view .LVU653
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2821              		.loc 1 609 49 is_stmt 0 view .LVU654
 2822 0072 0132     		adds	r2, r2, #1
 2823 0074 1192     		str	r2, [sp, #68]
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2824              		.loc 1 609 53 is_stmt 1 view .LVU655
 2825              	.LVL334:
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2826              		.loc 1 609 61 view .LVU656
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2827              		.loc 1 609 55 is_stmt 0 view .LVU657
 2828 0076 0124     		movs	r4, #1
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2829              		.loc 1 609 61 view .LVU658
 2830 0078 06E0     		b	.L215
 2831              	.LVL335:
 2832              	.L220:
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2833              		.loc 1 610 19 is_stmt 1 view .LVU659
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2834              		.loc 1 610 25 is_stmt 0 view .LVU660
 2835 007a 1023     		movs	r3, #16
 2836 007c 1F43     		orrs	r7, r3
 2837              	.LVL336:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 71


 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2838              		.loc 1 610 43 is_stmt 1 view .LVU661
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2839              		.loc 1 610 49 is_stmt 0 view .LVU662
 2840 007e 0132     		adds	r2, r2, #1
 2841 0080 1192     		str	r2, [sp, #68]
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2842              		.loc 1 610 53 is_stmt 1 view .LVU663
 2843              	.LVL337:
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2844              		.loc 1 610 61 view .LVU664
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2845              		.loc 1 610 55 is_stmt 0 view .LVU665
 2846 0082 0124     		movs	r4, #1
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2847              		.loc 1 610 61 view .LVU666
 2848 0084 00E0     		b	.L215
 2849              	.LVL338:
 2850              	.L297:
 605:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2851              		.loc 1 605 7 view .LVU667
 2852 0086 0024     		movs	r4, #0
 2853              	.L215:
 2854              	.LVL339:
 613:Core/Src/printf.c **** 
 2855              		.loc 1 613 14 is_stmt 1 view .LVU668
 2856 0088 002C     		cmp	r4, #0
 2857 008a 09D0     		beq	.L313
 2858              	.LVL340:
 2859              	.L222:
 604:Core/Src/printf.c ****       switch (*format) {
 2860              		.loc 1 604 5 view .LVU669
 605:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2861              		.loc 1 605 7 view .LVU670
 605:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2862              		.loc 1 605 15 is_stmt 0 view .LVU671
 2863 008c 119A     		ldr	r2, [sp, #68]
 2864 008e 1378     		ldrb	r3, [r2]
 605:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2865              		.loc 1 605 7 view .LVU672
 2866 0090 203B     		subs	r3, r3, #32
 2867 0092 D9B2     		uxtb	r1, r3
 2868 0094 1029     		cmp	r1, #16
 2869 0096 F6D8     		bhi	.L297
 2870 0098 8B00     		lsls	r3, r1, #2
 2871 009a C449     		ldr	r1, .L332
 2872 009c CB58     		ldr	r3, [r1, r3]
 2873 009e 9F46     		mov	pc, r3
 2874              		.section	.rodata._vsnprintf,"a",%progbits
 2875              		.align	2
 2876              	.L217:
 2877 0000 6E000000 		.word	.L221
 2878 0004 86000000 		.word	.L297
 2879 0008 86000000 		.word	.L297
 2880 000c 7A000000 		.word	.L220
 2881 0010 86000000 		.word	.L297
 2882 0014 86000000 		.word	.L297
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 72


 2883 0018 86000000 		.word	.L297
 2884 001c 86000000 		.word	.L297
 2885 0020 86000000 		.word	.L297
 2886 0024 86000000 		.word	.L297
 2887 0028 86000000 		.word	.L297
 2888 002c 62000000 		.word	.L219
 2889 0030 86000000 		.word	.L297
 2890 0034 56000000 		.word	.L218
 2891 0038 86000000 		.word	.L297
 2892 003c 86000000 		.word	.L297
 2893 0040 4A000000 		.word	.L216
 2894              		.section	.text._vsnprintf
 2895              	.LVL341:
 2896              	.L313:
 616:Core/Src/printf.c ****     if (_is_digit(*format)) {
 2897              		.loc 1 616 5 is_stmt 1 view .LVU673
 617:Core/Src/printf.c ****       width = _atoi(&format);
 2898              		.loc 1 617 5 view .LVU674
 617:Core/Src/printf.c ****       width = _atoi(&format);
 2899              		.loc 1 617 9 is_stmt 0 view .LVU675
 2900 00a0 119B     		ldr	r3, [sp, #68]
 2901 00a2 1A78     		ldrb	r2, [r3]
 2902              	.LVL342:
 2903              	.LBB31:
 2904              	.LBI31:
 182:Core/Src/printf.c **** {
 2905              		.loc 1 182 20 is_stmt 1 view .LVU676
 2906              	.LBB32:
 184:Core/Src/printf.c **** }
 2907              		.loc 1 184 3 view .LVU677
 184:Core/Src/printf.c **** }
 2908              		.loc 1 184 22 is_stmt 0 view .LVU678
 2909 00a4 1300     		movs	r3, r2
 2910 00a6 303B     		subs	r3, r3, #48
 2911 00a8 DBB2     		uxtb	r3, r3
 2912              	.LVL343:
 184:Core/Src/printf.c **** }
 2913              		.loc 1 184 22 view .LVU679
 2914              	.LBE32:
 2915              	.LBE31:
 617:Core/Src/printf.c ****       width = _atoi(&format);
 2916              		.loc 1 617 8 view .LVU680
 2917 00aa 092B     		cmp	r3, #9
 2918 00ac 10D9     		bls	.L314
 620:Core/Src/printf.c ****       const int w = va_arg(va, int);
 2919              		.loc 1 620 10 is_stmt 1 view .LVU681
 620:Core/Src/printf.c ****       const int w = va_arg(va, int);
 2920              		.loc 1 620 13 is_stmt 0 view .LVU682
 2921 00ae 2A2A     		cmp	r2, #42
 2922 00b0 13D0     		beq	.L315
 616:Core/Src/printf.c ****     if (_is_digit(*format)) {
 2923              		.loc 1 616 11 view .LVU683
 2924 00b2 0B94     		str	r4, [sp, #44]
 2925              	.LVL344:
 2926              	.L224:
 633:Core/Src/printf.c ****     if (*format == '.') {
 2927              		.loc 1 633 5 is_stmt 1 view .LVU684
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 73


 634:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2928              		.loc 1 634 5 view .LVU685
 634:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2929              		.loc 1 634 9 is_stmt 0 view .LVU686
 2930 00b4 119B     		ldr	r3, [sp, #68]
 2931 00b6 1A78     		ldrb	r2, [r3]
 634:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2932              		.loc 1 634 8 view .LVU687
 2933 00b8 2E2A     		cmp	r2, #46
 2934 00ba 1ED0     		beq	.L316
 2935              	.LVL345:
 2936              	.L227:
 648:Core/Src/printf.c ****       case 'l' :
 2937              		.loc 1 648 5 is_stmt 1 view .LVU688
 648:Core/Src/printf.c ****       case 'l' :
 2938              		.loc 1 648 13 is_stmt 0 view .LVU689
 2939 00bc 119A     		ldr	r2, [sp, #68]
 2940 00be 1378     		ldrb	r3, [r2]
 648:Core/Src/printf.c ****       case 'l' :
 2941              		.loc 1 648 5 view .LVU690
 2942 00c0 683B     		subs	r3, r3, #104
 2943 00c2 D9B2     		uxtb	r1, r3
 2944 00c4 1229     		cmp	r1, #18
 2945 00c6 59D8     		bhi	.L230
 648:Core/Src/printf.c ****       case 'l' :
 2946              		.loc 1 648 5 view .LVU691
 2947 00c8 8B00     		lsls	r3, r1, #2
 2948 00ca B949     		ldr	r1, .L332+4
 2949 00cc CB58     		ldr	r3, [r1, r3]
 2950 00ce 9F46     		mov	pc, r3
 2951              		.section	.rodata._vsnprintf
 2952              		.align	2
 2953              	.L232:
 2954 0044 56010000 		.word	.L236
 2955 0048 7C010000 		.word	.L230
 2956 004c 9A010000 		.word	.L235
 2957 0050 7C010000 		.word	.L230
 2958 0054 36010000 		.word	.L234
 2959 0058 7C010000 		.word	.L230
 2960 005c 7C010000 		.word	.L230
 2961 0060 7C010000 		.word	.L230
 2962 0064 7C010000 		.word	.L230
 2963 0068 7C010000 		.word	.L230
 2964 006c 7C010000 		.word	.L230
 2965 0070 7C010000 		.word	.L230
 2966 0074 72010000 		.word	.L233
 2967 0078 7C010000 		.word	.L230
 2968 007c 7C010000 		.word	.L230
 2969 0080 7C010000 		.word	.L230
 2970 0084 7C010000 		.word	.L230
 2971 0088 7C010000 		.word	.L230
 2972 008c A6010000 		.word	.L231
 2973              		.section	.text._vsnprintf
 2974              	.LVL346:
 2975              	.L314:
 618:Core/Src/printf.c ****     }
 2976              		.loc 1 618 7 is_stmt 1 view .LVU692
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 74


 618:Core/Src/printf.c ****     }
 2977              		.loc 1 618 15 is_stmt 0 view .LVU693
 2978 00d0 11A8     		add	r0, sp, #68
 2979 00d2 FFF7FEFF 		bl	_atoi
 2980              	.LVL347:
 2981 00d6 0B90     		str	r0, [sp, #44]
 2982              	.LVL348:
 618:Core/Src/printf.c ****     }
 2983              		.loc 1 618 15 view .LVU694
 2984 00d8 ECE7     		b	.L224
 2985              	.LVL349:
 2986              	.L315:
 2987              	.LBB33:
 621:Core/Src/printf.c ****       if (w < 0) {
 2988              		.loc 1 621 7 is_stmt 1 view .LVU695
 621:Core/Src/printf.c ****       if (w < 0) {
 2989              		.loc 1 621 17 is_stmt 0 view .LVU696
 2990 00da 1C9B     		ldr	r3, [sp, #112]
 2991 00dc 1A1D     		adds	r2, r3, #4
 2992 00de 1C92     		str	r2, [sp, #112]
 2993 00e0 1B68     		ldr	r3, [r3]
 622:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 2994              		.loc 1 622 7 is_stmt 1 view .LVU697
 622:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 2995              		.loc 1 622 10 is_stmt 0 view .LVU698
 2996 00e2 002B     		cmp	r3, #0
 2997 00e4 04DB     		blt	.L317
 627:Core/Src/printf.c ****       }
 2998              		.loc 1 627 9 is_stmt 1 view .LVU699
 627:Core/Src/printf.c ****       }
 2999              		.loc 1 627 15 is_stmt 0 view .LVU700
 3000 00e6 0B93     		str	r3, [sp, #44]
 3001              	.LVL350:
 3002              	.L226:
 629:Core/Src/printf.c ****     }
 3003              		.loc 1 629 7 is_stmt 1 view .LVU701
 629:Core/Src/printf.c ****     }
 3004              		.loc 1 629 13 is_stmt 0 view .LVU702
 3005 00e8 119B     		ldr	r3, [sp, #68]
 3006 00ea 0133     		adds	r3, r3, #1
 3007 00ec 1193     		str	r3, [sp, #68]
 3008 00ee E1E7     		b	.L224
 3009              	.LVL351:
 3010              	.L317:
 623:Core/Src/printf.c ****         width = (unsigned int)-w;
 3011              		.loc 1 623 9 is_stmt 1 view .LVU703
 623:Core/Src/printf.c ****         width = (unsigned int)-w;
 3012              		.loc 1 623 15 is_stmt 0 view .LVU704
 3013 00f0 0222     		movs	r2, #2
 3014 00f2 1743     		orrs	r7, r2
 3015              	.LVL352:
 624:Core/Src/printf.c ****       }
 3016              		.loc 1 624 9 is_stmt 1 view .LVU705
 624:Core/Src/printf.c ****       }
 3017              		.loc 1 624 31 is_stmt 0 view .LVU706
 3018 00f4 5B42     		rsbs	r3, r3, #0
 3019 00f6 0B93     		str	r3, [sp, #44]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 75


 3020              	.LVL353:
 624:Core/Src/printf.c ****       }
 3021              		.loc 1 624 31 view .LVU707
 3022 00f8 F6E7     		b	.L226
 3023              	.LVL354:
 3024              	.L316:
 624:Core/Src/printf.c ****       }
 3025              		.loc 1 624 31 view .LVU708
 3026              	.LBE33:
 635:Core/Src/printf.c ****       format++;
 3027              		.loc 1 635 7 is_stmt 1 view .LVU709
 635:Core/Src/printf.c ****       format++;
 3028              		.loc 1 635 13 is_stmt 0 view .LVU710
 3029 00fa 8022     		movs	r2, #128
 3030 00fc D200     		lsls	r2, r2, #3
 3031 00fe 1743     		orrs	r7, r2
 3032              	.LVL355:
 636:Core/Src/printf.c ****       if (_is_digit(*format)) {
 3033              		.loc 1 636 7 is_stmt 1 view .LVU711
 636:Core/Src/printf.c ****       if (_is_digit(*format)) {
 3034              		.loc 1 636 13 is_stmt 0 view .LVU712
 3035 0100 5A1C     		adds	r2, r3, #1
 3036 0102 1192     		str	r2, [sp, #68]
 637:Core/Src/printf.c ****         precision = _atoi(&format);
 3037              		.loc 1 637 7 is_stmt 1 view .LVU713
 637:Core/Src/printf.c ****         precision = _atoi(&format);
 3038              		.loc 1 637 11 is_stmt 0 view .LVU714
 3039 0104 5A78     		ldrb	r2, [r3, #1]
 3040              	.LVL356:
 3041              	.LBB34:
 3042              	.LBI34:
 182:Core/Src/printf.c **** {
 3043              		.loc 1 182 20 is_stmt 1 view .LVU715
 3044              	.LBB35:
 184:Core/Src/printf.c **** }
 3045              		.loc 1 184 3 view .LVU716
 184:Core/Src/printf.c **** }
 3046              		.loc 1 184 22 is_stmt 0 view .LVU717
 3047 0106 1300     		movs	r3, r2
 3048 0108 303B     		subs	r3, r3, #48
 3049 010a DBB2     		uxtb	r3, r3
 3050              	.LVL357:
 184:Core/Src/printf.c **** }
 3051              		.loc 1 184 22 view .LVU718
 3052              	.LBE35:
 3053              	.LBE34:
 637:Core/Src/printf.c ****         precision = _atoi(&format);
 3054              		.loc 1 637 10 view .LVU719
 3055 010c 092B     		cmp	r3, #9
 3056 010e 0BD9     		bls	.L318
 640:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 3057              		.loc 1 640 12 is_stmt 1 view .LVU720
 640:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 3058              		.loc 1 640 15 is_stmt 0 view .LVU721
 3059 0110 2A2A     		cmp	r2, #42
 3060 0112 D3D1     		bne	.L227
 3061              	.LBB36:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 76


 641:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 3062              		.loc 1 641 9 is_stmt 1 view .LVU722
 641:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 3063              		.loc 1 641 19 is_stmt 0 view .LVU723
 3064 0114 1C9B     		ldr	r3, [sp, #112]
 3065 0116 1A1D     		adds	r2, r3, #4
 3066 0118 1C92     		str	r2, [sp, #112]
 3067 011a 1C68     		ldr	r4, [r3]
 3068              	.LVL358:
 642:Core/Src/printf.c ****         format++;
 3069              		.loc 1 642 9 is_stmt 1 view .LVU724
 642:Core/Src/printf.c ****         format++;
 3070              		.loc 1 642 51 is_stmt 0 view .LVU725
 3071 011c 002C     		cmp	r4, #0
 3072 011e 08DB     		blt	.L319
 3073              	.L229:
 3074              	.LVL359:
 643:Core/Src/printf.c ****       }
 3075              		.loc 1 643 9 is_stmt 1 view .LVU726
 643:Core/Src/printf.c ****       }
 3076              		.loc 1 643 15 is_stmt 0 view .LVU727
 3077 0120 119B     		ldr	r3, [sp, #68]
 3078 0122 0133     		adds	r3, r3, #1
 3079 0124 1193     		str	r3, [sp, #68]
 3080 0126 C9E7     		b	.L227
 3081              	.LVL360:
 3082              	.L318:
 643:Core/Src/printf.c ****       }
 3083              		.loc 1 643 15 view .LVU728
 3084              	.LBE36:
 638:Core/Src/printf.c ****       }
 3085              		.loc 1 638 9 is_stmt 1 view .LVU729
 638:Core/Src/printf.c ****       }
 3086              		.loc 1 638 21 is_stmt 0 view .LVU730
 3087 0128 11A8     		add	r0, sp, #68
 3088 012a FFF7FEFF 		bl	_atoi
 3089              	.LVL361:
 3090 012e 0400     		movs	r4, r0
 3091              	.LVL362:
 638:Core/Src/printf.c ****       }
 3092              		.loc 1 638 21 view .LVU731
 3093 0130 C4E7     		b	.L227
 3094              	.LVL363:
 3095              	.L319:
 3096              	.LBB37:
 642:Core/Src/printf.c ****         format++;
 3097              		.loc 1 642 51 view .LVU732
 3098 0132 0024     		movs	r4, #0
 3099 0134 F4E7     		b	.L229
 3100              	.LVL364:
 3101              	.L234:
 642:Core/Src/printf.c ****         format++;
 3102              		.loc 1 642 51 view .LVU733
 3103              	.LBE37:
 650:Core/Src/printf.c ****         format++;
 3104              		.loc 1 650 9 is_stmt 1 view .LVU734
 650:Core/Src/printf.c ****         format++;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 77


 3105              		.loc 1 650 15 is_stmt 0 view .LVU735
 3106 0136 8023     		movs	r3, #128
 3107 0138 5B00     		lsls	r3, r3, #1
 3108 013a 3B43     		orrs	r3, r7
 3109              	.LVL365:
 651:Core/Src/printf.c ****         if (*format == 'l') {
 3110              		.loc 1 651 9 is_stmt 1 view .LVU736
 651:Core/Src/printf.c ****         if (*format == 'l') {
 3111              		.loc 1 651 15 is_stmt 0 view .LVU737
 3112 013c 511C     		adds	r1, r2, #1
 3113 013e 1191     		str	r1, [sp, #68]
 652:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 3114              		.loc 1 652 9 is_stmt 1 view .LVU738
 652:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 3115              		.loc 1 652 13 is_stmt 0 view .LVU739
 3116 0140 5178     		ldrb	r1, [r2, #1]
 652:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 3117              		.loc 1 652 12 view .LVU740
 3118 0142 6C29     		cmp	r1, #108
 3119 0144 01D0     		beq	.L320
 650:Core/Src/printf.c ****         format++;
 3120              		.loc 1 650 15 view .LVU741
 3121 0146 1F00     		movs	r7, r3
 3122 0148 18E0     		b	.L230
 3123              	.L320:
 653:Core/Src/printf.c ****           format++;
 3124              		.loc 1 653 11 is_stmt 1 view .LVU742
 653:Core/Src/printf.c ****           format++;
 3125              		.loc 1 653 17 is_stmt 0 view .LVU743
 3126 014a C023     		movs	r3, #192
 3127              	.LVL366:
 653:Core/Src/printf.c ****           format++;
 3128              		.loc 1 653 17 view .LVU744
 3129 014c 9B00     		lsls	r3, r3, #2
 3130 014e 1F43     		orrs	r7, r3
 3131              	.LVL367:
 654:Core/Src/printf.c ****         }
 3132              		.loc 1 654 11 is_stmt 1 view .LVU745
 654:Core/Src/printf.c ****         }
 3133              		.loc 1 654 17 is_stmt 0 view .LVU746
 3134 0150 0232     		adds	r2, r2, #2
 3135 0152 1192     		str	r2, [sp, #68]
 3136 0154 12E0     		b	.L230
 3137              	.L236:
 658:Core/Src/printf.c ****         format++;
 3138              		.loc 1 658 9 is_stmt 1 view .LVU747
 658:Core/Src/printf.c ****         format++;
 3139              		.loc 1 658 15 is_stmt 0 view .LVU748
 3140 0156 8023     		movs	r3, #128
 3141 0158 3B43     		orrs	r3, r7
 3142              	.LVL368:
 659:Core/Src/printf.c ****         if (*format == 'h') {
 3143              		.loc 1 659 9 is_stmt 1 view .LVU749
 659:Core/Src/printf.c ****         if (*format == 'h') {
 3144              		.loc 1 659 15 is_stmt 0 view .LVU750
 3145 015a 511C     		adds	r1, r2, #1
 3146 015c 1191     		str	r1, [sp, #68]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 78


 660:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 3147              		.loc 1 660 9 is_stmt 1 view .LVU751
 660:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 3148              		.loc 1 660 13 is_stmt 0 view .LVU752
 3149 015e 5178     		ldrb	r1, [r2, #1]
 660:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 3150              		.loc 1 660 12 view .LVU753
 3151 0160 6829     		cmp	r1, #104
 3152 0162 01D0     		beq	.L321
 658:Core/Src/printf.c ****         format++;
 3153              		.loc 1 658 15 view .LVU754
 3154 0164 1F00     		movs	r7, r3
 3155 0166 09E0     		b	.L230
 3156              	.L321:
 661:Core/Src/printf.c ****           format++;
 3157              		.loc 1 661 11 is_stmt 1 view .LVU755
 661:Core/Src/printf.c ****           format++;
 3158              		.loc 1 661 17 is_stmt 0 view .LVU756
 3159 0168 C023     		movs	r3, #192
 3160              	.LVL369:
 661:Core/Src/printf.c ****           format++;
 3161              		.loc 1 661 17 view .LVU757
 3162 016a 1F43     		orrs	r7, r3
 3163              	.LVL370:
 662:Core/Src/printf.c ****         }
 3164              		.loc 1 662 11 is_stmt 1 view .LVU758
 662:Core/Src/printf.c ****         }
 3165              		.loc 1 662 17 is_stmt 0 view .LVU759
 3166 016c 0232     		adds	r2, r2, #2
 3167 016e 1192     		str	r2, [sp, #68]
 3168 0170 04E0     		b	.L230
 3169              	.L233:
 667:Core/Src/printf.c ****         format++;
 3170              		.loc 1 667 9 is_stmt 1 view .LVU760
 667:Core/Src/printf.c ****         format++;
 3171              		.loc 1 667 15 is_stmt 0 view .LVU761
 3172 0172 8023     		movs	r3, #128
 3173 0174 5B00     		lsls	r3, r3, #1
 3174 0176 1F43     		orrs	r7, r3
 3175              	.LVL371:
 668:Core/Src/printf.c ****         break;
 3176              		.loc 1 668 9 is_stmt 1 view .LVU762
 668:Core/Src/printf.c ****         break;
 3177              		.loc 1 668 15 is_stmt 0 view .LVU763
 3178 0178 0132     		adds	r2, r2, #1
 3179 017a 1192     		str	r2, [sp, #68]
 669:Core/Src/printf.c **** #endif
 3180              		.loc 1 669 9 is_stmt 1 view .LVU764
 3181              	.L230:
 684:Core/Src/printf.c ****       case 'd' :
 3182              		.loc 1 684 5 view .LVU765
 684:Core/Src/printf.c ****       case 'd' :
 3183              		.loc 1 684 13 is_stmt 0 view .LVU766
 3184 017c 119B     		ldr	r3, [sp, #68]
 3185 017e 1878     		ldrb	r0, [r3]
 684:Core/Src/printf.c ****       case 'd' :
 3186              		.loc 1 684 5 view .LVU767
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 79


 3187 0180 6728     		cmp	r0, #103
 3188 0182 16D8     		bhi	.L237
 684:Core/Src/printf.c ****       case 'd' :
 3189              		.loc 1 684 5 view .LVU768
 3190 0184 2528     		cmp	r0, #37
 3191 0186 26D3     		bcc	.L239
 3192 0188 0300     		movs	r3, r0
 3193 018a 253B     		subs	r3, r3, #37
 3194 018c DAB2     		uxtb	r2, r3
 3195 018e 422A     		cmp	r2, #66
 3196 0190 21D8     		bhi	.L239
 3197 0192 9300     		lsls	r3, r2, #2
 3198 0194 874A     		ldr	r2, .L332+8
 3199 0196 D358     		ldr	r3, [r2, r3]
 3200 0198 9F46     		mov	pc, r3
 3201              		.section	.rodata._vsnprintf
 3202              		.align	2
 3203              	.L244:
 3204 0090 14060000 		.word	.L247
 3205 0094 D6010000 		.word	.L239
 3206 0098 D6010000 		.word	.L239
 3207 009c D6010000 		.word	.L239
 3208 00a0 D6010000 		.word	.L239
 3209 00a4 D6010000 		.word	.L239
 3210 00a8 D6010000 		.word	.L239
 3211 00ac D6010000 		.word	.L239
 3212 00b0 D6010000 		.word	.L239
 3213 00b4 D6010000 		.word	.L239
 3214 00b8 D6010000 		.word	.L239
 3215 00bc D6010000 		.word	.L239
 3216 00c0 D6010000 		.word	.L239
 3217 00c4 D6010000 		.word	.L239
 3218 00c8 D6010000 		.word	.L239
 3219 00cc D6010000 		.word	.L239
 3220 00d0 D6010000 		.word	.L239
 3221 00d4 D6010000 		.word	.L239
 3222 00d8 D6010000 		.word	.L239
 3223 00dc D6010000 		.word	.L239
 3224 00e0 D6010000 		.word	.L239
 3225 00e4 D6010000 		.word	.L239
 3226 00e8 D6010000 		.word	.L239
 3227 00ec D6010000 		.word	.L239
 3228 00f0 D6010000 		.word	.L239
 3229 00f4 D6010000 		.word	.L239
 3230 00f8 D6010000 		.word	.L239
 3231 00fc D6010000 		.word	.L239
 3232 0100 D6010000 		.word	.L239
 3233 0104 D6010000 		.word	.L239
 3234 0108 D6010000 		.word	.L239
 3235 010c D6010000 		.word	.L239
 3236 0110 40040000 		.word	.L243
 3237 0114 02040000 		.word	.L245
 3238 0118 40040000 		.word	.L243
 3239 011c D6010000 		.word	.L239
 3240 0120 D6010000 		.word	.L239
 3241 0124 D6010000 		.word	.L239
 3242 0128 D6010000 		.word	.L239
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 80


 3243 012c D6010000 		.word	.L239
 3244 0130 D6010000 		.word	.L239
 3245 0134 D6010000 		.word	.L239
 3246 0138 D6010000 		.word	.L239
 3247 013c D6010000 		.word	.L239
 3248 0140 D6010000 		.word	.L239
 3249 0144 D6010000 		.word	.L239
 3250 0148 D6010000 		.word	.L239
 3251 014c D6010000 		.word	.L239
 3252 0150 D6010000 		.word	.L239
 3253 0154 D6010000 		.word	.L239
 3254 0158 D6010000 		.word	.L239
 3255 015c EA010000 		.word	.L240
 3256 0160 D6010000 		.word	.L239
 3257 0164 D6010000 		.word	.L239
 3258 0168 D6010000 		.word	.L239
 3259 016c D6010000 		.word	.L239
 3260 0170 D6010000 		.word	.L239
 3261 0174 D6010000 		.word	.L239
 3262 0178 D6010000 		.word	.L239
 3263 017c D6010000 		.word	.L239
 3264 0180 D6010000 		.word	.L239
 3265 0184 EA010000 		.word	.L240
 3266 0188 8E040000 		.word	.L246
 3267 018c EA010000 		.word	.L240
 3268 0190 40040000 		.word	.L243
 3269 0194 02040000 		.word	.L245
 3270 0198 40040000 		.word	.L243
 3271              		.section	.text._vsnprintf
 3272              	.L235:
 672:Core/Src/printf.c ****         format++;
 3273              		.loc 1 672 9 is_stmt 1 view .LVU769
 672:Core/Src/printf.c ****         format++;
 3274              		.loc 1 672 15 is_stmt 0 view .LVU770
 3275 019a 8023     		movs	r3, #128
 3276 019c 9B00     		lsls	r3, r3, #2
 3277 019e 1F43     		orrs	r7, r3
 3278              	.LVL372:
 673:Core/Src/printf.c ****         break;
 3279              		.loc 1 673 9 is_stmt 1 view .LVU771
 673:Core/Src/printf.c ****         break;
 3280              		.loc 1 673 15 is_stmt 0 view .LVU772
 3281 01a0 0132     		adds	r2, r2, #1
 3282 01a2 1192     		str	r2, [sp, #68]
 674:Core/Src/printf.c ****       case 'z' :
 3283              		.loc 1 674 9 is_stmt 1 view .LVU773
 3284 01a4 EAE7     		b	.L230
 3285              	.L231:
 676:Core/Src/printf.c ****         format++;
 3286              		.loc 1 676 9 view .LVU774
 676:Core/Src/printf.c ****         format++;
 3287              		.loc 1 676 15 is_stmt 0 view .LVU775
 3288 01a6 8023     		movs	r3, #128
 3289 01a8 5B00     		lsls	r3, r3, #1
 3290 01aa 1F43     		orrs	r7, r3
 3291              	.LVL373:
 677:Core/Src/printf.c ****         break;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 81


 3292              		.loc 1 677 9 is_stmt 1 view .LVU776
 677:Core/Src/printf.c ****         break;
 3293              		.loc 1 677 15 is_stmt 0 view .LVU777
 3294 01ac 0132     		adds	r2, r2, #1
 3295 01ae 1192     		str	r2, [sp, #68]
 678:Core/Src/printf.c ****       default :
 3296              		.loc 1 678 9 is_stmt 1 view .LVU778
 3297 01b0 E4E7     		b	.L230
 3298              	.L237:
 684:Core/Src/printf.c ****       case 'd' :
 3299              		.loc 1 684 5 is_stmt 0 view .LVU779
 3300 01b2 7828     		cmp	r0, #120
 3301 01b4 0FD8     		bhi	.L239
 3302 01b6 6928     		cmp	r0, #105
 3303 01b8 0DD3     		bcc	.L239
 3304 01ba 0200     		movs	r2, r0
 3305 01bc 693A     		subs	r2, r2, #105
 3306 01be D2B2     		uxtb	r2, r2
 3307 01c0 0123     		movs	r3, #1
 3308 01c2 9340     		lsls	r3, r3, r2
 3309 01c4 7C4A     		ldr	r2, .L332+12
 3310 01c6 1342     		tst	r3, r2
 3311 01c8 0FD1     		bne	.L240
 3312 01ca 1A06     		lsls	r2, r3, #24
 3313 01cc 00D5     		bpl	.LCB3288
 3314 01ce 07E2     		b	.L241	@long jump
 3315              	.LCB3288:
 3316 01d0 5B05     		lsls	r3, r3, #21
 3317 01d2 00D5     		bpl	.LCB3292
 3318 01d4 94E1     		b	.L322	@long jump
 3319              	.LCB3292:
 3320              	.L239:
 795:Core/Src/printf.c ****       }
 796:Core/Src/printf.c **** 
 797:Core/Src/printf.c ****       case 's' : {
 798:Core/Src/printf.c ****         const char* p = va_arg(va, char*);
 799:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 800:Core/Src/printf.c ****         // pre padding
 801:Core/Src/printf.c ****         if (flags & FLAGS_PRECISION) {
 802:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 803:Core/Src/printf.c ****         }
 804:Core/Src/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 805:Core/Src/printf.c ****           while (l++ < width) {
 806:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 807:Core/Src/printf.c ****           }
 808:Core/Src/printf.c ****         }
 809:Core/Src/printf.c ****         // string output
 810:Core/Src/printf.c ****         while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 811:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 812:Core/Src/printf.c ****         }
 813:Core/Src/printf.c ****         // post padding
 814:Core/Src/printf.c ****         if (flags & FLAGS_LEFT) {
 815:Core/Src/printf.c ****           while (l++ < width) {
 816:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 817:Core/Src/printf.c ****           }
 818:Core/Src/printf.c ****         }
 819:Core/Src/printf.c ****         format++;
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 82


 820:Core/Src/printf.c ****         break;
 821:Core/Src/printf.c ****       }
 822:Core/Src/printf.c **** 
 823:Core/Src/printf.c ****       case 'p' : {
 824:Core/Src/printf.c ****         width = sizeof(void*) * 2U;
 825:Core/Src/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 826:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 827:Core/Src/printf.c ****         const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
 828:Core/Src/printf.c ****         if (is_ll) {
 829:Core/Src/printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U,
 830:Core/Src/printf.c ****         }
 831:Core/Src/printf.c ****         else {
 832:Core/Src/printf.c **** #endif
 833:Core/Src/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)),
 834:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 835:Core/Src/printf.c ****         }
 836:Core/Src/printf.c **** #endif
 837:Core/Src/printf.c ****         format++;
 838:Core/Src/printf.c ****         break;
 839:Core/Src/printf.c ****       }
 840:Core/Src/printf.c **** 
 841:Core/Src/printf.c ****       case '%' :
 842:Core/Src/printf.c ****         out('%', buffer, idx++, maxlen);
 843:Core/Src/printf.c ****         format++;
 844:Core/Src/printf.c ****         break;
 845:Core/Src/printf.c **** 
 846:Core/Src/printf.c ****       default :
 847:Core/Src/printf.c ****         out(*format, buffer, idx++, maxlen);
 3321              		.loc 1 847 9 is_stmt 1 view .LVU780
 3322 01d6 6C1C     		adds	r4, r5, #1
 3323              	.LVL374:
 3324              		.loc 1 847 9 is_stmt 0 view .LVU781
 3325 01d8 5B46     		mov	r3, fp
 3326 01da 2A00     		movs	r2, r5
 3327 01dc 4146     		mov	r1, r8
 3328 01de B047     		blx	r6
 3329              	.LVL375:
 848:Core/Src/printf.c ****         format++;
 3330              		.loc 1 848 9 is_stmt 1 view .LVU782
 3331              		.loc 1 848 15 is_stmt 0 view .LVU783
 3332 01e0 119B     		ldr	r3, [sp, #68]
 3333 01e2 0133     		adds	r3, r3, #1
 3334 01e4 1193     		str	r3, [sp, #68]
 849:Core/Src/printf.c ****         break;
 3335              		.loc 1 849 9 is_stmt 1 view .LVU784
 847:Core/Src/printf.c ****         format++;
 3336              		.loc 1 847 9 is_stmt 0 view .LVU785
 3337 01e6 2500     		movs	r5, r4
 3338              		.loc 1 849 9 view .LVU786
 3339 01e8 1AE7     		b	.L293
 3340              	.LVL376:
 3341              	.L240:
 3342              	.LBB38:
 693:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 3343              		.loc 1 693 9 is_stmt 1 view .LVU787
 694:Core/Src/printf.c ****           base = 16U;
 3344              		.loc 1 694 9 view .LVU788
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 83


 694:Core/Src/printf.c ****           base = 16U;
 3345              		.loc 1 694 12 is_stmt 0 view .LVU789
 3346 01ea 7828     		cmp	r0, #120
 3347 01ec 0AD0     		beq	.L301
 3348 01ee 6228     		cmp	r0, #98
 3349 01f0 3AD0     		beq	.L302
 3350 01f2 6F28     		cmp	r0, #111
 3351 01f4 3BD0     		beq	.L303
 3352 01f6 5828     		cmp	r0, #88
 3353 01f8 3CD0     		beq	.L304
 704:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 3354              		.loc 1 704 11 is_stmt 1 view .LVU790
 3355              	.LVL377:
 705:Core/Src/printf.c ****         }
 3356              		.loc 1 705 11 view .LVU791
 705:Core/Src/printf.c ****         }
 3357              		.loc 1 705 17 is_stmt 0 view .LVU792
 3358 01fa 1023     		movs	r3, #16
 3359 01fc 9F43     		bics	r7, r3
 3360              	.LVL378:
 704:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 3361              		.loc 1 704 16 view .LVU793
 3362 01fe 063B     		subs	r3, r3, #6
 3363 0200 9C46     		mov	ip, r3
 3364 0202 01E0     		b	.L249
 3365              	.LVL379:
 3366              	.L301:
 695:Core/Src/printf.c ****         }
 3367              		.loc 1 695 16 view .LVU794
 3368 0204 1023     		movs	r3, #16
 3369 0206 9C46     		mov	ip, r3
 3370              	.L249:
 3371              	.LVL380:
 708:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 3372              		.loc 1 708 9 is_stmt 1 view .LVU795
 708:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 3373              		.loc 1 708 12 is_stmt 0 view .LVU796
 3374 0208 5828     		cmp	r0, #88
 3375 020a 36D0     		beq	.L323
 3376              	.L250:
 713:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 3377              		.loc 1 713 9 is_stmt 1 view .LVU797
 713:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 3378              		.loc 1 713 12 is_stmt 0 view .LVU798
 3379 020c 6928     		cmp	r0, #105
 3380 020e 03D0     		beq	.L251
 713:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 3381              		.loc 1 713 30 discriminator 1 view .LVU799
 3382 0210 6428     		cmp	r0, #100
 3383 0212 01D0     		beq	.L251
 714:Core/Src/printf.c ****         }
 3384              		.loc 1 714 11 is_stmt 1 view .LVU800
 714:Core/Src/printf.c ****         }
 3385              		.loc 1 714 17 is_stmt 0 view .LVU801
 3386 0214 0C22     		movs	r2, #12
 3387 0216 9743     		bics	r7, r2
 3388              	.LVL381:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 84


 3389              	.L251:
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 3390              		.loc 1 718 9 is_stmt 1 view .LVU802
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 3391              		.loc 1 718 12 is_stmt 0 view .LVU803
 3392 0218 7A05     		lsls	r2, r7, #21
 3393 021a 01D5     		bpl	.L252
 719:Core/Src/printf.c ****         }
 3394              		.loc 1 719 11 is_stmt 1 view .LVU804
 719:Core/Src/printf.c ****         }
 3395              		.loc 1 719 17 is_stmt 0 view .LVU805
 3396 021c 0122     		movs	r2, #1
 3397 021e 9743     		bics	r7, r2
 3398              	.LVL382:
 3399              	.L252:
 723:Core/Src/printf.c ****           // signed
 3400              		.loc 1 723 9 is_stmt 1 view .LVU806
 723:Core/Src/printf.c ****           // signed
 3401              		.loc 1 723 12 is_stmt 0 view .LVU807
 3402 0220 6928     		cmp	r0, #105
 3403 0222 2DD0     		beq	.L253
 723:Core/Src/printf.c ****           // signed
 3404              		.loc 1 723 30 discriminator 1 view .LVU808
 3405 0224 6428     		cmp	r0, #100
 3406 0226 2BD0     		beq	.L253
 742:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3407              		.loc 1 742 11 is_stmt 1 view .LVU809
 742:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3408              		.loc 1 742 14 is_stmt 0 view .LVU810
 3409 0228 BA05     		lsls	r2, r7, #22
 3410 022a 00D5     		bpl	.LCB3395
 3411 022c A2E0     		b	.L324	@long jump
 3412              	.LCB3395:
 747:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 3413              		.loc 1 747 16 is_stmt 1 view .LVU811
 747:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 3414              		.loc 1 747 19 is_stmt 0 view .LVU812
 3415 022e FA05     		lsls	r2, r7, #23
 3416 0230 00D5     		bpl	.LCB3400
 3417 0232 C3E0     		b	.L325	@long jump
 3418              	.LCB3400:
 3419              	.LBB39:
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3420              		.loc 1 751 13 is_stmt 1 view .LVU813
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3421              		.loc 1 751 103 is_stmt 0 view .LVU814
 3422 0234 7A06     		lsls	r2, r7, #25
 3423 0236 00D4     		bmi	.LCB3406
 3424 0238 D5E0     		b	.L263	@long jump
 3425              	.LCB3406:
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3426              		.loc 1 751 78 view .LVU815
 3427 023a 1C9A     		ldr	r2, [sp, #112]
 3428 023c 111D     		adds	r1, r2, #4
 3429 023e 1C91     		str	r1, [sp, #112]
 3430 0240 1168     		ldr	r1, [r2]
 3431 0242 FF22     		movs	r2, #255
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 85


 3432 0244 0A40     		ands	r2, r1
 3433              	.L264:
 3434              	.LVL383:
 752:Core/Src/printf.c ****           }
 3435              		.loc 1 752 13 is_stmt 1 discriminator 8 view .LVU816
 752:Core/Src/printf.c ****           }
 3436              		.loc 1 752 19 is_stmt 0 discriminator 8 view .LVU817
 3437 0246 0597     		str	r7, [sp, #20]
 3438 0248 0B9B     		ldr	r3, [sp, #44]
 3439 024a 0493     		str	r3, [sp, #16]
 3440 024c 0394     		str	r4, [sp, #12]
 3441 024e 6346     		mov	r3, ip
 3442 0250 0293     		str	r3, [sp, #8]
 3443 0252 0023     		movs	r3, #0
 3444 0254 0193     		str	r3, [sp, #4]
 3445 0256 0092     		str	r2, [sp]
 3446 0258 5B46     		mov	r3, fp
 3447 025a 2A00     		movs	r2, r5
 3448              	.LVL384:
 752:Core/Src/printf.c ****           }
 3449              		.loc 1 752 19 discriminator 8 view .LVU818
 3450 025c 4146     		mov	r1, r8
 3451 025e 3000     		movs	r0, r6
 3452 0260 FFF7FEFF 		bl	_ntoa_long
 3453              	.LVL385:
 752:Core/Src/printf.c ****           }
 3454              		.loc 1 752 19 discriminator 8 view .LVU819
 3455 0264 0500     		movs	r5, r0
 3456              	.LVL386:
 752:Core/Src/printf.c ****           }
 3457              		.loc 1 752 19 discriminator 8 view .LVU820
 3458 0266 2AE0     		b	.L256
 3459              	.LVL387:
 3460              	.L302:
 752:Core/Src/printf.c ****           }
 3461              		.loc 1 752 19 discriminator 8 view .LVU821
 3462              	.LBE39:
 694:Core/Src/printf.c ****           base = 16U;
 3463              		.loc 1 694 12 view .LVU822
 3464 0268 0223     		movs	r3, #2
 3465 026a 9C46     		mov	ip, r3
 3466 026c CCE7     		b	.L249
 3467              	.L303:
 3468 026e 0823     		movs	r3, #8
 3469 0270 9C46     		mov	ip, r3
 3470 0272 C9E7     		b	.L249
 3471              	.L304:
 3472 0274 1023     		movs	r3, #16
 3473 0276 9C46     		mov	ip, r3
 3474 0278 C6E7     		b	.L249
 3475              	.LVL388:
 3476              	.L323:
 709:Core/Src/printf.c ****         }
 3477              		.loc 1 709 11 is_stmt 1 view .LVU823
 709:Core/Src/printf.c ****         }
 3478              		.loc 1 709 17 is_stmt 0 view .LVU824
 3479 027a 2022     		movs	r2, #32
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 86


 3480 027c 1743     		orrs	r7, r2
 3481              	.LVL389:
 709:Core/Src/printf.c ****         }
 3482              		.loc 1 709 17 view .LVU825
 3483 027e C5E7     		b	.L250
 3484              	.L253:
 725:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3485              		.loc 1 725 11 is_stmt 1 view .LVU826
 725:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3486              		.loc 1 725 14 is_stmt 0 view .LVU827
 3487 0280 BA05     		lsls	r2, r7, #22
 3488 0282 20D4     		bmi	.L326
 731:Core/Src/printf.c ****             const long value = va_arg(va, long);
 3489              		.loc 1 731 16 is_stmt 1 view .LVU828
 731:Core/Src/printf.c ****             const long value = va_arg(va, long);
 3490              		.loc 1 731 19 is_stmt 0 view .LVU829
 3491 0284 FA05     		lsls	r2, r7, #23
 3492 0286 50D4     		bmi	.L327
 3493              	.LBB40:
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3494              		.loc 1 736 13 is_stmt 1 view .LVU830
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3495              		.loc 1 736 76 is_stmt 0 view .LVU831
 3496 0288 7A06     		lsls	r2, r7, #25
 3497 028a 66D5     		bpl	.L258
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3498              		.loc 1 736 60 view .LVU832
 3499 028c 1C9A     		ldr	r2, [sp, #112]
 3500 028e 111D     		adds	r1, r2, #4
 3501 0290 1C91     		str	r1, [sp, #112]
 3502 0292 1168     		ldr	r1, [r2]
 3503 0294 FF22     		movs	r2, #255
 3504 0296 0A40     		ands	r2, r1
 3505              	.L259:
 3506              	.LVL390:
 737:Core/Src/printf.c ****           }
 3507              		.loc 1 737 13 is_stmt 1 discriminator 8 view .LVU833
 737:Core/Src/printf.c ****           }
 3508              		.loc 1 737 56 is_stmt 0 discriminator 8 view .LVU834
 3509 0298 D017     		asrs	r0, r2, #31
 3510 029a 1118     		adds	r1, r2, r0
 3511 029c 4140     		eors	r1, r0
 737:Core/Src/printf.c ****           }
 3512              		.loc 1 737 19 discriminator 8 view .LVU835
 3513 029e 0597     		str	r7, [sp, #20]
 3514 02a0 0B9B     		ldr	r3, [sp, #44]
 3515 02a2 0493     		str	r3, [sp, #16]
 3516 02a4 0394     		str	r4, [sp, #12]
 3517 02a6 6346     		mov	r3, ip
 3518 02a8 0293     		str	r3, [sp, #8]
 3519 02aa D20F     		lsrs	r2, r2, #31
 3520              	.LVL391:
 737:Core/Src/printf.c ****           }
 3521              		.loc 1 737 19 discriminator 8 view .LVU836
 3522 02ac 0192     		str	r2, [sp, #4]
 3523 02ae 0091     		str	r1, [sp]
 3524 02b0 5B46     		mov	r3, fp
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 87


 3525 02b2 2A00     		movs	r2, r5
 3526 02b4 4146     		mov	r1, r8
 3527 02b6 3000     		movs	r0, r6
 3528 02b8 FFF7FEFF 		bl	_ntoa_long
 3529              	.LVL392:
 737:Core/Src/printf.c ****           }
 3530              		.loc 1 737 19 discriminator 8 view .LVU837
 3531 02bc 0500     		movs	r5, r0
 3532              	.LVL393:
 3533              	.L256:
 737:Core/Src/printf.c ****           }
 3534              		.loc 1 737 19 discriminator 8 view .LVU838
 3535              	.LBE40:
 755:Core/Src/printf.c ****         break;
 3536              		.loc 1 755 9 is_stmt 1 view .LVU839
 755:Core/Src/printf.c ****         break;
 3537              		.loc 1 755 15 is_stmt 0 view .LVU840
 3538 02be 119B     		ldr	r3, [sp, #68]
 3539 02c0 0133     		adds	r3, r3, #1
 3540 02c2 1193     		str	r3, [sp, #68]
 756:Core/Src/printf.c ****       }
 3541              		.loc 1 756 9 is_stmt 1 view .LVU841
 3542 02c4 ACE6     		b	.L293
 3543              	.LVL394:
 3544              	.L326:
 3545              	.LBB41:
 727:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 3546              		.loc 1 727 13 view .LVU842
 727:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 3547              		.loc 1 727 29 is_stmt 0 view .LVU843
 3548 02c6 1C9A     		ldr	r2, [sp, #112]
 3549 02c8 0732     		adds	r2, r2, #7
 3550 02ca 0721     		movs	r1, #7
 3551 02cc 8A43     		bics	r2, r1
 3552 02ce 1100     		movs	r1, r2
 3553 02d0 0831     		adds	r1, r1, #8
 3554 02d2 1C91     		str	r1, [sp, #112]
 3555 02d4 1168     		ldr	r1, [r2]
 3556 02d6 5368     		ldr	r3, [r2, #4]
 3557 02d8 9946     		mov	r9, r3
 728:Core/Src/printf.c **** #endif
 3558              		.loc 1 728 13 is_stmt 1 view .LVU844
 728:Core/Src/printf.c **** #endif
 3559              		.loc 1 728 61 is_stmt 0 view .LVU845
 3560 02da DB17     		asrs	r3, r3, #31
 3561 02dc 0C93     		str	r3, [sp, #48]
 3562 02de 0D93     		str	r3, [sp, #52]
 3563 02e0 0C9A     		ldr	r2, [sp, #48]
 3564 02e2 0D9B     		ldr	r3, [sp, #52]
 3565 02e4 1000     		movs	r0, r2
 3566 02e6 4840     		eors	r0, r1
 3567 02e8 0E90     		str	r0, [sp, #56]
 3568 02ea 4A46     		mov	r2, r9
 3569 02ec 5340     		eors	r3, r2
 3570 02ee 0F93     		str	r3, [sp, #60]
 3571 02f0 0E98     		ldr	r0, [sp, #56]
 3572 02f2 0F99     		ldr	r1, [sp, #60]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 88


 3573 02f4 0C9A     		ldr	r2, [sp, #48]
 3574 02f6 0D9B     		ldr	r3, [sp, #52]
 3575 02f8 801A     		subs	r0, r0, r2
 3576 02fa 9941     		sbcs	r1, r1, r3
 3577 02fc 0E90     		str	r0, [sp, #56]
 3578 02fe 0F91     		str	r1, [sp, #60]
 728:Core/Src/printf.c **** #endif
 3579              		.loc 1 728 19 view .LVU846
 3580 0300 0897     		str	r7, [sp, #32]
 3581 0302 0B9B     		ldr	r3, [sp, #44]
 3582 0304 0793     		str	r3, [sp, #28]
 3583 0306 0694     		str	r4, [sp, #24]
 3584 0308 6346     		mov	r3, ip
 3585 030a 0493     		str	r3, [sp, #16]
 3586 030c 0023     		movs	r3, #0
 3587 030e 0593     		str	r3, [sp, #20]
 3588 0310 4B46     		mov	r3, r9
 3589 0312 DA0F     		lsrs	r2, r3, #31
 3590 0314 0292     		str	r2, [sp, #8]
 3591 0316 0090     		str	r0, [sp]
 3592 0318 0191     		str	r1, [sp, #4]
 3593 031a 5B46     		mov	r3, fp
 3594 031c 2A00     		movs	r2, r5
 3595 031e 4146     		mov	r1, r8
 3596 0320 3000     		movs	r0, r6
 3597 0322 FFF7FEFF 		bl	_ntoa_long_long
 3598              	.LVL395:
 728:Core/Src/printf.c **** #endif
 3599              		.loc 1 728 19 view .LVU847
 3600 0326 0500     		movs	r5, r0
 3601              	.LVL396:
 728:Core/Src/printf.c **** #endif
 3602              		.loc 1 728 19 view .LVU848
 3603              	.LBE41:
 3604 0328 C9E7     		b	.L256
 3605              	.LVL397:
 3606              	.L327:
 3607              	.LBB42:
 732:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 3608              		.loc 1 732 13 is_stmt 1 view .LVU849
 732:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 3609              		.loc 1 732 24 is_stmt 0 view .LVU850
 3610 032a 1C9A     		ldr	r2, [sp, #112]
 3611 032c 111D     		adds	r1, r2, #4
 3612 032e 1C91     		str	r1, [sp, #112]
 3613 0330 1268     		ldr	r2, [r2]
 733:Core/Src/printf.c ****           }
 3614              		.loc 1 733 13 is_stmt 1 view .LVU851
 733:Core/Src/printf.c ****           }
 3615              		.loc 1 733 56 is_stmt 0 view .LVU852
 3616 0332 D017     		asrs	r0, r2, #31
 3617 0334 1118     		adds	r1, r2, r0
 3618 0336 4140     		eors	r1, r0
 733:Core/Src/printf.c ****           }
 3619              		.loc 1 733 19 view .LVU853
 3620 0338 0597     		str	r7, [sp, #20]
 3621 033a 0B9B     		ldr	r3, [sp, #44]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 89


 3622 033c 0493     		str	r3, [sp, #16]
 3623 033e 0394     		str	r4, [sp, #12]
 3624 0340 6346     		mov	r3, ip
 3625 0342 0293     		str	r3, [sp, #8]
 3626 0344 D20F     		lsrs	r2, r2, #31
 3627 0346 0192     		str	r2, [sp, #4]
 3628 0348 0091     		str	r1, [sp]
 3629 034a 5B46     		mov	r3, fp
 3630 034c 2A00     		movs	r2, r5
 3631 034e 4146     		mov	r1, r8
 3632 0350 3000     		movs	r0, r6
 3633 0352 FFF7FEFF 		bl	_ntoa_long
 3634              	.LVL398:
 733:Core/Src/printf.c ****           }
 3635              		.loc 1 733 19 view .LVU854
 3636 0356 0500     		movs	r5, r0
 3637              	.LVL399:
 733:Core/Src/printf.c ****           }
 3638              		.loc 1 733 19 view .LVU855
 3639              	.LBE42:
 3640 0358 B1E7     		b	.L256
 3641              	.LVL400:
 3642              	.L258:
 3643              	.LBB43:
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3644              		.loc 1 736 129 discriminator 2 view .LVU856
 3645 035a 3A06     		lsls	r2, r7, #24
 3646 035c 05D5     		bpl	.L260
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3647              		.loc 1 736 113 view .LVU857
 3648 035e 1C9A     		ldr	r2, [sp, #112]
 3649 0360 111D     		adds	r1, r2, #4
 3650 0362 1C91     		str	r1, [sp, #112]
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3651              		.loc 1 736 129 view .LVU858
 3652 0364 0023     		movs	r3, #0
 3653 0366 D25E     		ldrsh	r2, [r2, r3]
 3654 0368 96E7     		b	.L259
 3655              	.L260:
 3656 036a 1C9A     		ldr	r2, [sp, #112]
 3657 036c 111D     		adds	r1, r2, #4
 3658 036e 1C91     		str	r1, [sp, #112]
 3659 0370 1268     		ldr	r2, [r2]
 3660 0372 91E7     		b	.L259
 3661              	.L324:
 3662              	.LBE43:
 744:Core/Src/printf.c **** #endif
 3663              		.loc 1 744 13 is_stmt 1 view .LVU859
 744:Core/Src/printf.c **** #endif
 3664              		.loc 1 744 19 is_stmt 0 view .LVU860
 3665 0374 1C9A     		ldr	r2, [sp, #112]
 3666 0376 0732     		adds	r2, r2, #7
 3667 0378 0721     		movs	r1, #7
 3668 037a 8A43     		bics	r2, r1
 3669 037c 1100     		movs	r1, r2
 3670 037e 0831     		adds	r1, r1, #8
 3671 0380 1C91     		str	r1, [sp, #112]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 90


 3672 0382 0897     		str	r7, [sp, #32]
 3673 0384 0B9B     		ldr	r3, [sp, #44]
 3674 0386 0793     		str	r3, [sp, #28]
 3675 0388 0694     		str	r4, [sp, #24]
 3676 038a 6346     		mov	r3, ip
 3677 038c 0493     		str	r3, [sp, #16]
 3678 038e 0023     		movs	r3, #0
 3679 0390 0593     		str	r3, [sp, #20]
 3680 0392 0293     		str	r3, [sp, #8]
 3681 0394 5368     		ldr	r3, [r2, #4]
 3682 0396 1268     		ldr	r2, [r2]
 3683 0398 0092     		str	r2, [sp]
 3684 039a 0193     		str	r3, [sp, #4]
 3685 039c 5B46     		mov	r3, fp
 3686 039e 2A00     		movs	r2, r5
 3687 03a0 4146     		mov	r1, r8
 3688 03a2 3000     		movs	r0, r6
 3689 03a4 FFF7FEFF 		bl	_ntoa_long_long
 3690              	.LVL401:
 744:Core/Src/printf.c **** #endif
 3691              		.loc 1 744 19 view .LVU861
 3692 03a8 0500     		movs	r5, r0
 3693              	.LVL402:
 744:Core/Src/printf.c **** #endif
 3694              		.loc 1 744 19 view .LVU862
 3695 03aa 88E7     		b	.L256
 3696              	.L333:
 3697              		.align	2
 3698              	.L332:
 3699 03ac 00000000 		.word	.L217
 3700 03b0 44000000 		.word	.L232
 3701 03b4 90000000 		.word	.L244
 3702 03b8 41900000 		.word	36929
 3703              	.LVL403:
 3704              	.L325:
 748:Core/Src/printf.c ****           }
 3705              		.loc 1 748 13 is_stmt 1 view .LVU863
 748:Core/Src/printf.c ****           }
 3706              		.loc 1 748 19 is_stmt 0 view .LVU864
 3707 03bc 1C9A     		ldr	r2, [sp, #112]
 3708 03be 111D     		adds	r1, r2, #4
 3709 03c0 1C91     		str	r1, [sp, #112]
 3710 03c2 0597     		str	r7, [sp, #20]
 3711 03c4 0B9B     		ldr	r3, [sp, #44]
 3712 03c6 0493     		str	r3, [sp, #16]
 3713 03c8 0394     		str	r4, [sp, #12]
 3714 03ca 6346     		mov	r3, ip
 3715 03cc 0293     		str	r3, [sp, #8]
 3716 03ce 0023     		movs	r3, #0
 3717 03d0 0193     		str	r3, [sp, #4]
 3718 03d2 1368     		ldr	r3, [r2]
 3719 03d4 0093     		str	r3, [sp]
 3720 03d6 5B46     		mov	r3, fp
 3721 03d8 2A00     		movs	r2, r5
 3722 03da 4146     		mov	r1, r8
 3723 03dc 3000     		movs	r0, r6
 3724 03de FFF7FEFF 		bl	_ntoa_long
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 91


 3725              	.LVL404:
 748:Core/Src/printf.c ****           }
 3726              		.loc 1 748 19 view .LVU865
 3727 03e2 0500     		movs	r5, r0
 3728              	.LVL405:
 748:Core/Src/printf.c ****           }
 3729              		.loc 1 748 19 view .LVU866
 3730 03e4 6BE7     		b	.L256
 3731              	.LVL406:
 3732              	.L263:
 3733              	.LBB44:
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3734              		.loc 1 751 174 discriminator 2 view .LVU867
 3735 03e6 3A06     		lsls	r2, r7, #24
 3736 03e8 06D5     		bpl	.L265
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3737              		.loc 1 751 149 view .LVU868
 3738 03ea 1C9A     		ldr	r2, [sp, #112]
 3739 03ec 111D     		adds	r1, r2, #4
 3740 03ee 1C91     		str	r1, [sp, #112]
 3741 03f0 1268     		ldr	r2, [r2]
 3742 03f2 1204     		lsls	r2, r2, #16
 3743 03f4 120C     		lsrs	r2, r2, #16
 3744 03f6 26E7     		b	.L264
 3745              	.L265:
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3746              		.loc 1 751 174 view .LVU869
 3747 03f8 1C9A     		ldr	r2, [sp, #112]
 3748 03fa 111D     		adds	r1, r2, #4
 3749 03fc 1C91     		str	r1, [sp, #112]
 3750 03fe 1268     		ldr	r2, [r2]
 3751 0400 21E7     		b	.L264
 3752              	.LVL407:
 3753              	.L245:
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3754              		.loc 1 751 174 view .LVU870
 3755              	.LBE44:
 3756              	.LBE38:
 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3757              		.loc 1 761 9 is_stmt 1 view .LVU871
 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3758              		.loc 1 761 12 is_stmt 0 view .LVU872
 3759 0402 4628     		cmp	r0, #70
 3760 0404 19D0     		beq	.L328
 3761              	.L266:
 762:Core/Src/printf.c ****         format++;
 3762              		.loc 1 762 9 is_stmt 1 view .LVU873
 762:Core/Src/printf.c ****         format++;
 3763              		.loc 1 762 15 is_stmt 0 view .LVU874
 3764 0406 1C9B     		ldr	r3, [sp, #112]
 3765 0408 0733     		adds	r3, r3, #7
 3766 040a 0722     		movs	r2, #7
 3767 040c 9343     		bics	r3, r2
 3768 040e 1A00     		movs	r2, r3
 3769 0410 0832     		adds	r2, r2, #8
 3770 0412 1C92     		str	r2, [sp, #112]
 3771 0414 0497     		str	r7, [sp, #16]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 92


 3772 0416 0B9A     		ldr	r2, [sp, #44]
 3773 0418 0392     		str	r2, [sp, #12]
 3774 041a 0294     		str	r4, [sp, #8]
 3775 041c 1A68     		ldr	r2, [r3]
 3776 041e 5B68     		ldr	r3, [r3, #4]
 3777 0420 0092     		str	r2, [sp]
 3778 0422 0193     		str	r3, [sp, #4]
 3779 0424 5B46     		mov	r3, fp
 3780 0426 2A00     		movs	r2, r5
 3781 0428 4146     		mov	r1, r8
 3782 042a 3000     		movs	r0, r6
 3783 042c FFF7FEFF 		bl	_ftoa
 3784              	.LVL408:
 3785 0430 0500     		movs	r5, r0
 3786              	.LVL409:
 763:Core/Src/printf.c ****         break;
 3787              		.loc 1 763 9 is_stmt 1 view .LVU875
 763:Core/Src/printf.c ****         break;
 3788              		.loc 1 763 15 is_stmt 0 view .LVU876
 3789 0432 119B     		ldr	r3, [sp, #68]
 3790 0434 0133     		adds	r3, r3, #1
 3791 0436 1193     		str	r3, [sp, #68]
 764:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 3792              		.loc 1 764 9 is_stmt 1 view .LVU877
 3793 0438 F2E5     		b	.L293
 3794              	.LVL410:
 3795              	.L328:
 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3796              		.loc 1 761 29 discriminator 1 view .LVU878
 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3797              		.loc 1 761 35 is_stmt 0 discriminator 1 view .LVU879
 3798 043a 2023     		movs	r3, #32
 3799 043c 1F43     		orrs	r7, r3
 3800              	.LVL411:
 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3801              		.loc 1 761 35 discriminator 1 view .LVU880
 3802 043e E2E7     		b	.L266
 3803              	.L243:
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3804              		.loc 1 770 9 is_stmt 1 view .LVU881
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3805              		.loc 1 770 12 is_stmt 0 view .LVU882
 3806 0440 6728     		cmp	r0, #103
 3807 0442 01D0     		beq	.L267
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3808              		.loc 1 770 29 discriminator 2 view .LVU883
 3809 0444 4728     		cmp	r0, #71
 3810 0446 02D1     		bne	.L268
 3811              	.L267:
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3812              		.loc 1 770 49 is_stmt 1 discriminator 3 view .LVU884
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3813              		.loc 1 770 55 is_stmt 0 discriminator 3 view .LVU885
 3814 0448 8023     		movs	r3, #128
 3815 044a 1B01     		lsls	r3, r3, #4
 3816 044c 1F43     		orrs	r7, r3
 3817              	.LVL412:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 93


 3818              	.L268:
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3819              		.loc 1 771 9 is_stmt 1 view .LVU886
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3820              		.loc 1 771 12 is_stmt 0 view .LVU887
 3821 044e 4528     		cmp	r0, #69
 3822 0450 01D0     		beq	.L269
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3823              		.loc 1 771 29 discriminator 2 view .LVU888
 3824 0452 4728     		cmp	r0, #71
 3825 0454 01D1     		bne	.L270
 3826              	.L269:
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3827              		.loc 1 771 49 is_stmt 1 discriminator 3 view .LVU889
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3828              		.loc 1 771 55 is_stmt 0 discriminator 3 view .LVU890
 3829 0456 2023     		movs	r3, #32
 3830 0458 1F43     		orrs	r7, r3
 3831              	.LVL413:
 3832              	.L270:
 772:Core/Src/printf.c ****         format++;
 3833              		.loc 1 772 9 is_stmt 1 view .LVU891
 772:Core/Src/printf.c ****         format++;
 3834              		.loc 1 772 15 is_stmt 0 view .LVU892
 3835 045a 1C9B     		ldr	r3, [sp, #112]
 3836 045c 0733     		adds	r3, r3, #7
 3837 045e 0722     		movs	r2, #7
 3838 0460 9343     		bics	r3, r2
 3839 0462 1A00     		movs	r2, r3
 3840 0464 0832     		adds	r2, r2, #8
 3841 0466 1C92     		str	r2, [sp, #112]
 3842 0468 0497     		str	r7, [sp, #16]
 3843 046a 0B9A     		ldr	r2, [sp, #44]
 3844 046c 0392     		str	r2, [sp, #12]
 3845 046e 0294     		str	r4, [sp, #8]
 3846 0470 1A68     		ldr	r2, [r3]
 3847 0472 5B68     		ldr	r3, [r3, #4]
 3848 0474 0092     		str	r2, [sp]
 3849 0476 0193     		str	r3, [sp, #4]
 3850 0478 5B46     		mov	r3, fp
 3851 047a 2A00     		movs	r2, r5
 3852 047c 4146     		mov	r1, r8
 3853 047e 3000     		movs	r0, r6
 3854 0480 FFF7FEFF 		bl	_etoa
 3855              	.LVL414:
 3856 0484 0500     		movs	r5, r0
 3857              	.LVL415:
 773:Core/Src/printf.c ****         break;
 3858              		.loc 1 773 9 is_stmt 1 view .LVU893
 773:Core/Src/printf.c ****         break;
 3859              		.loc 1 773 15 is_stmt 0 view .LVU894
 3860 0486 119B     		ldr	r3, [sp, #68]
 3861 0488 0133     		adds	r3, r3, #1
 3862 048a 1193     		str	r3, [sp, #68]
 774:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 3863              		.loc 1 774 9 is_stmt 1 view .LVU895
 3864 048c C8E5     		b	.L293
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 94


 3865              	.LVL416:
 3866              	.L246:
 3867              	.LBB45:
 778:Core/Src/printf.c ****         // pre padding
 3868              		.loc 1 778 9 view .LVU896
 780:Core/Src/printf.c ****           while (l++ < width) {
 3869              		.loc 1 780 9 view .LVU897
 780:Core/Src/printf.c ****           while (l++ < width) {
 3870              		.loc 1 780 21 is_stmt 0 view .LVU898
 3871 048e 0223     		movs	r3, #2
 3872 0490 1A00     		movs	r2, r3
 3873 0492 3A40     		ands	r2, r7
 3874 0494 9146     		mov	r9, r2
 780:Core/Src/printf.c ****           while (l++ < width) {
 3875              		.loc 1 780 12 view .LVU899
 3876 0496 3B42     		tst	r3, r7
 3877 0498 1DD0     		beq	.L305
 778:Core/Src/printf.c ****         // pre padding
 3878              		.loc 1 778 22 view .LVU900
 3879 049a 0124     		movs	r4, #1
 3880              	.LVL417:
 3881              	.L272:
 786:Core/Src/printf.c ****         // post padding
 3882              		.loc 1 786 9 is_stmt 1 view .LVU901
 786:Core/Src/printf.c ****         // post padding
 3883              		.loc 1 786 19 is_stmt 0 view .LVU902
 3884 049c 1C9B     		ldr	r3, [sp, #112]
 3885 049e 1A1D     		adds	r2, r3, #4
 3886 04a0 1C92     		str	r2, [sp, #112]
 786:Core/Src/printf.c ****         // post padding
 3887              		.loc 1 786 9 view .LVU903
 3888 04a2 6F1C     		adds	r7, r5, #1
 3889              	.LVL418:
 786:Core/Src/printf.c ****         // post padding
 3890              		.loc 1 786 9 view .LVU904
 3891 04a4 1878     		ldrb	r0, [r3]
 3892 04a6 5B46     		mov	r3, fp
 3893 04a8 2A00     		movs	r2, r5
 3894 04aa 4146     		mov	r1, r8
 3895 04ac B047     		blx	r6
 3896              	.LVL419:
 788:Core/Src/printf.c ****           while (l++ < width) {
 3897              		.loc 1 788 9 is_stmt 1 view .LVU905
 788:Core/Src/printf.c ****           while (l++ < width) {
 3898              		.loc 1 788 12 is_stmt 0 view .LVU906
 3899 04ae 4B46     		mov	r3, r9
 3900 04b0 002B     		cmp	r3, #0
 3901 04b2 14D1     		bne	.L329
 3902              	.LVL420:
 3903              	.L275:
 793:Core/Src/printf.c ****         break;
 3904              		.loc 1 793 9 is_stmt 1 view .LVU907
 793:Core/Src/printf.c ****         break;
 3905              		.loc 1 793 15 is_stmt 0 view .LVU908
 3906 04b4 119B     		ldr	r3, [sp, #68]
 3907 04b6 0133     		adds	r3, r3, #1
 3908 04b8 1193     		str	r3, [sp, #68]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 95


 794:Core/Src/printf.c ****       }
 3909              		.loc 1 794 9 is_stmt 1 view .LVU909
 3910 04ba 3D00     		movs	r5, r7
 3911 04bc B0E5     		b	.L293
 3912              	.LVL421:
 3913              	.L273:
 782:Core/Src/printf.c ****           }
 3914              		.loc 1 782 13 view .LVU910
 3915 04be 571C     		adds	r7, r2, #1
 3916              	.LVL422:
 782:Core/Src/printf.c ****           }
 3917              		.loc 1 782 13 is_stmt 0 view .LVU911
 3918 04c0 5B46     		mov	r3, fp
 3919 04c2 4146     		mov	r1, r8
 3920 04c4 2020     		movs	r0, #32
 3921 04c6 B047     		blx	r6
 3922              	.LVL423:
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3923              		.loc 1 781 19 view .LVU912
 3924 04c8 2300     		movs	r3, r4
 782:Core/Src/printf.c ****           }
 3925              		.loc 1 782 13 view .LVU913
 3926 04ca 3A00     		movs	r2, r7
 3927              	.LVL424:
 3928              	.L271:
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3929              		.loc 1 781 22 is_stmt 1 view .LVU914
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3930              		.loc 1 781 19 is_stmt 0 view .LVU915
 3931 04cc 5C1C     		adds	r4, r3, #1
 3932              	.LVL425:
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3933              		.loc 1 781 22 view .LVU916
 3934 04ce 9D42     		cmp	r5, r3
 3935 04d0 F5D8     		bhi	.L273
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3936              		.loc 1 781 22 view .LVU917
 3937 04d2 1500     		movs	r5, r2
 3938 04d4 E2E7     		b	.L272
 3939              	.LVL426:
 3940              	.L305:
 778:Core/Src/printf.c ****         // pre padding
 3941              		.loc 1 778 22 view .LVU918
 3942 04d6 0123     		movs	r3, #1
 3943 04d8 2A00     		movs	r2, r5
 3944 04da 0B9D     		ldr	r5, [sp, #44]
 3945              	.LVL427:
 778:Core/Src/printf.c ****         // pre padding
 3946              		.loc 1 778 22 view .LVU919
 3947 04dc F6E7     		b	.L271
 3948              	.LVL428:
 3949              	.L329:
 778:Core/Src/printf.c ****         // pre padding
 3950              		.loc 1 778 22 view .LVU920
 3951 04de 3A00     		movs	r2, r7
 3952 04e0 B146     		mov	r9, r6
 3953 04e2 0B9E     		ldr	r6, [sp, #44]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 96


 3954              	.LVL429:
 778:Core/Src/printf.c ****         // pre padding
 3955              		.loc 1 778 22 view .LVU921
 3956 04e4 06E0     		b	.L274
 3957              	.LVL430:
 3958              	.L276:
 790:Core/Src/printf.c ****           }
 3959              		.loc 1 790 13 is_stmt 1 view .LVU922
 3960 04e6 571C     		adds	r7, r2, #1
 3961              	.LVL431:
 790:Core/Src/printf.c ****           }
 3962              		.loc 1 790 13 is_stmt 0 view .LVU923
 3963 04e8 5B46     		mov	r3, fp
 3964 04ea 4146     		mov	r1, r8
 3965 04ec 2020     		movs	r0, #32
 3966 04ee C847     		blx	r9
 3967              	.LVL432:
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3968              		.loc 1 789 19 view .LVU924
 3969 04f0 2C00     		movs	r4, r5
 790:Core/Src/printf.c ****           }
 3970              		.loc 1 790 13 view .LVU925
 3971 04f2 3A00     		movs	r2, r7
 3972              	.LVL433:
 3973              	.L274:
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3974              		.loc 1 789 22 is_stmt 1 view .LVU926
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3975              		.loc 1 789 19 is_stmt 0 view .LVU927
 3976 04f4 651C     		adds	r5, r4, #1
 3977              	.LVL434:
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3978              		.loc 1 789 22 view .LVU928
 3979 04f6 A642     		cmp	r6, r4
 3980 04f8 F5D8     		bhi	.L276
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3981              		.loc 1 789 22 view .LVU929
 3982 04fa 1700     		movs	r7, r2
 3983 04fc 4E46     		mov	r6, r9
 3984 04fe D9E7     		b	.L275
 3985              	.LVL435:
 3986              	.L322:
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3987              		.loc 1 789 22 view .LVU930
 3988              	.LBE45:
 3989              	.LBB46:
 798:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 3990              		.loc 1 798 9 is_stmt 1 view .LVU931
 798:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 3991              		.loc 1 798 21 is_stmt 0 view .LVU932
 3992 0500 1C9B     		ldr	r3, [sp, #112]
 3993 0502 1A1D     		adds	r2, r3, #4
 3994 0504 1C92     		str	r2, [sp, #112]
 3995 0506 1B68     		ldr	r3, [r3]
 3996 0508 9A46     		mov	r10, r3
 799:Core/Src/printf.c ****         // pre padding
 3997              		.loc 1 799 9 is_stmt 1 view .LVU933
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 97


 799:Core/Src/printf.c ****         // pre padding
 3998              		.loc 1 799 26 is_stmt 0 view .LVU934
 3999 050a 002C     		cmp	r4, #0
 4000 050c 25D1     		bne	.L277
 4001 050e 0122     		movs	r2, #1
 4002 0510 5242     		rsbs	r2, r2, #0
 4003              	.L278:
 4004 0512 5346     		mov	r3, r10
 4005 0514 01E0     		b	.L279
 4006              	.LVL436:
 4007              	.L281:
 4008              	.LBB47:
 4009              	.LBB48:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 4010              		.loc 1 175 34 is_stmt 1 view .LVU935
 4011 0516 0133     		adds	r3, r3, #1
 4012              	.LVL437:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 4013              		.loc 1 175 30 is_stmt 0 view .LVU936
 4014 0518 0A00     		movs	r2, r1
 4015              	.LVL438:
 4016              	.L279:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 4017              		.loc 1 175 20 is_stmt 1 view .LVU937
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 4018              		.loc 1 175 17 is_stmt 0 view .LVU938
 4019 051a 1978     		ldrb	r1, [r3]
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 4020              		.loc 1 175 20 view .LVU939
 4021 051c 0029     		cmp	r1, #0
 4022 051e 02D0     		beq	.L280
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 4023              		.loc 1 175 30 view .LVU940
 4024 0520 511E     		subs	r1, r2, #1
 4025              	.LVL439:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 4026              		.loc 1 175 20 view .LVU941
 4027 0522 002A     		cmp	r2, #0
 4028 0524 F7D1     		bne	.L281
 4029              	.LVL440:
 4030              	.L280:
 176:Core/Src/printf.c **** }
 4031              		.loc 1 176 3 is_stmt 1 view .LVU942
 176:Core/Src/printf.c **** }
 4032              		.loc 1 176 27 is_stmt 0 view .LVU943
 4033 0526 5246     		mov	r2, r10
 4034 0528 9B1A     		subs	r3, r3, r2
 4035              	.LVL441:
 176:Core/Src/printf.c **** }
 4036              		.loc 1 176 27 view .LVU944
 4037              	.LBE48:
 4038              	.LBE47:
 801:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 4039              		.loc 1 801 9 is_stmt 1 view .LVU945
 801:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 4040              		.loc 1 801 19 is_stmt 0 view .LVU946
 4041 052a 8022     		movs	r2, #128
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 98


 4042 052c D200     		lsls	r2, r2, #3
 4043 052e 3900     		movs	r1, r7
 4044 0530 1140     		ands	r1, r2
 4045 0532 8946     		mov	r9, r1
 801:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 4046              		.loc 1 801 12 view .LVU947
 4047 0534 1742     		tst	r7, r2
 4048 0536 02D0     		beq	.L282
 802:Core/Src/printf.c ****         }
 4049              		.loc 1 802 11 is_stmt 1 view .LVU948
 802:Core/Src/printf.c ****         }
 4050              		.loc 1 802 13 is_stmt 0 view .LVU949
 4051 0538 A342     		cmp	r3, r4
 4052 053a 00D9     		bls	.L282
 4053 053c 2300     		movs	r3, r4
 4054              	.LVL442:
 4055              	.L282:
 804:Core/Src/printf.c ****           while (l++ < width) {
 4056              		.loc 1 804 9 is_stmt 1 view .LVU950
 804:Core/Src/printf.c ****           while (l++ < width) {
 4057              		.loc 1 804 21 is_stmt 0 view .LVU951
 4058 053e 0222     		movs	r2, #2
 4059 0540 1100     		movs	r1, r2
 4060 0542 3940     		ands	r1, r7
 4061 0544 1091     		str	r1, [sp, #64]
 804:Core/Src/printf.c ****           while (l++ < width) {
 4062              		.loc 1 804 12 view .LVU952
 4063 0546 3A42     		tst	r2, r7
 4064 0548 09D0     		beq	.L330
 804:Core/Src/printf.c ****           while (l++ < width) {
 4065              		.loc 1 804 12 view .LVU953
 4066 054a 2A00     		movs	r2, r5
 4067 054c 2500     		movs	r5, r4
 4068              	.LVL443:
 804:Core/Src/printf.c ****           while (l++ < width) {
 4069              		.loc 1 804 12 view .LVU954
 4070 054e 5746     		mov	r7, r10
 4071              	.LVL444:
 804:Core/Src/printf.c ****           while (l++ < width) {
 4072              		.loc 1 804 12 view .LVU955
 4073 0550 9A46     		mov	r10, r3
 4074 0552 3300     		movs	r3, r6
 4075              	.LVL445:
 804:Core/Src/printf.c ****           while (l++ < width) {
 4076              		.loc 1 804 12 view .LVU956
 4077 0554 4E46     		mov	r6, r9
 4078              	.LVL446:
 804:Core/Src/printf.c ****           while (l++ < width) {
 4079              		.loc 1 804 12 view .LVU957
 4080 0556 9946     		mov	r9, r3
 4081 0558 21E0     		b	.L287
 4082              	.LVL447:
 4083              	.L277:
 799:Core/Src/printf.c ****         // pre padding
 4084              		.loc 1 799 26 view .LVU958
 4085 055a 2200     		movs	r2, r4
 4086 055c D9E7     		b	.L278
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 99


 4087              	.LVL448:
 4088              	.L330:
 799:Core/Src/printf.c ****         // pre padding
 4089              		.loc 1 799 26 view .LVU959
 4090 055e 2A00     		movs	r2, r5
 4091 0560 4546     		mov	r5, r8
 4092              	.LVL449:
 799:Core/Src/printf.c ****         // pre padding
 4093              		.loc 1 799 26 view .LVU960
 4094 0562 A046     		mov	r8, r4
 4095              	.LVL450:
 799:Core/Src/printf.c ****         // pre padding
 4096              		.loc 1 799 26 view .LVU961
 4097 0564 06E0     		b	.L284
 4098              	.LVL451:
 4099              	.L286:
 806:Core/Src/printf.c ****           }
 4100              		.loc 1 806 13 is_stmt 1 view .LVU962
 4101 0566 541C     		adds	r4, r2, #1
 4102              	.LVL452:
 806:Core/Src/printf.c ****           }
 4103              		.loc 1 806 13 is_stmt 0 view .LVU963
 4104 0568 5B46     		mov	r3, fp
 4105 056a 2900     		movs	r1, r5
 4106 056c 2020     		movs	r0, #32
 4107 056e B047     		blx	r6
 4108              	.LVL453:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4109              		.loc 1 805 19 view .LVU964
 4110 0570 3B00     		movs	r3, r7
 806:Core/Src/printf.c ****           }
 4111              		.loc 1 806 13 view .LVU965
 4112 0572 2200     		movs	r2, r4
 4113              	.LVL454:
 4114              	.L284:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4115              		.loc 1 805 22 is_stmt 1 view .LVU966
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4116              		.loc 1 805 19 is_stmt 0 view .LVU967
 4117 0574 5F1C     		adds	r7, r3, #1
 4118              	.LVL455:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4119              		.loc 1 805 22 view .LVU968
 4120 0576 0B99     		ldr	r1, [sp, #44]
 4121 0578 9942     		cmp	r1, r3
 4122 057a F4D8     		bhi	.L286
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4123              		.loc 1 805 19 view .LVU969
 4124 057c 4446     		mov	r4, r8
 4125 057e A846     		mov	r8, r5
 4126              	.LVL456:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4127              		.loc 1 805 19 view .LVU970
 4128 0580 3B00     		movs	r3, r7
 4129 0582 2500     		movs	r5, r4
 4130              	.LVL457:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 100


 4131              		.loc 1 805 19 view .LVU971
 4132 0584 5746     		mov	r7, r10
 4133              	.LVL458:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4134              		.loc 1 805 19 view .LVU972
 4135 0586 9A46     		mov	r10, r3
 4136 0588 3300     		movs	r3, r6
 4137              	.LVL459:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4138              		.loc 1 805 19 view .LVU973
 4139 058a 4E46     		mov	r6, r9
 4140              	.LVL460:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4141              		.loc 1 805 19 view .LVU974
 4142 058c 9946     		mov	r9, r3
 4143 058e 06E0     		b	.L287
 4144              	.LVL461:
 4145              	.L306:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4146              		.loc 1 810 69 view .LVU975
 4147 0590 1D00     		movs	r5, r3
 4148              	.LVL462:
 4149              	.L289:
 811:Core/Src/printf.c ****         }
 4150              		.loc 1 811 11 is_stmt 1 view .LVU976
 811:Core/Src/printf.c ****         }
 4151              		.loc 1 811 18 is_stmt 0 view .LVU977
 4152 0592 0137     		adds	r7, r7, #1
 4153              	.LVL463:
 811:Core/Src/printf.c ****         }
 4154              		.loc 1 811 11 view .LVU978
 4155 0594 541C     		adds	r4, r2, #1
 4156              	.LVL464:
 811:Core/Src/printf.c ****         }
 4157              		.loc 1 811 11 view .LVU979
 4158 0596 5B46     		mov	r3, fp
 4159 0598 4146     		mov	r1, r8
 4160 059a C847     		blx	r9
 4161              	.LVL465:
 4162 059c 2200     		movs	r2, r4
 4163              	.LVL466:
 4164              	.L287:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4165              		.loc 1 810 26 is_stmt 1 view .LVU980
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4166              		.loc 1 810 17 is_stmt 0 view .LVU981
 4167 059e 3878     		ldrb	r0, [r7]
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4168              		.loc 1 810 26 view .LVU982
 4169 05a0 0028     		cmp	r0, #0
 4170 05a2 04D0     		beq	.L288
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4171              		.loc 1 810 26 discriminator 1 view .LVU983
 4172 05a4 002E     		cmp	r6, #0
 4173 05a6 F4D0     		beq	.L289
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4174              		.loc 1 810 69 discriminator 2 view .LVU984
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 101


 4175 05a8 6B1E     		subs	r3, r5, #1
 4176              	.LVL467:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4177              		.loc 1 810 57 discriminator 2 view .LVU985
 4178 05aa 002D     		cmp	r5, #0
 4179 05ac F0D1     		bne	.L306
 4180              	.LVL468:
 4181              	.L288:
 814:Core/Src/printf.c ****           while (l++ < width) {
 4182              		.loc 1 814 12 view .LVU986
 4183 05ae 1500     		movs	r5, r2
 4184 05b0 5346     		mov	r3, r10
 4185 05b2 4E46     		mov	r6, r9
 814:Core/Src/printf.c ****           while (l++ < width) {
 4186              		.loc 1 814 9 is_stmt 1 view .LVU987
 814:Core/Src/printf.c ****           while (l++ < width) {
 4187              		.loc 1 814 12 is_stmt 0 view .LVU988
 4188 05b4 109A     		ldr	r2, [sp, #64]
 4189              	.LVL469:
 814:Core/Src/printf.c ****           while (l++ < width) {
 4190              		.loc 1 814 12 view .LVU989
 4191 05b6 002A     		cmp	r2, #0
 4192 05b8 03D1     		bne	.L331
 4193              	.LVL470:
 4194              	.L291:
 819:Core/Src/printf.c ****         break;
 4195              		.loc 1 819 9 is_stmt 1 view .LVU990
 819:Core/Src/printf.c ****         break;
 4196              		.loc 1 819 15 is_stmt 0 view .LVU991
 4197 05ba 119B     		ldr	r3, [sp, #68]
 4198 05bc 0133     		adds	r3, r3, #1
 4199 05be 1193     		str	r3, [sp, #68]
 820:Core/Src/printf.c ****       }
 4200              		.loc 1 820 9 is_stmt 1 view .LVU992
 4201 05c0 2EE5     		b	.L293
 4202              	.LVL471:
 4203              	.L331:
 820:Core/Src/printf.c ****       }
 4204              		.loc 1 820 9 is_stmt 0 view .LVU993
 4205 05c2 0B9F     		ldr	r7, [sp, #44]
 4206              	.LVL472:
 820:Core/Src/printf.c ****       }
 4207              		.loc 1 820 9 view .LVU994
 4208 05c4 2A00     		movs	r2, r5
 4209 05c6 06E0     		b	.L290
 4210              	.LVL473:
 4211              	.L292:
 816:Core/Src/printf.c ****           }
 4212              		.loc 1 816 13 is_stmt 1 view .LVU995
 4213 05c8 551C     		adds	r5, r2, #1
 4214              	.LVL474:
 816:Core/Src/printf.c ****           }
 4215              		.loc 1 816 13 is_stmt 0 view .LVU996
 4216 05ca 5B46     		mov	r3, fp
 4217 05cc 4146     		mov	r1, r8
 4218 05ce 2020     		movs	r0, #32
 4219 05d0 B047     		blx	r6
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 102


 4220              	.LVL475:
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4221              		.loc 1 815 19 view .LVU997
 4222 05d2 2300     		movs	r3, r4
 816:Core/Src/printf.c ****           }
 4223              		.loc 1 816 13 view .LVU998
 4224 05d4 2A00     		movs	r2, r5
 4225              	.LVL476:
 4226              	.L290:
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4227              		.loc 1 815 22 is_stmt 1 view .LVU999
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4228              		.loc 1 815 19 is_stmt 0 view .LVU1000
 4229 05d6 5C1C     		adds	r4, r3, #1
 4230              	.LVL477:
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4231              		.loc 1 815 22 view .LVU1001
 4232 05d8 9F42     		cmp	r7, r3
 4233 05da F5D8     		bhi	.L292
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4234              		.loc 1 815 22 view .LVU1002
 4235 05dc 1500     		movs	r5, r2
 4236 05de ECE7     		b	.L291
 4237              	.LVL478:
 4238              	.L241:
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4239              		.loc 1 815 22 view .LVU1003
 4240              	.LBE46:
 4241              	.LBB49:
 824:Core/Src/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 4242              		.loc 1 824 9 is_stmt 1 view .LVU1004
 825:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4243              		.loc 1 825 9 view .LVU1005
 825:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4244              		.loc 1 825 15 is_stmt 0 view .LVU1006
 4245 05e0 2123     		movs	r3, #33
 4246 05e2 3B43     		orrs	r3, r7
 4247              	.LVL479:
 827:Core/Src/printf.c ****         if (is_ll) {
 4248              		.loc 1 827 9 is_stmt 1 view .LVU1007
 828:Core/Src/printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U,
 4249              		.loc 1 828 9 view .LVU1008
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4250              		.loc 1 833 11 view .LVU1009
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4251              		.loc 1 833 81 is_stmt 0 view .LVU1010
 4252 05e4 1C9A     		ldr	r2, [sp, #112]
 4253 05e6 111D     		adds	r1, r2, #4
 4254 05e8 1C91     		str	r1, [sp, #112]
 4255 05ea 1268     		ldr	r2, [r2]
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4256              		.loc 1 833 17 view .LVU1011
 4257 05ec 0593     		str	r3, [sp, #20]
 4258 05ee 0823     		movs	r3, #8
 4259              	.LVL480:
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4260              		.loc 1 833 17 view .LVU1012
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 103


 4261 05f0 0493     		str	r3, [sp, #16]
 4262 05f2 0394     		str	r4, [sp, #12]
 4263 05f4 0833     		adds	r3, r3, #8
 4264 05f6 0293     		str	r3, [sp, #8]
 4265 05f8 0023     		movs	r3, #0
 4266 05fa 0193     		str	r3, [sp, #4]
 4267 05fc 0092     		str	r2, [sp]
 4268 05fe 5B46     		mov	r3, fp
 4269 0600 2A00     		movs	r2, r5
 4270 0602 4146     		mov	r1, r8
 4271 0604 3000     		movs	r0, r6
 4272 0606 FFF7FEFF 		bl	_ntoa_long
 4273              	.LVL481:
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4274              		.loc 1 833 17 view .LVU1013
 4275 060a 0500     		movs	r5, r0
 4276              	.LVL482:
 837:Core/Src/printf.c ****         break;
 4277              		.loc 1 837 9 is_stmt 1 view .LVU1014
 837:Core/Src/printf.c ****         break;
 4278              		.loc 1 837 15 is_stmt 0 view .LVU1015
 4279 060c 119B     		ldr	r3, [sp, #68]
 4280 060e 0133     		adds	r3, r3, #1
 4281 0610 1193     		str	r3, [sp, #68]
 838:Core/Src/printf.c ****       }
 4282              		.loc 1 838 9 is_stmt 1 view .LVU1016
 4283 0612 05E5     		b	.L293
 4284              	.LVL483:
 4285              	.L247:
 838:Core/Src/printf.c ****       }
 4286              		.loc 1 838 9 is_stmt 0 view .LVU1017
 4287              	.LBE49:
 842:Core/Src/printf.c ****         format++;
 4288              		.loc 1 842 9 is_stmt 1 view .LVU1018
 4289 0614 6C1C     		adds	r4, r5, #1
 4290              	.LVL484:
 842:Core/Src/printf.c ****         format++;
 4291              		.loc 1 842 9 is_stmt 0 view .LVU1019
 4292 0616 5B46     		mov	r3, fp
 4293 0618 2A00     		movs	r2, r5
 4294 061a 4146     		mov	r1, r8
 4295 061c 2520     		movs	r0, #37
 4296 061e B047     		blx	r6
 4297              	.LVL485:
 843:Core/Src/printf.c ****         break;
 4298              		.loc 1 843 9 is_stmt 1 view .LVU1020
 843:Core/Src/printf.c ****         break;
 4299              		.loc 1 843 15 is_stmt 0 view .LVU1021
 4300 0620 119B     		ldr	r3, [sp, #68]
 4301 0622 0133     		adds	r3, r3, #1
 4302 0624 1193     		str	r3, [sp, #68]
 844:Core/Src/printf.c **** 
 4303              		.loc 1 844 9 is_stmt 1 view .LVU1022
 842:Core/Src/printf.c ****         format++;
 4304              		.loc 1 842 9 is_stmt 0 view .LVU1023
 4305 0626 2500     		movs	r5, r4
 844:Core/Src/printf.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 104


 4306              		.loc 1 844 9 view .LVU1024
 4307 0628 FAE4     		b	.L293
 4308              	.LVL486:
 4309              	.L311:
 585:Core/Src/printf.c ****   }
 4310              		.loc 1 585 9 view .LVU1025
 4311 062a 0B4B     		ldr	r3, .L334
 4312              	.LVL487:
 585:Core/Src/printf.c ****   }
 4313              		.loc 1 585 9 view .LVU1026
 4314 062c 9A46     		mov	r10, r3
 4315 062e F5E4     		b	.L211
 4316              	.LVL488:
 4317              	.L312:
 850:Core/Src/printf.c ****     }
 851:Core/Src/printf.c ****   }
 852:Core/Src/printf.c **** 
 853:Core/Src/printf.c ****   // termination
 854:Core/Src/printf.c ****   out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 4318              		.loc 1 854 3 view .LVU1027
 4319 0630 B246     		mov	r10, r6
 4320              		.loc 1 854 3 is_stmt 1 view .LVU1028
 4321 0632 5D45     		cmp	r5, fp
 4322 0634 0DD3     		bcc	.L307
 4323              		.loc 1 854 3 is_stmt 0 discriminator 1 view .LVU1029
 4324 0636 5B46     		mov	r3, fp
 4325 0638 5A1E     		subs	r2, r3, #1
 4326              	.L295:
 4327              		.loc 1 854 3 discriminator 4 view .LVU1030
 4328 063a 5B46     		mov	r3, fp
 4329 063c 4146     		mov	r1, r8
 4330 063e 0020     		movs	r0, #0
 4331 0640 D047     		blx	r10
 4332              	.LVL489:
 855:Core/Src/printf.c **** 
 856:Core/Src/printf.c ****   // return written chars without terminating \0
 857:Core/Src/printf.c ****   return (int)idx;
 4333              		.loc 1 857 3 is_stmt 1 discriminator 4 view .LVU1031
 858:Core/Src/printf.c **** }
 4334              		.loc 1 858 1 is_stmt 0 discriminator 4 view .LVU1032
 4335 0642 2800     		movs	r0, r5
 4336 0644 13B0     		add	sp, sp, #76
 4337              		@ sp needed
 4338              	.LVL490:
 4339              	.LVL491:
 4340              	.LVL492:
 4341              	.LVL493:
 4342              	.LVL494:
 4343              		.loc 1 858 1 discriminator 4 view .LVU1033
 4344 0646 F0BC     		pop	{r4, r5, r6, r7}
 4345 0648 BB46     		mov	fp, r7
 4346 064a B246     		mov	r10, r6
 4347 064c A946     		mov	r9, r5
 4348 064e A046     		mov	r8, r4
 4349 0650 F0BD     		pop	{r4, r5, r6, r7, pc}
 4350              	.LVL495:
 4351              	.L307:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 105


 854:Core/Src/printf.c **** 
 4352              		.loc 1 854 3 view .LVU1034
 4353 0652 2A00     		movs	r2, r5
 4354 0654 F1E7     		b	.L295
 4355              	.L335:
 4356 0656 C046     		.align	2
 4357              	.L334:
 4358 0658 00000000 		.word	_out_null
 4359              		.cfi_endproc
 4360              	.LFE439:
 4362              		.section	.text.printf_,"ax",%progbits
 4363              		.align	1
 4364              		.global	printf_
 4365              		.syntax unified
 4366              		.code	16
 4367              		.thumb_func
 4369              	printf_:
 4370              	.LVL496:
 4371              	.LFB440:
 859:Core/Src/printf.c **** 
 860:Core/Src/printf.c **** 
 861:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
 862:Core/Src/printf.c **** 
 863:Core/Src/printf.c **** int printf_(const char* format, ...)
 864:Core/Src/printf.c **** {
 4372              		.loc 1 864 1 is_stmt 1 view -0
 4373              		.cfi_startproc
 4374              		@ args = 4, pretend = 16, frame = 8
 4375              		@ frame_needed = 0, uses_anonymous_args = 1
 4376              		.loc 1 864 1 is_stmt 0 view .LVU1036
 4377 0000 0FB4     		push	{r0, r1, r2, r3}
 4378              	.LCFI22:
 4379              		.cfi_def_cfa_offset 16
 4380 0002 00B5     		push	{lr}
 4381              	.LCFI23:
 4382              		.cfi_def_cfa_offset 20
 4383              		.cfi_offset 14, -20
 4384 0004 85B0     		sub	sp, sp, #20
 4385              	.LCFI24:
 4386              		.cfi_def_cfa_offset 40
 4387 0006 06A9     		add	r1, sp, #24
 4388 0008 08C9     		ldmia	r1!, {r3}
 865:Core/Src/printf.c ****   va_list va;
 4389              		.loc 1 865 3 is_stmt 1 view .LVU1037
 866:Core/Src/printf.c ****   va_start(va, format);
 4390              		.loc 1 866 3 view .LVU1038
 4391 000a 0391     		str	r1, [sp, #12]
 867:Core/Src/printf.c ****   char buffer[1];
 4392              		.loc 1 867 3 view .LVU1039
 868:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 4393              		.loc 1 868 3 view .LVU1040
 4394              		.loc 1 868 19 is_stmt 0 view .LVU1041
 4395 000c 0122     		movs	r2, #1
 4396 000e 0548     		ldr	r0, .L337
 4397 0010 0091     		str	r1, [sp]
 4398 0012 5242     		rsbs	r2, r2, #0
 4399 0014 02A9     		add	r1, sp, #8
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 106


 4400 0016 FFF7FEFF 		bl	_vsnprintf
 4401              	.LVL497:
 869:Core/Src/printf.c ****   va_end(va);
 4402              		.loc 1 869 3 is_stmt 1 view .LVU1042
 870:Core/Src/printf.c ****   return ret;
 4403              		.loc 1 870 3 view .LVU1043
 871:Core/Src/printf.c **** }
 4404              		.loc 1 871 1 is_stmt 0 view .LVU1044
 4405 001a 05B0     		add	sp, sp, #20
 4406              		@ sp needed
 4407 001c 08BC     		pop	{r3}
 4408 001e 04B0     		add	sp, sp, #16
 4409 0020 1847     		bx	r3
 4410              	.L338:
 4411 0022 C046     		.align	2
 4412              	.L337:
 4413 0024 00000000 		.word	_out_char
 4414              		.cfi_endproc
 4415              	.LFE440:
 4417              		.section	.text.sprintf_,"ax",%progbits
 4418              		.align	1
 4419              		.global	sprintf_
 4420              		.syntax unified
 4421              		.code	16
 4422              		.thumb_func
 4424              	sprintf_:
 4425              	.LVL498:
 4426              	.LFB441:
 872:Core/Src/printf.c **** 
 873:Core/Src/printf.c **** 
 874:Core/Src/printf.c **** int sprintf_(char* buffer, const char* format, ...)
 875:Core/Src/printf.c **** {
 4427              		.loc 1 875 1 is_stmt 1 view -0
 4428              		.cfi_startproc
 4429              		@ args = 4, pretend = 12, frame = 8
 4430              		@ frame_needed = 0, uses_anonymous_args = 1
 4431              		.loc 1 875 1 is_stmt 0 view .LVU1046
 4432 0000 0EB4     		push	{r1, r2, r3}
 4433              	.LCFI25:
 4434              		.cfi_def_cfa_offset 12
 4435 0002 30B5     		push	{r4, r5, lr}
 4436              	.LCFI26:
 4437              		.cfi_def_cfa_offset 24
 4438              		.cfi_offset 4, -24
 4439              		.cfi_offset 5, -20
 4440              		.cfi_offset 14, -16
 4441 0004 84B0     		sub	sp, sp, #16
 4442              	.LCFI27:
 4443              		.cfi_def_cfa_offset 40
 4444 0006 0100     		movs	r1, r0
 4445 0008 07AC     		add	r4, sp, #28
 4446 000a 08CC     		ldmia	r4!, {r3}
 876:Core/Src/printf.c ****   va_list va;
 4447              		.loc 1 876 3 is_stmt 1 view .LVU1047
 877:Core/Src/printf.c ****   va_start(va, format);
 4448              		.loc 1 877 3 view .LVU1048
 4449 000c 0394     		str	r4, [sp, #12]
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 107


 878:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
 4450              		.loc 1 878 3 view .LVU1049
 4451              		.loc 1 878 19 is_stmt 0 view .LVU1050
 4452 000e 0122     		movs	r2, #1
 4453 0010 054D     		ldr	r5, .L340
 4454 0012 0094     		str	r4, [sp]
 4455 0014 5242     		rsbs	r2, r2, #0
 4456 0016 2800     		movs	r0, r5
 4457              	.LVL499:
 4458              		.loc 1 878 19 view .LVU1051
 4459 0018 FFF7FEFF 		bl	_vsnprintf
 4460              	.LVL500:
 879:Core/Src/printf.c ****   va_end(va);
 4461              		.loc 1 879 3 is_stmt 1 view .LVU1052
 880:Core/Src/printf.c ****   return ret;
 4462              		.loc 1 880 3 view .LVU1053
 881:Core/Src/printf.c **** }
 4463              		.loc 1 881 1 is_stmt 0 view .LVU1054
 4464 001c 04B0     		add	sp, sp, #16
 4465              		@ sp needed
 4466 001e 30BC     		pop	{r4, r5}
 4467 0020 08BC     		pop	{r3}
 4468 0022 03B0     		add	sp, sp, #12
 4469 0024 1847     		bx	r3
 4470              	.L341:
 4471 0026 C046     		.align	2
 4472              	.L340:
 4473 0028 00000000 		.word	_out_buffer
 4474              		.cfi_endproc
 4475              	.LFE441:
 4477              		.section	.text.snprintf_,"ax",%progbits
 4478              		.align	1
 4479              		.global	snprintf_
 4480              		.syntax unified
 4481              		.code	16
 4482              		.thumb_func
 4484              	snprintf_:
 4485              	.LVL501:
 4486              	.LFB442:
 882:Core/Src/printf.c **** 
 883:Core/Src/printf.c **** 
 884:Core/Src/printf.c **** int snprintf_(char* buffer, size_t count, const char* format, ...)
 885:Core/Src/printf.c **** {
 4487              		.loc 1 885 1 is_stmt 1 view -0
 4488              		.cfi_startproc
 4489              		@ args = 4, pretend = 8, frame = 8
 4490              		@ frame_needed = 0, uses_anonymous_args = 1
 4491              		.loc 1 885 1 is_stmt 0 view .LVU1056
 4492 0000 0CB4     		push	{r2, r3}
 4493              	.LCFI28:
 4494              		.cfi_def_cfa_offset 8
 4495 0002 30B5     		push	{r4, r5, lr}
 4496              	.LCFI29:
 4497              		.cfi_def_cfa_offset 20
 4498              		.cfi_offset 4, -20
 4499              		.cfi_offset 5, -16
 4500              		.cfi_offset 14, -12
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 108


 4501 0004 85B0     		sub	sp, sp, #20
 4502              	.LCFI30:
 4503              		.cfi_def_cfa_offset 40
 4504 0006 0A00     		movs	r2, r1
 4505 0008 08AC     		add	r4, sp, #32
 4506 000a 08CC     		ldmia	r4!, {r3}
 886:Core/Src/printf.c ****   va_list va;
 4507              		.loc 1 886 3 is_stmt 1 view .LVU1057
 887:Core/Src/printf.c ****   va_start(va, format);
 4508              		.loc 1 887 3 view .LVU1058
 4509 000c 0394     		str	r4, [sp, #12]
 888:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 4510              		.loc 1 888 3 view .LVU1059
 4511              		.loc 1 888 19 is_stmt 0 view .LVU1060
 4512 000e 054D     		ldr	r5, .L343
 4513 0010 0094     		str	r4, [sp]
 4514 0012 0100     		movs	r1, r0
 4515              	.LVL502:
 4516              		.loc 1 888 19 view .LVU1061
 4517 0014 2800     		movs	r0, r5
 4518              	.LVL503:
 4519              		.loc 1 888 19 view .LVU1062
 4520 0016 FFF7FEFF 		bl	_vsnprintf
 4521              	.LVL504:
 889:Core/Src/printf.c ****   va_end(va);
 4522              		.loc 1 889 3 is_stmt 1 view .LVU1063
 890:Core/Src/printf.c ****   return ret;
 4523              		.loc 1 890 3 view .LVU1064
 891:Core/Src/printf.c **** }
 4524              		.loc 1 891 1 is_stmt 0 view .LVU1065
 4525 001a 05B0     		add	sp, sp, #20
 4526              		@ sp needed
 4527 001c 30BC     		pop	{r4, r5}
 4528 001e 08BC     		pop	{r3}
 4529 0020 02B0     		add	sp, sp, #8
 4530 0022 1847     		bx	r3
 4531              	.L344:
 4532              		.align	2
 4533              	.L343:
 4534 0024 00000000 		.word	_out_buffer
 4535              		.cfi_endproc
 4536              	.LFE442:
 4538              		.section	.text.vprintf_,"ax",%progbits
 4539              		.align	1
 4540              		.global	vprintf_
 4541              		.syntax unified
 4542              		.code	16
 4543              		.thumb_func
 4545              	vprintf_:
 4546              	.LVL505:
 4547              	.LFB443:
 892:Core/Src/printf.c **** 
 893:Core/Src/printf.c **** 
 894:Core/Src/printf.c **** int vprintf_(const char* format, va_list va)
 895:Core/Src/printf.c **** {
 4548              		.loc 1 895 1 is_stmt 1 view -0
 4549              		.cfi_startproc
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 109


 4550              		@ args = 0, pretend = 0, frame = 8
 4551              		@ frame_needed = 0, uses_anonymous_args = 0
 4552              		.loc 1 895 1 is_stmt 0 view .LVU1067
 4553 0000 10B5     		push	{r4, lr}
 4554              	.LCFI31:
 4555              		.cfi_def_cfa_offset 8
 4556              		.cfi_offset 4, -8
 4557              		.cfi_offset 14, -4
 4558 0002 84B0     		sub	sp, sp, #16
 4559              	.LCFI32:
 4560              		.cfi_def_cfa_offset 24
 4561 0004 0300     		movs	r3, r0
 896:Core/Src/printf.c ****   char buffer[1];
 4562              		.loc 1 896 3 is_stmt 1 view .LVU1068
 897:Core/Src/printf.c ****   return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 4563              		.loc 1 897 3 view .LVU1069
 4564              		.loc 1 897 10 is_stmt 0 view .LVU1070
 4565 0006 0122     		movs	r2, #1
 4566 0008 044C     		ldr	r4, .L346
 4567 000a 0091     		str	r1, [sp]
 4568 000c 5242     		rsbs	r2, r2, #0
 4569 000e 03A9     		add	r1, sp, #12
 4570              	.LVL506:
 4571              		.loc 1 897 10 view .LVU1071
 4572 0010 2000     		movs	r0, r4
 4573              	.LVL507:
 4574              		.loc 1 897 10 view .LVU1072
 4575 0012 FFF7FEFF 		bl	_vsnprintf
 4576              	.LVL508:
 898:Core/Src/printf.c **** }
 4577              		.loc 1 898 1 view .LVU1073
 4578 0016 04B0     		add	sp, sp, #16
 4579              		@ sp needed
 4580 0018 10BD     		pop	{r4, pc}
 4581              	.L347:
 4582 001a C046     		.align	2
 4583              	.L346:
 4584 001c 00000000 		.word	_out_char
 4585              		.cfi_endproc
 4586              	.LFE443:
 4588              		.section	.text.vsnprintf_,"ax",%progbits
 4589              		.align	1
 4590              		.global	vsnprintf_
 4591              		.syntax unified
 4592              		.code	16
 4593              		.thumb_func
 4595              	vsnprintf_:
 4596              	.LVL509:
 4597              	.LFB444:
 899:Core/Src/printf.c **** 
 900:Core/Src/printf.c **** 
 901:Core/Src/printf.c **** int vsnprintf_(char* buffer, size_t count, const char* format, va_list va)
 902:Core/Src/printf.c **** {
 4598              		.loc 1 902 1 is_stmt 1 view -0
 4599              		.cfi_startproc
 4600              		@ args = 0, pretend = 0, frame = 0
 4601              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 110


 4602              		.loc 1 902 1 is_stmt 0 view .LVU1075
 4603 0000 10B5     		push	{r4, lr}
 4604              	.LCFI33:
 4605              		.cfi_def_cfa_offset 8
 4606              		.cfi_offset 4, -8
 4607              		.cfi_offset 14, -4
 4608 0002 82B0     		sub	sp, sp, #8
 4609              	.LCFI34:
 4610              		.cfi_def_cfa_offset 16
 903:Core/Src/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 4611              		.loc 1 903 3 is_stmt 1 view .LVU1076
 4612              		.loc 1 903 10 is_stmt 0 view .LVU1077
 4613 0004 044C     		ldr	r4, .L349
 4614 0006 0093     		str	r3, [sp]
 4615 0008 1300     		movs	r3, r2
 4616              	.LVL510:
 4617              		.loc 1 903 10 view .LVU1078
 4618 000a 0A00     		movs	r2, r1
 4619              	.LVL511:
 4620              		.loc 1 903 10 view .LVU1079
 4621 000c 0100     		movs	r1, r0
 4622              	.LVL512:
 4623              		.loc 1 903 10 view .LVU1080
 4624 000e 2000     		movs	r0, r4
 4625              	.LVL513:
 4626              		.loc 1 903 10 view .LVU1081
 4627 0010 FFF7FEFF 		bl	_vsnprintf
 4628              	.LVL514:
 904:Core/Src/printf.c **** }
 4629              		.loc 1 904 1 view .LVU1082
 4630 0014 02B0     		add	sp, sp, #8
 4631              		@ sp needed
 4632 0016 10BD     		pop	{r4, pc}
 4633              	.L350:
 4634              		.align	2
 4635              	.L349:
 4636 0018 00000000 		.word	_out_buffer
 4637              		.cfi_endproc
 4638              	.LFE444:
 4640              		.section	.text.fctprintf,"ax",%progbits
 4641              		.align	1
 4642              		.global	fctprintf
 4643              		.syntax unified
 4644              		.code	16
 4645              		.thumb_func
 4647              	fctprintf:
 4648              	.LVL515:
 4649              	.LFB445:
 905:Core/Src/printf.c **** 
 906:Core/Src/printf.c **** 
 907:Core/Src/printf.c **** int fctprintf(void (*out)(char character, void* arg), void* arg, const char* format, ...)
 908:Core/Src/printf.c **** {
 4650              		.loc 1 908 1 is_stmt 1 view -0
 4651              		.cfi_startproc
 4652              		@ args = 4, pretend = 8, frame = 16
 4653              		@ frame_needed = 0, uses_anonymous_args = 1
 4654              		.loc 1 908 1 is_stmt 0 view .LVU1084
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 111


 4655 0000 0CB4     		push	{r2, r3}
 4656              	.LCFI35:
 4657              		.cfi_def_cfa_offset 8
 4658 0002 10B5     		push	{r4, lr}
 4659              	.LCFI36:
 4660              		.cfi_def_cfa_offset 16
 4661              		.cfi_offset 4, -16
 4662              		.cfi_offset 14, -12
 4663 0004 86B0     		sub	sp, sp, #24
 4664              	.LCFI37:
 4665              		.cfi_def_cfa_offset 40
 4666 0006 08AC     		add	r4, sp, #32
 4667 0008 08CC     		ldmia	r4!, {r3}
 909:Core/Src/printf.c ****   va_list va;
 4668              		.loc 1 909 3 is_stmt 1 view .LVU1085
 910:Core/Src/printf.c ****   va_start(va, format);
 4669              		.loc 1 910 3 view .LVU1086
 4670 000a 0594     		str	r4, [sp, #20]
 911:Core/Src/printf.c ****   const out_fct_wrap_type out_fct_wrap = { out, arg };
 4671              		.loc 1 911 3 view .LVU1087
 4672              		.loc 1 911 27 is_stmt 0 view .LVU1088
 4673 000c 0390     		str	r0, [sp, #12]
 4674 000e 0491     		str	r1, [sp, #16]
 912:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 4675              		.loc 1 912 3 is_stmt 1 view .LVU1089
 4676              		.loc 1 912 19 is_stmt 0 view .LVU1090
 4677 0010 0122     		movs	r2, #1
 4678 0012 0548     		ldr	r0, .L352
 4679              	.LVL516:
 4680              		.loc 1 912 19 view .LVU1091
 4681 0014 0094     		str	r4, [sp]
 4682 0016 5242     		rsbs	r2, r2, #0
 4683 0018 03A9     		add	r1, sp, #12
 4684              	.LVL517:
 4685              		.loc 1 912 19 view .LVU1092
 4686 001a FFF7FEFF 		bl	_vsnprintf
 4687              	.LVL518:
 913:Core/Src/printf.c ****   va_end(va);
 4688              		.loc 1 913 3 is_stmt 1 view .LVU1093
 914:Core/Src/printf.c ****   return ret;
 4689              		.loc 1 914 3 view .LVU1094
 915:Core/Src/printf.c **** }
 4690              		.loc 1 915 1 is_stmt 0 view .LVU1095
 4691 001e 06B0     		add	sp, sp, #24
 4692              		@ sp needed
 4693 0020 10BC     		pop	{r4}
 4694 0022 08BC     		pop	{r3}
 4695 0024 02B0     		add	sp, sp, #8
 4696 0026 1847     		bx	r3
 4697              	.L353:
 4698              		.align	2
 4699              	.L352:
 4700 0028 00000000 		.word	_out_fct
 4701              		.cfi_endproc
 4702              	.LFE445:
 4704              		.section	.text._putchar,"ax",%progbits
 4705              		.align	1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 112


 4706              		.global	_putchar
 4707              		.syntax unified
 4708              		.code	16
 4709              		.thumb_func
 4711              	_putchar:
 4712              	.LFB446:
 916:Core/Src/printf.c **** 
 917:Core/Src/printf.c **** 
 918:Core/Src/printf.c **** void _putchar(char character) {
 4713              		.loc 1 918 31 is_stmt 1 view -0
 4714              		.cfi_startproc
 4715              		@ args = 0, pretend = 0, frame = 0
 4716              		@ frame_needed = 0, uses_anonymous_args = 0
 4717              		@ link register save eliminated.
 4718              	.LVL519:
 4719              	.L355:
 919:Core/Src/printf.c **** 	/* Place your implementation of fputc here */
 920:Core/Src/printf.c **** 	/* e.g. write a character to the USART1 and Loop until the end of transmission */
 921:Core/Src/printf.c **** 	while( !( USART2->ISR & USART_ISR_TXE_TXFNF ) ) {};
 4720              		.loc 1 921 51 discriminator 1 view .LVU1097
 4721              		.loc 1 921 9 discriminator 1 view .LVU1098
 4722              		.loc 1 921 18 is_stmt 0 discriminator 1 view .LVU1099
 4723 0000 034B     		ldr	r3, .L357
 4724 0002 DB69     		ldr	r3, [r3, #28]
 4725              		.loc 1 921 9 discriminator 1 view .LVU1100
 4726 0004 1B06     		lsls	r3, r3, #24
 4727 0006 FBD5     		bpl	.L355
 4728              		.loc 1 921 52 is_stmt 1 discriminator 2 view .LVU1101
 922:Core/Src/printf.c ****       USART2->TDR = character;
 4729              		.loc 1 922 7 discriminator 2 view .LVU1102
 4730              		.loc 1 922 19 is_stmt 0 discriminator 2 view .LVU1103
 4731 0008 014B     		ldr	r3, .L357
 4732 000a 9862     		str	r0, [r3, #40]
 923:Core/Src/printf.c **** 		
 924:Core/Src/printf.c **** }
 4733              		.loc 1 924 1 discriminator 2 view .LVU1104
 4734              		@ sp needed
 4735 000c 7047     		bx	lr
 4736              	.L358:
 4737 000e C046     		.align	2
 4738              	.L357:
 4739 0010 00440040 		.word	1073759232
 4740              		.cfi_endproc
 4741              	.LFE446:
 4743              		.section	.text._out_char,"ax",%progbits
 4744              		.align	1
 4745              		.syntax unified
 4746              		.code	16
 4747              		.thumb_func
 4749              	_out_char:
 4750              	.LVL520:
 4751              	.LFB428:
 151:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 4752              		.loc 1 151 1 is_stmt 1 view -0
 4753              		.cfi_startproc
 4754              		@ args = 0, pretend = 0, frame = 0
 4755              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 113


 151:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 4756              		.loc 1 151 1 is_stmt 0 view .LVU1106
 4757 0000 10B5     		push	{r4, lr}
 4758              	.LCFI38:
 4759              		.cfi_def_cfa_offset 8
 4760              		.cfi_offset 4, -8
 4761              		.cfi_offset 14, -4
 152:Core/Src/printf.c ****   if (character) {
 4762              		.loc 1 152 3 is_stmt 1 view .LVU1107
 152:Core/Src/printf.c ****   if (character) {
 4763              		.loc 1 152 17 view .LVU1108
 152:Core/Src/printf.c ****   if (character) {
 4764              		.loc 1 152 28 view .LVU1109
 153:Core/Src/printf.c ****     _putchar(character);
 4765              		.loc 1 153 3 view .LVU1110
 153:Core/Src/printf.c ****     _putchar(character);
 4766              		.loc 1 153 6 is_stmt 0 view .LVU1111
 4767 0002 0028     		cmp	r0, #0
 4768 0004 00D1     		bne	.L361
 4769              	.LVL521:
 4770              	.L359:
 156:Core/Src/printf.c **** 
 4771              		.loc 1 156 1 view .LVU1112
 4772              		@ sp needed
 4773 0006 10BD     		pop	{r4, pc}
 4774              	.LVL522:
 4775              	.L361:
 154:Core/Src/printf.c ****   }
 4776              		.loc 1 154 5 is_stmt 1 view .LVU1113
 4777 0008 FFF7FEFF 		bl	_putchar
 4778              	.LVL523:
 156:Core/Src/printf.c **** 
 4779              		.loc 1 156 1 is_stmt 0 view .LVU1114
 4780 000c FBE7     		b	.L359
 4781              		.cfi_endproc
 4782              	.LFE428:
 4784              		.section	.rodata.pow10.0,"a"
 4785              		.align	3
 4788              	pow10.0:
 4789 0000 00000000 		.word	0
 4790 0004 0000F03F 		.word	1072693248
 4791 0008 00000000 		.word	0
 4792 000c 00002440 		.word	1076101120
 4793 0010 00000000 		.word	0
 4794 0014 00005940 		.word	1079574528
 4795 0018 00000000 		.word	0
 4796 001c 00408F40 		.word	1083129856
 4797 0020 00000000 		.word	0
 4798 0024 0088C340 		.word	1086556160
 4799 0028 00000000 		.word	0
 4800 002c 006AF840 		.word	1090021888
 4801 0030 00000000 		.word	0
 4802 0034 80842E41 		.word	1093567616
 4803 0038 00000000 		.word	0
 4804 003c D0126341 		.word	1097011920
 4805 0040 00000000 		.word	0
 4806 0044 84D79741 		.word	1100470148
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 114


 4807 0048 00000000 		.word	0
 4808 004c 65CDCD41 		.word	1104006501
 4809              		.text
 4810              	.Letext0:
 4811              		.file 2 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 4812              		.file 3 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 4813              		.file 4 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/inc
 4814              		.file 5 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/inc
 4815              		.file 6 "Drivers/CMSIS/Device/ST/STM32U0xx/Include/stm32u073xx.h"
 4816              		.file 7 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_dma.h"
 4817              		.file 8 "<built-in>"
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 115


DEFINED SYMBOLS
                            *ABS*:00000000 printf.c
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:19     .text._out_buffer:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:24     .text._out_buffer:00000000 _out_buffer
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:47     .text._out_null:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:52     .text._out_null:00000000 _out_null
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:71     .text._out_fct:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:76     .text._out_fct:00000000 _out_fct
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:113    .text._atoi:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:118    .text._atoi:00000000 _atoi
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:185    .text._out_rev:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:190    .text._out_rev:00000000 _out_rev
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:380    .text._ntoa_format:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:385    .text._ntoa_format:00000000 _ntoa_format
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:698    .text._ntoa_long:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:703    .text._ntoa_long:00000000 _ntoa_long
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:901    .text._ntoa_long_long:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:906    .text._ntoa_long_long:00000000 _ntoa_long_long
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:1174   .text._etoa:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:1179   .text._etoa:00000000 _etoa
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:1948   .text._ftoa:00000000 _ftoa
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:1871   .text._etoa:00000388 $d
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:1900   .text._etoa:000003f0 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:1925   .rodata._ftoa.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:1943   .text._ftoa:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:2646   .text._ftoa:00000324 $d
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4788   .rodata.pow10.0:00000000 pow10.0
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:2660   .text._vsnprintf:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:2665   .text._vsnprintf:00000000 _vsnprintf
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:2875   .rodata._vsnprintf:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:3699   .text._vsnprintf:000003ac $d
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:3707   .text._vsnprintf:000003bc $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4358   .text._vsnprintf:00000658 $d
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4363   .text.printf_:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4369   .text.printf_:00000000 printf_
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4413   .text.printf_:00000024 $d
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4749   .text._out_char:00000000 _out_char
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4418   .text.sprintf_:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4424   .text.sprintf_:00000000 sprintf_
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4473   .text.sprintf_:00000028 $d
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4478   .text.snprintf_:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4484   .text.snprintf_:00000000 snprintf_
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4534   .text.snprintf_:00000024 $d
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4539   .text.vprintf_:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4545   .text.vprintf_:00000000 vprintf_
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4584   .text.vprintf_:0000001c $d
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4589   .text.vsnprintf_:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4595   .text.vsnprintf_:00000000 vsnprintf_
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4636   .text.vsnprintf_:00000018 $d
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4641   .text.fctprintf:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4647   .text.fctprintf:00000000 fctprintf
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4700   .text.fctprintf:00000028 $d
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4705   .text._putchar:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4711   .text._putchar:00000000 _putchar
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4739   .text._putchar:00000010 $d
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4744   .text._out_char:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s:4785   .rodata.pow10.0:00000000 $d
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccdI5zyf.s 			page 116



UNDEFINED SYMBOLS
__aeabi_uidivmod
__aeabi_uidiv
__aeabi_uldivmod
__aeabi_dcmpeq
__aeabi_dcmpgt
__aeabi_dcmplt
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_dsub
__aeabi_d2iz
__aeabi_ddiv
__aeabi_dcmpge
__aeabi_d2uiz
__aeabi_ui2d
__aeabi_dcmple
__aeabi_idivmod
__aeabi_idiv
