ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"printf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/printf.c"
  18              		.section	.text._out_buffer,"ax",%progbits
  19              		.align	1
  20              		.p2align 2,,3
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_out_buffer:
  26              	.LVL0:
  27              	.LFB1425:
   1:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
   2:Core/Src/printf.c **** // \author (c) Marco Paland (info@paland.com)
   3:Core/Src/printf.c **** //             2014-2019, PALANDesign Hannover, Germany
   4:Core/Src/printf.c **** //
   5:Core/Src/printf.c **** // \license The MIT License (MIT)
   6:Core/Src/printf.c **** //
   7:Core/Src/printf.c **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   8:Core/Src/printf.c **** // of this software and associated documentation files (the "Software"), to deal
   9:Core/Src/printf.c **** // in the Software without restriction, including without limitation the rights
  10:Core/Src/printf.c **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:Core/Src/printf.c **** // copies of the Software, and to permit persons to whom the Software is
  12:Core/Src/printf.c **** // furnished to do so, subject to the following conditions:
  13:Core/Src/printf.c **** //
  14:Core/Src/printf.c **** // The above copyright notice and this permission notice shall be included in
  15:Core/Src/printf.c **** // all copies or substantial portions of the Software.
  16:Core/Src/printf.c **** //
  17:Core/Src/printf.c **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Core/Src/printf.c **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:Core/Src/printf.c **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:Core/Src/printf.c **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:Core/Src/printf.c **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:Core/Src/printf.c **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  23:Core/Src/printf.c **** // THE SOFTWARE.
  24:Core/Src/printf.c **** //
  25:Core/Src/printf.c **** // \brief Tiny printf, sprintf and (v)snprintf implementation, optimized for speed on
  26:Core/Src/printf.c **** //        embedded systems with a very limited resources. These routines are thread
  27:Core/Src/printf.c **** //        safe and reentrant!
  28:Core/Src/printf.c **** //        Use this instead of the bloated standard/newlib printf cause these use
  29:Core/Src/printf.c **** //        malloc for printf (and may not be thread safe).
  30:Core/Src/printf.c **** //
  31:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 2


  32:Core/Src/printf.c **** 
  33:Core/Src/printf.c **** #include <stdbool.h>
  34:Core/Src/printf.c **** #include <stdint.h>
  35:Core/Src/printf.c **** 
  36:Core/Src/printf.c **** #include "printf.h"
  37:Core/Src/printf.c **** #include "main.h"
  38:Core/Src/printf.c **** 
  39:Core/Src/printf.c **** 
  40:Core/Src/printf.c **** // define this globally (e.g. gcc -DPRINTF_INCLUDE_CONFIG_H ...) to include the
  41:Core/Src/printf.c **** // printf_config.h header file
  42:Core/Src/printf.c **** // default: undefined
  43:Core/Src/printf.c **** #ifdef PRINTF_INCLUDE_CONFIG_H
  44:Core/Src/printf.c **** #include "printf_config.h"
  45:Core/Src/printf.c **** #endif
  46:Core/Src/printf.c **** 
  47:Core/Src/printf.c **** 
  48:Core/Src/printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  49:Core/Src/printf.c **** // numeric number including padded zeros (dynamically created on stack)
  50:Core/Src/printf.c **** // default: 32 byte
  51:Core/Src/printf.c **** #ifndef PRINTF_NTOA_BUFFER_SIZE
  52:Core/Src/printf.c **** #define PRINTF_NTOA_BUFFER_SIZE    32U
  53:Core/Src/printf.c **** #endif
  54:Core/Src/printf.c **** 
  55:Core/Src/printf.c **** // 'ftoa' conversion buffer size, this must be big enough to hold one converted
  56:Core/Src/printf.c **** // float number including padded zeros (dynamically created on stack)
  57:Core/Src/printf.c **** // default: 32 byte
  58:Core/Src/printf.c **** #ifndef PRINTF_FTOA_BUFFER_SIZE
  59:Core/Src/printf.c **** #define PRINTF_FTOA_BUFFER_SIZE    32U
  60:Core/Src/printf.c **** #endif
  61:Core/Src/printf.c **** 
  62:Core/Src/printf.c **** // support for the floating point type (%f)
  63:Core/Src/printf.c **** // default: activated
  64:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_FLOAT
  65:Core/Src/printf.c **** #define PRINTF_SUPPORT_FLOAT
  66:Core/Src/printf.c **** #endif
  67:Core/Src/printf.c **** 
  68:Core/Src/printf.c **** // support for exponential floating point notation (%e/%g)
  69:Core/Src/printf.c **** // default: activated
  70:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_EXPONENTIAL
  71:Core/Src/printf.c **** #define PRINTF_SUPPORT_EXPONENTIAL
  72:Core/Src/printf.c **** #endif
  73:Core/Src/printf.c **** 
  74:Core/Src/printf.c **** // define the default floating point precision
  75:Core/Src/printf.c **** // default: 6 digits
  76:Core/Src/printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
  77:Core/Src/printf.c **** #define PRINTF_DEFAULT_FLOAT_PRECISION  6U
  78:Core/Src/printf.c **** #endif
  79:Core/Src/printf.c **** 
  80:Core/Src/printf.c **** // define the largest float suitable to print with %f
  81:Core/Src/printf.c **** // default: 1e9
  82:Core/Src/printf.c **** #ifndef PRINTF_MAX_FLOAT
  83:Core/Src/printf.c **** #define PRINTF_MAX_FLOAT  1e9
  84:Core/Src/printf.c **** #endif
  85:Core/Src/printf.c **** 
  86:Core/Src/printf.c **** // support for the long long types (%llu or %p)
  87:Core/Src/printf.c **** // default: activated
  88:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_LONG_LONG
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 3


  89:Core/Src/printf.c **** #define PRINTF_SUPPORT_LONG_LONG
  90:Core/Src/printf.c **** #endif
  91:Core/Src/printf.c **** 
  92:Core/Src/printf.c **** // support for the ptrdiff_t type (%t)
  93:Core/Src/printf.c **** // ptrdiff_t is normally defined in <stddef.h> as long or long long type
  94:Core/Src/printf.c **** // default: activated
  95:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_PTRDIFF_T
  96:Core/Src/printf.c **** #define PRINTF_SUPPORT_PTRDIFF_T
  97:Core/Src/printf.c **** #endif
  98:Core/Src/printf.c **** 
  99:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
 100:Core/Src/printf.c **** 
 101:Core/Src/printf.c **** // internal flag definitions
 102:Core/Src/printf.c **** #define FLAGS_ZEROPAD   (1U <<  0U)
 103:Core/Src/printf.c **** #define FLAGS_LEFT      (1U <<  1U)
 104:Core/Src/printf.c **** #define FLAGS_PLUS      (1U <<  2U)
 105:Core/Src/printf.c **** #define FLAGS_SPACE     (1U <<  3U)
 106:Core/Src/printf.c **** #define FLAGS_HASH      (1U <<  4U)
 107:Core/Src/printf.c **** #define FLAGS_UPPERCASE (1U <<  5U)
 108:Core/Src/printf.c **** #define FLAGS_CHAR      (1U <<  6U)
 109:Core/Src/printf.c **** #define FLAGS_SHORT     (1U <<  7U)
 110:Core/Src/printf.c **** #define FLAGS_LONG      (1U <<  8U)
 111:Core/Src/printf.c **** #define FLAGS_LONG_LONG (1U <<  9U)
 112:Core/Src/printf.c **** #define FLAGS_PRECISION (1U << 10U)
 113:Core/Src/printf.c **** #define FLAGS_ADAPT_EXP (1U << 11U)
 114:Core/Src/printf.c **** 
 115:Core/Src/printf.c **** 
 116:Core/Src/printf.c **** // import float.h for DBL_MAX
 117:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 118:Core/Src/printf.c **** #include <float.h>
 119:Core/Src/printf.c **** #endif
 120:Core/Src/printf.c **** 
 121:Core/Src/printf.c **** 
 122:Core/Src/printf.c **** // output function type
 123:Core/Src/printf.c **** typedef void (*out_fct_type)(char character, void* buffer, size_t idx, size_t maxlen);
 124:Core/Src/printf.c **** 
 125:Core/Src/printf.c **** 
 126:Core/Src/printf.c **** // wrapper (used as buffer) for output function type
 127:Core/Src/printf.c **** typedef struct {
 128:Core/Src/printf.c ****   void  (*fct)(char character, void* arg);
 129:Core/Src/printf.c ****   void* arg;
 130:Core/Src/printf.c **** } out_fct_wrap_type;
 131:Core/Src/printf.c **** 
 132:Core/Src/printf.c **** 
 133:Core/Src/printf.c **** // internal buffer output
 134:Core/Src/printf.c **** static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
 135:Core/Src/printf.c **** {
  28              		.loc 1 135 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 136:Core/Src/printf.c ****   if (idx < maxlen) {
  33              		.loc 1 136 3 view .LVU1
  34              		.loc 1 136 6 is_stmt 0 view .LVU2
  35 0000 9A42     		cmp	r2, r3
  36 0002 00D2     		bcs	.L1
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 4


 137:Core/Src/printf.c ****     ((char*)buffer)[idx] = character;
  37              		.loc 1 137 5 is_stmt 1 view .LVU3
  38              		.loc 1 137 26 is_stmt 0 view .LVU4
  39 0004 8854     		strb	r0, [r1, r2]
  40              	.L1:
 138:Core/Src/printf.c ****   }
 139:Core/Src/printf.c **** }
  41              		.loc 1 139 1 view .LVU5
  42              		@ sp needed
  43 0006 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE1425:
  47              		.section	.text._out_null,"ax",%progbits
  48              		.align	1
  49              		.p2align 2,,3
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  54              	_out_null:
  55              	.LVL1:
  56              	.LFB1426:
 140:Core/Src/printf.c **** 
 141:Core/Src/printf.c **** 
 142:Core/Src/printf.c **** // internal null output
 143:Core/Src/printf.c **** static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
 144:Core/Src/printf.c **** {
  57              		.loc 1 144 1 is_stmt 1 view -0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
 145:Core/Src/printf.c ****   (void)character; (void)buffer; (void)idx; (void)maxlen;
  62              		.loc 1 145 3 view .LVU7
  63              		.loc 1 145 20 view .LVU8
  64              		.loc 1 145 34 view .LVU9
  65              		.loc 1 145 45 view .LVU10
 146:Core/Src/printf.c **** }
  66              		.loc 1 146 1 is_stmt 0 view .LVU11
  67              		@ sp needed
  68 0000 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE1426:
  72 0002 C046     		.section	.text._out_rev,"ax",%progbits
  73              		.align	1
  74              		.p2align 2,,3
  75              		.syntax unified
  76              		.code	16
  77              		.thumb_func
  79              	_out_rev:
  80              	.LVL2:
  81              	.LFB1432:
 147:Core/Src/printf.c **** 
 148:Core/Src/printf.c **** 
 149:Core/Src/printf.c **** // internal _putchar wrapper
 150:Core/Src/printf.c **** static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
 151:Core/Src/printf.c **** {
 152:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 5


 153:Core/Src/printf.c ****   if (character) {
 154:Core/Src/printf.c ****     _putchar(character);
 155:Core/Src/printf.c ****   }
 156:Core/Src/printf.c **** }
 157:Core/Src/printf.c **** 
 158:Core/Src/printf.c **** 
 159:Core/Src/printf.c **** // internal output function wrapper
 160:Core/Src/printf.c **** static inline void _out_fct(char character, void* buffer, size_t idx, size_t maxlen)
 161:Core/Src/printf.c **** {
 162:Core/Src/printf.c ****   (void)idx; (void)maxlen;
 163:Core/Src/printf.c ****   if (character) {
 164:Core/Src/printf.c ****     // buffer is the output fct pointer
 165:Core/Src/printf.c ****     ((out_fct_wrap_type*)buffer)->fct(character, ((out_fct_wrap_type*)buffer)->arg);
 166:Core/Src/printf.c ****   }
 167:Core/Src/printf.c **** }
 168:Core/Src/printf.c **** 
 169:Core/Src/printf.c **** 
 170:Core/Src/printf.c **** // internal secure strlen
 171:Core/Src/printf.c **** // \return The length of the string (excluding the terminating 0) limited by 'maxsize'
 172:Core/Src/printf.c **** static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
 173:Core/Src/printf.c **** {
 174:Core/Src/printf.c ****   const char* s;
 175:Core/Src/printf.c ****   for (s = str; *s && maxsize--; ++s);
 176:Core/Src/printf.c ****   return (unsigned int)(s - str);
 177:Core/Src/printf.c **** }
 178:Core/Src/printf.c **** 
 179:Core/Src/printf.c **** 
 180:Core/Src/printf.c **** // internal test if char is a digit (0-9)
 181:Core/Src/printf.c **** // \return true if char is a digit
 182:Core/Src/printf.c **** static inline bool _is_digit(char ch)
 183:Core/Src/printf.c **** {
 184:Core/Src/printf.c ****   return (ch >= '0') && (ch <= '9');
 185:Core/Src/printf.c **** }
 186:Core/Src/printf.c **** 
 187:Core/Src/printf.c **** 
 188:Core/Src/printf.c **** // internal ASCII string to unsigned int conversion
 189:Core/Src/printf.c **** static unsigned int _atoi(const char** str)
 190:Core/Src/printf.c **** {
 191:Core/Src/printf.c ****   unsigned int i = 0U;
 192:Core/Src/printf.c ****   while (_is_digit(**str)) {
 193:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 194:Core/Src/printf.c ****   }
 195:Core/Src/printf.c ****   return i;
 196:Core/Src/printf.c **** }
 197:Core/Src/printf.c **** 
 198:Core/Src/printf.c **** 
 199:Core/Src/printf.c **** // output the specified string in reverse, taking care of any zero-padding
 200:Core/Src/printf.c **** static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, 
 201:Core/Src/printf.c **** {
  82              		.loc 1 201 1 is_stmt 1 view -0
  83              		.cfi_startproc
  84              		@ args = 16, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		.loc 1 201 1 is_stmt 0 view .LVU13
  87 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  88              	.LCFI0:
  89              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 6


  90              		.cfi_offset 3, -24
  91              		.cfi_offset 4, -20
  92              		.cfi_offset 5, -16
  93              		.cfi_offset 6, -12
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 5746     		mov	r7, r10
  97 0004 4546     		mov	r5, r8
  98 0006 DE46     		mov	lr, fp
  99 0008 4E46     		mov	r6, r9
 100 000a E0B5     		push	{r5, r6, r7, lr}
 101              	.LCFI1:
 102              		.cfi_def_cfa_offset 40
 103              		.cfi_offset 8, -40
 104              		.cfi_offset 9, -36
 105              		.cfi_offset 10, -32
 106              		.cfi_offset 11, -28
 107              		.loc 1 201 1 view .LVU14
 108 000c 9846     		mov	r8, r3
 109 000e 0A9B     		ldr	r3, [sp, #40]
 110              	.LVL3:
 111              		.loc 1 201 1 view .LVU15
 112 0010 0600     		movs	r6, r0
 113 0012 9A46     		mov	r10, r3
 202:Core/Src/printf.c ****   const size_t start_idx = idx;
 114              		.loc 1 202 3 is_stmt 1 view .LVU16
 115              	.LVL4:
 203:Core/Src/printf.c **** 
 204:Core/Src/printf.c ****   // pad spaces up to given width
 205:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 116              		.loc 1 205 3 view .LVU17
 117              		.loc 1 205 6 is_stmt 0 view .LVU18
 118 0014 0D9B     		ldr	r3, [sp, #52]
 201:Core/Src/printf.c ****   const size_t start_idx = idx;
 119              		.loc 1 201 1 view .LVU19
 120 0016 0F00     		movs	r7, r1
 121 0018 9346     		mov	fp, r2
 122              	.LBB33:
 123 001a 1500     		movs	r5, r2
 124              	.LBE33:
 125              		.loc 1 205 6 view .LVU20
 126 001c 9B07     		lsls	r3, r3, #30
 127 001e 10D1     		bne	.L6
 128              	.LVL5:
 129              	.LBB34:
 206:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 130              		.loc 1 206 28 is_stmt 1 view .LVU21
 131 0020 0B9B     		ldr	r3, [sp, #44]
 132 0022 0C9A     		ldr	r2, [sp, #48]
 133              	.LVL6:
 134              		.loc 1 206 28 is_stmt 0 view .LVU22
 135 0024 9342     		cmp	r3, r2
 136 0026 0CD2     		bcs	.L6
 137 0028 1300     		movs	r3, r2
 138 002a 5C46     		mov	r4, fp
 139 002c 0B9A     		ldr	r2, [sp, #44]
 140 002e 9D1A     		subs	r5, r3, r2
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 7


 141              	.LVL7:
 142              		.loc 1 206 28 view .LVU23
 143 0030 5D44     		add	r5, r5, fp
 144              	.LVL8:
 145              	.L10:
 207:Core/Src/printf.c ****       out(' ', buffer, idx++, maxlen);
 146              		.loc 1 207 7 is_stmt 1 discriminator 3 view .LVU24
 147 0032 2200     		movs	r2, r4
 148 0034 4346     		mov	r3, r8
 149 0036 0134     		adds	r4, r4, #1
 150              	.LVL9:
 151              		.loc 1 207 7 is_stmt 0 discriminator 3 view .LVU25
 152 0038 3900     		movs	r1, r7
 153 003a 2020     		movs	r0, #32
 154 003c B047     		blx	r6
 155              	.LVL10:
 206:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 156              		.loc 1 206 38 is_stmt 1 discriminator 3 view .LVU26
 206:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 157              		.loc 1 206 28 discriminator 3 view .LVU27
 158 003e A542     		cmp	r5, r4
 159 0040 F7D1     		bne	.L10
 160              	.LVL11:
 161              	.L6:
 206:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 162              		.loc 1 206 28 is_stmt 0 discriminator 3 view .LVU28
 163              	.LBE34:
 208:Core/Src/printf.c ****     }
 209:Core/Src/printf.c ****   }
 210:Core/Src/printf.c **** 
 211:Core/Src/printf.c ****   // reverse string
 212:Core/Src/printf.c ****   while (len) {
 164              		.loc 1 212 10 is_stmt 1 view .LVU29
 165 0042 0B9C     		ldr	r4, [sp, #44]
 166 0044 6319     		adds	r3, r4, r5
 167 0046 002C     		cmp	r4, #0
 168 0048 09D0     		beq	.L9
 169 004a 1D00     		movs	r5, r3
 170              	.LVL12:
 171              	.L8:
 213:Core/Src/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 172              		.loc 1 213 5 is_stmt 0 view .LVU30
 173 004c 5346     		mov	r3, r10
 174 004e 2A1B     		subs	r2, r5, r4
 175              	.LVL13:
 176              		.loc 1 213 5 is_stmt 1 view .LVU31
 177 0050 013C     		subs	r4, r4, #1
 178              	.LVL14:
 179              		.loc 1 213 5 is_stmt 0 view .LVU32
 180 0052 185D     		ldrb	r0, [r3, r4]
 181 0054 3900     		movs	r1, r7
 182 0056 4346     		mov	r3, r8
 183 0058 B047     		blx	r6
 184              	.LVL15:
 212:Core/Src/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 185              		.loc 1 212 10 is_stmt 1 view .LVU33
 186 005a 002C     		cmp	r4, #0
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 8


 187 005c F6D1     		bne	.L8
 188              	.LVL16:
 189              	.L9:
 214:Core/Src/printf.c ****   }
 215:Core/Src/printf.c **** 
 216:Core/Src/printf.c ****   // append pad spaces up to given width
 217:Core/Src/printf.c ****   if (flags & FLAGS_LEFT) {
 190              		.loc 1 217 3 view .LVU34
 191              		.loc 1 217 6 is_stmt 0 view .LVU35
 192 005e 0D9B     		ldr	r3, [sp, #52]
 193 0060 9B07     		lsls	r3, r3, #30
 194 0062 0ED5     		bpl	.L5
 195              	.LVL17:
 218:Core/Src/printf.c ****     while (idx - start_idx < width) {
 196              		.loc 1 218 28 is_stmt 1 view .LVU36
 197              		.loc 1 218 16 is_stmt 0 view .LVU37
 198 0064 5B46     		mov	r3, fp
 199 0066 EC1A     		subs	r4, r5, r3
 200              		.loc 1 218 28 view .LVU38
 201 0068 0C9B     		ldr	r3, [sp, #48]
 202 006a A342     		cmp	r3, r4
 203 006c 09D9     		bls	.L5
 204 006e 9946     		mov	r9, r3
 205              	.L12:
 219:Core/Src/printf.c ****       out(' ', buffer, idx++, maxlen);
 206              		.loc 1 219 7 is_stmt 1 view .LVU39
 207              		.loc 1 219 7 is_stmt 0 view .LVU40
 208 0070 2A00     		movs	r2, r5
 209 0072 4346     		mov	r3, r8
 210 0074 3900     		movs	r1, r7
 211 0076 2020     		movs	r0, #32
 218:Core/Src/printf.c ****     while (idx - start_idx < width) {
 212              		.loc 1 218 28 view .LVU41
 213 0078 0134     		adds	r4, r4, #1
 214              		.loc 1 219 7 view .LVU42
 215 007a B047     		blx	r6
 216              	.LVL18:
 217 007c 0135     		adds	r5, r5, #1
 218              	.LVL19:
 218:Core/Src/printf.c ****     while (idx - start_idx < width) {
 219              		.loc 1 218 28 is_stmt 1 view .LVU43
 220 007e A145     		cmp	r9, r4
 221 0080 F6D8     		bhi	.L12
 222              	.LVL20:
 223              	.L5:
 220:Core/Src/printf.c ****     }
 221:Core/Src/printf.c ****   }
 222:Core/Src/printf.c **** 
 223:Core/Src/printf.c ****   return idx;
 224:Core/Src/printf.c **** }
 224              		.loc 1 224 1 is_stmt 0 view .LVU44
 225              		@ sp needed
 226 0082 2800     		movs	r0, r5
 227              	.LVL21:
 228              	.LVL22:
 229              	.LVL23:
 230              	.LVL24:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 9


 231              		.loc 1 224 1 view .LVU45
 232 0084 F0BC     		pop	{r4, r5, r6, r7}
 233 0086 BB46     		mov	fp, r7
 234 0088 B246     		mov	r10, r6
 235 008a A946     		mov	r9, r5
 236 008c A046     		mov	r8, r4
 237 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 238              		.cfi_endproc
 239              	.LFE1432:
 241              		.section	.text._ntoa_format,"ax",%progbits
 242              		.align	1
 243              		.p2align 2,,3
 244              		.syntax unified
 245              		.code	16
 246              		.thumb_func
 248              	_ntoa_format:
 249              	.LVL25:
 250              	.LFB1433:
 225:Core/Src/printf.c **** 
 226:Core/Src/printf.c **** 
 227:Core/Src/printf.c **** // internal itoa format
 228:Core/Src/printf.c **** static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, si
 229:Core/Src/printf.c **** {
 251              		.loc 1 229 1 is_stmt 1 view -0
 252              		.cfi_startproc
 253              		@ args = 28, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 230:Core/Src/printf.c ****   // pad leading zeros
 231:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT)) {
 255              		.loc 1 231 3 view .LVU47
 229:Core/Src/printf.c ****   // pad leading zeros
 256              		.loc 1 229 1 is_stmt 0 view .LVU48
 257 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 258              	.LCFI2:
 259              		.cfi_def_cfa_offset 20
 260              		.cfi_offset 4, -20
 261              		.cfi_offset 5, -16
 262              		.cfi_offset 6, -12
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 4F46     		mov	r7, r9
 266 0004 4646     		mov	r6, r8
 267 0006 D646     		mov	lr, r10
 268 0008 C0B5     		push	{r6, r7, lr}
 269              	.LCFI3:
 270              		.cfi_def_cfa_offset 32
 271              		.cfi_offset 8, -32
 272              		.cfi_offset 9, -28
 273              		.cfi_offset 10, -24
 274 000a 84B0     		sub	sp, sp, #16
 275              	.LCFI4:
 276              		.cfi_def_cfa_offset 48
 229:Core/Src/printf.c ****   // pad leading zeros
 277              		.loc 1 229 1 view .LVU49
 278 000c 9846     		mov	r8, r3
 279 000e 0EAB     		add	r3, sp, #56
 280              	.LVL26:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 10


 229:Core/Src/printf.c ****   // pad leading zeros
 281              		.loc 1 229 1 view .LVU50
 282 0010 1B78     		ldrb	r3, [r3]
 283              	.LVL27:
 229:Core/Src/printf.c ****   // pad leading zeros
 284              		.loc 1 229 1 view .LVU51
 285 0012 9446     		mov	ip, r2
 286 0014 9946     		mov	r9, r3
 287 0016 129B     		ldr	r3, [sp, #72]
 288 0018 0D9C     		ldr	r4, [sp, #52]
 289 001a 109F     		ldr	r7, [sp, #64]
 290 001c 119E     		ldr	r6, [sp, #68]
 291              		.loc 1 231 6 view .LVU52
 292 001e 9A07     		lsls	r2, r3, #30
 293 0020 24D4     		bmi	.L26
 294              	.LVL28:
 232:Core/Src/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 295              		.loc 1 232 5 is_stmt 1 view .LVU53
 296              		.loc 1 232 8 is_stmt 0 view .LVU54
 297 0022 002E     		cmp	r6, #0
 298 0024 6AD1     		bne	.L150
 299              	.LVL29:
 233:Core/Src/printf.c ****       width--;
 234:Core/Src/printf.c ****     }
 235:Core/Src/printf.c ****     while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 300              		.loc 1 235 25 is_stmt 1 view .LVU55
 301 0026 BC42     		cmp	r4, r7
 302 0028 20D2     		bcs	.L26
 232:Core/Src/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 303              		.loc 1 232 25 is_stmt 0 view .LVU56
 304 002a 0122     		movs	r2, #1
 305 002c 1A40     		ands	r2, r3
 306 002e 9246     		mov	r10, r2
 307              		.loc 1 235 25 view .LVU57
 308 0030 202C     		cmp	r4, #32
 309 0032 00D1     		bne	.LCB307
 310 0034 D2E0     		b	.L151	@long jump
 311              	.LCB307:
 312              	.LVL30:
 313              	.L33:
 314              		.loc 1 235 25 view .LVU58
 315 0036 0C9A     		ldr	r2, [sp, #48]
 316 0038 551E     		subs	r5, r2, #1
 236:Core/Src/printf.c ****       buf[len++] = '0';
 317              		.loc 1 236 18 view .LVU59
 318 003a 3022     		movs	r2, #48
 319 003c 01E0     		b	.L43
 320              	.LVL31:
 321              	.L31:
 235:Core/Src/printf.c ****       buf[len++] = '0';
 322              		.loc 1 235 25 discriminator 1 view .LVU60
 323 003e 202C     		cmp	r4, #32
 324 0040 30D0     		beq	.L152
 325              	.LVL32:
 326              	.L43:
 327              		.loc 1 236 7 is_stmt 1 view .LVU61
 328              		.loc 1 236 14 is_stmt 0 view .LVU62
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 11


 329 0042 0134     		adds	r4, r4, #1
 330              	.LVL33:
 331              		.loc 1 236 18 view .LVU63
 332 0044 2A55     		strb	r2, [r5, r4]
 235:Core/Src/printf.c ****       buf[len++] = '0';
 333              		.loc 1 235 25 is_stmt 1 view .LVU64
 334 0046 A742     		cmp	r7, r4
 335 0048 F9D8     		bhi	.L31
 237:Core/Src/printf.c ****     }
 238:Core/Src/printf.c ****     while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 336              		.loc 1 238 53 view .LVU65
 337 004a 5246     		mov	r2, r10
 338 004c 002A     		cmp	r2, #0
 339 004e 0DD0     		beq	.L26
 340              	.L71:
 341              		.loc 1 238 36 is_stmt 0 view .LVU66
 342 0050 B442     		cmp	r4, r6
 343 0052 0BD2     		bcs	.L26
 344              		.loc 1 238 36 view .LVU67
 345 0054 0C9A     		ldr	r2, [sp, #48]
 346 0056 551E     		subs	r5, r2, #1
 239:Core/Src/printf.c ****       buf[len++] = '0';
 347              		.loc 1 239 18 view .LVU68
 348 0058 3022     		movs	r2, #48
 238:Core/Src/printf.c ****       buf[len++] = '0';
 349              		.loc 1 238 53 view .LVU69
 350 005a 202C     		cmp	r4, #32
 351 005c 02D1     		bne	.L42
 352 005e 26E0     		b	.L36
 353              	.L153:
 238:Core/Src/printf.c ****       buf[len++] = '0';
 354              		.loc 1 238 53 discriminator 2 view .LVU70
 355 0060 202C     		cmp	r4, #32
 356 0062 63D0     		beq	.L40
 357              	.L42:
 358              		.loc 1 239 7 is_stmt 1 view .LVU71
 359              		.loc 1 239 14 is_stmt 0 view .LVU72
 360 0064 0134     		adds	r4, r4, #1
 361              	.LVL34:
 362              		.loc 1 239 18 view .LVU73
 363 0066 2A55     		strb	r2, [r5, r4]
 238:Core/Src/printf.c ****       buf[len++] = '0';
 364              		.loc 1 238 53 is_stmt 1 view .LVU74
 238:Core/Src/printf.c ****       buf[len++] = '0';
 365              		.loc 1 238 36 is_stmt 0 view .LVU75
 366 0068 B442     		cmp	r4, r6
 367 006a F9D1     		bne	.L153
 368              	.LVL35:
 369              	.L26:
 240:Core/Src/printf.c ****     }
 241:Core/Src/printf.c ****   }
 242:Core/Src/printf.c **** 
 243:Core/Src/printf.c ****   // handle hash
 244:Core/Src/printf.c ****   if (flags & FLAGS_HASH) {
 370              		.loc 1 244 3 is_stmt 1 view .LVU76
 371              		.loc 1 244 6 is_stmt 0 view .LVU77
 372 006c DA06     		lsls	r2, r3, #27
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 12


 373 006e 34D5     		bpl	.L48
 374              	.L69:
 245:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 375              		.loc 1 245 5 is_stmt 1 view .LVU78
 376              		.loc 1 245 8 is_stmt 0 view .LVU79
 377 0070 5A05     		lsls	r2, r3, #21
 378 0072 64D4     		bmi	.L47
 379              		.loc 1 245 36 discriminator 1 view .LVU80
 380 0074 002C     		cmp	r4, #0
 381 0076 5ED1     		bne	.L68
 382              	.LVL36:
 383              	.L51:
 246:Core/Src/printf.c ****       len--;
 247:Core/Src/printf.c ****       if (len && (base == 16U)) {
 248:Core/Src/printf.c ****         len--;
 249:Core/Src/printf.c ****       }
 250:Core/Src/printf.c ****     }
 251:Core/Src/printf.c ****     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 384              		.loc 1 251 5 is_stmt 1 view .LVU81
 385              		.loc 1 251 8 is_stmt 0 view .LVU82
 386 0078 0F9A     		ldr	r2, [sp, #60]
 387 007a 102A     		cmp	r2, #16
 388 007c 00D1     		bne	.LCB400
 389 007e 97E0     		b	.L154	@long jump
 390              	.LCB400:
 252:Core/Src/printf.c ****       buf[len++] = 'x';
 253:Core/Src/printf.c ****     }
 254:Core/Src/printf.c ****     else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 255:Core/Src/printf.c ****       buf[len++] = 'X';
 256:Core/Src/printf.c ****     }
 257:Core/Src/printf.c ****     else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 391              		.loc 1 257 10 is_stmt 1 view .LVU83
 392              		.loc 1 257 13 is_stmt 0 view .LVU84
 393 0080 022A     		cmp	r2, #2
 394 0082 00D1     		bne	.LCB403
 395 0084 A8E0     		b	.L77	@long jump
 396              	.LCB403:
 397              	.LVL37:
 258:Core/Src/printf.c ****       buf[len++] = 'b';
 259:Core/Src/printf.c ****     }
 260:Core/Src/printf.c ****     if (len < PRINTF_NTOA_BUFFER_SIZE) {
 261:Core/Src/printf.c ****       buf[len++] = '0';
 398              		.loc 1 261 7 is_stmt 1 view .LVU85
 399              		.loc 1 261 18 is_stmt 0 view .LVU86
 400 0086 3022     		movs	r2, #48
 401 0088 0C9C     		ldr	r4, [sp, #48]
 402 008a 2270     		strb	r2, [r4]
 262:Core/Src/printf.c ****     }
 263:Core/Src/printf.c ****   }
 264:Core/Src/printf.c **** 
 265:Core/Src/printf.c ****   if (len < PRINTF_NTOA_BUFFER_SIZE) {
 403              		.loc 1 265 3 is_stmt 1 view .LVU87
 261:Core/Src/printf.c ****     }
 404              		.loc 1 261 14 is_stmt 0 view .LVU88
 405 008c 0124     		movs	r4, #1
 406              	.LVL38:
 407              	.L57:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 13


 266:Core/Src/printf.c ****     if (negative) {
 408              		.loc 1 266 5 is_stmt 1 view .LVU89
 409              		.loc 1 266 8 is_stmt 0 view .LVU90
 410 008e 4A46     		mov	r2, r9
 411 0090 002A     		cmp	r2, #0
 412 0092 5ED1     		bne	.L155
 267:Core/Src/printf.c ****       buf[len++] = '-';
 268:Core/Src/printf.c ****     }
 269:Core/Src/printf.c ****     else if (flags & FLAGS_PLUS) {
 413              		.loc 1 269 10 is_stmt 1 view .LVU91
 414              		.loc 1 269 13 is_stmt 0 view .LVU92
 415 0094 5A07     		lsls	r2, r3, #29
 416 0096 00D4     		bmi	.LCB430
 417 0098 83E0     		b	.L67	@long jump
 418              	.LCB430:
 270:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 419              		.loc 1 270 7 is_stmt 1 view .LVU93
 420              	.LVL39:
 421              		.loc 1 270 18 is_stmt 0 view .LVU94
 422 009a 2B22     		movs	r2, #43
 423 009c 0C9D     		ldr	r5, [sp, #48]
 424 009e 2A55     		strb	r2, [r5, r4]
 425              		.loc 1 270 14 view .LVU95
 426 00a0 0134     		adds	r4, r4, #1
 427              	.LVL40:
 428              		.loc 1 270 14 view .LVU96
 429 00a2 1CE0     		b	.L38
 430              	.LVL41:
 431              	.L152:
 238:Core/Src/printf.c ****       buf[len++] = '0';
 432              		.loc 1 238 53 is_stmt 1 view .LVU97
 433 00a4 5246     		mov	r2, r10
 434 00a6 002A     		cmp	r2, #0
 435 00a8 02D0     		beq	.L148
 238:Core/Src/printf.c ****       buf[len++] = '0';
 436              		.loc 1 238 36 is_stmt 0 view .LVU98
 437 00aa 202E     		cmp	r6, #32
 438 00ac 3ED9     		bls	.L40
 439              	.LVL42:
 440              	.L36:
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 441              		.loc 1 244 3 is_stmt 1 view .LVU99
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 442              		.loc 1 244 6 is_stmt 0 view .LVU100
 443 00ae 2024     		movs	r4, #32
 444              	.L148:
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 445              		.loc 1 244 6 view .LVU101
 446 00b0 DA06     		lsls	r2, r3, #27
 447 00b2 14D5     		bpl	.L38
 245:Core/Src/printf.c ****       len--;
 448              		.loc 1 245 5 is_stmt 1 view .LVU102
 245:Core/Src/printf.c ****       len--;
 449              		.loc 1 245 8 is_stmt 0 view .LVU103
 450 00b4 5A05     		lsls	r2, r3, #21
 451 00b6 12D4     		bmi	.L38
 245:Core/Src/printf.c ****       len--;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 14


 452              		.loc 1 245 43 view .LVU104
 453 00b8 202F     		cmp	r7, #32
 454 00ba 00D1     		bne	.LCB478
 455 00bc A1E0     		b	.L78	@long jump
 456              	.LCB478:
 245:Core/Src/printf.c ****       len--;
 457              		.loc 1 245 61 view .LVU105
 458 00be 202E     		cmp	r6, #32
 459 00c0 3DD1     		bne	.L47
 246:Core/Src/printf.c ****       if (len && (base == 16U)) {
 460              		.loc 1 246 10 view .LVU106
 461 00c2 2026     		movs	r6, #32
 462              	.LVL43:
 246:Core/Src/printf.c ****       if (len && (base == 16U)) {
 463              		.loc 1 246 10 view .LVU107
 464 00c4 1F22     		movs	r2, #31
 465 00c6 3400     		movs	r4, r6
 466              	.LVL44:
 467              	.L45:
 247:Core/Src/printf.c ****         len--;
 468              		.loc 1 247 15 discriminator 1 view .LVU108
 469 00c8 0F9D     		ldr	r5, [sp, #60]
 470 00ca 102D     		cmp	r5, #16
 471 00cc 00D1     		bne	.LCB491
 472 00ce 8BE0     		b	.L156	@long jump
 473              	.LCB491:
 254:Core/Src/printf.c ****       buf[len++] = 'X';
 474              		.loc 1 254 10 is_stmt 1 view .LVU109
 257:Core/Src/printf.c ****       buf[len++] = 'b';
 475              		.loc 1 257 10 view .LVU110
 257:Core/Src/printf.c ****       buf[len++] = 'b';
 476              		.loc 1 257 13 is_stmt 0 view .LVU111
 477 00d0 022D     		cmp	r5, #2
 478 00d2 52D0     		beq	.L64
 479              	.LVL45:
 480              	.L65:
 261:Core/Src/printf.c ****     }
 481              		.loc 1 261 7 is_stmt 1 view .LVU112
 261:Core/Src/printf.c ****     }
 482              		.loc 1 261 18 is_stmt 0 view .LVU113
 483 00d4 3025     		movs	r5, #48
 484 00d6 0C9F     		ldr	r7, [sp, #48]
 485 00d8 BD54     		strb	r5, [r7, r2]
 486              	.LVL46:
 487              	.L48:
 265:Core/Src/printf.c ****     if (negative) {
 488              		.loc 1 265 3 is_stmt 1 view .LVU114
 265:Core/Src/printf.c ****     if (negative) {
 489              		.loc 1 265 6 is_stmt 0 view .LVU115
 490 00da 202C     		cmp	r4, #32
 491 00dc D7D1     		bne	.L57
 492              	.LVL47:
 493              	.L38:
 271:Core/Src/printf.c ****     }
 272:Core/Src/printf.c ****     else if (flags & FLAGS_SPACE) {
 273:Core/Src/printf.c ****       buf[len++] = ' ';
 274:Core/Src/printf.c ****     }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 15


 275:Core/Src/printf.c ****   }
 276:Core/Src/printf.c **** 
 277:Core/Src/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 494              		.loc 1 277 3 is_stmt 1 view .LVU116
 495              		.loc 1 277 10 is_stmt 0 view .LVU117
 496 00de 0393     		str	r3, [sp, #12]
 497 00e0 0C9B     		ldr	r3, [sp, #48]
 498 00e2 6246     		mov	r2, ip
 499 00e4 0093     		str	r3, [sp]
 500 00e6 0296     		str	r6, [sp, #8]
 501 00e8 4346     		mov	r3, r8
 502 00ea 0194     		str	r4, [sp, #4]
 503 00ec FFF7FEFF 		bl	_out_rev
 504              	.LVL48:
 278:Core/Src/printf.c **** }
 505              		.loc 1 278 1 view .LVU118
 506 00f0 04B0     		add	sp, sp, #16
 507              		@ sp needed
 508              	.LVL49:
 509              	.LVL50:
 510              		.loc 1 278 1 view .LVU119
 511 00f2 E0BC     		pop	{r5, r6, r7}
 512 00f4 BA46     		mov	r10, r7
 513 00f6 B146     		mov	r9, r6
 514 00f8 A846     		mov	r8, r5
 515 00fa F0BD     		pop	{r4, r5, r6, r7, pc}
 516              	.LVL51:
 517              	.L150:
 232:Core/Src/printf.c ****       width--;
 518              		.loc 1 232 25 discriminator 1 view .LVU120
 519 00fc 0122     		movs	r2, #1
 520 00fe 1500     		movs	r5, r2
 521 0100 1D40     		ands	r5, r3
 522 0102 AA46     		mov	r10, r5
 232:Core/Src/printf.c ****       width--;
 523              		.loc 1 232 15 discriminator 1 view .LVU121
 524 0104 1A42     		tst	r2, r3
 525 0106 29D0     		beq	.L28
 232:Core/Src/printf.c ****       width--;
 526              		.loc 1 232 42 discriminator 2 view .LVU122
 527 0108 4A46     		mov	r2, r9
 528 010a 002A     		cmp	r2, #0
 529 010c 39D1     		bne	.L29
 232:Core/Src/printf.c ****       width--;
 530              		.loc 1 232 65 discriminator 3 view .LVU123
 531 010e 0C32     		adds	r2, r2, #12
 232:Core/Src/printf.c ****       width--;
 532              		.loc 1 232 55 discriminator 3 view .LVU124
 533 0110 1A42     		tst	r2, r3
 534 0112 36D1     		bne	.L29
 535              	.LVL52:
 536              	.L30:
 235:Core/Src/printf.c ****       buf[len++] = '0';
 537              		.loc 1 235 25 is_stmt 1 view .LVU125
 538 0114 BC42     		cmp	r4, r7
 539 0116 9BD2     		bcs	.L71
 540 0118 202C     		cmp	r4, #32
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 16


 541 011a 00D0     		beq	.LCB579
 542 011c 8BE7     		b	.L33	@long jump
 543              	.LCB579:
 544              	.LVL53:
 238:Core/Src/printf.c ****       buf[len++] = '0';
 545              		.loc 1 238 53 view .LVU126
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 546              		.loc 1 244 13 is_stmt 0 view .LVU127
 547 011e 1022     		movs	r2, #16
 548 0120 1A40     		ands	r2, r3
 238:Core/Src/printf.c ****       buf[len++] = '0';
 549              		.loc 1 238 36 view .LVU128
 550 0122 202E     		cmp	r6, #32
 551 0124 C3D8     		bhi	.L36
 552              	.LVL54:
 553              	.L34:
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 554              		.loc 1 244 3 is_stmt 1 view .LVU129
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 555              		.loc 1 244 6 is_stmt 0 view .LVU130
 556 0126 002A     		cmp	r2, #0
 557 0128 A2D1     		bne	.L69
 558 012a D8E7     		b	.L38
 559              	.LVL55:
 560              	.L40:
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 561              		.loc 1 244 3 is_stmt 1 view .LVU131
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 562              		.loc 1 244 6 is_stmt 0 view .LVU132
 563 012c 2024     		movs	r4, #32
 564 012e DA06     		lsls	r2, r3, #27
 565 0130 D5D5     		bpl	.L38
 566              	.LVL56:
 567              	.L138:
 245:Core/Src/printf.c ****       len--;
 568              		.loc 1 245 5 is_stmt 1 view .LVU133
 245:Core/Src/printf.c ****       len--;
 569              		.loc 1 245 8 is_stmt 0 view .LVU134
 570 0132 5A05     		lsls	r2, r3, #21
 571 0134 03D4     		bmi	.L47
 572              	.L68:
 245:Core/Src/printf.c ****       len--;
 573              		.loc 1 245 43 discriminator 2 view .LVU135
 574 0136 A742     		cmp	r7, r4
 575 0138 25D0     		beq	.L50
 245:Core/Src/printf.c ****       len--;
 576              		.loc 1 245 61 discriminator 3 view .LVU136
 577 013a B442     		cmp	r4, r6
 578 013c 23D0     		beq	.L50
 579              	.L47:
 580              	.LVL57:
 251:Core/Src/printf.c ****       buf[len++] = 'x';
 581              		.loc 1 251 5 is_stmt 1 view .LVU137
 251:Core/Src/printf.c ****       buf[len++] = 'x';
 582              		.loc 1 251 8 is_stmt 0 view .LVU138
 583 013e 0F9A     		ldr	r2, [sp, #60]
 584 0140 102A     		cmp	r2, #16
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 17


 585 0142 25D0     		beq	.L157
 257:Core/Src/printf.c ****       buf[len++] = 'b';
 586              		.loc 1 257 10 is_stmt 1 view .LVU139
 257:Core/Src/printf.c ****       buf[len++] = 'b';
 587              		.loc 1 257 13 is_stmt 0 view .LVU140
 588 0144 022A     		cmp	r2, #2
 589 0146 14D0     		beq	.L158
 590              	.LVL58:
 591              	.L63:
 260:Core/Src/printf.c ****       buf[len++] = '0';
 592              		.loc 1 260 5 is_stmt 1 view .LVU141
 260:Core/Src/printf.c ****       buf[len++] = '0';
 593              		.loc 1 260 8 is_stmt 0 view .LVU142
 594 0148 202C     		cmp	r4, #32
 595 014a C8D0     		beq	.L38
 596              	.LVL59:
 597              	.L54:
 261:Core/Src/printf.c ****     }
 598              		.loc 1 261 14 view .LVU143
 599 014c 2200     		movs	r2, r4
 600 014e 0134     		adds	r4, r4, #1
 601              	.LVL60:
 261:Core/Src/printf.c ****     }
 602              		.loc 1 261 14 view .LVU144
 603 0150 C0E7     		b	.L65
 604              	.LVL61:
 605              	.L155:
 267:Core/Src/printf.c ****     }
 606              		.loc 1 267 7 is_stmt 1 view .LVU145
 267:Core/Src/printf.c ****     }
 607              		.loc 1 267 18 is_stmt 0 view .LVU146
 608 0152 2D22     		movs	r2, #45
 609 0154 0C9D     		ldr	r5, [sp, #48]
 610 0156 2A55     		strb	r2, [r5, r4]
 267:Core/Src/printf.c ****     }
 611              		.loc 1 267 14 view .LVU147
 612 0158 0134     		adds	r4, r4, #1
 613              	.LVL62:
 267:Core/Src/printf.c ****     }
 614              		.loc 1 267 14 view .LVU148
 615 015a C0E7     		b	.L38
 616              	.LVL63:
 617              	.L28:
 235:Core/Src/printf.c ****       buf[len++] = '0';
 618              		.loc 1 235 25 is_stmt 1 view .LVU149
 619 015c BC42     		cmp	r4, r7
 620 015e 00D3     		bcc	.LCB677
 621 0160 84E7     		b	.L26	@long jump
 622              	.LCB677:
 623 0162 202C     		cmp	r4, #32
 624 0164 00D0     		beq	.LCB679
 625 0166 66E7     		b	.L33	@long jump
 626              	.LCB679:
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 627              		.loc 1 244 13 is_stmt 0 view .LVU150
 628 0168 1022     		movs	r2, #16
 629 016a 1A40     		ands	r2, r3
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 18


 630              	.LVL64:
 238:Core/Src/printf.c ****       buf[len++] = '0';
 631              		.loc 1 238 53 is_stmt 1 view .LVU151
 632              	.L35:
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 633              		.loc 1 244 3 view .LVU152
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 634              		.loc 1 244 6 is_stmt 0 view .LVU153
 635 016c 002A     		cmp	r2, #0
 636 016e E0D1     		bne	.L138
 637 0170 B5E7     		b	.L38
 638              	.L158:
 257:Core/Src/printf.c ****       buf[len++] = 'b';
 639              		.loc 1 257 27 discriminator 1 view .LVU154
 640 0172 202C     		cmp	r4, #32
 641 0174 B3D0     		beq	.L38
 258:Core/Src/printf.c ****     }
 642              		.loc 1 258 14 view .LVU155
 643 0176 2200     		movs	r2, r4
 644 0178 0134     		adds	r4, r4, #1
 645              	.LVL65:
 646              	.L64:
 258:Core/Src/printf.c ****     }
 647              		.loc 1 258 7 is_stmt 1 view .LVU156
 258:Core/Src/printf.c ****     }
 648              		.loc 1 258 18 is_stmt 0 view .LVU157
 649 017a 6225     		movs	r5, #98
 650 017c 0C9F     		ldr	r7, [sp, #48]
 651 017e BD54     		strb	r5, [r7, r2]
 652 0180 E2E7     		b	.L63
 653              	.LVL66:
 654              	.L29:
 233:Core/Src/printf.c ****     }
 655              		.loc 1 233 7 is_stmt 1 view .LVU158
 233:Core/Src/printf.c ****     }
 656              		.loc 1 233 12 is_stmt 0 view .LVU159
 657 0182 013E     		subs	r6, r6, #1
 658              	.LVL67:
 233:Core/Src/printf.c ****     }
 659              		.loc 1 233 12 view .LVU160
 660 0184 C6E7     		b	.L30
 661              	.LVL68:
 662              	.L50:
 246:Core/Src/printf.c ****       if (len && (base == 16U)) {
 663              		.loc 1 246 7 is_stmt 1 view .LVU161
 246:Core/Src/printf.c ****       if (len && (base == 16U)) {
 664              		.loc 1 246 10 is_stmt 0 view .LVU162
 665 0186 621E     		subs	r2, r4, #1
 666              	.LVL69:
 247:Core/Src/printf.c ****         len--;
 667              		.loc 1 247 7 is_stmt 1 view .LVU163
 247:Core/Src/printf.c ****         len--;
 668              		.loc 1 247 10 is_stmt 0 view .LVU164
 669 0188 012C     		cmp	r4, #1
 670 018a 00D1     		bne	.LCB733
 671 018c 74E7     		b	.L51	@long jump
 672              	.LCB733:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 19


 673 018e 9BE7     		b	.L45
 674              	.LVL70:
 675              	.L157:
 251:Core/Src/printf.c ****       buf[len++] = 'x';
 676              		.loc 1 251 23 view .LVU165
 677 0190 9A06     		lsls	r2, r3, #26
 678 0192 16D4     		bmi	.L62
 251:Core/Src/printf.c ****       buf[len++] = 'x';
 679              		.loc 1 251 53 view .LVU166
 680 0194 202C     		cmp	r4, #32
 681 0196 A2D0     		beq	.L38
 252:Core/Src/printf.c ****     }
 682              		.loc 1 252 7 is_stmt 1 view .LVU167
 683              	.LVL71:
 252:Core/Src/printf.c ****     }
 684              		.loc 1 252 18 is_stmt 0 view .LVU168
 685 0198 7822     		movs	r2, #120
 686 019a 0C9D     		ldr	r5, [sp, #48]
 687 019c 2A55     		strb	r2, [r5, r4]
 688 019e 0134     		adds	r4, r4, #1
 689              	.LVL72:
 252:Core/Src/printf.c ****     }
 690              		.loc 1 252 18 view .LVU169
 691 01a0 D2E7     		b	.L63
 692              	.LVL73:
 693              	.L67:
 272:Core/Src/printf.c ****       buf[len++] = ' ';
 694              		.loc 1 272 10 is_stmt 1 view .LVU170
 272:Core/Src/printf.c ****       buf[len++] = ' ';
 695              		.loc 1 272 13 is_stmt 0 view .LVU171
 696 01a2 1A07     		lsls	r2, r3, #28
 697 01a4 9BD5     		bpl	.L38
 273:Core/Src/printf.c ****     }
 698              		.loc 1 273 7 is_stmt 1 view .LVU172
 699              	.LVL74:
 273:Core/Src/printf.c ****     }
 700              		.loc 1 273 18 is_stmt 0 view .LVU173
 701 01a6 2022     		movs	r2, #32
 702 01a8 0C9D     		ldr	r5, [sp, #48]
 703 01aa 2A55     		strb	r2, [r5, r4]
 273:Core/Src/printf.c ****     }
 704              		.loc 1 273 14 view .LVU174
 705 01ac 0134     		adds	r4, r4, #1
 706              	.LVL75:
 273:Core/Src/printf.c ****     }
 707              		.loc 1 273 14 view .LVU175
 708 01ae 96E7     		b	.L38
 709              	.LVL76:
 710              	.L154:
 251:Core/Src/printf.c ****       buf[len++] = 'x';
 711              		.loc 1 251 23 view .LVU176
 712 01b0 9A06     		lsls	r2, r3, #26
 713 01b2 0FD4     		bmi	.L159
 714 01b4 7822     		movs	r2, #120
 715              	.LVL77:
 716              	.L60:
 252:Core/Src/printf.c ****     }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 20


 717              		.loc 1 252 18 view .LVU177
 718 01b6 0C9C     		ldr	r4, [sp, #48]
 719 01b8 2270     		strb	r2, [r4]
 261:Core/Src/printf.c ****     }
 720              		.loc 1 261 7 is_stmt 1 view .LVU178
 721              	.LVL78:
 261:Core/Src/printf.c ****     }
 722              		.loc 1 261 18 is_stmt 0 view .LVU179
 723 01ba 3022     		movs	r2, #48
 724 01bc 6270     		strb	r2, [r4, #1]
 265:Core/Src/printf.c ****     if (negative) {
 725              		.loc 1 265 3 is_stmt 1 view .LVU180
 261:Core/Src/printf.c ****     }
 726              		.loc 1 261 18 is_stmt 0 view .LVU181
 727 01be 0224     		movs	r4, #2
 728 01c0 65E7     		b	.L57
 729              	.LVL79:
 730              	.L62:
 254:Core/Src/printf.c ****       buf[len++] = 'X';
 731              		.loc 1 254 10 is_stmt 1 view .LVU182
 254:Core/Src/printf.c ****       buf[len++] = 'X';
 732              		.loc 1 254 57 is_stmt 0 view .LVU183
 733 01c2 202C     		cmp	r4, #32
 734 01c4 00D1     		bne	.LCB815
 735 01c6 8AE7     		b	.L38	@long jump
 736              	.LCB815:
 255:Core/Src/printf.c ****     }
 737              		.loc 1 255 18 view .LVU184
 738 01c8 5825     		movs	r5, #88
 258:Core/Src/printf.c ****     }
 739              		.loc 1 258 10 view .LVU185
 740 01ca 0C9A     		ldr	r2, [sp, #48]
 741 01cc 1219     		adds	r2, r2, r4
 255:Core/Src/printf.c ****     }
 742              		.loc 1 255 18 view .LVU186
 743 01ce 1570     		strb	r5, [r2]
 258:Core/Src/printf.c ****     }
 744              		.loc 1 258 14 view .LVU187
 745 01d0 0134     		adds	r4, r4, #1
 255:Core/Src/printf.c ****     }
 746              		.loc 1 255 7 is_stmt 1 view .LVU188
 255:Core/Src/printf.c ****     }
 747              		.loc 1 255 18 is_stmt 0 view .LVU189
 748 01d2 B9E7     		b	.L63
 749              	.LVL80:
 750              	.L159:
 255:Core/Src/printf.c ****     }
 751              		.loc 1 255 7 is_stmt 1 view .LVU190
 255:Core/Src/printf.c ****     }
 752              		.loc 1 255 18 is_stmt 0 view .LVU191
 753 01d4 5822     		movs	r2, #88
 754 01d6 EEE7     		b	.L60
 755              	.LVL81:
 756              	.L77:
 257:Core/Src/printf.c ****       buf[len++] = 'b';
 757              		.loc 1 257 13 view .LVU192
 758 01d8 6222     		movs	r2, #98
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 21


 759 01da ECE7     		b	.L60
 760              	.LVL82:
 761              	.L151:
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 762              		.loc 1 244 13 view .LVU193
 763 01dc 1022     		movs	r2, #16
 238:Core/Src/printf.c ****       buf[len++] = '0';
 764              		.loc 1 238 53 view .LVU194
 765 01de 5546     		mov	r5, r10
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 766              		.loc 1 244 13 view .LVU195
 767 01e0 1A40     		ands	r2, r3
 768              	.LVL83:
 238:Core/Src/printf.c ****       buf[len++] = '0';
 769              		.loc 1 238 53 is_stmt 1 view .LVU196
 770 01e2 002D     		cmp	r5, #0
 771 01e4 9FD1     		bne	.L34
 772 01e6 C1E7     		b	.L35
 773              	.LVL84:
 774              	.L156:
 248:Core/Src/printf.c ****       }
 775              		.loc 1 248 9 view .LVU197
 248:Core/Src/printf.c ****       }
 776              		.loc 1 248 12 is_stmt 0 view .LVU198
 777 01e8 023C     		subs	r4, r4, #2
 778              	.LVL85:
 251:Core/Src/printf.c ****       buf[len++] = 'x';
 779              		.loc 1 251 5 is_stmt 1 view .LVU199
 251:Core/Src/printf.c ****       buf[len++] = 'x';
 780              		.loc 1 251 23 is_stmt 0 view .LVU200
 781 01ea 9D06     		lsls	r5, r3, #26
 782 01ec 04D4     		bmi	.L53
 252:Core/Src/printf.c ****     }
 783              		.loc 1 252 7 is_stmt 1 view .LVU201
 784              	.LVL86:
 252:Core/Src/printf.c ****     }
 785              		.loc 1 252 18 is_stmt 0 view .LVU202
 786 01ee 7825     		movs	r5, #120
 787 01f0 0C9F     		ldr	r7, [sp, #48]
 788 01f2 3D55     		strb	r5, [r7, r4]
 789              	.LVL87:
 260:Core/Src/printf.c ****       buf[len++] = '0';
 790              		.loc 1 260 5 is_stmt 1 view .LVU203
 252:Core/Src/printf.c ****     }
 791              		.loc 1 252 18 is_stmt 0 view .LVU204
 792 01f4 1400     		movs	r4, r2
 793 01f6 A9E7     		b	.L54
 794              	.LVL88:
 795              	.L53:
 255:Core/Src/printf.c ****     }
 796              		.loc 1 255 7 is_stmt 1 view .LVU205
 255:Core/Src/printf.c ****     }
 797              		.loc 1 255 18 is_stmt 0 view .LVU206
 798 01f8 5825     		movs	r5, #88
 799 01fa 0C9F     		ldr	r7, [sp, #48]
 800 01fc 3D55     		strb	r5, [r7, r4]
 801              	.LVL89:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 22


 260:Core/Src/printf.c ****       buf[len++] = '0';
 802              		.loc 1 260 5 is_stmt 1 view .LVU207
 255:Core/Src/printf.c ****     }
 803              		.loc 1 255 18 is_stmt 0 view .LVU208
 804 01fe 1400     		movs	r4, r2
 805 0200 A4E7     		b	.L54
 806              	.LVL90:
 807              	.L78:
 246:Core/Src/printf.c ****       if (len && (base == 16U)) {
 808              		.loc 1 246 10 view .LVU209
 809 0202 1F22     		movs	r2, #31
 810 0204 60E7     		b	.L45
 811              		.cfi_endproc
 812              	.LFE1433:
 814 0206 C046     		.section	.text._out_fct,"ax",%progbits
 815              		.align	1
 816              		.p2align 2,,3
 817              		.syntax unified
 818              		.code	16
 819              		.thumb_func
 821              	_out_fct:
 822              	.LVL91:
 823              	.LFB1428:
 161:Core/Src/printf.c ****   (void)idx; (void)maxlen;
 824              		.loc 1 161 1 is_stmt 1 view -0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 162:Core/Src/printf.c ****   if (character) {
 828              		.loc 1 162 3 view .LVU211
 162:Core/Src/printf.c ****   if (character) {
 829              		.loc 1 162 14 view .LVU212
 163:Core/Src/printf.c ****     // buffer is the output fct pointer
 830              		.loc 1 163 3 view .LVU213
 161:Core/Src/printf.c ****   (void)idx; (void)maxlen;
 831              		.loc 1 161 1 is_stmt 0 view .LVU214
 832 0000 0B00     		movs	r3, r1
 833              	.LVL92:
 161:Core/Src/printf.c ****   (void)idx; (void)maxlen;
 834              		.loc 1 161 1 view .LVU215
 835 0002 10B5     		push	{r4, lr}
 836              	.LCFI5:
 837              		.cfi_def_cfa_offset 8
 838              		.cfi_offset 4, -8
 839              		.cfi_offset 14, -4
 163:Core/Src/printf.c ****     // buffer is the output fct pointer
 840              		.loc 1 163 6 view .LVU216
 841 0004 0028     		cmp	r0, #0
 842 0006 02D0     		beq	.L160
 843              	.LVL93:
 844              	.LBB37:
 845              	.LBI37:
 160:Core/Src/printf.c **** {
 846              		.loc 1 160 20 is_stmt 1 view .LVU217
 847              	.LBB38:
 165:Core/Src/printf.c ****   }
 848              		.loc 1 165 5 view .LVU218
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 23


 165:Core/Src/printf.c ****   }
 849              		.loc 1 165 6 is_stmt 0 view .LVU219
 850 0008 4968     		ldr	r1, [r1, #4]
 851              	.LVL94:
 165:Core/Src/printf.c ****   }
 852              		.loc 1 165 6 view .LVU220
 853 000a 1B68     		ldr	r3, [r3]
 854              	.LVL95:
 165:Core/Src/printf.c ****   }
 855              		.loc 1 165 6 view .LVU221
 856 000c 9847     		blx	r3
 857              	.LVL96:
 858              	.L160:
 165:Core/Src/printf.c ****   }
 859              		.loc 1 165 6 view .LVU222
 860              	.LBE38:
 861              	.LBE37:
 167:Core/Src/printf.c **** 
 862              		.loc 1 167 1 view .LVU223
 863              		@ sp needed
 864 000e 10BD     		pop	{r4, pc}
 865              		.cfi_endproc
 866              	.LFE1428:
 868              		.section	.text._out_char,"ax",%progbits
 869              		.align	1
 870              		.p2align 2,,3
 871              		.syntax unified
 872              		.code	16
 873              		.thumb_func
 875              	_out_char:
 876              	.LVL97:
 877              	.LFB1427:
 151:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 878              		.loc 1 151 1 is_stmt 1 view -0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882              		@ link register save eliminated.
 152:Core/Src/printf.c ****   if (character) {
 883              		.loc 1 152 3 view .LVU225
 152:Core/Src/printf.c ****   if (character) {
 884              		.loc 1 152 17 view .LVU226
 152:Core/Src/printf.c ****   if (character) {
 885              		.loc 1 152 28 view .LVU227
 153:Core/Src/printf.c ****     _putchar(character);
 886              		.loc 1 153 3 view .LVU228
 153:Core/Src/printf.c ****     _putchar(character);
 887              		.loc 1 153 6 is_stmt 0 view .LVU229
 888 0000 0028     		cmp	r0, #0
 889 0002 05D0     		beq	.L165
 890              	.LBB43:
 891              	.LBB44:
 892              	.LBB45:
 893              	.LBB46:
 279:Core/Src/printf.c **** 
 280:Core/Src/printf.c **** 
 281:Core/Src/printf.c **** // internal itoa for 'long' type
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 24


 282:Core/Src/printf.c **** static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long v
 283:Core/Src/printf.c **** {
 284:Core/Src/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 285:Core/Src/printf.c ****   size_t len = 0U;
 286:Core/Src/printf.c **** 
 287:Core/Src/printf.c ****   // no hash for 0 values
 288:Core/Src/printf.c ****   if (!value) {
 289:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 290:Core/Src/printf.c ****   }
 291:Core/Src/printf.c **** 
 292:Core/Src/printf.c ****   // write if precision != 0 and value is != 0
 293:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 294:Core/Src/printf.c ****     do {
 295:Core/Src/printf.c ****       const char digit = (char)(value % base);
 296:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 297:Core/Src/printf.c ****       value /= base;
 298:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 299:Core/Src/printf.c ****   }
 300:Core/Src/printf.c **** 
 301:Core/Src/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 302:Core/Src/printf.c **** }
 303:Core/Src/printf.c **** 
 304:Core/Src/printf.c **** 
 305:Core/Src/printf.c **** // internal itoa for 'long long' type
 306:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 307:Core/Src/printf.c **** static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned l
 308:Core/Src/printf.c **** {
 309:Core/Src/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 310:Core/Src/printf.c ****   size_t len = 0U;
 311:Core/Src/printf.c **** 
 312:Core/Src/printf.c ****   // no hash for 0 values
 313:Core/Src/printf.c ****   if (!value) {
 314:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 315:Core/Src/printf.c ****   }
 316:Core/Src/printf.c **** 
 317:Core/Src/printf.c ****   // write if precision != 0 and value is != 0
 318:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 319:Core/Src/printf.c ****     do {
 320:Core/Src/printf.c ****       const char digit = (char)(value % base);
 321:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 322:Core/Src/printf.c ****       value /= base;
 323:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 324:Core/Src/printf.c ****   }
 325:Core/Src/printf.c **** 
 326:Core/Src/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 327:Core/Src/printf.c **** }
 328:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_LONG_LONG
 329:Core/Src/printf.c **** 
 330:Core/Src/printf.c **** 
 331:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 332:Core/Src/printf.c **** 
 333:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 334:Core/Src/printf.c **** // forward declaration so that _ftoa can switch to exp notation for values > PRINTF_MAX_FLOAT
 335:Core/Src/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 336:Core/Src/printf.c **** #endif
 337:Core/Src/printf.c **** 
 338:Core/Src/printf.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 25


 339:Core/Src/printf.c **** // internal ftoa for fixed decimal floating point
 340:Core/Src/printf.c **** static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 341:Core/Src/printf.c **** {
 342:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 343:Core/Src/printf.c ****   size_t len  = 0U;
 344:Core/Src/printf.c ****   double diff = 0.0;
 345:Core/Src/printf.c **** 
 346:Core/Src/printf.c ****   // powers of 10
 347:Core/Src/printf.c ****   static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 10
 348:Core/Src/printf.c **** 
 349:Core/Src/printf.c ****   // test for special values
 350:Core/Src/printf.c ****   if (value != value)
 351:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 352:Core/Src/printf.c ****   if (value < -DBL_MAX)
 353:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 354:Core/Src/printf.c ****   if (value > DBL_MAX)
 355:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 356:Core/Src/printf.c **** 
 357:Core/Src/printf.c ****   // test for very large values
 358:Core/Src/printf.c ****   // standard printf behavior is to print EVERY whole number digit -- which could be 100s of charac
 359:Core/Src/printf.c ****   if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 360:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 361:Core/Src/printf.c ****     return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 362:Core/Src/printf.c **** #else
 363:Core/Src/printf.c ****     return 0U;
 364:Core/Src/printf.c **** #endif
 365:Core/Src/printf.c ****   }
 366:Core/Src/printf.c **** 
 367:Core/Src/printf.c ****   // test for negative
 368:Core/Src/printf.c ****   bool negative = false;
 369:Core/Src/printf.c ****   if (value < 0) {
 370:Core/Src/printf.c ****     negative = true;
 371:Core/Src/printf.c ****     value = 0 - value;
 372:Core/Src/printf.c ****   }
 373:Core/Src/printf.c **** 
 374:Core/Src/printf.c ****   // set default precision, if not set explicitly
 375:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 376:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 377:Core/Src/printf.c ****   }
 378:Core/Src/printf.c ****   // limit precision to 9, cause a prec >= 10 can lead to overflow errors
 379:Core/Src/printf.c ****   while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 380:Core/Src/printf.c ****     buf[len++] = '0';
 381:Core/Src/printf.c ****     prec--;
 382:Core/Src/printf.c ****   }
 383:Core/Src/printf.c **** 
 384:Core/Src/printf.c ****   int whole = (int)value;
 385:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 386:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 387:Core/Src/printf.c ****   diff = tmp - frac;
 388:Core/Src/printf.c **** 
 389:Core/Src/printf.c ****   if (diff > 0.5) {
 390:Core/Src/printf.c ****     ++frac;
 391:Core/Src/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 392:Core/Src/printf.c ****     if (frac >= pow10[prec]) {
 393:Core/Src/printf.c ****       frac = 0;
 394:Core/Src/printf.c ****       ++whole;
 395:Core/Src/printf.c ****     }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 26


 396:Core/Src/printf.c ****   }
 397:Core/Src/printf.c ****   else if (diff < 0.5) {
 398:Core/Src/printf.c ****   }
 399:Core/Src/printf.c ****   else if ((frac == 0U) || (frac & 1U)) {
 400:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 401:Core/Src/printf.c ****     ++frac;
 402:Core/Src/printf.c ****   }
 403:Core/Src/printf.c **** 
 404:Core/Src/printf.c ****   if (prec == 0U) {
 405:Core/Src/printf.c ****     diff = value - (double)whole;
 406:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 407:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 408:Core/Src/printf.c ****       // 1.5 -> 2, but 2.5 -> 2
 409:Core/Src/printf.c ****       ++whole;
 410:Core/Src/printf.c ****     }
 411:Core/Src/printf.c ****   }
 412:Core/Src/printf.c ****   else {
 413:Core/Src/printf.c ****     unsigned int count = prec;
 414:Core/Src/printf.c ****     // now do fractional part, as an unsigned number
 415:Core/Src/printf.c ****     while (len < PRINTF_FTOA_BUFFER_SIZE) {
 416:Core/Src/printf.c ****       --count;
 417:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 418:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 419:Core/Src/printf.c ****         break;
 420:Core/Src/printf.c ****       }
 421:Core/Src/printf.c ****     }
 422:Core/Src/printf.c ****     // add extra 0s
 423:Core/Src/printf.c ****     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 424:Core/Src/printf.c ****       buf[len++] = '0';
 425:Core/Src/printf.c ****     }
 426:Core/Src/printf.c ****     if (len < PRINTF_FTOA_BUFFER_SIZE) {
 427:Core/Src/printf.c ****       // add decimal
 428:Core/Src/printf.c ****       buf[len++] = '.';
 429:Core/Src/printf.c ****     }
 430:Core/Src/printf.c ****   }
 431:Core/Src/printf.c **** 
 432:Core/Src/printf.c ****   // do whole part, number is reversed
 433:Core/Src/printf.c ****   while (len < PRINTF_FTOA_BUFFER_SIZE) {
 434:Core/Src/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 435:Core/Src/printf.c ****     if (!(whole /= 10)) {
 436:Core/Src/printf.c ****       break;
 437:Core/Src/printf.c ****     }
 438:Core/Src/printf.c ****   }
 439:Core/Src/printf.c **** 
 440:Core/Src/printf.c ****   // pad leading zeros
 441:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 442:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 443:Core/Src/printf.c ****       width--;
 444:Core/Src/printf.c ****     }
 445:Core/Src/printf.c ****     while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 446:Core/Src/printf.c ****       buf[len++] = '0';
 447:Core/Src/printf.c ****     }
 448:Core/Src/printf.c ****   }
 449:Core/Src/printf.c **** 
 450:Core/Src/printf.c ****   if (len < PRINTF_FTOA_BUFFER_SIZE) {
 451:Core/Src/printf.c ****     if (negative) {
 452:Core/Src/printf.c ****       buf[len++] = '-';
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 27


 453:Core/Src/printf.c ****     }
 454:Core/Src/printf.c ****     else if (flags & FLAGS_PLUS) {
 455:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 456:Core/Src/printf.c ****     }
 457:Core/Src/printf.c ****     else if (flags & FLAGS_SPACE) {
 458:Core/Src/printf.c ****       buf[len++] = ' ';
 459:Core/Src/printf.c ****     }
 460:Core/Src/printf.c ****   }
 461:Core/Src/printf.c **** 
 462:Core/Src/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 463:Core/Src/printf.c **** }
 464:Core/Src/printf.c **** 
 465:Core/Src/printf.c **** 
 466:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 467:Core/Src/printf.c **** // internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.ja
 468:Core/Src/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 469:Core/Src/printf.c **** {
 470:Core/Src/printf.c ****   // check for NaN and special values
 471:Core/Src/printf.c ****   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 472:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 473:Core/Src/printf.c ****   }
 474:Core/Src/printf.c **** 
 475:Core/Src/printf.c ****   // determine the sign
 476:Core/Src/printf.c ****   const bool negative = value < 0;
 477:Core/Src/printf.c ****   if (negative) {
 478:Core/Src/printf.c ****     value = -value;
 479:Core/Src/printf.c ****   }
 480:Core/Src/printf.c **** 
 481:Core/Src/printf.c ****   // default precision
 482:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 483:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 484:Core/Src/printf.c ****   }
 485:Core/Src/printf.c **** 
 486:Core/Src/printf.c ****   // determine the decimal exponent
 487:Core/Src/printf.c ****   // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 488:Core/Src/printf.c ****   union {
 489:Core/Src/printf.c ****     uint64_t U;
 490:Core/Src/printf.c ****     double   F;
 491:Core/Src/printf.c ****   } conv;
 492:Core/Src/printf.c **** 
 493:Core/Src/printf.c ****   conv.F = value;
 494:Core/Src/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 495:Core/Src/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 496:Core/Src/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 497:Core/Src/printf.c ****   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.28952965460216
 498:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 499:Core/Src/printf.c ****   exp2 = (int)(expval * 3.321928094887362 + 0.5);
 500:Core/Src/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 501:Core/Src/printf.c ****   const double z2 = z * z;
 502:Core/Src/printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 503:Core/Src/printf.c ****   // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_functi
 504:Core/Src/printf.c ****   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 505:Core/Src/printf.c ****   // correct for rounding errors
 506:Core/Src/printf.c ****   if (value < conv.F) {
 507:Core/Src/printf.c ****     expval--;
 508:Core/Src/printf.c ****     conv.F /= 10;
 509:Core/Src/printf.c ****   }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 28


 510:Core/Src/printf.c **** 
 511:Core/Src/printf.c ****   // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
 512:Core/Src/printf.c ****   unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
 513:Core/Src/printf.c **** 
 514:Core/Src/printf.c ****   // in "%g" mode, "prec" is the number of *significant figures* not decimals
 515:Core/Src/printf.c ****   if (flags & FLAGS_ADAPT_EXP) {
 516:Core/Src/printf.c ****     // do we want to fall-back to "%f" mode?
 517:Core/Src/printf.c ****     if ((value >= 1e-4) && (value < 1e6)) {
 518:Core/Src/printf.c ****       if ((int)prec > expval) {
 519:Core/Src/printf.c ****         prec = (unsigned)((int)prec - expval - 1);
 520:Core/Src/printf.c ****       }
 521:Core/Src/printf.c ****       else {
 522:Core/Src/printf.c ****         prec = 0;
 523:Core/Src/printf.c ****       }
 524:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
 525:Core/Src/printf.c ****       // no characters in exponent
 526:Core/Src/printf.c ****       minwidth = 0U;
 527:Core/Src/printf.c ****       expval   = 0;
 528:Core/Src/printf.c ****     }
 529:Core/Src/printf.c ****     else {
 530:Core/Src/printf.c ****       // we use one sigfig for the whole part
 531:Core/Src/printf.c ****       if ((prec > 0) && (flags & FLAGS_PRECISION)) {
 532:Core/Src/printf.c ****         --prec;
 533:Core/Src/printf.c ****       }
 534:Core/Src/printf.c ****     }
 535:Core/Src/printf.c ****   }
 536:Core/Src/printf.c **** 
 537:Core/Src/printf.c ****   // will everything fit?
 538:Core/Src/printf.c ****   unsigned int fwidth = width;
 539:Core/Src/printf.c ****   if (width > minwidth) {
 540:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 541:Core/Src/printf.c ****     fwidth -= minwidth;
 542:Core/Src/printf.c ****   } else {
 543:Core/Src/printf.c ****     // not enough characters, so go back to default sizing
 544:Core/Src/printf.c ****     fwidth = 0U;
 545:Core/Src/printf.c ****   }
 546:Core/Src/printf.c ****   if ((flags & FLAGS_LEFT) && minwidth) {
 547:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 548:Core/Src/printf.c ****     fwidth = 0U;
 549:Core/Src/printf.c ****   }
 550:Core/Src/printf.c **** 
 551:Core/Src/printf.c ****   // rescale the float value
 552:Core/Src/printf.c ****   if (expval) {
 553:Core/Src/printf.c ****     value /= conv.F;
 554:Core/Src/printf.c ****   }
 555:Core/Src/printf.c **** 
 556:Core/Src/printf.c ****   // output the floating part
 557:Core/Src/printf.c ****   const size_t start_idx = idx;
 558:Core/Src/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 559:Core/Src/printf.c **** 
 560:Core/Src/printf.c ****   // output the exponent part
 561:Core/Src/printf.c ****   if (minwidth) {
 562:Core/Src/printf.c ****     // output the exponential symbol
 563:Core/Src/printf.c ****     out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
 564:Core/Src/printf.c ****     // output the exponent value
 565:Core/Src/printf.c ****     idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, 
 566:Core/Src/printf.c ****     // might need to right-pad spaces
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 29


 567:Core/Src/printf.c ****     if (flags & FLAGS_LEFT) {
 568:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 569:Core/Src/printf.c ****     }
 570:Core/Src/printf.c ****   }
 571:Core/Src/printf.c ****   return idx;
 572:Core/Src/printf.c **** }
 573:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 574:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 575:Core/Src/printf.c **** 
 576:Core/Src/printf.c **** 
 577:Core/Src/printf.c **** // internal vsnprintf
 578:Core/Src/printf.c **** static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_l
 579:Core/Src/printf.c **** {
 580:Core/Src/printf.c ****   unsigned int flags, width, precision, n;
 581:Core/Src/printf.c ****   size_t idx = 0U;
 582:Core/Src/printf.c **** 
 583:Core/Src/printf.c ****   if (!buffer) {
 584:Core/Src/printf.c ****     // use null output function
 585:Core/Src/printf.c ****     out = _out_null;
 586:Core/Src/printf.c ****   }
 587:Core/Src/printf.c **** 
 588:Core/Src/printf.c ****   while (*format)
 589:Core/Src/printf.c ****   {
 590:Core/Src/printf.c ****     // format specifier?  %[flags][width][.precision][length]
 591:Core/Src/printf.c ****     if (*format != '%') {
 592:Core/Src/printf.c ****       // no
 593:Core/Src/printf.c ****       out(*format, buffer, idx++, maxlen);
 594:Core/Src/printf.c ****       format++;
 595:Core/Src/printf.c ****       continue;
 596:Core/Src/printf.c ****     }
 597:Core/Src/printf.c ****     else {
 598:Core/Src/printf.c ****       // yes, evaluate it
 599:Core/Src/printf.c ****       format++;
 600:Core/Src/printf.c ****     }
 601:Core/Src/printf.c **** 
 602:Core/Src/printf.c ****     // evaluate flags
 603:Core/Src/printf.c ****     flags = 0U;
 604:Core/Src/printf.c ****     do {
 605:Core/Src/printf.c ****       switch (*format) {
 606:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 607:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 608:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 609:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 610:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 611:Core/Src/printf.c ****         default :                                   n = 0U; break;
 612:Core/Src/printf.c ****       }
 613:Core/Src/printf.c ****     } while (n);
 614:Core/Src/printf.c **** 
 615:Core/Src/printf.c ****     // evaluate width field
 616:Core/Src/printf.c ****     width = 0U;
 617:Core/Src/printf.c ****     if (_is_digit(*format)) {
 618:Core/Src/printf.c ****       width = _atoi(&format);
 619:Core/Src/printf.c ****     }
 620:Core/Src/printf.c ****     else if (*format == '*') {
 621:Core/Src/printf.c ****       const int w = va_arg(va, int);
 622:Core/Src/printf.c ****       if (w < 0) {
 623:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 30


 624:Core/Src/printf.c ****         width = (unsigned int)-w;
 625:Core/Src/printf.c ****       }
 626:Core/Src/printf.c ****       else {
 627:Core/Src/printf.c ****         width = (unsigned int)w;
 628:Core/Src/printf.c ****       }
 629:Core/Src/printf.c ****       format++;
 630:Core/Src/printf.c ****     }
 631:Core/Src/printf.c **** 
 632:Core/Src/printf.c ****     // evaluate precision field
 633:Core/Src/printf.c ****     precision = 0U;
 634:Core/Src/printf.c ****     if (*format == '.') {
 635:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 636:Core/Src/printf.c ****       format++;
 637:Core/Src/printf.c ****       if (_is_digit(*format)) {
 638:Core/Src/printf.c ****         precision = _atoi(&format);
 639:Core/Src/printf.c ****       }
 640:Core/Src/printf.c ****       else if (*format == '*') {
 641:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 642:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 643:Core/Src/printf.c ****         format++;
 644:Core/Src/printf.c ****       }
 645:Core/Src/printf.c ****     }
 646:Core/Src/printf.c **** 
 647:Core/Src/printf.c ****     // evaluate length field
 648:Core/Src/printf.c ****     switch (*format) {
 649:Core/Src/printf.c ****       case 'l' :
 650:Core/Src/printf.c ****         flags |= FLAGS_LONG;
 651:Core/Src/printf.c ****         format++;
 652:Core/Src/printf.c ****         if (*format == 'l') {
 653:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 654:Core/Src/printf.c ****           format++;
 655:Core/Src/printf.c ****         }
 656:Core/Src/printf.c ****         break;
 657:Core/Src/printf.c ****       case 'h' :
 658:Core/Src/printf.c ****         flags |= FLAGS_SHORT;
 659:Core/Src/printf.c ****         format++;
 660:Core/Src/printf.c ****         if (*format == 'h') {
 661:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 662:Core/Src/printf.c ****           format++;
 663:Core/Src/printf.c ****         }
 664:Core/Src/printf.c ****         break;
 665:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 666:Core/Src/printf.c ****       case 't' :
 667:Core/Src/printf.c ****         flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 668:Core/Src/printf.c ****         format++;
 669:Core/Src/printf.c ****         break;
 670:Core/Src/printf.c **** #endif
 671:Core/Src/printf.c ****       case 'j' :
 672:Core/Src/printf.c ****         flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 673:Core/Src/printf.c ****         format++;
 674:Core/Src/printf.c ****         break;
 675:Core/Src/printf.c ****       case 'z' :
 676:Core/Src/printf.c ****         flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 677:Core/Src/printf.c ****         format++;
 678:Core/Src/printf.c ****         break;
 679:Core/Src/printf.c ****       default :
 680:Core/Src/printf.c ****         break;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 31


 681:Core/Src/printf.c ****     }
 682:Core/Src/printf.c **** 
 683:Core/Src/printf.c ****     // evaluate specifier
 684:Core/Src/printf.c ****     switch (*format) {
 685:Core/Src/printf.c ****       case 'd' :
 686:Core/Src/printf.c ****       case 'i' :
 687:Core/Src/printf.c ****       case 'u' :
 688:Core/Src/printf.c ****       case 'x' :
 689:Core/Src/printf.c ****       case 'X' :
 690:Core/Src/printf.c ****       case 'o' :
 691:Core/Src/printf.c ****       case 'b' : {
 692:Core/Src/printf.c ****         // set the base
 693:Core/Src/printf.c ****         unsigned int base;
 694:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 695:Core/Src/printf.c ****           base = 16U;
 696:Core/Src/printf.c ****         }
 697:Core/Src/printf.c ****         else if (*format == 'o') {
 698:Core/Src/printf.c ****           base =  8U;
 699:Core/Src/printf.c ****         }
 700:Core/Src/printf.c ****         else if (*format == 'b') {
 701:Core/Src/printf.c ****           base =  2U;
 702:Core/Src/printf.c ****         }
 703:Core/Src/printf.c ****         else {
 704:Core/Src/printf.c ****           base = 10U;
 705:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 706:Core/Src/printf.c ****         }
 707:Core/Src/printf.c ****         // uppercase
 708:Core/Src/printf.c ****         if (*format == 'X') {
 709:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 710:Core/Src/printf.c ****         }
 711:Core/Src/printf.c **** 
 712:Core/Src/printf.c ****         // no plus or space flag for u, x, X, o, b
 713:Core/Src/printf.c ****         if ((*format != 'i') && (*format != 'd')) {
 714:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 715:Core/Src/printf.c ****         }
 716:Core/Src/printf.c **** 
 717:Core/Src/printf.c ****         // ignore '0' flag when precision is given
 718:Core/Src/printf.c ****         if (flags & FLAGS_PRECISION) {
 719:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 720:Core/Src/printf.c ****         }
 721:Core/Src/printf.c **** 
 722:Core/Src/printf.c ****         // convert the integer
 723:Core/Src/printf.c ****         if ((*format == 'i') || (*format == 'd')) {
 724:Core/Src/printf.c ****           // signed
 725:Core/Src/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 726:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 727:Core/Src/printf.c ****             const long long value = va_arg(va, long long);
 728:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 729:Core/Src/printf.c **** #endif
 730:Core/Src/printf.c ****           }
 731:Core/Src/printf.c ****           else if (flags & FLAGS_LONG) {
 732:Core/Src/printf.c ****             const long value = va_arg(va, long);
 733:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 734:Core/Src/printf.c ****           }
 735:Core/Src/printf.c ****           else {
 736:Core/Src/printf.c ****             const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) 
 737:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 32


 738:Core/Src/printf.c ****           }
 739:Core/Src/printf.c ****         }
 740:Core/Src/printf.c ****         else {
 741:Core/Src/printf.c ****           // unsigned
 742:Core/Src/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 743:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 744:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, 
 745:Core/Src/printf.c **** #endif
 746:Core/Src/printf.c ****           }
 747:Core/Src/printf.c ****           else if (flags & FLAGS_LONG) {
 748:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 749:Core/Src/printf.c ****           }
 750:Core/Src/printf.c ****           else {
 751:Core/Src/printf.c ****             const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned in
 752:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 753:Core/Src/printf.c ****           }
 754:Core/Src/printf.c ****         }
 755:Core/Src/printf.c ****         format++;
 756:Core/Src/printf.c ****         break;
 757:Core/Src/printf.c ****       }
 758:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 759:Core/Src/printf.c ****       case 'f' :
 760:Core/Src/printf.c ****       case 'F' :
 761:Core/Src/printf.c ****         if (*format == 'F') flags |= FLAGS_UPPERCASE;
 762:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 763:Core/Src/printf.c ****         format++;
 764:Core/Src/printf.c ****         break;
 765:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 766:Core/Src/printf.c ****       case 'e':
 767:Core/Src/printf.c ****       case 'E':
 768:Core/Src/printf.c ****       case 'g':
 769:Core/Src/printf.c ****       case 'G':
 770:Core/Src/printf.c ****         if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
 771:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 772:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 773:Core/Src/printf.c ****         format++;
 774:Core/Src/printf.c ****         break;
 775:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 776:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 777:Core/Src/printf.c ****       case 'c' : {
 778:Core/Src/printf.c ****         unsigned int l = 1U;
 779:Core/Src/printf.c ****         // pre padding
 780:Core/Src/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 781:Core/Src/printf.c ****           while (l++ < width) {
 782:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 783:Core/Src/printf.c ****           }
 784:Core/Src/printf.c ****         }
 785:Core/Src/printf.c ****         // char output
 786:Core/Src/printf.c ****         out((char)va_arg(va, int), buffer, idx++, maxlen);
 787:Core/Src/printf.c ****         // post padding
 788:Core/Src/printf.c ****         if (flags & FLAGS_LEFT) {
 789:Core/Src/printf.c ****           while (l++ < width) {
 790:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 791:Core/Src/printf.c ****           }
 792:Core/Src/printf.c ****         }
 793:Core/Src/printf.c ****         format++;
 794:Core/Src/printf.c ****         break;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 33


 795:Core/Src/printf.c ****       }
 796:Core/Src/printf.c **** 
 797:Core/Src/printf.c ****       case 's' : {
 798:Core/Src/printf.c ****         const char* p = va_arg(va, char*);
 799:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 800:Core/Src/printf.c ****         // pre padding
 801:Core/Src/printf.c ****         if (flags & FLAGS_PRECISION) {
 802:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 803:Core/Src/printf.c ****         }
 804:Core/Src/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 805:Core/Src/printf.c ****           while (l++ < width) {
 806:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 807:Core/Src/printf.c ****           }
 808:Core/Src/printf.c ****         }
 809:Core/Src/printf.c ****         // string output
 810:Core/Src/printf.c ****         while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 811:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 812:Core/Src/printf.c ****         }
 813:Core/Src/printf.c ****         // post padding
 814:Core/Src/printf.c ****         if (flags & FLAGS_LEFT) {
 815:Core/Src/printf.c ****           while (l++ < width) {
 816:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 817:Core/Src/printf.c ****           }
 818:Core/Src/printf.c ****         }
 819:Core/Src/printf.c ****         format++;
 820:Core/Src/printf.c ****         break;
 821:Core/Src/printf.c ****       }
 822:Core/Src/printf.c **** 
 823:Core/Src/printf.c ****       case 'p' : {
 824:Core/Src/printf.c ****         width = sizeof(void*) * 2U;
 825:Core/Src/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 826:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 827:Core/Src/printf.c ****         const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
 828:Core/Src/printf.c ****         if (is_ll) {
 829:Core/Src/printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U,
 830:Core/Src/printf.c ****         }
 831:Core/Src/printf.c ****         else {
 832:Core/Src/printf.c **** #endif
 833:Core/Src/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)),
 834:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 835:Core/Src/printf.c ****         }
 836:Core/Src/printf.c **** #endif
 837:Core/Src/printf.c ****         format++;
 838:Core/Src/printf.c ****         break;
 839:Core/Src/printf.c ****       }
 840:Core/Src/printf.c **** 
 841:Core/Src/printf.c ****       case '%' :
 842:Core/Src/printf.c ****         out('%', buffer, idx++, maxlen);
 843:Core/Src/printf.c ****         format++;
 844:Core/Src/printf.c ****         break;
 845:Core/Src/printf.c **** 
 846:Core/Src/printf.c ****       default :
 847:Core/Src/printf.c ****         out(*format, buffer, idx++, maxlen);
 848:Core/Src/printf.c ****         format++;
 849:Core/Src/printf.c ****         break;
 850:Core/Src/printf.c ****     }
 851:Core/Src/printf.c ****   }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 34


 852:Core/Src/printf.c **** 
 853:Core/Src/printf.c ****   // termination
 854:Core/Src/printf.c ****   out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 855:Core/Src/printf.c **** 
 856:Core/Src/printf.c ****   // return written chars without terminating \0
 857:Core/Src/printf.c ****   return (int)idx;
 858:Core/Src/printf.c **** }
 859:Core/Src/printf.c **** 
 860:Core/Src/printf.c **** 
 861:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
 862:Core/Src/printf.c **** 
 863:Core/Src/printf.c **** int printf_(const char* format, ...)
 864:Core/Src/printf.c **** {
 865:Core/Src/printf.c ****   va_list va;
 866:Core/Src/printf.c ****   va_start(va, format);
 867:Core/Src/printf.c ****   char buffer[1];
 868:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 869:Core/Src/printf.c ****   va_end(va);
 870:Core/Src/printf.c ****   return ret;
 871:Core/Src/printf.c **** }
 872:Core/Src/printf.c **** 
 873:Core/Src/printf.c **** 
 874:Core/Src/printf.c **** int sprintf_(char* buffer, const char* format, ...)
 875:Core/Src/printf.c **** {
 876:Core/Src/printf.c ****   va_list va;
 877:Core/Src/printf.c ****   va_start(va, format);
 878:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
 879:Core/Src/printf.c ****   va_end(va);
 880:Core/Src/printf.c ****   return ret;
 881:Core/Src/printf.c **** }
 882:Core/Src/printf.c **** 
 883:Core/Src/printf.c **** 
 884:Core/Src/printf.c **** int snprintf_(char* buffer, size_t count, const char* format, ...)
 885:Core/Src/printf.c **** {
 886:Core/Src/printf.c ****   va_list va;
 887:Core/Src/printf.c ****   va_start(va, format);
 888:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 889:Core/Src/printf.c ****   va_end(va);
 890:Core/Src/printf.c ****   return ret;
 891:Core/Src/printf.c **** }
 892:Core/Src/printf.c **** 
 893:Core/Src/printf.c **** 
 894:Core/Src/printf.c **** int vprintf_(const char* format, va_list va)
 895:Core/Src/printf.c **** {
 896:Core/Src/printf.c ****   char buffer[1];
 897:Core/Src/printf.c ****   return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 898:Core/Src/printf.c **** }
 899:Core/Src/printf.c **** 
 900:Core/Src/printf.c **** 
 901:Core/Src/printf.c **** int vsnprintf_(char* buffer, size_t count, const char* format, va_list va)
 902:Core/Src/printf.c **** {
 903:Core/Src/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 904:Core/Src/printf.c **** }
 905:Core/Src/printf.c **** 
 906:Core/Src/printf.c **** 
 907:Core/Src/printf.c **** int fctprintf(void (*out)(char character, void* arg), void* arg, const char* format, ...)
 908:Core/Src/printf.c **** {
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 35


 909:Core/Src/printf.c ****   va_list va;
 910:Core/Src/printf.c ****   va_start(va, format);
 911:Core/Src/printf.c ****   const out_fct_wrap_type out_fct_wrap = { out, arg };
 912:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 913:Core/Src/printf.c ****   va_end(va);
 914:Core/Src/printf.c ****   return ret;
 915:Core/Src/printf.c **** }
 916:Core/Src/printf.c **** 
 917:Core/Src/printf.c **** 
 918:Core/Src/printf.c **** void _putchar(char character) {
 919:Core/Src/printf.c **** 	/* Place your implementation of fputc here */
 920:Core/Src/printf.c **** 	/* e.g. write a character to the USART1 and Loop until the end of transmission */
 921:Core/Src/printf.c **** 	while( !( USART2->ISR & USART_ISR_TXE_TXFNF ) ) {};
 894              		.loc 1 921 24 view .LVU230
 895 0004 8021     		movs	r1, #128
 896              	.LVL98:
 897              		.loc 1 921 18 view .LVU231
 898 0006 034A     		ldr	r2, .L173
 899              	.LVL99:
 900              	.L167:
 901              		.loc 1 921 51 is_stmt 1 view .LVU232
 902              		.loc 1 921 9 view .LVU233
 903              		.loc 1 921 18 is_stmt 0 view .LVU234
 904 0008 D369     		ldr	r3, [r2, #28]
 905              		.loc 1 921 9 view .LVU235
 906 000a 1942     		tst	r1, r3
 907 000c FCD0     		beq	.L167
 908              		.loc 1 921 52 is_stmt 1 view .LVU236
 922:Core/Src/printf.c ****       USART2->TDR = character;
 909              		.loc 1 922 7 view .LVU237
 910              		.loc 1 922 19 is_stmt 0 view .LVU238
 911 000e 9062     		str	r0, [r2, #40]
 912              	.L165:
 913              	.LBE46:
 914              	.LBE45:
 915              	.LBE44:
 916              	.LBE43:
 156:Core/Src/printf.c **** 
 917              		.loc 1 156 1 view .LVU239
 918              		@ sp needed
 919 0010 7047     		bx	lr
 920              	.L174:
 921 0012 C046     		.align	2
 922              	.L173:
 923 0014 00440040 		.word	1073759232
 924              		.cfi_endproc
 925              	.LFE1427:
 927              		.global	__aeabi_dcmpeq
 928              		.global	__aeabi_dcmpgt
 929              		.global	__aeabi_dcmplt
 930              		.global	__aeabi_i2d
 931              		.global	__aeabi_dmul
 932              		.global	__aeabi_dadd
 933              		.global	__aeabi_dsub
 934              		.global	__aeabi_d2iz
 935              		.global	__aeabi_ddiv
 936              		.global	__aeabi_dcmpge
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 36


 937              		.global	__aeabi_uidivmod
 938              		.global	__aeabi_idivmod
 939              		.global	__aeabi_uidiv
 940              		.global	__aeabi_idiv
 941              		.section	.text._etoa,"ax",%progbits
 942              		.align	1
 943              		.p2align 2,,3
 944              		.syntax unified
 945              		.code	16
 946              		.thumb_func
 948              	_etoa:
 949              	.LVL100:
 950              	.LFB1437:
 469:Core/Src/printf.c ****   // check for NaN and special values
 951              		.loc 1 469 1 is_stmt 1 view -0
 952              		.cfi_startproc
 953              		@ args = 20, pretend = 0, frame = 64
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 471:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 955              		.loc 1 471 3 view .LVU241
 469:Core/Src/printf.c ****   // check for NaN and special values
 956              		.loc 1 469 1 is_stmt 0 view .LVU242
 957 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 958              	.LCFI6:
 959              		.cfi_def_cfa_offset 20
 960              		.cfi_offset 4, -20
 961              		.cfi_offset 5, -16
 962              		.cfi_offset 6, -12
 963              		.cfi_offset 7, -8
 964              		.cfi_offset 14, -4
 965 0002 DE46     		mov	lr, fp
 966 0004 4E46     		mov	r6, r9
 967 0006 4546     		mov	r5, r8
 968 0008 5746     		mov	r7, r10
 969 000a E0B5     		push	{r5, r6, r7, lr}
 970              	.LCFI7:
 971              		.cfi_def_cfa_offset 36
 972              		.cfi_offset 8, -36
 973              		.cfi_offset 9, -32
 974              		.cfi_offset 10, -28
 975              		.cfi_offset 11, -24
 976 000c 99B0     		sub	sp, sp, #100
 977              	.LCFI8:
 978              		.cfi_def_cfa_offset 136
 469:Core/Src/printf.c ****   // check for NaN and special values
 979              		.loc 1 469 1 view .LVU243
 980 000e 8146     		mov	r9, r0
 981 0010 8B46     		mov	fp, r1
 982 0012 9846     		mov	r8, r3
 983 0014 0B92     		str	r2, [sp, #44]
 471:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 984              		.loc 1 471 6 view .LVU244
 985 0016 229A     		ldr	r2, [sp, #136]
 986 0018 239B     		ldr	r3, [sp, #140]
 987              	.LVL101:
 471:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 988              		.loc 1 471 6 view .LVU245
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 37


 989 001a 1000     		movs	r0, r2
 990              	.LVL102:
 471:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 991              		.loc 1 471 6 view .LVU246
 992 001c 1900     		movs	r1, r3
 993              	.LVL103:
 471:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 994              		.loc 1 471 6 view .LVU247
 995 001e FFF7FEFF 		bl	__aeabi_dcmpeq
 996              	.LVL104:
 471:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 997              		.loc 1 471 6 view .LVU248
 998 0022 0028     		cmp	r0, #0
 999 0024 00D1     		bne	.LCB1072
 1000 0026 98E1     		b	.L176	@long jump
 1001              	.LCB1072:
 471:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 1002              		.loc 1 471 24 discriminator 1 view .LVU249
 1003 0028 2298     		ldr	r0, [sp, #136]
 1004 002a 2399     		ldr	r1, [sp, #140]
 1005 002c 0122     		movs	r2, #1
 1006 002e DC4B     		ldr	r3, .L243
 1007 0030 5242     		rsbs	r2, r2, #0
 1008 0032 FFF7FEFF 		bl	__aeabi_dcmpgt
 1009              	.LVL105:
 1010 0036 0028     		cmp	r0, #0
 1011 0038 00D0     		beq	.LCB1080
 1012 003a 8EE1     		b	.L176	@long jump
 1013              	.LCB1080:
 471:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 1014              		.loc 1 471 45 discriminator 2 view .LVU250
 1015 003c 2298     		ldr	r0, [sp, #136]
 1016 003e 2399     		ldr	r1, [sp, #140]
 1017 0040 0122     		movs	r2, #1
 1018 0042 D84B     		ldr	r3, .L243+4
 1019 0044 5242     		rsbs	r2, r2, #0
 1020 0046 FFF7FEFF 		bl	__aeabi_dcmplt
 1021              	.LVL106:
 1022 004a 0028     		cmp	r0, #0
 1023 004c 00D0     		beq	.LCB1088
 1024 004e 84E1     		b	.L176	@long jump
 1025              	.LCB1088:
 1026              	.LVL107:
 1027              	.LBB52:
 1028              	.LBI52:
 468:Core/Src/printf.c **** {
 1029              		.loc 1 468 15 is_stmt 1 view .LVU251
 1030              	.LBB53:
 476:Core/Src/printf.c ****   if (negative) {
 1031              		.loc 1 476 3 view .LVU252
 477:Core/Src/printf.c ****     value = -value;
 1032              		.loc 1 477 3 view .LVU253
 477:Core/Src/printf.c ****     value = -value;
 1033              		.loc 1 477 6 is_stmt 0 view .LVU254
 1034 0050 2298     		ldr	r0, [sp, #136]
 1035 0052 2399     		ldr	r1, [sp, #140]
 1036 0054 0022     		movs	r2, #0
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 38


 1037 0056 0023     		movs	r3, #0
 1038 0058 FFF7FEFF 		bl	__aeabi_dcmplt
 1039              	.LVL108:
 1040 005c 0028     		cmp	r0, #0
 1041 005e 00D0     		beq	.LCB1109
 1042 0060 DDE1     		b	.L240	@long jump
 1043              	.LCB1109:
 1044 0062 229B     		ldr	r3, [sp, #136]
 1045 0064 239C     		ldr	r4, [sp, #140]
 1046 0066 0893     		str	r3, [sp, #32]
 1047 0068 0994     		str	r4, [sp, #36]
 1048              	.LVL109:
 1049              	.L180:
 482:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1050              		.loc 1 482 3 is_stmt 1 view .LVU255
 482:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1051              		.loc 1 482 15 is_stmt 0 view .LVU256
 1052 006a 8023     		movs	r3, #128
 1053 006c 269A     		ldr	r2, [sp, #152]
 1054 006e DB00     		lsls	r3, r3, #3
 1055 0070 1A40     		ands	r2, r3
 1056 0072 0F92     		str	r2, [sp, #60]
 482:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1057              		.loc 1 482 6 view .LVU257
 1058 0074 269A     		ldr	r2, [sp, #152]
 1059 0076 1A42     		tst	r2, r3
 1060 0078 01D1     		bne	.L182
 483:Core/Src/printf.c ****   }
 1061              		.loc 1 483 10 view .LVU258
 1062 007a 0623     		movs	r3, #6
 1063 007c 2493     		str	r3, [sp, #144]
 1064              	.LVL110:
 1065              	.L182:
 488:Core/Src/printf.c ****     uint64_t U;
 1066              		.loc 1 488 3 is_stmt 1 view .LVU259
 493:Core/Src/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 1067              		.loc 1 493 3 view .LVU260
 493:Core/Src/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 1068              		.loc 1 493 10 is_stmt 0 view .LVU261
 1069 007e 089A     		ldr	r2, [sp, #32]
 1070 0080 099B     		ldr	r3, [sp, #36]
 494:Core/Src/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 1071              		.loc 1 494 14 view .LVU262
 1072 0082 5800     		lsls	r0, r3, #1
 494:Core/Src/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 1073              		.loc 1 494 7 view .LVU263
 1074 0084 C84B     		ldr	r3, .L243+8
 494:Core/Src/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 1075              		.loc 1 494 14 view .LVU264
 1076 0086 400D     		lsrs	r0, r0, #21
 494:Core/Src/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 1077              		.loc 1 494 7 view .LVU265
 1078 0088 9C46     		mov	ip, r3
 1079 008a 6044     		add	r0, r0, ip
 493:Core/Src/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 1080              		.loc 1 493 10 view .LVU266
 1081 008c 1400     		movs	r4, r2
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 39


 494:Core/Src/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 1082              		.loc 1 494 3 is_stmt 1 view .LVU267
 495:Core/Src/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 1083              		.loc 1 495 3 view .LVU268
 497:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 1084              		.loc 1 497 3 view .LVU269
 497:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 1085              		.loc 1 497 45 is_stmt 0 view .LVU270
 1086 008e FFF7FEFF 		bl	__aeabi_i2d
 1087              	.LVL111:
 1088 0092 C64A     		ldr	r2, .L243+12
 1089 0094 C64B     		ldr	r3, .L243+16
 1090 0096 FFF7FEFF 		bl	__aeabi_dmul
 1091              	.LVL112:
 497:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 1092              		.loc 1 497 38 view .LVU271
 1093 009a C64A     		ldr	r2, .L243+20
 1094 009c C64B     		ldr	r3, .L243+24
 1095 009e FFF7FEFF 		bl	__aeabi_dadd
 1096              	.LVL113:
 495:Core/Src/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 1097              		.loc 1 495 20 view .LVU272
 1098 00a2 099B     		ldr	r3, [sp, #36]
 495:Core/Src/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 1099              		.loc 1 495 44 view .LVU273
 1100 00a4 C54A     		ldr	r2, .L243+28
 495:Core/Src/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 1101              		.loc 1 495 20 view .LVU274
 1102 00a6 1B03     		lsls	r3, r3, #12
 1103 00a8 1B0B     		lsrs	r3, r3, #12
 495:Core/Src/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 1104              		.loc 1 495 44 view .LVU275
 1105 00aa 1A43     		orrs	r2, r3
 497:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 1106              		.loc 1 497 38 view .LVU276
 1107 00ac 0600     		movs	r6, r0
 1108 00ae 0F00     		movs	r7, r1
 495:Core/Src/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 1109              		.loc 1 495 44 view .LVU277
 1110 00b0 2000     		movs	r0, r4
 1111 00b2 1100     		movs	r1, r2
 497:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 1112              		.loc 1 497 75 view .LVU278
 1113 00b4 C24B     		ldr	r3, .L243+32
 1114 00b6 0022     		movs	r2, #0
 1115 00b8 FFF7FEFF 		bl	__aeabi_dsub
 1116              	.LVL114:
 497:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 1117              		.loc 1 497 82 view .LVU279
 1118 00bc C14A     		ldr	r2, .L243+36
 1119 00be C24B     		ldr	r3, .L243+40
 1120 00c0 FFF7FEFF 		bl	__aeabi_dmul
 1121              	.LVL115:
 1122 00c4 0200     		movs	r2, r0
 1123 00c6 0B00     		movs	r3, r1
 497:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 1124              		.loc 1 497 65 view .LVU280
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 40


 1125 00c8 3000     		movs	r0, r6
 1126 00ca 3900     		movs	r1, r7
 1127 00cc FFF7FEFF 		bl	__aeabi_dadd
 1128              	.LVL116:
 497:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 1129              		.loc 1 497 7 view .LVU281
 1130 00d0 FFF7FEFF 		bl	__aeabi_d2iz
 1131              	.LVL117:
 1132 00d4 8246     		mov	r10, r0
 1133              	.LVL118:
 499:Core/Src/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1134              		.loc 1 499 3 is_stmt 1 view .LVU282
 499:Core/Src/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1135              		.loc 1 499 23 is_stmt 0 view .LVU283
 1136 00d6 FFF7FEFF 		bl	__aeabi_i2d
 1137              	.LVL119:
 499:Core/Src/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1138              		.loc 1 499 23 view .LVU284
 1139 00da BC4A     		ldr	r2, .L243+44
 1140 00dc BC4B     		ldr	r3, .L243+48
 1141 00de 0400     		movs	r4, r0
 1142 00e0 0D00     		movs	r5, r1
 1143 00e2 FFF7FEFF 		bl	__aeabi_dmul
 1144              	.LVL120:
 499:Core/Src/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1145              		.loc 1 499 43 view .LVU285
 1146 00e6 0022     		movs	r2, #0
 1147 00e8 BA4B     		ldr	r3, .L243+52
 1148 00ea FFF7FEFF 		bl	__aeabi_dadd
 1149              	.LVL121:
 499:Core/Src/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1150              		.loc 1 499 8 view .LVU286
 1151 00ee FFF7FEFF 		bl	__aeabi_d2iz
 1152              	.LVL122:
 500:Core/Src/printf.c ****   const double z2 = z * z;
 1153              		.loc 1 500 28 view .LVU287
 1154 00f2 B94A     		ldr	r2, .L243+56
 499:Core/Src/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1155              		.loc 1 499 8 view .LVU288
 1156 00f4 0600     		movs	r6, r0
 1157              	.LVL123:
 500:Core/Src/printf.c ****   const double z2 = z * z;
 1158              		.loc 1 500 3 is_stmt 1 view .LVU289
 500:Core/Src/printf.c ****   const double z2 = z * z;
 1159              		.loc 1 500 28 is_stmt 0 view .LVU290
 1160 00f6 B94B     		ldr	r3, .L243+60
 1161 00f8 2000     		movs	r0, r4
 1162              	.LVL124:
 500:Core/Src/printf.c ****   const double z2 = z * z;
 1163              		.loc 1 500 28 view .LVU291
 1164 00fa 2900     		movs	r1, r5
 1165 00fc FFF7FEFF 		bl	__aeabi_dmul
 1166              	.LVL125:
 1167 0100 0400     		movs	r4, r0
 500:Core/Src/printf.c ****   const double z2 = z * z;
 1168              		.loc 1 500 55 view .LVU292
 1169 0102 3000     		movs	r0, r6
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 41


 500:Core/Src/printf.c ****   const double z2 = z * z;
 1170              		.loc 1 500 28 view .LVU293
 1171 0104 0D00     		movs	r5, r1
 500:Core/Src/printf.c ****   const double z2 = z * z;
 1172              		.loc 1 500 55 view .LVU294
 1173 0106 0E96     		str	r6, [sp, #56]
 1174 0108 FFF7FEFF 		bl	__aeabi_i2d
 1175              	.LVL126:
 1176 010c B44A     		ldr	r2, .L243+64
 1177 010e B54B     		ldr	r3, .L243+68
 1178 0110 FFF7FEFF 		bl	__aeabi_dmul
 1179              	.LVL127:
 1180 0114 0200     		movs	r2, r0
 1181 0116 0B00     		movs	r3, r1
 500:Core/Src/printf.c ****   const double z2 = z * z;
 1182              		.loc 1 500 16 view .LVU295
 1183 0118 2000     		movs	r0, r4
 1184 011a 2900     		movs	r1, r5
 1185 011c FFF7FEFF 		bl	__aeabi_dsub
 1186              	.LVL128:
 501:Core/Src/printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 1187              		.loc 1 501 16 view .LVU296
 1188 0120 0200     		movs	r2, r0
 1189 0122 0B00     		movs	r3, r1
 500:Core/Src/printf.c ****   const double z2 = z * z;
 1190              		.loc 1 500 16 view .LVU297
 1191 0124 0600     		movs	r6, r0
 1192              	.LVL129:
 500:Core/Src/printf.c ****   const double z2 = z * z;
 1193              		.loc 1 500 16 view .LVU298
 1194 0126 0F00     		movs	r7, r1
 1195              	.LVL130:
 501:Core/Src/printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 1196              		.loc 1 501 3 is_stmt 1 view .LVU299
 501:Core/Src/printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 1197              		.loc 1 501 16 is_stmt 0 view .LVU300
 1198 0128 FFF7FEFF 		bl	__aeabi_dmul
 1199              	.LVL131:
 504:Core/Src/printf.c ****   // correct for rounding errors
 1200              		.loc 1 504 19 view .LVU301
 1201 012c 3200     		movs	r2, r6
 501:Core/Src/printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 1202              		.loc 1 501 16 view .LVU302
 1203 012e 0400     		movs	r4, r0
 1204 0130 0D00     		movs	r5, r1
 1205              	.LVL132:
 502:Core/Src/printf.c ****   // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_functi
 1206              		.loc 1 502 3 is_stmt 1 view .LVU303
 504:Core/Src/printf.c ****   // correct for rounding errors
 1207              		.loc 1 504 3 view .LVU304
 504:Core/Src/printf.c ****   // correct for rounding errors
 1208              		.loc 1 504 19 is_stmt 0 view .LVU305
 1209 0132 3B00     		movs	r3, r7
 1210 0134 3000     		movs	r0, r6
 1211 0136 3900     		movs	r1, r7
 1212 0138 FFF7FEFF 		bl	__aeabi_dadd
 1213              	.LVL133:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 42


 504:Core/Src/printf.c ****   // correct for rounding errors
 1214              		.loc 1 504 60 view .LVU306
 1215 013c 0022     		movs	r2, #0
 504:Core/Src/printf.c ****   // correct for rounding errors
 1216              		.loc 1 504 19 view .LVU307
 1217 013e 0C90     		str	r0, [sp, #48]
 1218 0140 0D91     		str	r1, [sp, #52]
 504:Core/Src/printf.c ****   // correct for rounding errors
 1219              		.loc 1 504 60 view .LVU308
 1220 0142 A94B     		ldr	r3, .L243+72
 1221 0144 2000     		movs	r0, r4
 1222 0146 2900     		movs	r1, r5
 1223 0148 FFF7FEFF 		bl	__aeabi_ddiv
 1224              	.LVL134:
 504:Core/Src/printf.c ****   // correct for rounding errors
 1225              		.loc 1 504 55 view .LVU309
 1226 014c 0022     		movs	r2, #0
 1227 014e A74B     		ldr	r3, .L243+76
 1228 0150 FFF7FEFF 		bl	__aeabi_dadd
 1229              	.LVL135:
 1230 0154 0200     		movs	r2, r0
 1231 0156 0B00     		movs	r3, r1
 504:Core/Src/printf.c ****   // correct for rounding errors
 1232              		.loc 1 504 49 view .LVU310
 1233 0158 2000     		movs	r0, r4
 1234 015a 2900     		movs	r1, r5
 1235 015c FFF7FEFF 		bl	__aeabi_ddiv
 1236              	.LVL136:
 504:Core/Src/printf.c ****   // correct for rounding errors
 1237              		.loc 1 504 43 view .LVU311
 1238 0160 0022     		movs	r2, #0
 1239 0162 A34B     		ldr	r3, .L243+80
 1240 0164 FFF7FEFF 		bl	__aeabi_dadd
 1241              	.LVL137:
 1242 0168 0200     		movs	r2, r0
 1243 016a 0B00     		movs	r3, r1
 504:Core/Src/printf.c ****   // correct for rounding errors
 1244              		.loc 1 504 38 view .LVU312
 1245 016c 2000     		movs	r0, r4
 1246 016e 2900     		movs	r1, r5
 1247 0170 FFF7FEFF 		bl	__aeabi_ddiv
 1248              	.LVL138:
 1249 0174 0D00     		movs	r5, r1
 504:Core/Src/printf.c ****   // correct for rounding errors
 1250              		.loc 1 504 28 view .LVU313
 1251 0176 8021     		movs	r1, #128
 504:Core/Src/printf.c ****   // correct for rounding errors
 1252              		.loc 1 504 38 view .LVU314
 1253 0178 0400     		movs	r4, r0
 1254              	.LVL139:
 504:Core/Src/printf.c ****   // correct for rounding errors
 1255              		.loc 1 504 28 view .LVU315
 1256 017a 3200     		movs	r2, r6
 1257 017c 3B00     		movs	r3, r7
 1258 017e 0020     		movs	r0, #0
 1259 0180 C905     		lsls	r1, r1, #23
 1260 0182 FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 43


 1261              	.LVL140:
 1262 0186 0200     		movs	r2, r0
 1263 0188 0B00     		movs	r3, r1
 504:Core/Src/printf.c ****   // correct for rounding errors
 1264              		.loc 1 504 32 view .LVU316
 1265 018a 2000     		movs	r0, r4
 1266 018c 2900     		movs	r1, r5
 1267 018e FFF7FEFF 		bl	__aeabi_dadd
 1268              	.LVL141:
 1269 0192 0200     		movs	r2, r0
 1270 0194 0B00     		movs	r3, r1
 504:Core/Src/printf.c ****   // correct for rounding errors
 1271              		.loc 1 504 23 view .LVU317
 1272 0196 0C98     		ldr	r0, [sp, #48]
 1273 0198 0D99     		ldr	r1, [sp, #52]
 1274 019a FFF7FEFF 		bl	__aeabi_ddiv
 1275              	.LVL142:
 504:Core/Src/printf.c ****   // correct for rounding errors
 1276              		.loc 1 504 15 view .LVU318
 1277 019e 0022     		movs	r2, #0
 1278 01a0 864B     		ldr	r3, .L243+28
 1279 01a2 FFF7FEFF 		bl	__aeabi_dadd
 1280              	.LVL143:
 502:Core/Src/printf.c ****   // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_functi
 1281              		.loc 1 502 28 view .LVU319
 1282 01a6 934B     		ldr	r3, .L243+84
 1283 01a8 0E9C     		ldr	r4, [sp, #56]
 1284 01aa 9C46     		mov	ip, r3
 1285 01ac 6444     		add	r4, r4, ip
 502:Core/Src/printf.c ****   // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_functi
 1286              		.loc 1 502 36 view .LVU320
 1287 01ae 0022     		movs	r2, #0
 1288 01b0 2305     		lsls	r3, r4, #20
 504:Core/Src/printf.c ****   // correct for rounding errors
 1289              		.loc 1 504 10 view .LVU321
 1290 01b2 FFF7FEFF 		bl	__aeabi_dmul
 1291              	.LVL144:
 1292 01b6 0600     		movs	r6, r0
 1293              	.LVL145:
 504:Core/Src/printf.c ****   // correct for rounding errors
 1294              		.loc 1 504 10 view .LVU322
 1295 01b8 0F00     		movs	r7, r1
 1296              	.LVL146:
 506:Core/Src/printf.c ****     expval--;
 1297              		.loc 1 506 3 is_stmt 1 view .LVU323
 506:Core/Src/printf.c ****     expval--;
 1298              		.loc 1 506 6 is_stmt 0 view .LVU324
 1299 01ba 0200     		movs	r2, r0
 1300 01bc 0B00     		movs	r3, r1
 1301 01be 0898     		ldr	r0, [sp, #32]
 1302 01c0 0999     		ldr	r1, [sp, #36]
 1303 01c2 FFF7FEFF 		bl	__aeabi_dcmplt
 1304              	.LVL147:
 1305 01c6 0028     		cmp	r0, #0
 1306 01c8 0BD0     		beq	.L183
 507:Core/Src/printf.c ****     conv.F /= 10;
 1307              		.loc 1 507 5 is_stmt 1 view .LVU325
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 44


 507:Core/Src/printf.c ****     conv.F /= 10;
 1308              		.loc 1 507 11 is_stmt 0 view .LVU326
 1309 01ca 0123     		movs	r3, #1
 1310 01cc 5B42     		rsbs	r3, r3, #0
 1311 01ce 9C46     		mov	ip, r3
 508:Core/Src/printf.c ****   }
 1312              		.loc 1 508 12 view .LVU327
 1313 01d0 3000     		movs	r0, r6
 1314 01d2 3900     		movs	r1, r7
 1315 01d4 0022     		movs	r2, #0
 1316 01d6 854B     		ldr	r3, .L243+76
 507:Core/Src/printf.c ****     conv.F /= 10;
 1317              		.loc 1 507 11 view .LVU328
 1318 01d8 E244     		add	r10, r10, ip
 1319              	.LVL148:
 508:Core/Src/printf.c ****   }
 1320              		.loc 1 508 5 is_stmt 1 view .LVU329
 508:Core/Src/printf.c ****   }
 1321              		.loc 1 508 12 is_stmt 0 view .LVU330
 1322 01da FFF7FEFF 		bl	__aeabi_ddiv
 1323              	.LVL149:
 1324 01de 0600     		movs	r6, r0
 1325              	.LVL150:
 508:Core/Src/printf.c ****   }
 1326              		.loc 1 508 12 view .LVU331
 1327 01e0 0F00     		movs	r7, r1
 1328              	.LVL151:
 1329              	.L183:
 512:Core/Src/printf.c **** 
 1330              		.loc 1 512 3 is_stmt 1 view .LVU332
 512:Core/Src/printf.c **** 
 1331              		.loc 1 512 68 is_stmt 0 view .LVU333
 1332 01e2 5346     		mov	r3, r10
 1333 01e4 C625     		movs	r5, #198
 1334 01e6 6333     		adds	r3, r3, #99
 1335 01e8 9D42     		cmp	r5, r3
 1336 01ea AD41     		sbcs	r5, r5, r5
 515:Core/Src/printf.c ****     // do we want to fall-back to "%f" mode?
 1337              		.loc 1 515 6 view .LVU334
 1338 01ec 269B     		ldr	r3, [sp, #152]
 512:Core/Src/printf.c **** 
 1339              		.loc 1 512 68 view .LVU335
 1340 01ee 6D42     		rsbs	r5, r5, #0
 1341 01f0 0435     		adds	r5, r5, #4
 1342              	.LVL152:
 515:Core/Src/printf.c ****     // do we want to fall-back to "%f" mode?
 1343              		.loc 1 515 3 is_stmt 1 view .LVU336
 515:Core/Src/printf.c ****     // do we want to fall-back to "%f" mode?
 1344              		.loc 1 515 6 is_stmt 0 view .LVU337
 1345 01f2 1B05     		lsls	r3, r3, #20
 1346 01f4 21D5     		bpl	.L186
 517:Core/Src/printf.c ****       if ((int)prec > expval) {
 1347              		.loc 1 517 5 is_stmt 1 view .LVU338
 517:Core/Src/printf.c ****       if ((int)prec > expval) {
 1348              		.loc 1 517 8 is_stmt 0 view .LVU339
 1349 01f6 0898     		ldr	r0, [sp, #32]
 1350 01f8 0999     		ldr	r1, [sp, #36]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 45


 1351 01fa 7F4A     		ldr	r2, .L243+88
 1352 01fc 7F4B     		ldr	r3, .L243+92
 1353 01fe FFF7FEFF 		bl	__aeabi_dcmpge
 1354              	.LVL153:
 1355 0202 0028     		cmp	r0, #0
 1356 0204 00D1     		bne	.LCB1339
 1357 0206 FFE0     		b	.L187	@long jump
 1358              	.LCB1339:
 517:Core/Src/printf.c ****       if ((int)prec > expval) {
 1359              		.loc 1 517 25 view .LVU340
 1360 0208 0898     		ldr	r0, [sp, #32]
 1361 020a 0999     		ldr	r1, [sp, #36]
 1362 020c 0022     		movs	r2, #0
 1363 020e 7C4B     		ldr	r3, .L243+96
 1364 0210 FFF7FEFF 		bl	__aeabi_dcmplt
 1365              	.LVL154:
 1366 0214 0028     		cmp	r0, #0
 1367 0216 00D1     		bne	.LCB1346
 1368 0218 F6E0     		b	.L187	@long jump
 1369              	.LCB1346:
 518:Core/Src/printf.c ****         prec = (unsigned)((int)prec - expval - 1);
 1370              		.loc 1 518 7 is_stmt 1 view .LVU341
 518:Core/Src/printf.c ****         prec = (unsigned)((int)prec - expval - 1);
 1371              		.loc 1 518 10 is_stmt 0 view .LVU342
 1372 021a 249B     		ldr	r3, [sp, #144]
 1373 021c 9A45     		cmp	r10, r3
 1374 021e 00DB     		blt	.LCB1350
 1375 0220 06E1     		b	.L202	@long jump
 1376              	.LCB1350:
 519:Core/Src/printf.c ****       }
 1377              		.loc 1 519 9 is_stmt 1 view .LVU343
 519:Core/Src/printf.c ****       }
 1378              		.loc 1 519 37 is_stmt 0 view .LVU344
 1379 0222 5246     		mov	r2, r10
 1380 0224 9B1A     		subs	r3, r3, r2
 519:Core/Src/printf.c ****       }
 1381              		.loc 1 519 46 view .LVU345
 1382 0226 013B     		subs	r3, r3, #1
 1383 0228 2493     		str	r3, [sp, #144]
 1384              	.LVL155:
 1385              	.L190:
 524:Core/Src/printf.c ****       // no characters in exponent
 1386              		.loc 1 524 7 is_stmt 1 view .LVU346
 524:Core/Src/printf.c ****       // no characters in exponent
 1387              		.loc 1 524 13 is_stmt 0 view .LVU347
 1388 022a 8023     		movs	r3, #128
 1389 022c 269A     		ldr	r2, [sp, #152]
 1390 022e DB00     		lsls	r3, r3, #3
 1391 0230 1A43     		orrs	r2, r3
 527:Core/Src/printf.c ****     }
 1392              		.loc 1 527 16 view .LVU348
 1393 0232 0023     		movs	r3, #0
 526:Core/Src/printf.c ****       expval   = 0;
 1394              		.loc 1 526 16 view .LVU349
 1395 0234 0025     		movs	r5, #0
 1396              	.LVL156:
 527:Core/Src/printf.c ****     }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 46


 1397              		.loc 1 527 16 view .LVU350
 1398 0236 9A46     		mov	r10, r3
 1399              	.LVL157:
 524:Core/Src/printf.c ****       // no characters in exponent
 1400              		.loc 1 524 13 view .LVU351
 1401 0238 2692     		str	r2, [sp, #152]
 1402              	.LVL158:
 526:Core/Src/printf.c ****       expval   = 0;
 1403              		.loc 1 526 7 is_stmt 1 view .LVU352
 527:Core/Src/printf.c ****     }
 1404              		.loc 1 527 7 view .LVU353
 1405              	.L186:
 538:Core/Src/printf.c ****   if (width > minwidth) {
 1406              		.loc 1 538 3 view .LVU354
 539:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1407              		.loc 1 539 3 view .LVU355
 539:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1408              		.loc 1 539 6 is_stmt 0 view .LVU356
 1409 023a 259B     		ldr	r3, [sp, #148]
 544:Core/Src/printf.c ****   }
 1410              		.loc 1 544 12 view .LVU357
 1411 023c 0024     		movs	r4, #0
 539:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1412              		.loc 1 539 6 view .LVU358
 1413 023e AB42     		cmp	r3, r5
 1414 0240 00D9     		bls	.L191
 541:Core/Src/printf.c ****   } else {
 1415              		.loc 1 541 5 is_stmt 1 view .LVU359
 541:Core/Src/printf.c ****   } else {
 1416              		.loc 1 541 12 is_stmt 0 view .LVU360
 1417 0242 5C1B     		subs	r4, r3, r5
 1418              	.LVL159:
 1419              	.L191:
 546:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1420              		.loc 1 546 3 is_stmt 1 view .LVU361
 546:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1421              		.loc 1 546 14 is_stmt 0 view .LVU362
 1422 0244 0223     		movs	r3, #2
 1423 0246 269A     		ldr	r2, [sp, #152]
 1424 0248 1A40     		ands	r2, r3
 1425 024a 0E92     		str	r2, [sp, #56]
 1426              	.LVL160:
 546:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1427              		.loc 1 546 6 view .LVU363
 1428 024c 269A     		ldr	r2, [sp, #152]
 1429 024e 1342     		tst	r3, r2
 1430 0250 03D0     		beq	.L192
 548:Core/Src/printf.c ****   }
 1431              		.loc 1 548 12 view .LVU364
 1432 0252 6B42     		rsbs	r3, r5, #0
 1433 0254 6B41     		adcs	r3, r3, r5
 1434 0256 5B42     		rsbs	r3, r3, #0
 1435 0258 1C40     		ands	r4, r3
 1436              	.LVL161:
 1437              	.L192:
 552:Core/Src/printf.c ****     value /= conv.F;
 1438              		.loc 1 552 3 is_stmt 1 view .LVU365
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 47


 552:Core/Src/printf.c ****     value /= conv.F;
 1439              		.loc 1 552 6 is_stmt 0 view .LVU366
 1440 025a 5346     		mov	r3, r10
 1441 025c 002B     		cmp	r3, #0
 1442 025e 00D0     		beq	.LCB1426
 1443 0260 94E0     		b	.L241	@long jump
 1444              	.LCB1426:
 1445              	.L193:
 557:Core/Src/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 1446              		.loc 1 557 3 is_stmt 1 view .LVU367
 1447              	.LVL162:
 558:Core/Src/printf.c **** 
 1448              		.loc 1 558 3 view .LVU368
 558:Core/Src/printf.c **** 
 1449              		.loc 1 558 9 is_stmt 0 view .LVU369
 1450 0262 2298     		ldr	r0, [sp, #136]
 1451 0264 2399     		ldr	r1, [sp, #140]
 1452 0266 0022     		movs	r2, #0
 1453 0268 0023     		movs	r3, #0
 1454 026a FFF7FEFF 		bl	__aeabi_dcmplt
 1455              	.LVL163:
 1456 026e 0028     		cmp	r0, #0
 1457 0270 0AD0     		beq	.L194
 1458 0272 089E     		ldr	r6, [sp, #32]
 1459 0274 099F     		ldr	r7, [sp, #36]
 1460 0276 8020     		movs	r0, #128
 1461 0278 0006     		lsls	r0, r0, #24
 1462 027a 3900     		movs	r1, r7
 1463 027c 8446     		mov	ip, r0
 1464 027e 6144     		add	r1, r1, ip
 1465 0280 3200     		movs	r2, r6
 1466 0282 0B00     		movs	r3, r1
 1467 0284 0892     		str	r2, [sp, #32]
 1468 0286 0993     		str	r3, [sp, #36]
 1469              	.LVL164:
 1470              	.L194:
 558:Core/Src/printf.c **** 
 1471              		.loc 1 558 9 view .LVU370
 1472 0288 269A     		ldr	r2, [sp, #152]
 1473 028a 5E4B     		ldr	r3, .L243+100
 1474 028c 0394     		str	r4, [sp, #12]
 1475 028e 1340     		ands	r3, r2
 1476 0290 0493     		str	r3, [sp, #16]
 1477 0292 249B     		ldr	r3, [sp, #144]
 1478 0294 5946     		mov	r1, fp
 1479 0296 0293     		str	r3, [sp, #8]
 1480 0298 4846     		mov	r0, r9
 1481 029a 089B     		ldr	r3, [sp, #32]
 1482 029c 099C     		ldr	r4, [sp, #36]
 1483 029e 0B9A     		ldr	r2, [sp, #44]
 1484 02a0 0093     		str	r3, [sp]
 1485 02a2 0194     		str	r4, [sp, #4]
 1486 02a4 4346     		mov	r3, r8
 1487 02a6 FFF7FEFF 		bl	_ftoa
 1488              	.LVL165:
 1489 02aa 0400     		movs	r4, r0
 1490              	.LVL166:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 48


 561:Core/Src/printf.c ****     // output the exponential symbol
 1491              		.loc 1 561 3 is_stmt 1 view .LVU371
 561:Core/Src/printf.c ****     // output the exponential symbol
 1492              		.loc 1 561 6 is_stmt 0 view .LVU372
 1493 02ac 002D     		cmp	r5, #0
 1494 02ae 65D0     		beq	.L175
 563:Core/Src/printf.c ****     // output the exponent value
 1495              		.loc 1 563 5 is_stmt 1 view .LVU373
 563:Core/Src/printf.c ****     // output the exponent value
 1496              		.loc 1 563 16 is_stmt 0 view .LVU374
 1497 02b0 2020     		movs	r0, #32
 1498              	.LVL167:
 563:Core/Src/printf.c ****     // output the exponent value
 1499              		.loc 1 563 16 view .LVU375
 1500 02b2 269B     		ldr	r3, [sp, #152]
 563:Core/Src/printf.c ****     // output the exponent value
 1501              		.loc 1 563 5 view .LVU376
 1502 02b4 5946     		mov	r1, fp
 563:Core/Src/printf.c ****     // output the exponent value
 1503              		.loc 1 563 16 view .LVU377
 1504 02b6 0340     		ands	r3, r0
 563:Core/Src/printf.c ****     // output the exponent value
 1505              		.loc 1 563 5 view .LVU378
 1506 02b8 5A42     		rsbs	r2, r3, #0
 1507 02ba 5341     		adcs	r3, r3, r2
 1508 02bc 5B42     		rsbs	r3, r3, #0
 1509 02be 1840     		ands	r0, r3
 1510 02c0 631C     		adds	r3, r4, #1
 1511 02c2 2200     		movs	r2, r4
 1512 02c4 0893     		str	r3, [sp, #32]
 1513              	.LVL168:
 563:Core/Src/printf.c ****     // output the exponent value
 1514              		.loc 1 563 5 view .LVU379
 1515 02c6 4530     		adds	r0, r0, #69
 1516 02c8 4346     		mov	r3, r8
 1517              	.LVL169:
 563:Core/Src/printf.c ****     // output the exponent value
 1518              		.loc 1 563 5 view .LVU380
 1519 02ca C847     		blx	r9
 1520              	.LVL170:
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 1521              		.loc 1 565 5 is_stmt 1 view .LVU381
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 1522              		.loc 1 565 71 is_stmt 0 view .LVU382
 1523 02cc 5246     		mov	r2, r10
 1524 02ce D317     		asrs	r3, r2, #31
 1525 02d0 D418     		adds	r4, r2, r3
 1526 02d2 5C40     		eors	r4, r3
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 1527              		.loc 1 565 11 view .LVU383
 1528 02d4 D30F     		lsrs	r3, r2, #31
 1529 02d6 6F1E     		subs	r7, r5, #1
 1530              	.LVL171:
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 1531              		.loc 1 565 11 view .LVU384
 1532 02d8 9A46     		mov	r10, r3
 1533              	.LVL172:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 49


 1534              	.LBB54:
 1535              	.LBI54:
 282:Core/Src/printf.c **** {
 1536              		.loc 1 282 15 is_stmt 1 view .LVU385
 1537              	.LBB55:
 284:Core/Src/printf.c ****   size_t len = 0U;
 1538              		.loc 1 284 3 view .LVU386
 285:Core/Src/printf.c **** 
 1539              		.loc 1 285 3 view .LVU387
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 1540              		.loc 1 288 3 view .LVU388
 293:Core/Src/printf.c ****     do {
 1541              		.loc 1 293 3 view .LVU389
 1542              	.LBE55:
 1543              	.LBE54:
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 1544              		.loc 1 565 11 is_stmt 0 view .LVU390
 1545 02da 0025     		movs	r5, #0
 1546              	.LVL173:
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 1547              		.loc 1 565 11 view .LVU391
 1548 02dc 01E0     		b	.L198
 1549              	.LVL174:
 1550              	.L242:
 1551              	.LBB59:
 1552              	.LBB57:
 298:Core/Src/printf.c ****   }
 1553              		.loc 1 298 20 view .LVU392
 1554 02de 202D     		cmp	r5, #32
 1555 02e0 13D0     		beq	.L197
 1556              	.LVL175:
 1557              	.L198:
 294:Core/Src/printf.c ****       const char digit = (char)(value % base);
 1558              		.loc 1 294 5 is_stmt 1 view .LVU393
 1559              	.LBB56:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 1560              		.loc 1 295 7 view .LVU394
 296:Core/Src/printf.c ****       value /= base;
 1561              		.loc 1 296 7 view .LVU395
 296:Core/Src/printf.c ****       value /= base;
 1562              		.loc 1 296 18 is_stmt 0 view .LVU396
 1563 02e2 08AA     		add	r2, sp, #32
 1564              	.LVL176:
 296:Core/Src/printf.c ****       value /= base;
 1565              		.loc 1 296 18 view .LVU397
 1566 02e4 9446     		mov	ip, r2
 1567 02e6 1F23     		movs	r3, #31
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 1568              		.loc 1 295 39 view .LVU398
 1569 02e8 2000     		movs	r0, r4
 296:Core/Src/printf.c ****       value /= base;
 1570              		.loc 1 296 18 view .LVU399
 1571 02ea 6344     		add	r3, r3, ip
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 1572              		.loc 1 295 39 view .LVU400
 1573 02ec 0A21     		movs	r1, #10
 296:Core/Src/printf.c ****       value /= base;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 50


 1574              		.loc 1 296 14 view .LVU401
 1575 02ee 0135     		adds	r5, r5, #1
 1576              	.LVL177:
 296:Core/Src/printf.c ****       value /= base;
 1577              		.loc 1 296 18 view .LVU402
 1578 02f0 5E19     		adds	r6, r3, r5
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 1579              		.loc 1 295 39 view .LVU403
 1580 02f2 FFF7FEFF 		bl	__aeabi_uidivmod
 1581              	.LVL178:
 296:Core/Src/printf.c ****       value /= base;
 1582              		.loc 1 296 18 view .LVU404
 1583 02f6 3031     		adds	r1, r1, #48
 1584 02f8 3170     		strb	r1, [r6]
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 1585              		.loc 1 297 7 is_stmt 1 view .LVU405
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 1586              		.loc 1 297 13 is_stmt 0 view .LVU406
 1587 02fa 2000     		movs	r0, r4
 1588 02fc 0A21     		movs	r1, #10
 1589 02fe FFF7FEFF 		bl	__aeabi_uidiv
 1590              	.LVL179:
 1591 0302 2600     		movs	r6, r4
 1592 0304 0400     		movs	r4, r0
 1593              	.LVL180:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 1594              		.loc 1 297 13 view .LVU407
 1595              	.LBE56:
 298:Core/Src/printf.c ****   }
 1596              		.loc 1 298 20 is_stmt 1 view .LVU408
 1597 0306 092E     		cmp	r6, #9
 1598 0308 E9D8     		bhi	.L242
 1599              	.L197:
 301:Core/Src/printf.c **** }
 1600              		.loc 1 301 3 view .LVU409
 301:Core/Src/printf.c **** }
 1601              		.loc 1 301 10 is_stmt 0 view .LVU410
 1602 030a 0523     		movs	r3, #5
 1603 030c 0693     		str	r3, [sp, #24]
 1604 030e 0023     		movs	r3, #0
 1605 0310 0493     		str	r3, [sp, #16]
 1606 0312 0A33     		adds	r3, r3, #10
 1607 0314 0393     		str	r3, [sp, #12]
 1608 0316 5346     		mov	r3, r10
 1609 0318 0293     		str	r3, [sp, #8]
 1610 031a 10AB     		add	r3, sp, #64
 1611 031c 0093     		str	r3, [sp]
 1612 031e 5946     		mov	r1, fp
 1613 0320 4346     		mov	r3, r8
 1614 0322 4846     		mov	r0, r9
 1615              	.LVL181:
 301:Core/Src/printf.c **** }
 1616              		.loc 1 301 10 view .LVU411
 1617 0324 089A     		ldr	r2, [sp, #32]
 1618 0326 0597     		str	r7, [sp, #20]
 1619 0328 0195     		str	r5, [sp, #4]
 1620 032a FFF7FEFF 		bl	_ntoa_format
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 51


 1621              	.LVL182:
 1622              	.LBE57:
 1623              	.LBE59:
 567:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1624              		.loc 1 567 8 view .LVU412
 1625 032e 0E9B     		ldr	r3, [sp, #56]
 1626              	.LBB60:
 1627              	.LBB58:
 301:Core/Src/printf.c **** }
 1628              		.loc 1 301 10 view .LVU413
 1629 0330 0400     		movs	r4, r0
 1630              	.LVL183:
 301:Core/Src/printf.c **** }
 1631              		.loc 1 301 10 view .LVU414
 1632              	.LBE58:
 1633              	.LBE60:
 567:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1634              		.loc 1 567 5 is_stmt 1 view .LVU415
 567:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1635              		.loc 1 567 8 is_stmt 0 view .LVU416
 1636 0332 002B     		cmp	r3, #0
 1637 0334 22D0     		beq	.L175
 568:Core/Src/printf.c ****     }
 1638              		.loc 1 568 30 is_stmt 1 view .LVU417
 568:Core/Src/printf.c ****     }
 1639              		.loc 1 568 18 is_stmt 0 view .LVU418
 1640 0336 0B9B     		ldr	r3, [sp, #44]
 1641 0338 C51A     		subs	r5, r0, r3
 568:Core/Src/printf.c ****     }
 1642              		.loc 1 568 30 view .LVU419
 1643 033a 259B     		ldr	r3, [sp, #148]
 1644 033c AB42     		cmp	r3, r5
 1645 033e 1DD9     		bls	.L175
 1646 0340 4E46     		mov	r6, r9
 1647 0342 5F46     		mov	r7, fp
 1648              	.LVL184:
 1649              	.L199:
 568:Core/Src/printf.c ****     }
 1650              		.loc 1 568 39 is_stmt 1 view .LVU420
 568:Core/Src/printf.c ****     }
 1651              		.loc 1 568 39 is_stmt 0 view .LVU421
 1652 0344 2200     		movs	r2, r4
 1653 0346 4346     		mov	r3, r8
 1654 0348 3900     		movs	r1, r7
 1655 034a 2020     		movs	r0, #32
 1656 034c B047     		blx	r6
 1657              	.LVL185:
 568:Core/Src/printf.c ****     }
 1658              		.loc 1 568 30 view .LVU422
 1659 034e 259B     		ldr	r3, [sp, #148]
 1660 0350 0135     		adds	r5, r5, #1
 568:Core/Src/printf.c ****     }
 1661              		.loc 1 568 39 view .LVU423
 1662 0352 0134     		adds	r4, r4, #1
 1663              	.LVL186:
 568:Core/Src/printf.c ****     }
 1664              		.loc 1 568 30 is_stmt 1 view .LVU424
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 52


 1665 0354 AB42     		cmp	r3, r5
 1666 0356 F5D8     		bhi	.L199
 1667 0358 10E0     		b	.L175
 1668              	.LVL187:
 1669              	.L176:
 568:Core/Src/printf.c ****     }
 1670              		.loc 1 568 30 is_stmt 0 view .LVU425
 1671              	.LBE53:
 1672              	.LBE52:
 472:Core/Src/printf.c ****   }
 1673              		.loc 1 472 5 is_stmt 1 view .LVU426
 472:Core/Src/printf.c ****   }
 1674              		.loc 1 472 12 is_stmt 0 view .LVU427
 1675 035a 269B     		ldr	r3, [sp, #152]
 1676 035c 5946     		mov	r1, fp
 1677 035e 0493     		str	r3, [sp, #16]
 1678 0360 259B     		ldr	r3, [sp, #148]
 1679 0362 4846     		mov	r0, r9
 1680 0364 0393     		str	r3, [sp, #12]
 1681 0366 249B     		ldr	r3, [sp, #144]
 1682 0368 0B9A     		ldr	r2, [sp, #44]
 1683 036a 0293     		str	r3, [sp, #8]
 1684 036c 229B     		ldr	r3, [sp, #136]
 1685 036e 239C     		ldr	r4, [sp, #140]
 1686 0370 0093     		str	r3, [sp]
 1687 0372 0194     		str	r4, [sp, #4]
 1688 0374 4346     		mov	r3, r8
 1689 0376 FFF7FEFF 		bl	_ftoa
 1690              	.LVL188:
 1691 037a 0400     		movs	r4, r0
 1692              	.LVL189:
 1693              	.L175:
 572:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 1694              		.loc 1 572 1 view .LVU428
 1695 037c 2000     		movs	r0, r4
 1696 037e 19B0     		add	sp, sp, #100
 1697              		@ sp needed
 1698              	.LVL190:
 1699              	.LVL191:
 1700              	.LVL192:
 572:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 1701              		.loc 1 572 1 view .LVU429
 1702 0380 F0BC     		pop	{r4, r5, r6, r7}
 1703 0382 BB46     		mov	fp, r7
 1704 0384 B246     		mov	r10, r6
 1705 0386 A946     		mov	r9, r5
 1706 0388 A046     		mov	r8, r4
 1707 038a F0BD     		pop	{r4, r5, r6, r7, pc}
 1708              	.LVL193:
 1709              	.L241:
 1710              	.LBB62:
 1711              	.LBB61:
 553:Core/Src/printf.c ****   }
 1712              		.loc 1 553 5 is_stmt 1 view .LVU430
 553:Core/Src/printf.c ****   }
 1713              		.loc 1 553 11 is_stmt 0 view .LVU431
 1714 038c 0898     		ldr	r0, [sp, #32]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 53


 1715 038e 0999     		ldr	r1, [sp, #36]
 1716 0390 3200     		movs	r2, r6
 1717 0392 3B00     		movs	r3, r7
 1718              	.LVL194:
 553:Core/Src/printf.c ****   }
 1719              		.loc 1 553 11 view .LVU432
 1720 0394 FFF7FEFF 		bl	__aeabi_ddiv
 1721              	.LVL195:
 1722 0398 0890     		str	r0, [sp, #32]
 1723 039a 0991     		str	r1, [sp, #36]
 1724              	.LVL196:
 553:Core/Src/printf.c ****   }
 1725              		.loc 1 553 11 view .LVU433
 1726 039c 61E7     		b	.L193
 1727              	.L244:
 1728 039e C046     		.align	2
 1729              	.L243:
 1730 03a0 FFFFEF7F 		.word	2146435071
 1731 03a4 FFFFEFFF 		.word	-1048577
 1732 03a8 01FCFFFF 		.word	-1023
 1733 03ac FB799F50 		.word	1352628731
 1734 03b0 1344D33F 		.word	1070810131
 1735 03b4 B3C8608B 		.word	-1956591437
 1736 03b8 288AC63F 		.word	1069976104
 1737 03bc 0000F03F 		.word	1072693248
 1738 03c0 0000F83F 		.word	1073217536
 1739 03c4 61436F63 		.word	1668236129
 1740 03c8 A787D23F 		.word	1070761895
 1741 03cc 71A37909 		.word	158966641
 1742 03d0 4F930A40 		.word	1074434895
 1743 03d4 0000E03F 		.word	1071644672
 1744 03d8 1655B5BB 		.word	-1145744106
 1745 03dc B16B0240 		.word	1073900465
 1746 03e0 EF39FAFE 		.word	-17155601
 1747 03e4 422EE63F 		.word	1072049730
 1748 03e8 00002C40 		.word	1076625408
 1749 03ec 00002440 		.word	1076101120
 1750 03f0 00001840 		.word	1075314688
 1751 03f4 FF030000 		.word	1023
 1752 03f8 2D431CEB 		.word	-350469331
 1753 03fc E2361A3F 		.word	1058682594
 1754 0400 80842E41 		.word	1093567616
 1755 0404 FFF7FFFF 		.word	-2049
 1756              	.LVL197:
 1757              	.L187:
 531:Core/Src/printf.c ****         --prec;
 1758              		.loc 1 531 7 is_stmt 1 view .LVU434
 531:Core/Src/printf.c ****         --prec;
 1759              		.loc 1 531 10 is_stmt 0 view .LVU435
 1760 0408 249B     		ldr	r3, [sp, #144]
 1761 040a 002B     		cmp	r3, #0
 1762 040c 00D1     		bne	.LCB1806
 1763 040e 14E7     		b	.L186	@long jump
 1764              	.LCB1806:
 532:Core/Src/printf.c ****       }
 1765              		.loc 1 532 9 view .LVU436
 1766 0410 0F9B     		ldr	r3, [sp, #60]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 54


 1767 0412 5A1E     		subs	r2, r3, #1
 1768 0414 9341     		sbcs	r3, r3, r2
 1769 0416 249A     		ldr	r2, [sp, #144]
 1770 0418 D31A     		subs	r3, r2, r3
 1771 041a 2493     		str	r3, [sp, #144]
 1772              	.LVL198:
 532:Core/Src/printf.c ****       }
 1773              		.loc 1 532 9 view .LVU437
 1774 041c 0DE7     		b	.L186
 1775              	.LVL199:
 1776              	.L240:
 478:Core/Src/printf.c ****   }
 1777              		.loc 1 478 5 is_stmt 1 view .LVU438
 478:Core/Src/printf.c ****   }
 1778              		.loc 1 478 11 is_stmt 0 view .LVU439
 1779 041e 8022     		movs	r2, #128
 1780 0420 1206     		lsls	r2, r2, #24
 1781 0422 9446     		mov	ip, r2
 1782 0424 229B     		ldr	r3, [sp, #136]
 1783 0426 0893     		str	r3, [sp, #32]
 1784 0428 239B     		ldr	r3, [sp, #140]
 1785 042a 6344     		add	r3, r3, ip
 1786 042c 0993     		str	r3, [sp, #36]
 1787              	.LVL200:
 478:Core/Src/printf.c ****   }
 1788              		.loc 1 478 11 view .LVU440
 1789 042e 1CE6     		b	.L180
 1790              	.LVL201:
 1791              	.L202:
 522:Core/Src/printf.c ****       }
 1792              		.loc 1 522 14 view .LVU441
 1793 0430 0023     		movs	r3, #0
 1794 0432 2493     		str	r3, [sp, #144]
 1795              	.LVL202:
 522:Core/Src/printf.c ****       }
 1796              		.loc 1 522 14 view .LVU442
 1797 0434 F9E6     		b	.L190
 1798              	.LBE61:
 1799              	.LBE62:
 1800              		.cfi_endproc
 1801              	.LFE1437:
 1803 0436 C046     		.section	.rodata._ftoa.str1.4,"aMS",%progbits,1
 1804              		.align	2
 1805              	.LC0:
 1806 0000 666E692B 		.ascii	"fni+\000"
 1806      00
 1807 0005 000000   		.align	2
 1808              	.LC2:
 1809 0008 666E6900 		.ascii	"fni\000"
 1810              		.align	2
 1811              	.LC4:
 1812 000c 6E616E00 		.ascii	"nan\000"
 1813              		.align	2
 1814              	.LC6:
 1815 0010 666E692D 		.ascii	"fni-\000"
 1815      00
 1816              		.global	__aeabi_d2uiz
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 55


 1817              		.global	__aeabi_ui2d
 1818              		.section	.text._ftoa,"ax",%progbits
 1819              		.align	1
 1820              		.p2align 2,,3
 1821              		.syntax unified
 1822              		.code	16
 1823              		.thumb_func
 1825              	_ftoa:
 1826              	.LVL203:
 1827              	.LFB1436:
 341:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1828              		.loc 1 341 1 is_stmt 1 view -0
 1829              		.cfi_startproc
 1830              		@ args = 20, pretend = 0, frame = 56
 1831              		@ frame_needed = 0, uses_anonymous_args = 0
 342:Core/Src/printf.c ****   size_t len  = 0U;
 1832              		.loc 1 342 3 view .LVU444
 343:Core/Src/printf.c ****   double diff = 0.0;
 1833              		.loc 1 343 3 view .LVU445
 344:Core/Src/printf.c **** 
 1834              		.loc 1 344 3 view .LVU446
 347:Core/Src/printf.c **** 
 1835              		.loc 1 347 3 view .LVU447
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1836              		.loc 1 350 3 view .LVU448
 341:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1837              		.loc 1 341 1 is_stmt 0 view .LVU449
 1838 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1839              	.LCFI9:
 1840              		.cfi_def_cfa_offset 20
 1841              		.cfi_offset 4, -20
 1842              		.cfi_offset 5, -16
 1843              		.cfi_offset 6, -12
 1844              		.cfi_offset 7, -8
 1845              		.cfi_offset 14, -4
 1846 0002 4546     		mov	r5, r8
 1847 0004 DE46     		mov	lr, fp
 1848 0006 4E46     		mov	r6, r9
 1849 0008 5746     		mov	r7, r10
 1850 000a E0B5     		push	{r5, r6, r7, lr}
 1851              	.LCFI10:
 1852              		.cfi_def_cfa_offset 36
 1853              		.cfi_offset 8, -36
 1854              		.cfi_offset 9, -32
 1855              		.cfi_offset 10, -28
 1856              		.cfi_offset 11, -24
 1857 000c 95B0     		sub	sp, sp, #84
 1858              	.LCFI11:
 1859              		.cfi_def_cfa_offset 120
 341:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1860              		.loc 1 341 1 view .LVU450
 1861 000e 8B46     		mov	fp, r1
 1862 0010 9046     		mov	r8, r2
 1863 0012 9946     		mov	r9, r3
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1864              		.loc 1 350 6 view .LVU451
 1865 0014 1E9A     		ldr	r2, [sp, #120]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 56


 1866 0016 1F9B     		ldr	r3, [sp, #124]
 1867              	.LVL204:
 341:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1868              		.loc 1 341 1 view .LVU452
 1869 0018 0A90     		str	r0, [sp, #40]
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1870              		.loc 1 350 6 view .LVU453
 1871 001a 1900     		movs	r1, r3
 1872              	.LVL205:
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1873              		.loc 1 350 6 view .LVU454
 1874 001c 1000     		movs	r0, r2
 1875              	.LVL206:
 341:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1876              		.loc 1 341 1 view .LVU455
 1877 001e 209D     		ldr	r5, [sp, #128]
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1878              		.loc 1 350 6 view .LVU456
 1879 0020 FFF7FEFF 		bl	__aeabi_dcmpeq
 1880              	.LVL207:
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1881              		.loc 1 350 6 view .LVU457
 1882 0024 0028     		cmp	r0, #0
 1883 0026 00D1     		bne	.LCB1914
 1884 0028 AFE0     		b	.L359	@long jump
 1885              	.LCB1914:
 352:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 1886              		.loc 1 352 3 is_stmt 1 view .LVU458
 352:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 1887              		.loc 1 352 6 is_stmt 0 view .LVU459
 1888 002a 1E98     		ldr	r0, [sp, #120]
 1889 002c 1F99     		ldr	r1, [sp, #124]
 1890 002e 0122     		movs	r2, #1
 1891 0030 C44B     		ldr	r3, .L371
 1892 0032 5242     		rsbs	r2, r2, #0
 1893 0034 FFF7FEFF 		bl	__aeabi_dcmplt
 1894              	.LVL208:
 1895 0038 0028     		cmp	r0, #0
 1896 003a 00D0     		beq	.LCB1923
 1897 003c 30E1     		b	.L360	@long jump
 1898              	.LCB1923:
 1899              	.LVL209:
 1900              	.LBB66:
 1901              	.LBI66:
 340:Core/Src/printf.c **** {
 1902              		.loc 1 340 15 is_stmt 1 view .LVU460
 1903              	.LBB67:
 354:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 1904              		.loc 1 354 3 view .LVU461
 354:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 1905              		.loc 1 354 6 is_stmt 0 view .LVU462
 1906 003e 1E98     		ldr	r0, [sp, #120]
 1907 0040 1F99     		ldr	r1, [sp, #124]
 1908 0042 0122     		movs	r2, #1
 1909 0044 C04B     		ldr	r3, .L371+4
 1910 0046 5242     		rsbs	r2, r2, #0
 1911 0048 FFF7FEFF 		bl	__aeabi_dcmpgt
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 57


 1912              	.LVL210:
 1913 004c 0028     		cmp	r0, #0
 1914 004e 00D0     		beq	.LCB1943
 1915 0050 8FE0     		b	.L361	@long jump
 1916              	.LCB1943:
 359:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1917              		.loc 1 359 3 is_stmt 1 view .LVU463
 359:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1918              		.loc 1 359 6 is_stmt 0 view .LVU464
 1919 0052 1E98     		ldr	r0, [sp, #120]
 1920 0054 1F99     		ldr	r1, [sp, #124]
 1921 0056 0022     		movs	r2, #0
 1922 0058 BC4B     		ldr	r3, .L371+8
 1923 005a FFF7FEFF 		bl	__aeabi_dcmpgt
 1924              	.LVL211:
 1925 005e 0028     		cmp	r0, #0
 1926 0060 00D0     		beq	.LCB1951
 1927 0062 0DE1     		b	.L255	@long jump
 1928              	.LCB1951:
 359:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1929              		.loc 1 359 34 view .LVU465
 1930 0064 1E98     		ldr	r0, [sp, #120]
 1931 0066 1F99     		ldr	r1, [sp, #124]
 1932 0068 0022     		movs	r2, #0
 1933 006a B94B     		ldr	r3, .L371+12
 1934 006c FFF7FEFF 		bl	__aeabi_dcmplt
 1935              	.LVL212:
 1936 0070 0028     		cmp	r0, #0
 1937 0072 00D0     		beq	.LCB1958
 1938 0074 04E1     		b	.L255	@long jump
 1939              	.LCB1958:
 368:Core/Src/printf.c ****   if (value < 0) {
 1940              		.loc 1 368 3 is_stmt 1 view .LVU466
 1941              	.LVL213:
 369:Core/Src/printf.c ****     negative = true;
 1942              		.loc 1 369 3 view .LVU467
 369:Core/Src/printf.c ****     negative = true;
 1943              		.loc 1 369 6 is_stmt 0 view .LVU468
 1944 0076 1E98     		ldr	r0, [sp, #120]
 1945 0078 1F99     		ldr	r1, [sp, #124]
 1946 007a 0022     		movs	r2, #0
 1947 007c 0023     		movs	r3, #0
 1948 007e FFF7FEFF 		bl	__aeabi_dcmplt
 1949              	.LVL214:
 1950 0082 0028     		cmp	r0, #0
 1951 0084 00D0     		beq	.LCB1968
 1952 0086 B3E0     		b	.L362	@long jump
 1953              	.LCB1968:
 368:Core/Src/printf.c ****   if (value < 0) {
 1954              		.loc 1 368 8 view .LVU469
 1955 0088 0023     		movs	r3, #0
 1956 008a 0B93     		str	r3, [sp, #44]
 1957              	.LVL215:
 1958              	.L258:
 375:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1959              		.loc 1 375 3 is_stmt 1 view .LVU470
 375:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 58


 1960              		.loc 1 375 15 is_stmt 0 view .LVU471
 1961 008c 8023     		movs	r3, #128
 1962 008e 229C     		ldr	r4, [sp, #136]
 375:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1963              		.loc 1 375 6 view .LVU472
 1964 0090 229A     		ldr	r2, [sp, #136]
 375:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1965              		.loc 1 375 15 view .LVU473
 1966 0092 DB00     		lsls	r3, r3, #3
 1967 0094 1C40     		ands	r4, r3
 375:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1968              		.loc 1 375 6 view .LVU474
 1969 0096 1A42     		tst	r2, r3
 1970 0098 00D1     		bne	.LCB1985
 1971 009a 17E1     		b	.L295	@long jump
 1972              	.LCB1985:
 1973              	.LVL216:
 379:Core/Src/printf.c ****     buf[len++] = '0';
 1974              		.loc 1 379 42 is_stmt 1 view .LVU475
 1975 009c 092D     		cmp	r5, #9
 1976 009e 00D8     		bhi	.LCB1990
 1977 00a0 74E1     		b	.L261	@long jump
 1978              	.LCB1990:
 1979 00a2 06A9     		add	r1, sp, #24
 1980 00a4 8C46     		mov	ip, r1
 1981 00a6 2C00     		movs	r4, r5
 1982 00a8 1722     		movs	r2, #23
 1983 00aa 0023     		movs	r3, #0
 380:Core/Src/printf.c ****     prec--;
 1984              		.loc 1 380 16 is_stmt 0 view .LVU476
 1985 00ac 3021     		movs	r1, #48
 1986 00ae 093C     		subs	r4, r4, #9
 1987 00b0 6244     		add	r2, r2, ip
 1988              	.LVL217:
 1989              	.L262:
 380:Core/Src/printf.c ****     prec--;
 1990              		.loc 1 380 5 is_stmt 1 view .LVU477
 380:Core/Src/printf.c ****     prec--;
 1991              		.loc 1 380 12 is_stmt 0 view .LVU478
 1992 00b2 0133     		adds	r3, r3, #1
 1993              	.LVL218:
 380:Core/Src/printf.c ****     prec--;
 1994              		.loc 1 380 16 view .LVU479
 1995 00b4 D154     		strb	r1, [r2, r3]
 381:Core/Src/printf.c ****   }
 1996              		.loc 1 381 5 is_stmt 1 view .LVU480
 381:Core/Src/printf.c ****   }
 1997              		.loc 1 381 9 is_stmt 0 view .LVU481
 1998 00b6 EF1A     		subs	r7, r5, r3
 1999              	.LVL219:
 379:Core/Src/printf.c ****     buf[len++] = '0';
 2000              		.loc 1 379 42 is_stmt 1 view .LVU482
 2001 00b8 202B     		cmp	r3, #32
 2002 00ba 00D1     		bne	.LCB2018
 2003 00bc 2EE1     		b	.L296	@long jump
 2004              	.LCB2018:
 379:Core/Src/printf.c ****     buf[len++] = '0';
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 59


 2005              		.loc 1 379 42 is_stmt 0 view .LVU483
 2006 00be A342     		cmp	r3, r4
 2007 00c0 F7D1     		bne	.L262
 2008              	.L353:
 2009 00c2 0022     		movs	r2, #0
 2010 00c4 A14B     		ldr	r3, .L371+8
 2011              	.LVL220:
 379:Core/Src/printf.c ****     buf[len++] = '0';
 2012              		.loc 1 379 42 view .LVU484
 2013 00c6 0692     		str	r2, [sp, #24]
 2014 00c8 0793     		str	r3, [sp, #28]
 2015              	.LVL221:
 2016              	.L260:
 384:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 2017              		.loc 1 384 3 is_stmt 1 view .LVU485
 384:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 2018              		.loc 1 384 7 is_stmt 0 view .LVU486
 2019 00ca 1E98     		ldr	r0, [sp, #120]
 2020 00cc 1F99     		ldr	r1, [sp, #124]
 2021 00ce FFF7FEFF 		bl	__aeabi_d2iz
 2022              	.LVL222:
 2023 00d2 0500     		movs	r5, r0
 2024              	.LVL223:
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 2025              		.loc 1 385 3 is_stmt 1 view .LVU487
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 2026              		.loc 1 385 23 is_stmt 0 view .LVU488
 2027 00d4 FFF7FEFF 		bl	__aeabi_i2d
 2028              	.LVL224:
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 2029              		.loc 1 385 23 view .LVU489
 2030 00d8 0200     		movs	r2, r0
 2031 00da 0B00     		movs	r3, r1
 2032 00dc 1E98     		ldr	r0, [sp, #120]
 2033 00de 1F99     		ldr	r1, [sp, #124]
 2034 00e0 FFF7FEFF 		bl	__aeabi_dsub
 2035              	.LVL225:
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 2036              		.loc 1 385 10 view .LVU490
 2037 00e4 069A     		ldr	r2, [sp, #24]
 2038 00e6 079B     		ldr	r3, [sp, #28]
 2039 00e8 FFF7FEFF 		bl	__aeabi_dmul
 2040              	.LVL226:
 386:Core/Src/printf.c ****   diff = tmp - frac;
 2041              		.loc 1 386 3 is_stmt 1 view .LVU491
 386:Core/Src/printf.c ****   diff = tmp - frac;
 2042              		.loc 1 386 17 is_stmt 0 view .LVU492
 2043 00ec 0890     		str	r0, [sp, #32]
 2044 00ee 0991     		str	r1, [sp, #36]
 2045 00f0 FFF7FEFF 		bl	__aeabi_d2uiz
 2046              	.LVL227:
 386:Core/Src/printf.c ****   diff = tmp - frac;
 2047              		.loc 1 386 17 view .LVU493
 2048 00f4 0600     		movs	r6, r0
 2049              	.LVL228:
 387:Core/Src/printf.c **** 
 2050              		.loc 1 387 3 is_stmt 1 view .LVU494
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 60


 387:Core/Src/printf.c **** 
 2051              		.loc 1 387 14 is_stmt 0 view .LVU495
 2052 00f6 FFF7FEFF 		bl	__aeabi_ui2d
 2053              	.LVL229:
 387:Core/Src/printf.c **** 
 2054              		.loc 1 387 14 view .LVU496
 2055 00fa 0200     		movs	r2, r0
 2056 00fc 0B00     		movs	r3, r1
 387:Core/Src/printf.c **** 
 2057              		.loc 1 387 8 view .LVU497
 2058 00fe 0898     		ldr	r0, [sp, #32]
 2059 0100 0999     		ldr	r1, [sp, #36]
 2060 0102 FFF7FEFF 		bl	__aeabi_dsub
 2061              	.LVL230:
 389:Core/Src/printf.c ****     ++frac;
 2062              		.loc 1 389 6 view .LVU498
 2063 0106 0022     		movs	r2, #0
 2064 0108 924B     		ldr	r3, .L371+16
 387:Core/Src/printf.c **** 
 2065              		.loc 1 387 8 view .LVU499
 2066 010a 0890     		str	r0, [sp, #32]
 2067 010c 0991     		str	r1, [sp, #36]
 2068              	.LVL231:
 389:Core/Src/printf.c ****     ++frac;
 2069              		.loc 1 389 3 is_stmt 1 view .LVU500
 389:Core/Src/printf.c ****     ++frac;
 2070              		.loc 1 389 6 is_stmt 0 view .LVU501
 2071 010e FFF7FEFF 		bl	__aeabi_dcmpgt
 2072              	.LVL232:
 389:Core/Src/printf.c ****     ++frac;
 2073              		.loc 1 389 6 view .LVU502
 2074 0112 0028     		cmp	r0, #0
 2075 0114 00D1     		bne	.LCB2072
 2076 0116 CCE0     		b	.L344	@long jump
 2077              	.LCB2072:
 390:Core/Src/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 2078              		.loc 1 390 5 is_stmt 1 view .LVU503
 2079 0118 0136     		adds	r6, r6, #1
 2080              	.LVL233:
 392:Core/Src/printf.c ****       frac = 0;
 2081              		.loc 1 392 5 view .LVU504
 392:Core/Src/printf.c ****       frac = 0;
 2082              		.loc 1 392 14 is_stmt 0 view .LVU505
 2083 011a 3000     		movs	r0, r6
 2084 011c FFF7FEFF 		bl	__aeabi_ui2d
 2085              	.LVL234:
 392:Core/Src/printf.c ****       frac = 0;
 2086              		.loc 1 392 8 view .LVU506
 2087 0120 069A     		ldr	r2, [sp, #24]
 2088 0122 079B     		ldr	r3, [sp, #28]
 2089 0124 FFF7FEFF 		bl	__aeabi_dcmpge
 2090              	.LVL235:
 2091 0128 0028     		cmp	r0, #0
 2092 012a 01D0     		beq	.L265
 393:Core/Src/printf.c ****       ++whole;
 2093              		.loc 1 393 7 is_stmt 1 view .LVU507
 2094              	.LVL236:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 61


 394:Core/Src/printf.c ****     }
 2095              		.loc 1 394 7 view .LVU508
 393:Core/Src/printf.c ****       ++whole;
 2096              		.loc 1 393 12 is_stmt 0 view .LVU509
 2097 012c 0026     		movs	r6, #0
 394:Core/Src/printf.c ****     }
 2098              		.loc 1 394 7 view .LVU510
 2099 012e 0135     		adds	r5, r5, #1
 2100              	.LVL237:
 2101              	.L265:
 404:Core/Src/printf.c ****     diff = value - (double)whole;
 2102              		.loc 1 404 3 is_stmt 1 view .LVU511
 2103 0130 AA46     		mov	r10, r5
 404:Core/Src/printf.c ****     diff = value - (double)whole;
 2104              		.loc 1 404 6 is_stmt 0 view .LVU512
 2105 0132 002F     		cmp	r7, #0
 2106 0134 53D1     		bne	.L268
 405:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2107              		.loc 1 405 5 is_stmt 1 view .LVU513
 405:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2108              		.loc 1 405 20 is_stmt 0 view .LVU514
 2109 0136 2800     		movs	r0, r5
 2110 0138 FFF7FEFF 		bl	__aeabi_i2d
 2111              	.LVL238:
 2112 013c 0200     		movs	r2, r0
 2113 013e 0B00     		movs	r3, r1
 405:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2114              		.loc 1 405 10 view .LVU515
 2115 0140 1E98     		ldr	r0, [sp, #120]
 2116 0142 1F99     		ldr	r1, [sp, #124]
 2117 0144 FFF7FEFF 		bl	__aeabi_dsub
 2118              	.LVL239:
 406:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2119              		.loc 1 406 8 view .LVU516
 2120 0148 0022     		movs	r2, #0
 2121 014a 824B     		ldr	r3, .L371+16
 405:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2122              		.loc 1 405 10 view .LVU517
 2123 014c 0600     		movs	r6, r0
 2124              	.LVL240:
 405:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2125              		.loc 1 405 10 view .LVU518
 2126 014e 0F00     		movs	r7, r1
 2127              	.LVL241:
 406:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2128              		.loc 1 406 5 is_stmt 1 view .LVU519
 406:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2129              		.loc 1 406 8 is_stmt 0 view .LVU520
 2130 0150 FFF7FEFF 		bl	__aeabi_dcmplt
 2131              	.LVL242:
 2132 0154 0028     		cmp	r0, #0
 2133 0156 07D0     		beq	.L269
 406:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2134              		.loc 1 406 24 view .LVU521
 2135 0158 0022     		movs	r2, #0
 2136 015a 3000     		movs	r0, r6
 2137 015c 3900     		movs	r1, r7
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 62


 2138 015e 7D4B     		ldr	r3, .L371+16
 2139 0160 FFF7FEFF 		bl	__aeabi_dcmpgt
 2140              	.LVL243:
 2141 0164 0028     		cmp	r0, #0
 2142 0166 3ED0     		beq	.L354
 2143              	.L269:
 2144 0168 0CAF     		add	r7, sp, #48
 406:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2145              		.loc 1 406 41 view .LVU522
 2146 016a EB07     		lsls	r3, r5, #31
 2147 016c 5DD5     		bpl	.L279
 409:Core/Src/printf.c ****     }
 2148              		.loc 1 409 7 is_stmt 1 view .LVU523
 2149 016e 0135     		adds	r5, r5, #1
 2150              	.LVL244:
 409:Core/Src/printf.c ****     }
 2151              		.loc 1 409 7 is_stmt 0 view .LVU524
 2152 0170 5BE0     		b	.L279
 2153              	.LVL245:
 2154              	.L361:
 355:Core/Src/printf.c **** 
 2155              		.loc 1 355 5 is_stmt 1 view .LVU525
 355:Core/Src/printf.c **** 
 2156              		.loc 1 355 12 is_stmt 0 view .LVU526
 2157 0172 229B     		ldr	r3, [sp, #136]
 2158 0174 5B07     		lsls	r3, r3, #29
 2159 0176 38D4     		bmi	.L363
 2160 0178 0322     		movs	r2, #3
 2161 017a 774B     		ldr	r3, .L371+20
 2162              	.L253:
 2163 017c 2299     		ldr	r1, [sp, #136]
 2164 017e 0192     		str	r2, [sp, #4]
 2165 0180 0391     		str	r1, [sp, #12]
 2166 0182 2199     		ldr	r1, [sp, #132]
 2167 0184 0093     		str	r3, [sp]
 2168 0186 0291     		str	r1, [sp, #8]
 2169 0188 07E0     		b	.L357
 2170              	.LVL246:
 2171              	.L359:
 355:Core/Src/printf.c **** 
 2172              		.loc 1 355 12 view .LVU527
 2173              	.LBE67:
 2174              	.LBE66:
 351:Core/Src/printf.c ****   if (value < -DBL_MAX)
 2175              		.loc 1 351 5 is_stmt 1 view .LVU528
 351:Core/Src/printf.c ****   if (value < -DBL_MAX)
 2176              		.loc 1 351 12 is_stmt 0 view .LVU529
 2177 018a 229B     		ldr	r3, [sp, #136]
 2178 018c 0393     		str	r3, [sp, #12]
 2179 018e 219B     		ldr	r3, [sp, #132]
 2180 0190 0293     		str	r3, [sp, #8]
 2181 0192 0323     		movs	r3, #3
 2182 0194 0193     		str	r3, [sp, #4]
 2183 0196 714B     		ldr	r3, .L371+24
 2184 0198 0093     		str	r3, [sp]
 2185              	.LVL247:
 2186              	.L357:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 63


 2187              	.LBB74:
 2188              	.LBB71:
 462:Core/Src/printf.c **** }
 2189              		.loc 1 462 10 view .LVU530
 2190 019a 4B46     		mov	r3, r9
 2191 019c 4246     		mov	r2, r8
 2192 019e 5946     		mov	r1, fp
 2193 01a0 0A98     		ldr	r0, [sp, #40]
 2194 01a2 FFF7FEFF 		bl	_out_rev
 2195              	.LVL248:
 2196              	.L245:
 462:Core/Src/printf.c **** }
 2197              		.loc 1 462 10 view .LVU531
 2198              	.LBE71:
 2199              	.LBE74:
 463:Core/Src/printf.c **** 
 2200              		.loc 1 463 1 view .LVU532
 2201 01a6 15B0     		add	sp, sp, #84
 2202              		@ sp needed
 2203              	.LVL249:
 2204              	.LVL250:
 2205              	.LVL251:
 463:Core/Src/printf.c **** 
 2206              		.loc 1 463 1 view .LVU533
 2207 01a8 F0BC     		pop	{r4, r5, r6, r7}
 2208 01aa BB46     		mov	fp, r7
 2209 01ac B246     		mov	r10, r6
 2210 01ae A946     		mov	r9, r5
 2211 01b0 A046     		mov	r8, r4
 2212 01b2 F0BD     		pop	{r4, r5, r6, r7, pc}
 2213              	.LVL252:
 2214              	.L276:
 2215              	.LBB75:
 2216              	.LBB72:
 2217              	.LBB68:
 416:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 2218              		.loc 1 416 7 is_stmt 1 view .LVU534
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2219              		.loc 1 417 18 is_stmt 0 view .LVU535
 2220 01b4 06AA     		add	r2, sp, #24
 2221 01b6 9446     		mov	ip, r2
 2222 01b8 1723     		movs	r3, #23
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2223              		.loc 1 417 39 view .LVU536
 2224 01ba 0A21     		movs	r1, #10
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2225              		.loc 1 417 18 view .LVU537
 2226 01bc 6344     		add	r3, r3, ip
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2227              		.loc 1 417 39 view .LVU538
 2228 01be 3000     		movs	r0, r6
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2229              		.loc 1 417 14 view .LVU539
 2230 01c0 0134     		adds	r4, r4, #1
 2231              	.LVL253:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2232              		.loc 1 417 18 view .LVU540
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 64


 2233 01c2 1D19     		adds	r5, r3, r4
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2234              		.loc 1 417 39 view .LVU541
 2235 01c4 FFF7FEFF 		bl	__aeabi_uidivmod
 2236              	.LVL254:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2237              		.loc 1 417 20 view .LVU542
 2238 01c8 3031     		adds	r1, r1, #48
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2239              		.loc 1 417 18 view .LVU543
 2240 01ca 2970     		strb	r1, [r5]
 418:Core/Src/printf.c ****         break;
 2241              		.loc 1 418 18 view .LVU544
 2242 01cc 3000     		movs	r0, r6
 2243 01ce 0A21     		movs	r1, #10
 416:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 2244              		.loc 1 416 7 view .LVU545
 2245 01d0 013F     		subs	r7, r7, #1
 2246              	.LVL255:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2247              		.loc 1 417 7 is_stmt 1 view .LVU546
 418:Core/Src/printf.c ****         break;
 2248              		.loc 1 418 7 view .LVU547
 418:Core/Src/printf.c ****         break;
 2249              		.loc 1 418 18 is_stmt 0 view .LVU548
 2250 01d2 FFF7FEFF 		bl	__aeabi_uidiv
 2251              	.LVL256:
 418:Core/Src/printf.c ****         break;
 2252              		.loc 1 418 10 view .LVU549
 2253 01d6 092E     		cmp	r6, #9
 2254 01d8 00D8     		bhi	.LCB2282
 2255 01da 8BE0     		b	.L364	@long jump
 2256              	.LCB2282:
 418:Core/Src/printf.c ****         break;
 2257              		.loc 1 418 18 view .LVU550
 2258 01dc 0600     		movs	r6, r0
 2259              	.LVL257:
 2260              	.L268:
 415:Core/Src/printf.c ****       --count;
 2261              		.loc 1 415 16 is_stmt 1 view .LVU551
 2262 01de 202C     		cmp	r4, #32
 2263 01e0 E8D1     		bne	.L276
 415:Core/Src/printf.c ****       --count;
 2264              		.loc 1 415 16 is_stmt 0 view .LVU552
 2265 01e2 5546     		mov	r5, r10
 2266              	.LVL258:
 2267              	.L273:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2268              		.loc 1 417 14 view .LVU553
 2269 01e4 2024     		movs	r4, #32
 2270              	.LVL259:
 2271              	.L354:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2272              		.loc 1 417 14 view .LVU554
 2273 01e6 0CAF     		add	r7, sp, #48
 2274 01e8 1FE0     		b	.L279
 2275              	.LVL260:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 65


 2276              	.L363:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2277              		.loc 1 417 14 view .LVU555
 2278              	.LBE68:
 355:Core/Src/printf.c **** 
 2279              		.loc 1 355 12 view .LVU556
 2280 01ea 0422     		movs	r2, #4
 2281 01ec 5C4B     		ldr	r3, .L371+28
 2282 01ee C5E7     		b	.L253
 2283              	.LVL261:
 2284              	.L362:
 370:Core/Src/printf.c ****     value = 0 - value;
 2285              		.loc 1 370 5 is_stmt 1 view .LVU557
 371:Core/Src/printf.c ****   }
 2286              		.loc 1 371 5 view .LVU558
 371:Core/Src/printf.c ****   }
 2287              		.loc 1 371 11 is_stmt 0 view .LVU559
 2288 01f0 1E9A     		ldr	r2, [sp, #120]
 2289 01f2 1F9B     		ldr	r3, [sp, #124]
 2290 01f4 0020     		movs	r0, #0
 2291 01f6 0021     		movs	r1, #0
 2292 01f8 FFF7FEFF 		bl	__aeabi_dsub
 2293              	.LVL262:
 370:Core/Src/printf.c ****     value = 0 - value;
 2294              		.loc 1 370 14 view .LVU560
 2295 01fc 0123     		movs	r3, #1
 371:Core/Src/printf.c ****   }
 2296              		.loc 1 371 11 view .LVU561
 2297 01fe 1E90     		str	r0, [sp, #120]
 2298 0200 1F91     		str	r1, [sp, #124]
 2299              	.LVL263:
 370:Core/Src/printf.c ****     value = 0 - value;
 2300              		.loc 1 370 14 view .LVU562
 2301 0202 0B93     		str	r3, [sp, #44]
 2302 0204 42E7     		b	.L258
 2303              	.LVL264:
 2304              	.L280:
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2305              		.loc 1 434 5 is_stmt 1 view .LVU563
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2306              		.loc 1 434 16 is_stmt 0 view .LVU564
 2307 0206 06AA     		add	r2, sp, #24
 2308 0208 9446     		mov	ip, r2
 2309 020a 1723     		movs	r3, #23
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2310              		.loc 1 434 37 view .LVU565
 2311 020c 2800     		movs	r0, r5
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2312              		.loc 1 434 16 view .LVU566
 2313 020e 6344     		add	r3, r3, ip
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2314              		.loc 1 434 37 view .LVU567
 2315 0210 0A21     		movs	r1, #10
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2316              		.loc 1 434 12 view .LVU568
 2317 0212 0134     		adds	r4, r4, #1
 2318              	.LVL265:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 66


 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2319              		.loc 1 434 16 view .LVU569
 2320 0214 1E19     		adds	r6, r3, r4
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2321              		.loc 1 434 37 view .LVU570
 2322 0216 FFF7FEFF 		bl	__aeabi_idivmod
 2323              	.LVL266:
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2324              		.loc 1 434 18 view .LVU571
 2325 021a 3031     		adds	r1, r1, #48
 435:Core/Src/printf.c ****       break;
 2326              		.loc 1 435 17 view .LVU572
 2327 021c 2800     		movs	r0, r5
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2328              		.loc 1 434 16 view .LVU573
 2329 021e 3170     		strb	r1, [r6]
 435:Core/Src/printf.c ****       break;
 2330              		.loc 1 435 5 is_stmt 1 view .LVU574
 435:Core/Src/printf.c ****       break;
 2331              		.loc 1 435 17 is_stmt 0 view .LVU575
 2332 0220 0A21     		movs	r1, #10
 2333 0222 FFF7FEFF 		bl	__aeabi_idiv
 2334              	.LVL267:
 2335 0226 051E     		subs	r5, r0, #0
 2336              	.LVL268:
 435:Core/Src/printf.c ****       break;
 2337              		.loc 1 435 8 view .LVU576
 2338 0228 56D0     		beq	.L278
 2339              	.LVL269:
 2340              	.L279:
 433:Core/Src/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 2341              		.loc 1 433 14 is_stmt 1 view .LVU577
 2342 022a 202C     		cmp	r4, #32
 2343 022c EBD1     		bne	.L280
 2344              	.LVL270:
 441:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2345              		.loc 1 441 3 view .LVU578
 441:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2346              		.loc 1 441 29 is_stmt 0 view .LVU579
 2347 022e 0323     		movs	r3, #3
 2348 0230 229A     		ldr	r2, [sp, #136]
 2349 0232 1340     		ands	r3, r2
 441:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2350              		.loc 1 441 6 view .LVU580
 2351 0234 012B     		cmp	r3, #1
 2352 0236 1CD1     		bne	.L288
 442:Core/Src/printf.c ****       width--;
 2353              		.loc 1 442 5 is_stmt 1 view .LVU581
 442:Core/Src/printf.c ****       width--;
 2354              		.loc 1 442 8 is_stmt 0 view .LVU582
 2355 0238 219B     		ldr	r3, [sp, #132]
 2356 023a 002B     		cmp	r3, #0
 2357 023c 19D0     		beq	.L288
 2358              	.LVL271:
 2359              	.L292:
 442:Core/Src/printf.c ****       width--;
 2360              		.loc 1 442 15 view .LVU583
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 67


 2361 023e 0B9B     		ldr	r3, [sp, #44]
 2362 0240 002B     		cmp	r3, #0
 2363 0242 00D0     		beq	.LCB2399
 2364 0244 9BE0     		b	.L283	@long jump
 2365              	.LCB2399:
 442:Core/Src/printf.c ****       width--;
 2366              		.loc 1 442 28 view .LVU584
 2367 0246 229A     		ldr	r2, [sp, #136]
 442:Core/Src/printf.c ****       width--;
 2368              		.loc 1 442 38 view .LVU585
 2369 0248 0C33     		adds	r3, r3, #12
 442:Core/Src/printf.c ****       width--;
 2370              		.loc 1 442 28 view .LVU586
 2371 024a 1342     		tst	r3, r2
 2372 024c 00D0     		beq	.LCB2404
 2373 024e 96E0     		b	.L283	@long jump
 2374              	.LCB2404:
 2375              	.LVL272:
 445:Core/Src/printf.c ****       buf[len++] = '0';
 2376              		.loc 1 445 26 is_stmt 1 view .LVU587
 2377 0250 219B     		ldr	r3, [sp, #132]
 2378 0252 A342     		cmp	r3, r4
 2379 0254 64D9     		bls	.L365
 2380              	.LVL273:
 2381              	.L285:
 445:Core/Src/printf.c ****       buf[len++] = '0';
 2382              		.loc 1 445 26 is_stmt 0 view .LVU588
 2383 0256 06AB     		add	r3, sp, #24
 2384              	.LVL274:
 445:Core/Src/printf.c ****       buf[len++] = '0';
 2385              		.loc 1 445 26 view .LVU589
 2386 0258 9C46     		mov	ip, r3
 2387 025a 1722     		movs	r2, #23
 446:Core/Src/printf.c ****     }
 2388              		.loc 1 446 18 view .LVU590
 2389 025c 3023     		movs	r3, #48
 2390 025e 6244     		add	r2, r2, ip
 2391 0260 04E0     		b	.L356
 2392              	.L289:
 446:Core/Src/printf.c ****     }
 2393              		.loc 1 446 7 is_stmt 1 view .LVU591
 445:Core/Src/printf.c ****       buf[len++] = '0';
 2394              		.loc 1 445 26 is_stmt 0 view .LVU592
 2395 0262 2199     		ldr	r1, [sp, #132]
 446:Core/Src/printf.c ****     }
 2396              		.loc 1 446 14 view .LVU593
 2397 0264 0134     		adds	r4, r4, #1
 2398              	.LVL275:
 446:Core/Src/printf.c ****     }
 2399              		.loc 1 446 18 view .LVU594
 2400 0266 1355     		strb	r3, [r2, r4]
 445:Core/Src/printf.c ****       buf[len++] = '0';
 2401              		.loc 1 445 26 is_stmt 1 view .LVU595
 2402 0268 8C42     		cmp	r4, r1
 2403 026a 3AD0     		beq	.L282
 2404              	.L356:
 445:Core/Src/printf.c ****       buf[len++] = '0';
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 68


 2405              		.loc 1 445 26 is_stmt 0 view .LVU596
 2406 026c 202C     		cmp	r4, #32
 2407 026e F8D1     		bne	.L289
 2408              	.LVL276:
 458:Core/Src/printf.c ****     }
 2409              		.loc 1 458 14 view .LVU597
 2410 0270 2024     		movs	r4, #32
 2411              	.LVL277:
 2412              	.L288:
 462:Core/Src/printf.c **** }
 2413              		.loc 1 462 3 is_stmt 1 view .LVU598
 462:Core/Src/printf.c **** }
 2414              		.loc 1 462 10 is_stmt 0 view .LVU599
 2415 0272 229B     		ldr	r3, [sp, #136]
 2416 0274 0194     		str	r4, [sp, #4]
 2417 0276 0393     		str	r3, [sp, #12]
 2418 0278 219B     		ldr	r3, [sp, #132]
 2419 027a 0097     		str	r7, [sp]
 2420 027c 0293     		str	r3, [sp, #8]
 2421 027e 8CE7     		b	.L357
 2422              	.LVL278:
 2423              	.L255:
 361:Core/Src/printf.c **** #else
 2424              		.loc 1 361 5 is_stmt 1 view .LVU600
 361:Core/Src/printf.c **** #else
 2425              		.loc 1 361 12 is_stmt 0 view .LVU601
 2426 0280 229B     		ldr	r3, [sp, #136]
 2427 0282 4246     		mov	r2, r8
 2428 0284 0493     		str	r3, [sp, #16]
 2429 0286 219B     		ldr	r3, [sp, #132]
 2430 0288 5946     		mov	r1, fp
 2431 028a 0393     		str	r3, [sp, #12]
 2432 028c 0A98     		ldr	r0, [sp, #40]
 2433 028e 1E9B     		ldr	r3, [sp, #120]
 2434 0290 1F9C     		ldr	r4, [sp, #124]
 2435 0292 0295     		str	r5, [sp, #8]
 2436 0294 0093     		str	r3, [sp]
 2437 0296 0194     		str	r4, [sp, #4]
 2438 0298 4B46     		mov	r3, r9
 2439 029a FFF7FEFF 		bl	_etoa
 2440              	.LVL279:
 2441 029e 82E7     		b	.L245
 2442              	.LVL280:
 2443              	.L360:
 361:Core/Src/printf.c **** #else
 2444              		.loc 1 361 12 view .LVU602
 2445              	.LBE72:
 2446              	.LBE75:
 353:Core/Src/printf.c ****   if (value > DBL_MAX)
 2447              		.loc 1 353 5 is_stmt 1 view .LVU603
 353:Core/Src/printf.c ****   if (value > DBL_MAX)
 2448              		.loc 1 353 12 is_stmt 0 view .LVU604
 2449 02a0 229B     		ldr	r3, [sp, #136]
 2450 02a2 0393     		str	r3, [sp, #12]
 2451 02a4 219B     		ldr	r3, [sp, #132]
 2452 02a6 0293     		str	r3, [sp, #8]
 2453 02a8 0423     		movs	r3, #4
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 69


 2454 02aa 0193     		str	r3, [sp, #4]
 2455 02ac 2D4B     		ldr	r3, .L371+32
 2456 02ae 0093     		str	r3, [sp]
 2457 02b0 73E7     		b	.L357
 2458              	.LVL281:
 2459              	.L344:
 2460              	.LBB76:
 2461              	.LBB73:
 397:Core/Src/printf.c ****   }
 2462              		.loc 1 397 8 is_stmt 1 view .LVU605
 397:Core/Src/printf.c ****   }
 2463              		.loc 1 397 11 is_stmt 0 view .LVU606
 2464 02b2 0022     		movs	r2, #0
 2465 02b4 0898     		ldr	r0, [sp, #32]
 2466 02b6 0999     		ldr	r1, [sp, #36]
 2467 02b8 264B     		ldr	r3, .L371+16
 2468 02ba FFF7FEFF 		bl	__aeabi_dcmplt
 2469              	.LVL282:
 2470 02be 0028     		cmp	r0, #0
 2471 02c0 00D0     		beq	.LCB2550
 2472 02c2 35E7     		b	.L265	@long jump
 2473              	.LCB2550:
 399:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2474              		.loc 1 399 8 is_stmt 1 view .LVU607
 399:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2475              		.loc 1 399 11 is_stmt 0 view .LVU608
 2476 02c4 002E     		cmp	r6, #0
 2477 02c6 55D1     		bne	.L366
 401:Core/Src/printf.c ****   }
 2478              		.loc 1 401 5 is_stmt 1 view .LVU609
 2479 02c8 0136     		adds	r6, r6, #1
 2480              	.LVL283:
 401:Core/Src/printf.c ****   }
 2481              		.loc 1 401 5 is_stmt 0 view .LVU610
 2482 02ca 31E7     		b	.L265
 2483              	.LVL284:
 2484              	.L295:
 401:Core/Src/printf.c ****   }
 2485              		.loc 1 401 5 view .LVU611
 2486 02cc 0022     		movs	r2, #0
 2487 02ce 264B     		ldr	r3, .L371+36
 376:Core/Src/printf.c ****   }
 2488              		.loc 1 376 10 view .LVU612
 2489 02d0 0627     		movs	r7, #6
 2490 02d2 0692     		str	r2, [sp, #24]
 2491 02d4 0793     		str	r3, [sp, #28]
 2492 02d6 F8E6     		b	.L260
 2493              	.LVL285:
 2494              	.L278:
 441:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2495              		.loc 1 441 3 is_stmt 1 view .LVU613
 441:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2496              		.loc 1 441 29 is_stmt 0 view .LVU614
 2497 02d8 0323     		movs	r3, #3
 2498 02da 229A     		ldr	r2, [sp, #136]
 2499 02dc 1340     		ands	r3, r2
 441:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 70


 2500              		.loc 1 441 6 view .LVU615
 2501 02de 012B     		cmp	r3, #1
 2502 02e0 5ED0     		beq	.L367
 2503              	.LVL286:
 2504              	.L282:
 450:Core/Src/printf.c ****     if (negative) {
 2505              		.loc 1 450 3 is_stmt 1 view .LVU616
 450:Core/Src/printf.c ****     if (negative) {
 2506              		.loc 1 450 6 is_stmt 0 view .LVU617
 2507 02e2 202C     		cmp	r4, #32
 2508 02e4 C5D0     		beq	.L288
 451:Core/Src/printf.c ****       buf[len++] = '-';
 2509              		.loc 1 451 5 is_stmt 1 view .LVU618
 451:Core/Src/printf.c ****       buf[len++] = '-';
 2510              		.loc 1 451 8 is_stmt 0 view .LVU619
 2511 02e6 0B9B     		ldr	r3, [sp, #44]
 2512 02e8 002B     		cmp	r3, #0
 2513 02ea 1BD0     		beq	.L287
 452:Core/Src/printf.c ****     }
 2514              		.loc 1 452 7 is_stmt 1 view .LVU620
 2515              	.LVL287:
 452:Core/Src/printf.c ****     }
 2516              		.loc 1 452 18 is_stmt 0 view .LVU621
 2517 02ec 2D23     		movs	r3, #45
 2518 02ee 3B55     		strb	r3, [r7, r4]
 2519              	.LVL288:
 452:Core/Src/printf.c ****     }
 2520              		.loc 1 452 14 view .LVU622
 2521 02f0 0134     		adds	r4, r4, #1
 2522              	.LVL289:
 452:Core/Src/printf.c ****     }
 2523              		.loc 1 452 14 view .LVU623
 2524 02f2 BEE7     		b	.L288
 2525              	.LVL290:
 2526              	.L364:
 2527              	.LBB69:
 423:Core/Src/printf.c ****       buf[len++] = '0';
 2528              		.loc 1 423 44 view .LVU624
 2529 02f4 5546     		mov	r5, r10
 423:Core/Src/printf.c ****       buf[len++] = '0';
 2530              		.loc 1 423 44 is_stmt 1 view .LVU625
 2531 02f6 202C     		cmp	r4, #32
 2532 02f8 00D1     		bne	.LCB2640
 2533 02fa 73E7     		b	.L273	@long jump
 2534              	.LCB2640:
 2535              	.LVL291:
 424:Core/Src/printf.c ****     }
 2536              		.loc 1 424 18 is_stmt 0 view .LVU626
 2537 02fc 3022     		movs	r2, #48
 2538 02fe 3B19     		adds	r3, r7, r4
 423:Core/Src/printf.c ****       buf[len++] = '0';
 2539              		.loc 1 423 44 view .LVU627
 2540 0300 002F     		cmp	r7, #0
 2541 0302 02D1     		bne	.L277
 2542 0304 18E0     		b	.L368
 2543              	.LVL292:
 2544              	.L369:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 71


 423:Core/Src/printf.c ****       buf[len++] = '0';
 2545              		.loc 1 423 44 view .LVU628
 2546 0306 9C42     		cmp	r4, r3
 2547 0308 17D0     		beq	.L275
 2548              	.LVL293:
 2549              	.L277:
 424:Core/Src/printf.c ****     }
 2550              		.loc 1 424 7 is_stmt 1 view .LVU629
 424:Core/Src/printf.c ****     }
 2551              		.loc 1 424 18 is_stmt 0 view .LVU630
 2552 030a 1720     		movs	r0, #23
 2553 030c 06A9     		add	r1, sp, #24
 424:Core/Src/printf.c ****     }
 2554              		.loc 1 424 14 view .LVU631
 2555 030e 0134     		adds	r4, r4, #1
 2556              	.LVL294:
 424:Core/Src/printf.c ****     }
 2557              		.loc 1 424 18 view .LVU632
 2558 0310 0918     		adds	r1, r1, r0
 2559 0312 0A55     		strb	r2, [r1, r4]
 423:Core/Src/printf.c ****       buf[len++] = '0';
 2560              		.loc 1 423 44 is_stmt 1 view .LVU633
 2561 0314 202C     		cmp	r4, #32
 2562 0316 F6D1     		bne	.L369
 2563              	.LVL295:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2564              		.loc 1 417 14 is_stmt 0 view .LVU634
 2565 0318 2024     		movs	r4, #32
 2566 031a 64E7     		b	.L354
 2567              	.LVL296:
 2568              	.L296:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2569              		.loc 1 417 14 view .LVU635
 2570              	.LBE69:
 2571 031c 2024     		movs	r4, #32
 2572 031e D0E6     		b	.L353
 2573              	.LVL297:
 2574              	.L365:
 450:Core/Src/printf.c ****     if (negative) {
 2575              		.loc 1 450 3 is_stmt 1 view .LVU636
 450:Core/Src/printf.c ****     if (negative) {
 2576              		.loc 1 450 6 is_stmt 0 view .LVU637
 2577 0320 202C     		cmp	r4, #32
 2578 0322 A6D0     		beq	.L288
 2579              	.LVL298:
 2580              	.L287:
 454:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2581              		.loc 1 454 10 is_stmt 1 view .LVU638
 454:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2582              		.loc 1 454 13 is_stmt 0 view .LVU639
 2583 0324 229B     		ldr	r3, [sp, #136]
 2584 0326 5B07     		lsls	r3, r3, #29
 2585 0328 20D4     		bmi	.L370
 457:Core/Src/printf.c ****       buf[len++] = ' ';
 2586              		.loc 1 457 10 is_stmt 1 view .LVU640
 457:Core/Src/printf.c ****       buf[len++] = ' ';
 2587              		.loc 1 457 13 is_stmt 0 view .LVU641
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 72


 2588 032a 229B     		ldr	r3, [sp, #136]
 2589 032c 1B07     		lsls	r3, r3, #28
 2590 032e A0D5     		bpl	.L288
 458:Core/Src/printf.c ****     }
 2591              		.loc 1 458 7 is_stmt 1 view .LVU642
 2592              	.LVL299:
 458:Core/Src/printf.c ****     }
 2593              		.loc 1 458 18 is_stmt 0 view .LVU643
 2594 0330 2023     		movs	r3, #32
 2595 0332 3B55     		strb	r3, [r7, r4]
 2596              	.LVL300:
 458:Core/Src/printf.c ****     }
 2597              		.loc 1 458 14 view .LVU644
 2598 0334 0134     		adds	r4, r4, #1
 2599              	.LVL301:
 458:Core/Src/printf.c ****     }
 2600              		.loc 1 458 14 view .LVU645
 2601 0336 9CE7     		b	.L288
 2602              	.LVL302:
 2603              	.L368:
 2604              	.LBB70:
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2605              		.loc 1 417 14 view .LVU646
 2606 0338 2300     		movs	r3, r4
 2607              	.LVL303:
 2608              	.L275:
 428:Core/Src/printf.c ****     }
 2609              		.loc 1 428 7 is_stmt 1 view .LVU647
 428:Core/Src/printf.c ****     }
 2610              		.loc 1 428 18 is_stmt 0 view .LVU648
 2611 033a 2E22     		movs	r2, #46
 2612 033c 0CAF     		add	r7, sp, #48
 428:Core/Src/printf.c ****     }
 2613              		.loc 1 428 14 view .LVU649
 2614 033e 5C1C     		adds	r4, r3, #1
 2615              	.LVL304:
 428:Core/Src/printf.c ****     }
 2616              		.loc 1 428 18 view .LVU650
 2617 0340 FA54     		strb	r2, [r7, r3]
 2618 0342 72E7     		b	.L279
 2619              	.L372:
 2620              		.align	2
 2621              	.L371:
 2622 0344 FFFFEFFF 		.word	-1048577
 2623 0348 FFFFEF7F 		.word	2146435071
 2624 034c 65CDCD41 		.word	1104006501
 2625 0350 65CDCDC1 		.word	-1043477147
 2626 0354 0000E03F 		.word	1071644672
 2627 0358 08000000 		.word	.LC2
 2628 035c 0C000000 		.word	.LC4
 2629 0360 00000000 		.word	.LC0
 2630 0364 10000000 		.word	.LC6
 2631 0368 80842E41 		.word	1093567616
 2632              	.LVL305:
 2633              	.L370:
 428:Core/Src/printf.c ****     }
 2634              		.loc 1 428 18 view .LVU651
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 73


 2635              	.LBE70:
 455:Core/Src/printf.c ****     }
 2636              		.loc 1 455 7 is_stmt 1 view .LVU652
 455:Core/Src/printf.c ****     }
 2637              		.loc 1 455 18 is_stmt 0 view .LVU653
 2638 036c 2B23     		movs	r3, #43
 2639 036e 3B55     		strb	r3, [r7, r4]
 2640              	.LVL306:
 455:Core/Src/printf.c ****     }
 2641              		.loc 1 455 14 view .LVU654
 2642 0370 0134     		adds	r4, r4, #1
 2643              	.LVL307:
 455:Core/Src/printf.c ****     }
 2644              		.loc 1 455 14 view .LVU655
 2645 0372 7EE7     		b	.L288
 2646              	.LVL308:
 2647              	.L366:
 399:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2648              		.loc 1 399 25 view .LVU656
 2649 0374 F307     		lsls	r3, r6, #31
 2650 0376 00D4     		bmi	.LCB2830
 2651 0378 DAE6     		b	.L265	@long jump
 2652              	.LCB2830:
 401:Core/Src/printf.c ****   }
 2653              		.loc 1 401 5 is_stmt 1 view .LVU657
 2654 037a 0136     		adds	r6, r6, #1
 2655              	.LVL309:
 401:Core/Src/printf.c ****   }
 2656              		.loc 1 401 5 is_stmt 0 view .LVU658
 2657 037c D8E6     		b	.L265
 2658              	.LVL310:
 2659              	.L283:
 443:Core/Src/printf.c ****     }
 2660              		.loc 1 443 7 is_stmt 1 view .LVU659
 443:Core/Src/printf.c ****     }
 2661              		.loc 1 443 12 is_stmt 0 view .LVU660
 2662 037e 219B     		ldr	r3, [sp, #132]
 2663 0380 013B     		subs	r3, r3, #1
 2664 0382 2193     		str	r3, [sp, #132]
 2665              	.LVL311:
 445:Core/Src/printf.c ****       buf[len++] = '0';
 2666              		.loc 1 445 26 is_stmt 1 view .LVU661
 2667 0384 A342     		cmp	r3, r4
 2668 0386 00D9     		bls	.LCB2852
 2669 0388 65E7     		b	.L285	@long jump
 2670              	.LCB2852:
 2671 038a AAE7     		b	.L282
 2672              	.LVL312:
 2673              	.L261:
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 2674              		.loc 1 385 39 is_stmt 0 view .LVU662
 2675 038c 064B     		ldr	r3, .L373
 2676 038e EA00     		lsls	r2, r5, #3
 2677 0390 9B18     		adds	r3, r3, r2
 2678 0392 5C68     		ldr	r4, [r3, #4]
 2679 0394 1B68     		ldr	r3, [r3]
 2680 0396 2F00     		movs	r7, r5
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 74


 2681 0398 0693     		str	r3, [sp, #24]
 2682 039a 0794     		str	r4, [sp, #28]
 2683 039c 0024     		movs	r4, #0
 2684 039e 94E6     		b	.L260
 2685              	.LVL313:
 2686              	.L367:
 442:Core/Src/printf.c ****       width--;
 2687              		.loc 1 442 5 is_stmt 1 view .LVU663
 442:Core/Src/printf.c ****       width--;
 2688              		.loc 1 442 8 is_stmt 0 view .LVU664
 2689 03a0 219B     		ldr	r3, [sp, #132]
 2690 03a2 002B     		cmp	r3, #0
 2691 03a4 9DD0     		beq	.L282
 2692 03a6 4AE7     		b	.L292
 2693              	.L374:
 2694              		.align	2
 2695              	.L373:
 2696 03a8 00000000 		.word	pow10.0
 2697              	.LBE73:
 2698              	.LBE76:
 2699              		.cfi_endproc
 2700              	.LFE1436:
 2702              		.global	__aeabi_uldivmod
 2703              		.section	.text._vsnprintf,"ax",%progbits
 2704              		.align	1
 2705              		.p2align 2,,3
 2706              		.syntax unified
 2707              		.code	16
 2708              		.thumb_func
 2710              	_vsnprintf:
 2711              	.LVL314:
 2712              	.LFB1438:
 579:Core/Src/printf.c ****   unsigned int flags, width, precision, n;
 2713              		.loc 1 579 1 is_stmt 1 view -0
 2714              		.cfi_startproc
 2715              		@ args = 4, pretend = 0, frame = 96
 2716              		@ frame_needed = 0, uses_anonymous_args = 0
 579:Core/Src/printf.c ****   unsigned int flags, width, precision, n;
 2717              		.loc 1 579 1 is_stmt 0 view .LVU666
 2718 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2719              	.LCFI12:
 2720              		.cfi_def_cfa_offset 20
 2721              		.cfi_offset 4, -20
 2722              		.cfi_offset 5, -16
 2723              		.cfi_offset 6, -12
 2724              		.cfi_offset 7, -8
 2725              		.cfi_offset 14, -4
 2726 0002 4546     		mov	r5, r8
 2727 0004 DE46     		mov	lr, fp
 2728 0006 5746     		mov	r7, r10
 2729 0008 4E46     		mov	r6, r9
 2730 000a E0B5     		push	{r5, r6, r7, lr}
 2731              	.LCFI13:
 2732              		.cfi_def_cfa_offset 36
 2733              		.cfi_offset 8, -36
 2734              		.cfi_offset 9, -32
 2735              		.cfi_offset 10, -28
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 75


 2736              		.cfi_offset 11, -24
 2737 000c A1B0     		sub	sp, sp, #132
 2738              	.LCFI14:
 2739              		.cfi_def_cfa_offset 168
 579:Core/Src/printf.c ****   unsigned int flags, width, precision, n;
 2740              		.loc 1 579 1 view .LVU667
 2741 000e 1D00     		movs	r5, r3
 2742 0010 2A9B     		ldr	r3, [sp, #168]
 2743              	.LVL315:
 579:Core/Src/printf.c ****   unsigned int flags, width, precision, n;
 2744              		.loc 1 579 1 view .LVU668
 2745 0012 8346     		mov	fp, r0
 2746 0014 8A46     		mov	r10, r1
 2747 0016 9046     		mov	r8, r2
 2748 0018 0B93     		str	r3, [sp, #44]
 2749              	.LVL316:
 580:Core/Src/printf.c ****   size_t idx = 0U;
 2750              		.loc 1 580 3 is_stmt 1 view .LVU669
 581:Core/Src/printf.c **** 
 2751              		.loc 1 581 3 view .LVU670
 583:Core/Src/printf.c ****     // use null output function
 2752              		.loc 1 583 3 view .LVU671
 583:Core/Src/printf.c ****     // use null output function
 2753              		.loc 1 583 6 is_stmt 0 view .LVU672
 2754 001a 0029     		cmp	r1, #0
 2755 001c 00D1     		bne	.LCB2938
 2756 001e 98E1     		b	.L611	@long jump
 2757              	.LCB2938:
 2758              	.LVL317:
 588:Core/Src/printf.c ****   {
 2759              		.loc 1 588 10 is_stmt 1 view .LVU673
 2760 0020 0023     		movs	r3, #0
 2761              	.LVL318:
 588:Core/Src/printf.c ****   {
 2762              		.loc 1 588 10 is_stmt 0 view .LVU674
 2763 0022 2878     		ldrb	r0, [r5]
 2764              	.LVL319:
 588:Core/Src/printf.c ****   {
 2765              		.loc 1 588 10 view .LVU675
 2766 0024 9946     		mov	r9, r3
 2767 0026 0028     		cmp	r0, #0
 2768 0028 00D1     		bne	.LCB2949
 2769 002a 9AE1     		b	.L588	@long jump
 2770              	.LCB2949:
 2771              	.L623:
 605:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2772              		.loc 1 605 7 view .LVU676
 2773 002c CE4B     		ldr	r3, .L644
 2774 002e 5E46     		mov	r6, fp
 2775 0030 0993     		str	r3, [sp, #36]
 684:Core/Src/printf.c ****       case 'd' :
 2776              		.loc 1 684 5 view .LVU677
 2777 0032 CE4B     		ldr	r3, .L644+4
 2778 0034 4C46     		mov	r4, r9
 2779 0036 D346     		mov	fp, r10
 2780              	.LVL320:
 684:Core/Src/printf.c ****       case 'd' :
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 76


 2781              		.loc 1 684 5 view .LVU678
 2782 0038 4746     		mov	r7, r8
 2783 003a 0D93     		str	r3, [sp, #52]
 2784 003c 0AE0     		b	.L512
 2785              	.LVL321:
 2786              	.L406:
 847:Core/Src/printf.c ****         format++;
 2787              		.loc 1 847 9 is_stmt 1 view .LVU679
 2788 003e 631C     		adds	r3, r4, #1
 2789 0040 9846     		mov	r8, r3
 2790              	.LVL322:
 847:Core/Src/printf.c ****         format++;
 2791              		.loc 1 847 9 is_stmt 0 view .LVU680
 2792 0042 2200     		movs	r2, r4
 2793 0044 3B00     		movs	r3, r7
 2794              	.LVL323:
 847:Core/Src/printf.c ****         format++;
 2795              		.loc 1 847 9 view .LVU681
 2796 0046 5946     		mov	r1, fp
 2797 0048 B047     		blx	r6
 2798              	.LVL324:
 848:Core/Src/printf.c ****         break;
 2799              		.loc 1 848 9 is_stmt 1 view .LVU682
 849:Core/Src/printf.c ****     }
 2800              		.loc 1 849 9 view .LVU683
 847:Core/Src/printf.c ****         format++;
 2801              		.loc 1 847 9 is_stmt 0 view .LVU684
 2802 004a 4446     		mov	r4, r8
 2803              	.LVL325:
 2804              	.L378:
 588:Core/Src/printf.c ****   {
 2805              		.loc 1 588 10 is_stmt 1 view .LVU685
 2806 004c 2878     		ldrb	r0, [r5]
 2807 004e 0028     		cmp	r0, #0
 2808 0050 00D1     		bne	.LCB2997
 2809 0052 CDE0     		b	.L612	@long jump
 2810              	.LCB2997:
 2811              	.LVL326:
 2812              	.L512:
 591:Core/Src/printf.c ****       // no
 2813              		.loc 1 591 5 view .LVU686
 594:Core/Src/printf.c ****       continue;
 2814              		.loc 1 594 13 is_stmt 0 view .LVU687
 2815 0054 0135     		adds	r5, r5, #1
 2816              	.LVL327:
 591:Core/Src/printf.c ****       // no
 2817              		.loc 1 591 8 view .LVU688
 2818 0056 2528     		cmp	r0, #37
 2819 0058 F1D1     		bne	.L406
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2820              		.loc 1 609 25 view .LVU689
 2821 005a 0823     		movs	r3, #8
 2822 005c 9A46     		mov	r10, r3
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2823              		.loc 1 608 25 view .LVU690
 2824 005e 043B     		subs	r3, r3, #4
 2825 0060 9946     		mov	r9, r3
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 77


 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2826              		.loc 1 607 25 view .LVU691
 2827 0062 023B     		subs	r3, r3, #2
 2828 0064 9846     		mov	r8, r3
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2829              		.loc 1 606 25 view .LVU692
 2830 0066 013B     		subs	r3, r3, #1
 603:Core/Src/printf.c ****     do {
 2831              		.loc 1 603 11 view .LVU693
 2832 0068 0022     		movs	r2, #0
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2833              		.loc 1 606 25 view .LVU694
 2834 006a 9C46     		mov	ip, r3
 2835 006c 0C94     		str	r4, [sp, #48]
 2836              	.LVL328:
 2837              	.L377:
 604:Core/Src/printf.c ****       switch (*format) {
 2838              		.loc 1 604 5 is_stmt 1 view .LVU695
 605:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2839              		.loc 1 605 7 view .LVU696
 605:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2840              		.loc 1 605 15 is_stmt 0 view .LVU697
 2841 006e 2878     		ldrb	r0, [r5]
 2842              	.LBB122:
 629:Core/Src/printf.c ****     }
 2843              		.loc 1 629 13 view .LVU698
 2844 0070 691C     		adds	r1, r5, #1
 2845              	.LBE122:
 605:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2846              		.loc 1 605 7 view .LVU699
 2847 0072 0300     		movs	r3, r0
 2848 0074 203B     		subs	r3, r3, #32
 2849 0076 DBB2     		uxtb	r3, r3
 2850 0078 102B     		cmp	r3, #16
 2851 007a 03D8     		bhi	.L379
 2852 007c 099C     		ldr	r4, [sp, #36]
 2853 007e 9B00     		lsls	r3, r3, #2
 2854 0080 E358     		ldr	r3, [r4, r3]
 2855 0082 9F46     		mov	pc, r3
 2856              		.section	.rodata._vsnprintf,"a",%progbits
 2857              		.align	2
 2858              	.L381:
 2859 0000 D6000000 		.word	.L385
 2860 0004 84000000 		.word	.L379
 2861 0008 84000000 		.word	.L379
 2862 000c CE000000 		.word	.L384
 2863 0010 84000000 		.word	.L379
 2864 0014 84000000 		.word	.L379
 2865 0018 84000000 		.word	.L379
 2866 001c 84000000 		.word	.L379
 2867 0020 84000000 		.word	.L379
 2868 0024 84000000 		.word	.L379
 2869 0028 84000000 		.word	.L379
 2870 002c C6000000 		.word	.L383
 2871 0030 84000000 		.word	.L379
 2872 0034 BE000000 		.word	.L382
 2873 0038 84000000 		.word	.L379
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 78


 2874 003c 84000000 		.word	.L379
 2875 0040 B6000000 		.word	.L380
 2876              		.section	.text._vsnprintf
 2877              	.L379:
 617:Core/Src/printf.c ****       width = _atoi(&format);
 2878              		.loc 1 617 8 view .LVU700
 2879 0084 0300     		movs	r3, r0
 2880 0086 303B     		subs	r3, r3, #48
 2881 0088 0C9C     		ldr	r4, [sp, #48]
 2882              	.LVL329:
 613:Core/Src/printf.c **** 
 2883              		.loc 1 613 14 is_stmt 1 view .LVU701
 616:Core/Src/printf.c ****     if (_is_digit(*format)) {
 2884              		.loc 1 616 5 view .LVU702
 617:Core/Src/printf.c ****       width = _atoi(&format);
 2885              		.loc 1 617 5 view .LVU703
 2886              	.LBB123:
 2887              	.LBI123:
 182:Core/Src/printf.c **** {
 2888              		.loc 1 182 20 view .LVU704
 2889              	.LBB124:
 184:Core/Src/printf.c **** }
 2890              		.loc 1 184 3 view .LVU705
 184:Core/Src/printf.c **** }
 2891              		.loc 1 184 3 is_stmt 0 view .LVU706
 2892              	.LBE124:
 2893              	.LBE123:
 617:Core/Src/printf.c ****       width = _atoi(&format);
 2894              		.loc 1 617 8 view .LVU707
 2895 008a 0A92     		str	r2, [sp, #40]
 2896              	.LVL330:
 617:Core/Src/printf.c ****       width = _atoi(&format);
 2897              		.loc 1 617 8 view .LVU708
 2898 008c 092B     		cmp	r3, #9
 2899 008e 7FD9     		bls	.L613
 620:Core/Src/printf.c ****       const int w = va_arg(va, int);
 2900              		.loc 1 620 10 is_stmt 1 view .LVU709
 616:Core/Src/printf.c ****     if (_is_digit(*format)) {
 2901              		.loc 1 616 11 is_stmt 0 view .LVU710
 2902 0090 0023     		movs	r3, #0
 2903 0092 9846     		mov	r8, r3
 620:Core/Src/printf.c ****       const int w = va_arg(va, int);
 2904              		.loc 1 620 13 view .LVU711
 2905 0094 2A28     		cmp	r0, #42
 2906 0096 00D1     		bne	.LCB3081
 2907 0098 C1E0     		b	.L614	@long jump
 2908              	.LCB3081:
 2909              	.LVL331:
 2910              	.L389:
 633:Core/Src/printf.c ****     if (*format == '.') {
 2911              		.loc 1 633 5 is_stmt 1 view .LVU712
 634:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2912              		.loc 1 634 5 view .LVU713
 633:Core/Src/printf.c ****     if (*format == '.') {
 2913              		.loc 1 633 15 is_stmt 0 view .LVU714
 2914 009a 0023     		movs	r3, #0
 2915 009c 9A46     		mov	r10, r3
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 79


 634:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2916              		.loc 1 634 8 view .LVU715
 2917 009e 2E28     		cmp	r0, #46
 2918 00a0 00D1     		bne	.LCB3097
 2919 00a2 90E0     		b	.L615	@long jump
 2920              	.LCB3097:
 2921              	.LVL332:
 2922              	.L392:
 648:Core/Src/printf.c ****       case 'l' :
 2923              		.loc 1 648 5 is_stmt 1 view .LVU716
 2924 00a4 0300     		movs	r3, r0
 2925 00a6 683B     		subs	r3, r3, #104
 2926 00a8 DBB2     		uxtb	r3, r3
 2927 00aa 122B     		cmp	r3, #18
 2928 00ac 1ED8     		bhi	.L396
 2929 00ae B04A     		ldr	r2, .L644+8
 2930 00b0 9B00     		lsls	r3, r3, #2
 2931 00b2 D358     		ldr	r3, [r2, r3]
 2932 00b4 9F46     		mov	pc, r3
 2933              		.section	.rodata._vsnprintf
 2934              		.align	2
 2935              	.L398:
 2936 0044 90020000 		.word	.L401
 2937 0048 EC000000 		.word	.L396
 2938 004c 8A020000 		.word	.L400
 2939 0050 EC000000 		.word	.L396
 2940 0054 A4020000 		.word	.L399
 2941 0058 EC000000 		.word	.L396
 2942 005c EC000000 		.word	.L396
 2943 0060 EC000000 		.word	.L396
 2944 0064 EC000000 		.word	.L396
 2945 0068 EC000000 		.word	.L396
 2946 006c EC000000 		.word	.L396
 2947 0070 EC000000 		.word	.L396
 2948 0074 DE000000 		.word	.L397
 2949 0078 EC000000 		.word	.L396
 2950 007c EC000000 		.word	.L396
 2951 0080 EC000000 		.word	.L396
 2952 0084 EC000000 		.word	.L396
 2953 0088 EC000000 		.word	.L396
 2954 008c DE000000 		.word	.L397
 2955              		.section	.text._vsnprintf
 2956              	.LVL333:
 2957              	.L380:
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2958              		.loc 1 606 19 view .LVU717
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2959              		.loc 1 606 25 is_stmt 0 view .LVU718
 2960 00b6 6346     		mov	r3, ip
 2961              	.LBB125:
 629:Core/Src/printf.c ****     }
 2962              		.loc 1 629 13 view .LVU719
 2963 00b8 0D00     		movs	r5, r1
 2964              	.LBE125:
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2965              		.loc 1 606 25 view .LVU720
 2966 00ba 1A43     		orrs	r2, r3
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 80


 2967              	.LVL334:
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2968              		.loc 1 606 43 is_stmt 1 view .LVU721
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2969              		.loc 1 606 53 view .LVU722
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2970              		.loc 1 606 61 view .LVU723
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2971              		.loc 1 606 61 is_stmt 0 view .LVU724
 2972 00bc D7E7     		b	.L377
 2973              	.LVL335:
 2974              	.L382:
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2975              		.loc 1 607 19 is_stmt 1 view .LVU725
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2976              		.loc 1 607 25 is_stmt 0 view .LVU726
 2977 00be 4346     		mov	r3, r8
 2978              	.LBB126:
 629:Core/Src/printf.c ****     }
 2979              		.loc 1 629 13 view .LVU727
 2980 00c0 0D00     		movs	r5, r1
 2981              	.LBE126:
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2982              		.loc 1 607 25 view .LVU728
 2983 00c2 1A43     		orrs	r2, r3
 2984              	.LVL336:
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2985              		.loc 1 607 43 is_stmt 1 view .LVU729
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2986              		.loc 1 607 53 view .LVU730
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2987              		.loc 1 607 61 view .LVU731
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2988              		.loc 1 607 61 is_stmt 0 view .LVU732
 2989 00c4 D3E7     		b	.L377
 2990              	.LVL337:
 2991              	.L383:
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2992              		.loc 1 608 19 is_stmt 1 view .LVU733
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2993              		.loc 1 608 25 is_stmt 0 view .LVU734
 2994 00c6 4B46     		mov	r3, r9
 2995              	.LBB127:
 629:Core/Src/printf.c ****     }
 2996              		.loc 1 629 13 view .LVU735
 2997 00c8 0D00     		movs	r5, r1
 2998              	.LBE127:
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2999              		.loc 1 608 25 view .LVU736
 3000 00ca 1A43     		orrs	r2, r3
 3001              	.LVL338:
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 3002              		.loc 1 608 43 is_stmt 1 view .LVU737
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 3003              		.loc 1 608 53 view .LVU738
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 3004              		.loc 1 608 61 view .LVU739
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 81


 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 3005              		.loc 1 608 61 is_stmt 0 view .LVU740
 3006 00cc CFE7     		b	.L377
 3007              	.LVL339:
 3008              	.L384:
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 3009              		.loc 1 610 19 is_stmt 1 view .LVU741
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 3010              		.loc 1 610 25 is_stmt 0 view .LVU742
 3011 00ce 1023     		movs	r3, #16
 3012              	.LBB128:
 629:Core/Src/printf.c ****     }
 3013              		.loc 1 629 13 view .LVU743
 3014 00d0 0D00     		movs	r5, r1
 3015              	.LBE128:
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 3016              		.loc 1 610 25 view .LVU744
 3017 00d2 1A43     		orrs	r2, r3
 3018              	.LVL340:
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 3019              		.loc 1 610 43 is_stmt 1 view .LVU745
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 3020              		.loc 1 610 53 view .LVU746
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 3021              		.loc 1 610 61 view .LVU747
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 3022              		.loc 1 610 61 is_stmt 0 view .LVU748
 3023 00d4 CBE7     		b	.L377
 3024              	.LVL341:
 3025              	.L385:
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 3026              		.loc 1 609 19 is_stmt 1 view .LVU749
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 3027              		.loc 1 609 25 is_stmt 0 view .LVU750
 3028 00d6 5346     		mov	r3, r10
 3029              	.LBB129:
 629:Core/Src/printf.c ****     }
 3030              		.loc 1 629 13 view .LVU751
 3031 00d8 0D00     		movs	r5, r1
 3032              	.LBE129:
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 3033              		.loc 1 609 25 view .LVU752
 3034 00da 1A43     		orrs	r2, r3
 3035              	.LVL342:
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 3036              		.loc 1 609 43 is_stmt 1 view .LVU753
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 3037              		.loc 1 609 53 view .LVU754
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 3038              		.loc 1 609 61 view .LVU755
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 3039              		.loc 1 609 61 is_stmt 0 view .LVU756
 3040 00dc C7E7     		b	.L377
 3041              	.LVL343:
 3042              	.L397:
 676:Core/Src/printf.c ****         format++;
 3043              		.loc 1 676 9 is_stmt 1 view .LVU757
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 82


 676:Core/Src/printf.c ****         format++;
 3044              		.loc 1 676 15 is_stmt 0 view .LVU758
 3045 00de 8023     		movs	r3, #128
 3046 00e0 5B00     		lsls	r3, r3, #1
 3047              	.L603:
 3048 00e2 0A9A     		ldr	r2, [sp, #40]
 652:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 3049              		.loc 1 652 13 view .LVU759
 3050 00e4 6878     		ldrb	r0, [r5, #1]
 676:Core/Src/printf.c ****         format++;
 3051              		.loc 1 676 15 view .LVU760
 3052 00e6 1A43     		orrs	r2, r3
 3053 00e8 0A92     		str	r2, [sp, #40]
 3054              	.LVL344:
 677:Core/Src/printf.c ****         break;
 3055              		.loc 1 677 9 is_stmt 1 view .LVU761
 678:Core/Src/printf.c ****       default :
 3056              		.loc 1 678 9 view .LVU762
 678:Core/Src/printf.c ****       default :
 3057              		.loc 1 678 9 is_stmt 0 view .LVU763
 3058 00ea 0131     		adds	r1, r1, #1
 3059              	.LVL345:
 3060              	.L396:
 684:Core/Src/printf.c ****       case 'd' :
 3061              		.loc 1 684 5 is_stmt 1 view .LVU764
 3062              	.LBB130:
 755:Core/Src/printf.c ****         break;
 3063              		.loc 1 755 15 is_stmt 0 view .LVU765
 3064 00ec 0D00     		movs	r5, r1
 3065              	.LBE130:
 684:Core/Src/printf.c ****       case 'd' :
 3066              		.loc 1 684 5 view .LVU766
 3067 00ee 6728     		cmp	r0, #103
 3068 00f0 0AD8     		bhi	.L404
 3069 00f2 2428     		cmp	r0, #36
 3070 00f4 A3D9     		bls	.L406
 3071 00f6 0300     		movs	r3, r0
 3072 00f8 253B     		subs	r3, r3, #37
 3073 00fa DBB2     		uxtb	r3, r3
 3074 00fc 422B     		cmp	r3, #66
 3075 00fe 9ED8     		bhi	.L406
 3076 0100 0D9A     		ldr	r2, [sp, #52]
 3077 0102 9B00     		lsls	r3, r3, #2
 3078 0104 D358     		ldr	r3, [r2, r3]
 3079 0106 9F46     		mov	pc, r3
 3080              		.section	.rodata._vsnprintf
 3081              		.align	2
 3082              	.L413:
 3083 0090 EE020000 		.word	.L417
 3084 0094 3E000000 		.word	.L406
 3085 0098 3E000000 		.word	.L406
 3086 009c 3E000000 		.word	.L406
 3087 00a0 3E000000 		.word	.L406
 3088 00a4 3E000000 		.word	.L406
 3089 00a8 3E000000 		.word	.L406
 3090 00ac 3E000000 		.word	.L406
 3091 00b0 3E000000 		.word	.L406
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 83


 3092 00b4 3E000000 		.word	.L406
 3093 00b8 3E000000 		.word	.L406
 3094 00bc 3E000000 		.word	.L406
 3095 00c0 3E000000 		.word	.L406
 3096 00c4 3E000000 		.word	.L406
 3097 00c8 3E000000 		.word	.L406
 3098 00cc 3E000000 		.word	.L406
 3099 00d0 3E000000 		.word	.L406
 3100 00d4 3E000000 		.word	.L406
 3101 00d8 3E000000 		.word	.L406
 3102 00dc 3E000000 		.word	.L406
 3103 00e0 3E000000 		.word	.L406
 3104 00e4 3E000000 		.word	.L406
 3105 00e8 3E000000 		.word	.L406
 3106 00ec 3E000000 		.word	.L406
 3107 00f0 3E000000 		.word	.L406
 3108 00f4 3E000000 		.word	.L406
 3109 00f8 3E000000 		.word	.L406
 3110 00fc 3E000000 		.word	.L406
 3111 0100 3E000000 		.word	.L406
 3112 0104 3E000000 		.word	.L406
 3113 0108 3E000000 		.word	.L406
 3114 010c 3E000000 		.word	.L406
 3115 0110 4A020000 		.word	.L412
 3116 0114 BA020000 		.word	.L414
 3117 0118 4A020000 		.word	.L412
 3118 011c 3E000000 		.word	.L406
 3119 0120 3E000000 		.word	.L406
 3120 0124 3E000000 		.word	.L406
 3121 0128 3E000000 		.word	.L406
 3122 012c 3E000000 		.word	.L406
 3123 0130 3E000000 		.word	.L406
 3124 0134 3E000000 		.word	.L406
 3125 0138 3E000000 		.word	.L406
 3126 013c 3E000000 		.word	.L406
 3127 0140 3E000000 		.word	.L406
 3128 0144 3E000000 		.word	.L406
 3129 0148 3E000000 		.word	.L406
 3130 014c 3E000000 		.word	.L406
 3131 0150 3E000000 		.word	.L406
 3132 0154 3E000000 		.word	.L406
 3133 0158 3E000000 		.word	.L406
 3134 015c D6040000 		.word	.L415
 3135 0160 3E000000 		.word	.L406
 3136 0164 3E000000 		.word	.L406
 3137 0168 3E000000 		.word	.L406
 3138 016c 3E000000 		.word	.L406
 3139 0170 3E000000 		.word	.L406
 3140 0174 3E000000 		.word	.L406
 3141 0178 3E000000 		.word	.L406
 3142 017c 3E000000 		.word	.L406
 3143 0180 3E000000 		.word	.L406
 3144 0184 D6040000 		.word	.L415
 3145 0188 00030000 		.word	.L416
 3146 018c D6040000 		.word	.L415
 3147 0190 4A020000 		.word	.L412
 3148 0194 BA020000 		.word	.L414
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 84


 3149 0198 4A020000 		.word	.L412
 3150              		.section	.text._vsnprintf
 3151              	.L404:
 3152 0108 0100     		movs	r1, r0
 3153              	.LVL346:
 684:Core/Src/printf.c ****       case 'd' :
 3154              		.loc 1 684 5 view .LVU767
 3155 010a 6939     		subs	r1, r1, #105
 3156 010c C9B2     		uxtb	r1, r1
 3157 010e 0F29     		cmp	r1, #15
 3158 0110 95D8     		bhi	.L406
 3159 0112 0123     		movs	r3, #1
 3160 0114 8B40     		lsls	r3, r3, r1
 3161 0116 9C46     		mov	ip, r3
 3162 0118 964B     		ldr	r3, .L644+12
 3163 011a 9946     		mov	r9, r3
 3164 011c 6346     		mov	r3, ip
 3165 011e 4A46     		mov	r2, r9
 3166 0120 1340     		ands	r3, r2
 3167 0122 0C93     		str	r3, [sp, #48]
 3168 0124 6246     		mov	r2, ip
 3169 0126 4B46     		mov	r3, r9
 3170 0128 1A42     		tst	r2, r3
 3171 012a 00D0     		beq	.LCB3305
 3172 012c 5DE2     		b	.L616	@long jump
 3173              	.LCB3305:
 3174 012e 0A29     		cmp	r1, #10
 3175 0130 00D1     		bne	.LCB3307
 3176 0132 23E1     		b	.L410	@long jump
 3177              	.LCB3307:
 3178 0134 0729     		cmp	r1, #7
 3179 0136 82D1     		bne	.L406
 3180              	.LBB195:
 824:Core/Src/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 3181              		.loc 1 824 9 is_stmt 1 view .LVU768
 3182              	.LVL347:
 825:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3183              		.loc 1 825 9 view .LVU769
 827:Core/Src/printf.c ****         if (is_ll) {
 3184              		.loc 1 827 9 view .LVU770
 828:Core/Src/printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U,
 3185              		.loc 1 828 9 view .LVU771
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3186              		.loc 1 833 11 view .LVU772
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3187              		.loc 1 833 81 is_stmt 0 view .LVU773
 3188 0138 0B9B     		ldr	r3, [sp, #44]
 3189              	.LVL348:
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3190              		.loc 1 833 81 view .LVU774
 3191 013a 02CB     		ldmia	r3!, {r1}
 3192              	.LVL349:
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3193              		.loc 1 833 81 view .LVU775
 3194 013c 9846     		mov	r8, r3
 3195              	.LVL350:
 3196              	.LBB196:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 85


 3197              	.LBI196:
 282:Core/Src/printf.c **** {
 3198              		.loc 1 282 15 is_stmt 1 view .LVU776
 3199              	.LBB197:
 284:Core/Src/printf.c ****   size_t len = 0U;
 3200              		.loc 1 284 3 view .LVU777
 285:Core/Src/printf.c **** 
 3201              		.loc 1 285 3 view .LVU778
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 3202              		.loc 1 288 3 view .LVU779
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 3203              		.loc 1 288 6 is_stmt 0 view .LVU780
 3204 013e 0029     		cmp	r1, #0
 3205 0140 00D1     		bne	.LCB3342
 3206 0142 9AE1     		b	.L506	@long jump
 3207              	.LCB3342:
 3208              	.LBE197:
 3209              	.LBE196:
 825:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3210              		.loc 1 825 15 view .LVU781
 3211 0144 2120     		movs	r0, #33
 3212 0146 0A9A     		ldr	r2, [sp, #40]
 3213 0148 0243     		orrs	r2, r0
 3214              	.LVL351:
 825:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3215              		.loc 1 825 15 view .LVU782
 3216 014a 9146     		mov	r9, r2
 3217              	.LVL352:
 3218              	.L507:
 825:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3219              		.loc 1 825 15 view .LVU783
 3220 014c 10AB     		add	r3, sp, #64
 3221 014e 9C46     		mov	ip, r3
 3222 0150 1F22     		movs	r2, #31
 3223              	.LBB204:
 3224              	.LBB201:
 3225              	.LBB198:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 3226              		.loc 1 295 39 view .LVU784
 3227 0152 0F23     		movs	r3, #15
 3228 0154 4046     		mov	r0, r8
 3229 0156 6244     		add	r2, r2, ip
 3230 0158 0B95     		str	r5, [sp, #44]
 3231              	.LVL353:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 3232              		.loc 1 295 39 view .LVU785
 3233 015a 9C46     		mov	ip, r3
 3234 015c A046     		mov	r8, r4
 3235              	.LVL354:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 3236              		.loc 1 295 39 view .LVU786
 3237 015e 1500     		movs	r5, r2
 3238              	.LVL355:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 3239              		.loc 1 295 39 view .LVU787
 3240 0160 0C9B     		ldr	r3, [sp, #48]
 3241 0162 0A90     		str	r0, [sp, #40]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 86


 3242              	.LVL356:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 3243              		.loc 1 295 39 view .LVU788
 3244 0164 02E0     		b	.L511
 3245              	.LVL357:
 3246              	.L617:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 3247              		.loc 1 295 39 view .LVU789
 3248              	.LBE198:
 298:Core/Src/printf.c ****   }
 3249              		.loc 1 298 20 view .LVU790
 3250 0166 202B     		cmp	r3, #32
 3251 0168 0CD0     		beq	.L600
 3252              	.LBB199:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 3253              		.loc 1 297 13 view .LVU791
 3254 016a 1100     		movs	r1, r2
 3255              	.LVL358:
 3256              	.L511:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 3257              		.loc 1 297 13 view .LVU792
 3258              	.LBE199:
 294:Core/Src/printf.c ****       const char digit = (char)(value % base);
 3259              		.loc 1 294 5 is_stmt 1 view .LVU793
 3260              	.LBB200:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 3261              		.loc 1 295 7 view .LVU794
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 3262              		.loc 1 295 18 is_stmt 0 view .LVU795
 3263 016c 6446     		mov	r4, ip
 3264 016e 0C40     		ands	r4, r1
 3265              	.LVL359:
 296:Core/Src/printf.c ****       value /= base;
 3266              		.loc 1 296 7 is_stmt 1 view .LVU796
 296:Core/Src/printf.c ****       value /= base;
 3267              		.loc 1 296 18 is_stmt 0 view .LVU797
 3268 0170 2000     		movs	r0, r4
 3269 0172 3730     		adds	r0, r0, #55
 3270 0174 092C     		cmp	r4, #9
 3271 0176 00D8     		bhi	.L510
 3272              	.LVL360:
 296:Core/Src/printf.c ****       value /= base;
 3273              		.loc 1 296 18 view .LVU798
 3274 0178 0738     		subs	r0, r0, #7
 3275              	.L510:
 3276              	.LVL361:
 296:Core/Src/printf.c ****       value /= base;
 3277              		.loc 1 296 14 view .LVU799
 3278 017a 0133     		adds	r3, r3, #1
 3279              	.LVL362:
 296:Core/Src/printf.c ****       value /= base;
 3280              		.loc 1 296 18 view .LVU800
 3281 017c E854     		strb	r0, [r5, r3]
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 3282              		.loc 1 297 7 is_stmt 1 view .LVU801
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 3283              		.loc 1 297 13 is_stmt 0 view .LVU802
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 87


 3284 017e 0A09     		lsrs	r2, r1, #4
 3285              	.LVL363:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 3286              		.loc 1 297 13 view .LVU803
 3287              	.LBE200:
 298:Core/Src/printf.c ****   }
 3288              		.loc 1 298 20 is_stmt 1 view .LVU804
 3289 0180 0F29     		cmp	r1, #15
 3290 0182 F0D8     		bhi	.L617
 3291              	.L600:
 3292 0184 0C93     		str	r3, [sp, #48]
 3293 0186 0A9B     		ldr	r3, [sp, #40]
 3294              	.LVL364:
 298:Core/Src/printf.c ****   }
 3295              		.loc 1 298 20 is_stmt 0 view .LVU805
 3296 0188 4446     		mov	r4, r8
 3297 018a 0B9D     		ldr	r5, [sp, #44]
 3298 018c 9846     		mov	r8, r3
 3299 018e 84E1     		b	.L508
 3300              	.LVL365:
 3301              	.L613:
 298:Core/Src/printf.c ****   }
 3302              		.loc 1 298 20 view .LVU806
 3303              	.LBE201:
 3304              	.LBE204:
 3305              	.LBE195:
 3306              	.LBB207:
 3307              	.LBB208:
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 3308              		.loc 1 191 16 view .LVU807
 3309 0190 0023     		movs	r3, #0
 3310 0192 9846     		mov	r8, r3
 3311 0194 0A9B     		ldr	r3, [sp, #40]
 3312 0196 4546     		mov	r5, r8
 3313 0198 9C46     		mov	ip, r3
 3314 019a 00E0     		b	.L386
 3315              	.LVL366:
 3316              	.L551:
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 3317              		.loc 1 191 16 view .LVU808
 3318 019c 0131     		adds	r1, r1, #1
 3319              	.LVL367:
 3320              	.L386:
 193:Core/Src/printf.c ****   }
 3321              		.loc 1 193 5 is_stmt 1 view .LVU809
 193:Core/Src/printf.c ****   }
 3322              		.loc 1 193 11 is_stmt 0 view .LVU810
 3323 019e AB00     		lsls	r3, r5, #2
 3324 01a0 5B19     		adds	r3, r3, r5
 3325 01a2 5B00     		lsls	r3, r3, #1
 193:Core/Src/printf.c ****   }
 3326              		.loc 1 193 17 view .LVU811
 3327 01a4 1D18     		adds	r5, r3, r0
 3328              	.LVL368:
 192:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 3329              		.loc 1 192 10 view .LVU812
 3330 01a6 0878     		ldrb	r0, [r1]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 88


 193:Core/Src/printf.c ****   }
 3331              		.loc 1 193 7 view .LVU813
 3332 01a8 303D     		subs	r5, r5, #48
 3333              	.LVL369:
 192:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 3334              		.loc 1 192 10 is_stmt 1 view .LVU814
 3335              	.LBB209:
 3336              	.LBI209:
 182:Core/Src/printf.c **** {
 3337              		.loc 1 182 20 view .LVU815
 3338              	.LBB210:
 184:Core/Src/printf.c **** }
 3339              		.loc 1 184 3 view .LVU816
 184:Core/Src/printf.c **** }
 3340              		.loc 1 184 3 is_stmt 0 view .LVU817
 3341              	.LBE210:
 3342              	.LBE209:
 192:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 3343              		.loc 1 192 10 view .LVU818
 3344 01aa 0300     		movs	r3, r0
 3345 01ac 303B     		subs	r3, r3, #48
 3346 01ae 092B     		cmp	r3, #9
 3347 01b0 F4D9     		bls	.L551
 3348 01b2 6346     		mov	r3, ip
 3349 01b4 0A93     		str	r3, [sp, #40]
 3350              	.LBE208:
 3351              	.LBE207:
 633:Core/Src/printf.c ****     if (*format == '.') {
 3352              		.loc 1 633 15 view .LVU819
 3353 01b6 0023     		movs	r3, #0
 3354 01b8 A846     		mov	r8, r5
 3355 01ba 9A46     		mov	r10, r3
 3356 01bc 0D00     		movs	r5, r1
 3357              	.LVL370:
 633:Core/Src/printf.c ****     if (*format == '.') {
 3358              		.loc 1 633 15 view .LVU820
 3359 01be 0131     		adds	r1, r1, #1
 3360              	.LVL371:
 633:Core/Src/printf.c ****     if (*format == '.') {
 3361              		.loc 1 633 5 is_stmt 1 view .LVU821
 634:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 3362              		.loc 1 634 5 view .LVU822
 634:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 3363              		.loc 1 634 8 is_stmt 0 view .LVU823
 3364 01c0 2E28     		cmp	r0, #46
 3365 01c2 00D0     		beq	.LCB3532
 3366 01c4 6EE7     		b	.L392	@long jump
 3367              	.LCB3532:
 3368              	.LVL372:
 3369              	.L615:
 635:Core/Src/printf.c ****       format++;
 3370              		.loc 1 635 13 view .LVU824
 3371 01c6 8020     		movs	r0, #128
 3372 01c8 0A9A     		ldr	r2, [sp, #40]
 3373 01ca C000     		lsls	r0, r0, #3
 3374 01cc 0243     		orrs	r2, r0
 3375 01ce 0A92     		str	r2, [sp, #40]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 89


 3376              	.LVL373:
 637:Core/Src/printf.c ****         precision = _atoi(&format);
 3377              		.loc 1 637 10 view .LVU825
 3378 01d0 3022     		movs	r2, #48
 3379 01d2 5242     		rsbs	r2, r2, #0
 3380 01d4 9446     		mov	ip, r2
 637:Core/Src/printf.c ****         precision = _atoi(&format);
 3381              		.loc 1 637 11 view .LVU826
 3382 01d6 6878     		ldrb	r0, [r5, #1]
 636:Core/Src/printf.c ****       if (_is_digit(*format)) {
 3383              		.loc 1 636 13 view .LVU827
 3384 01d8 0B00     		movs	r3, r1
 635:Core/Src/printf.c ****       format++;
 3385              		.loc 1 635 7 is_stmt 1 view .LVU828
 3386              	.LVL374:
 636:Core/Src/printf.c ****       if (_is_digit(*format)) {
 3387              		.loc 1 636 7 view .LVU829
 637:Core/Src/printf.c ****         precision = _atoi(&format);
 3388              		.loc 1 637 7 view .LVU830
 3389              	.LBB211:
 3390              	.LBI211:
 182:Core/Src/printf.c **** {
 3391              		.loc 1 182 20 view .LVU831
 3392              	.LBB212:
 184:Core/Src/printf.c **** }
 3393              		.loc 1 184 3 view .LVU832
 184:Core/Src/printf.c **** }
 3394              		.loc 1 184 3 is_stmt 0 view .LVU833
 3395              	.LBE212:
 3396              	.LBE211:
 637:Core/Src/printf.c ****         precision = _atoi(&format);
 3397              		.loc 1 637 10 view .LVU834
 3398 01da 8444     		add	ip, ip, r0
 3399 01dc 6246     		mov	r2, ip
 3400 01de 092A     		cmp	r2, #9
 3401 01e0 00D8     		bhi	.LCB3566
 3402 01e2 2DE1     		b	.L618	@long jump
 3403              	.LCB3566:
 640:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 3404              		.loc 1 640 12 is_stmt 1 view .LVU835
 640:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 3405              		.loc 1 640 15 is_stmt 0 view .LVU836
 3406 01e4 2A28     		cmp	r0, #42
 3407 01e6 00D1     		bne	.LCB3569
 3408 01e8 3CE1     		b	.L619	@long jump
 3409              	.LCB3569:
 3410              	.LVL375:
 636:Core/Src/printf.c ****       if (_is_digit(*format)) {
 3411              		.loc 1 636 13 view .LVU837
 3412 01ea 0D00     		movs	r5, r1
 3413 01ec 0131     		adds	r1, r1, #1
 3414              	.LVL376:
 636:Core/Src/printf.c ****       if (_is_digit(*format)) {
 3415              		.loc 1 636 13 view .LVU838
 3416 01ee 59E7     		b	.L392
 3417              	.LVL377:
 3418              	.L612:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 90


 857:Core/Src/printf.c **** }
 3419              		.loc 1 857 10 view .LVU839
 3420 01f0 DA46     		mov	r10, fp
 3421 01f2 A146     		mov	r9, r4
 3422 01f4 B346     		mov	fp, r6
 3423              	.LVL378:
 857:Core/Src/printf.c **** }
 3424              		.loc 1 857 10 view .LVU840
 3425 01f6 B846     		mov	r8, r7
 3426              	.LVL379:
 3427              	.L513:
 854:Core/Src/printf.c **** 
 3428              		.loc 1 854 3 is_stmt 1 view .LVU841
 3429 01f8 C845     		cmp	r8, r9
 3430 01fa 03D8     		bhi	.L514
 854:Core/Src/printf.c **** 
 3431              		.loc 1 854 3 is_stmt 0 discriminator 1 view .LVU842
 3432 01fc 0123     		movs	r3, #1
 3433 01fe 5B42     		rsbs	r3, r3, #0
 3434 0200 4344     		add	r3, r3, r8
 3435 0202 9946     		mov	r9, r3
 3436              	.L514:
 854:Core/Src/printf.c **** 
 3437              		.loc 1 854 3 discriminator 4 view .LVU843
 3438 0204 4346     		mov	r3, r8
 3439 0206 4A46     		mov	r2, r9
 3440 0208 5146     		mov	r1, r10
 3441 020a 0020     		movs	r0, #0
 3442 020c D847     		blx	fp
 3443              	.LVL380:
 857:Core/Src/printf.c **** }
 3444              		.loc 1 857 3 is_stmt 1 discriminator 4 view .LVU844
 858:Core/Src/printf.c **** 
 3445              		.loc 1 858 1 is_stmt 0 discriminator 4 view .LVU845
 3446 020e 2000     		movs	r0, r4
 3447 0210 21B0     		add	sp, sp, #132
 3448              		@ sp needed
 3449              	.LVL381:
 3450              	.LVL382:
 858:Core/Src/printf.c **** 
 3451              		.loc 1 858 1 discriminator 4 view .LVU846
 3452 0212 F0BC     		pop	{r4, r5, r6, r7}
 3453 0214 BB46     		mov	fp, r7
 3454 0216 B246     		mov	r10, r6
 3455 0218 A946     		mov	r9, r5
 3456 021a A046     		mov	r8, r4
 3457 021c F0BD     		pop	{r4, r5, r6, r7, pc}
 3458              	.LVL383:
 3459              	.L614:
 3460              	.LBB213:
 621:Core/Src/printf.c ****       if (w < 0) {
 3461              		.loc 1 621 7 is_stmt 1 view .LVU847
 621:Core/Src/printf.c ****       if (w < 0) {
 3462              		.loc 1 621 17 is_stmt 0 view .LVU848
 3463 021e 0B9B     		ldr	r3, [sp, #44]
 3464              	.LVL384:
 621:Core/Src/printf.c ****       if (w < 0) {
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 91


 3465              		.loc 1 621 17 view .LVU849
 3466 0220 04CB     		ldmia	r3!, {r2}
 3467              	.LVL385:
 621:Core/Src/printf.c ****       if (w < 0) {
 3468              		.loc 1 621 17 view .LVU850
 3469 0222 9046     		mov	r8, r2
 622:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 3470              		.loc 1 622 7 is_stmt 1 view .LVU851
 622:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 3471              		.loc 1 622 10 is_stmt 0 view .LVU852
 3472 0224 002A     		cmp	r2, #0
 3473 0226 04DB     		blt	.L620
 3474              	.LVL386:
 629:Core/Src/printf.c ****     }
 3475              		.loc 1 629 7 is_stmt 1 view .LVU853
 629:Core/Src/printf.c ****     }
 3476              		.loc 1 629 7 is_stmt 0 view .LVU854
 3477              	.LBE213:
 634:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 3478              		.loc 1 634 9 view .LVU855
 3479 0228 6878     		ldrb	r0, [r5, #1]
 3480              	.LBB214:
 621:Core/Src/printf.c ****       if (w < 0) {
 3481              		.loc 1 621 17 view .LVU856
 3482 022a 0B93     		str	r3, [sp, #44]
 3483              	.LVL387:
 629:Core/Src/printf.c ****     }
 3484              		.loc 1 629 13 view .LVU857
 3485 022c 0D00     		movs	r5, r1
 3486 022e 0131     		adds	r1, r1, #1
 3487              	.LVL388:
 629:Core/Src/printf.c ****     }
 3488              		.loc 1 629 13 view .LVU858
 3489 0230 33E7     		b	.L389
 3490              	.LVL389:
 3491              	.L620:
 623:Core/Src/printf.c ****         width = (unsigned int)-w;
 3492              		.loc 1 623 9 is_stmt 1 view .LVU859
 623:Core/Src/printf.c ****         width = (unsigned int)-w;
 3493              		.loc 1 623 15 is_stmt 0 view .LVU860
 3494 0232 0A9A     		ldr	r2, [sp, #40]
 3495 0234 2838     		subs	r0, r0, #40
 3496 0236 0243     		orrs	r2, r0
 3497 0238 0A92     		str	r2, [sp, #40]
 3498              	.LVL390:
 624:Core/Src/printf.c ****       }
 3499              		.loc 1 624 9 is_stmt 1 view .LVU861
 624:Core/Src/printf.c ****       }
 3500              		.loc 1 624 31 is_stmt 0 view .LVU862
 3501 023a 4246     		mov	r2, r8
 3502              	.LVL391:
 624:Core/Src/printf.c ****       }
 3503              		.loc 1 624 31 view .LVU863
 3504 023c 5242     		rsbs	r2, r2, #0
 3505              	.LBE214:
 634:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 3506              		.loc 1 634 9 view .LVU864
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 92


 3507 023e 6878     		ldrb	r0, [r5, #1]
 3508              	.LBB215:
 624:Core/Src/printf.c ****       }
 3509              		.loc 1 624 31 view .LVU865
 3510 0240 9046     		mov	r8, r2
 3511              	.LVL392:
 629:Core/Src/printf.c ****     }
 3512              		.loc 1 629 7 is_stmt 1 view .LVU866
 629:Core/Src/printf.c ****     }
 3513              		.loc 1 629 13 is_stmt 0 view .LVU867
 3514 0242 0D00     		movs	r5, r1
 621:Core/Src/printf.c ****       if (w < 0) {
 3515              		.loc 1 621 17 view .LVU868
 3516 0244 0B93     		str	r3, [sp, #44]
 3517              	.LVL393:
 621:Core/Src/printf.c ****       if (w < 0) {
 3518              		.loc 1 621 17 view .LVU869
 3519 0246 0131     		adds	r1, r1, #1
 3520 0248 27E7     		b	.L389
 3521              	.LVL394:
 3522              	.L412:
 621:Core/Src/printf.c ****       if (w < 0) {
 3523              		.loc 1 621 17 view .LVU870
 3524              	.LBE215:
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3525              		.loc 1 770 9 is_stmt 1 view .LVU871
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3526              		.loc 1 770 12 is_stmt 0 view .LVU872
 3527 024a 6728     		cmp	r0, #103
 3528 024c 00D1     		bne	.LCB3705
 3529 024e C6E1     		b	.L478	@long jump
 3530              	.LCB3705:
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3531              		.loc 1 770 29 discriminator 2 view .LVU873
 3532 0250 4728     		cmp	r0, #71
 3533 0252 00D1     		bne	.LCB3707
 3534 0254 13E2     		b	.L479	@long jump
 3535              	.LCB3707:
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3536              		.loc 1 771 9 is_stmt 1 view .LVU874
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3537              		.loc 1 771 12 is_stmt 0 view .LVU875
 3538 0256 4528     		cmp	r0, #69
 3539 0258 00D1     		bne	.LCB3711
 3540 025a 15E2     		b	.L480	@long jump
 3541              	.LCB3711:
 3542              	.L481:
 772:Core/Src/printf.c ****         format++;
 3543              		.loc 1 772 9 is_stmt 1 view .LVU876
 772:Core/Src/printf.c ****         format++;
 3544              		.loc 1 772 15 is_stmt 0 view .LVU877
 3545 025c 0A9A     		ldr	r2, [sp, #40]
 3546 025e 0721     		movs	r1, #7
 3547              	.LVL395:
 772:Core/Src/printf.c ****         format++;
 3548              		.loc 1 772 15 view .LVU878
 3549 0260 0492     		str	r2, [sp, #16]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 93


 3550 0262 4246     		mov	r2, r8
 3551 0264 0B9B     		ldr	r3, [sp, #44]
 3552 0266 0392     		str	r2, [sp, #12]
 3553 0268 0733     		adds	r3, r3, #7
 3554 026a 5246     		mov	r2, r10
 3555 026c 8B43     		bics	r3, r1
 3556              	.LVL396:
 772:Core/Src/printf.c ****         format++;
 3557              		.loc 1 772 15 view .LVU879
 3558 026e 1900     		movs	r1, r3
 3559 0270 0292     		str	r2, [sp, #8]
 3560 0272 0CC9     		ldmia	r1!, {r2, r3}
 3561              	.LVL397:
 772:Core/Src/printf.c ****         format++;
 3562              		.loc 1 772 15 view .LVU880
 3563 0274 3000     		movs	r0, r6
 3564 0276 0092     		str	r2, [sp]
 3565 0278 0193     		str	r3, [sp, #4]
 3566 027a 0B91     		str	r1, [sp, #44]
 3567 027c 2200     		movs	r2, r4
 3568 027e 3B00     		movs	r3, r7
 3569 0280 5946     		mov	r1, fp
 3570              	.LVL398:
 772:Core/Src/printf.c ****         format++;
 3571              		.loc 1 772 15 view .LVU881
 3572 0282 FFF7FEFF 		bl	_etoa
 3573              	.LVL399:
 772:Core/Src/printf.c ****         format++;
 3574              		.loc 1 772 15 view .LVU882
 3575 0286 0400     		movs	r4, r0
 773:Core/Src/printf.c ****         break;
 3576              		.loc 1 773 9 is_stmt 1 view .LVU883
 3577              	.LVL400:
 774:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 3578              		.loc 1 774 9 view .LVU884
 3579 0288 E0E6     		b	.L378
 3580              	.LVL401:
 3581              	.L400:
 672:Core/Src/printf.c ****         format++;
 3582              		.loc 1 672 9 view .LVU885
 672:Core/Src/printf.c ****         format++;
 3583              		.loc 1 672 15 is_stmt 0 view .LVU886
 3584 028a 8023     		movs	r3, #128
 3585 028c 9B00     		lsls	r3, r3, #2
 3586 028e 28E7     		b	.L603
 3587              	.L401:
 658:Core/Src/printf.c ****         format++;
 3588              		.loc 1 658 9 is_stmt 1 view .LVU887
 3589              	.LVL402:
 659:Core/Src/printf.c ****         if (*format == 'h') {
 3590              		.loc 1 659 9 view .LVU888
 660:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 3591              		.loc 1 660 9 view .LVU889
 660:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 3592              		.loc 1 660 13 is_stmt 0 view .LVU890
 3593 0290 6878     		ldrb	r0, [r5, #1]
 660:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 94


 3594              		.loc 1 660 12 view .LVU891
 3595 0292 6828     		cmp	r0, #104
 3596 0294 00D1     		bne	.LCB3772
 3597 0296 1AE2     		b	.L403	@long jump
 3598              	.LCB3772:
 658:Core/Src/printf.c ****         format++;
 3599              		.loc 1 658 15 view .LVU892
 3600 0298 8023     		movs	r3, #128
 3601 029a 0A9A     		ldr	r2, [sp, #40]
 3602 029c 0131     		adds	r1, r1, #1
 3603 029e 1A43     		orrs	r2, r3
 3604              	.LVL403:
 658:Core/Src/printf.c ****         format++;
 3605              		.loc 1 658 15 view .LVU893
 3606 02a0 0A92     		str	r2, [sp, #40]
 3607 02a2 23E7     		b	.L396
 3608              	.LVL404:
 3609              	.L399:
 650:Core/Src/printf.c ****         format++;
 3610              		.loc 1 650 9 is_stmt 1 view .LVU894
 651:Core/Src/printf.c ****         if (*format == 'l') {
 3611              		.loc 1 651 9 view .LVU895
 652:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 3612              		.loc 1 652 9 view .LVU896
 652:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 3613              		.loc 1 652 13 is_stmt 0 view .LVU897
 3614 02a4 6878     		ldrb	r0, [r5, #1]
 652:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 3615              		.loc 1 652 12 view .LVU898
 3616 02a6 6C28     		cmp	r0, #108
 3617 02a8 00D1     		bne	.LCB3792
 3618 02aa 08E2     		b	.L402	@long jump
 3619              	.LCB3792:
 650:Core/Src/printf.c ****         format++;
 3620              		.loc 1 650 15 view .LVU899
 3621 02ac 8023     		movs	r3, #128
 3622 02ae 0A9A     		ldr	r2, [sp, #40]
 3623 02b0 5B00     		lsls	r3, r3, #1
 3624 02b2 1A43     		orrs	r2, r3
 3625 02b4 0A92     		str	r2, [sp, #40]
 3626              	.LVL405:
 650:Core/Src/printf.c ****         format++;
 3627              		.loc 1 650 15 view .LVU900
 3628 02b6 0131     		adds	r1, r1, #1
 3629              	.LVL406:
 650:Core/Src/printf.c ****         format++;
 3630              		.loc 1 650 15 view .LVU901
 3631 02b8 18E7     		b	.L396
 3632              	.LVL407:
 3633              	.L414:
 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3634              		.loc 1 761 9 is_stmt 1 view .LVU902
 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3635              		.loc 1 761 12 is_stmt 0 view .LVU903
 3636 02ba 4628     		cmp	r0, #70
 3637 02bc 00D1     		bne	.LCB3810
 3638 02be 89E1     		b	.L621	@long jump
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 95


 3639              	.LCB3810:
 3640              	.L477:
 762:Core/Src/printf.c ****         format++;
 3641              		.loc 1 762 9 is_stmt 1 view .LVU904
 762:Core/Src/printf.c ****         format++;
 3642              		.loc 1 762 15 is_stmt 0 view .LVU905
 3643 02c0 0A9A     		ldr	r2, [sp, #40]
 3644 02c2 0721     		movs	r1, #7
 3645              	.LVL408:
 762:Core/Src/printf.c ****         format++;
 3646              		.loc 1 762 15 view .LVU906
 3647 02c4 0492     		str	r2, [sp, #16]
 3648 02c6 4246     		mov	r2, r8
 3649 02c8 0B9B     		ldr	r3, [sp, #44]
 3650 02ca 0392     		str	r2, [sp, #12]
 3651 02cc 0733     		adds	r3, r3, #7
 3652 02ce 5246     		mov	r2, r10
 3653 02d0 8B43     		bics	r3, r1
 3654              	.LVL409:
 762:Core/Src/printf.c ****         format++;
 3655              		.loc 1 762 15 view .LVU907
 3656 02d2 1900     		movs	r1, r3
 3657 02d4 0292     		str	r2, [sp, #8]
 3658 02d6 0CC9     		ldmia	r1!, {r2, r3}
 3659              	.LVL410:
 762:Core/Src/printf.c ****         format++;
 3660              		.loc 1 762 15 view .LVU908
 3661 02d8 3000     		movs	r0, r6
 3662 02da 0092     		str	r2, [sp]
 3663 02dc 0193     		str	r3, [sp, #4]
 3664 02de 0B91     		str	r1, [sp, #44]
 3665 02e0 2200     		movs	r2, r4
 3666 02e2 3B00     		movs	r3, r7
 3667 02e4 5946     		mov	r1, fp
 3668              	.LVL411:
 762:Core/Src/printf.c ****         format++;
 3669              		.loc 1 762 15 view .LVU909
 3670 02e6 FFF7FEFF 		bl	_ftoa
 3671              	.LVL412:
 762:Core/Src/printf.c ****         format++;
 3672              		.loc 1 762 15 view .LVU910
 3673 02ea 0400     		movs	r4, r0
 763:Core/Src/printf.c ****         break;
 3674              		.loc 1 763 9 is_stmt 1 view .LVU911
 3675              	.LVL413:
 764:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 3676              		.loc 1 764 9 view .LVU912
 3677 02ec AEE6     		b	.L378
 3678              	.LVL414:
 3679              	.L417:
 842:Core/Src/printf.c ****         format++;
 3680              		.loc 1 842 9 view .LVU913
 3681 02ee 631C     		adds	r3, r4, #1
 3682 02f0 9846     		mov	r8, r3
 3683              	.LVL415:
 842:Core/Src/printf.c ****         format++;
 3684              		.loc 1 842 9 is_stmt 0 view .LVU914
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 96


 3685 02f2 2200     		movs	r2, r4
 3686 02f4 3B00     		movs	r3, r7
 3687              	.LVL416:
 842:Core/Src/printf.c ****         format++;
 3688              		.loc 1 842 9 view .LVU915
 3689 02f6 5946     		mov	r1, fp
 3690              	.LVL417:
 842:Core/Src/printf.c ****         format++;
 3691              		.loc 1 842 9 view .LVU916
 3692 02f8 2520     		movs	r0, #37
 3693 02fa B047     		blx	r6
 3694              	.LVL418:
 843:Core/Src/printf.c ****         break;
 3695              		.loc 1 843 9 is_stmt 1 view .LVU917
 844:Core/Src/printf.c **** 
 3696              		.loc 1 844 9 view .LVU918
 842:Core/Src/printf.c ****         format++;
 3697              		.loc 1 842 9 is_stmt 0 view .LVU919
 3698 02fc 4446     		mov	r4, r8
 844:Core/Src/printf.c **** 
 3699              		.loc 1 844 9 view .LVU920
 3700 02fe A5E6     		b	.L378
 3701              	.LVL419:
 3702              	.L416:
 3703              	.LBB216:
 778:Core/Src/printf.c ****         // pre padding
 3704              		.loc 1 778 9 is_stmt 1 view .LVU921
 780:Core/Src/printf.c ****           while (l++ < width) {
 3705              		.loc 1 780 9 view .LVU922
 3706              	.LBE216:
 3707              	.LBB217:
 3708              	.LBB131:
 732:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 3709              		.loc 1 732 24 is_stmt 0 view .LVU923
 3710 0300 0B9B     		ldr	r3, [sp, #44]
 3711 0302 0433     		adds	r3, r3, #4
 3712 0304 0C93     		str	r3, [sp, #48]
 3713              	.LBE131:
 3714              	.LBE217:
 593:Core/Src/printf.c ****       format++;
 3715              		.loc 1 593 7 view .LVU924
 3716 0306 631C     		adds	r3, r4, #1
 3717 0308 9946     		mov	r9, r3
 3718              	.LBB218:
 780:Core/Src/printf.c ****           while (l++ < width) {
 3719              		.loc 1 780 12 view .LVU925
 3720 030a 0A9B     		ldr	r3, [sp, #40]
 3721 030c 9A07     		lsls	r2, r3, #30
 3722 030e 00D4     		bmi	.LCB3900
 3723 0310 E3E1     		b	.L622	@long jump
 3724              	.LCB3900:
 786:Core/Src/printf.c ****         // post padding
 3725              		.loc 1 786 9 is_stmt 1 view .LVU926
 3726              	.LVL420:
 786:Core/Src/printf.c ****         // post padding
 3727              		.loc 1 786 9 is_stmt 0 view .LVU927
 3728 0312 0B9B     		ldr	r3, [sp, #44]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 97


 3729 0314 2200     		movs	r2, r4
 3730 0316 1878     		ldrb	r0, [r3]
 3731 0318 5946     		mov	r1, fp
 3732              	.LVL421:
 786:Core/Src/printf.c ****         // post padding
 3733              		.loc 1 786 9 view .LVU928
 3734 031a 3B00     		movs	r3, r7
 3735 031c B047     		blx	r6
 3736              	.LVL422:
 788:Core/Src/printf.c ****           while (l++ < width) {
 3737              		.loc 1 788 9 is_stmt 1 view .LVU929
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3738              		.loc 1 789 22 view .LVU930
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3739              		.loc 1 789 22 is_stmt 0 view .LVU931
 3740 031e 4346     		mov	r3, r8
 3741 0320 4444     		add	r4, r4, r8
 3742 0322 012B     		cmp	r3, #1
 3743 0324 00D8     		bhi	.LCB3923
 3744 0326 B4E2     		b	.L517	@long jump
 3745              	.LCB3923:
 3746              	.LVL423:
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3747              		.loc 1 789 22 view .LVU932
 3748 0328 2B00     		movs	r3, r5
 3749              	.LVL424:
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3750              		.loc 1 789 22 view .LVU933
 3751 032a B846     		mov	r8, r7
 3752              	.LVL425:
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3753              		.loc 1 789 22 view .LVU934
 3754 032c 2500     		movs	r5, r4
 3755              	.LVL426:
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3756              		.loc 1 789 22 view .LVU935
 3757 032e 5F46     		mov	r7, fp
 3758 0330 4C46     		mov	r4, r9
 3759 0332 9946     		mov	r9, r3
 3760              	.LVL427:
 3761              	.L486:
 790:Core/Src/printf.c ****           }
 3762              		.loc 1 790 13 is_stmt 1 view .LVU936
 3763 0334 2200     		movs	r2, r4
 3764 0336 4346     		mov	r3, r8
 3765 0338 0134     		adds	r4, r4, #1
 3766              	.LVL428:
 790:Core/Src/printf.c ****           }
 3767              		.loc 1 790 13 is_stmt 0 view .LVU937
 3768 033a 3900     		movs	r1, r7
 3769 033c 2020     		movs	r0, #32
 3770 033e B047     		blx	r6
 3771              	.LVL429:
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3772              		.loc 1 789 22 is_stmt 1 view .LVU938
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3773              		.loc 1 789 22 is_stmt 0 view .LVU939
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 98


 3774 0340 AC42     		cmp	r4, r5
 3775 0342 F7D1     		bne	.L486
 3776 0344 2C00     		movs	r4, r5
 3777              	.LVL430:
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3778              		.loc 1 789 22 view .LVU940
 3779 0346 BB46     		mov	fp, r7
 3780 0348 4D46     		mov	r5, r9
 793:Core/Src/printf.c ****         break;
 3781              		.loc 1 793 9 is_stmt 1 view .LVU941
 3782              	.LVL431:
 794:Core/Src/printf.c ****       }
 3783              		.loc 1 794 9 view .LVU942
 3784 034a 4746     		mov	r7, r8
 3785              	.LVL432:
 3786              	.L608:
 794:Core/Src/printf.c ****       }
 3787              		.loc 1 794 9 is_stmt 0 view .LVU943
 3788              	.LBE218:
 3789              	.LBB219:
 3790              	.LBB139:
 3791              	.LBB140:
 3792              	.LBB141:
 3793 034c 0C9B     		ldr	r3, [sp, #48]
 3794 034e 0B93     		str	r3, [sp, #44]
 3795              	.LVL433:
 794:Core/Src/printf.c ****       }
 3796              		.loc 1 794 9 view .LVU944
 3797              	.LBE141:
 3798              	.LBE140:
 3799              	.LBE139:
 755:Core/Src/printf.c ****         break;
 3800              		.loc 1 755 9 is_stmt 1 view .LVU945
 756:Core/Src/printf.c ****       }
 3801              		.loc 1 756 9 view .LVU946
 3802 0350 7CE6     		b	.L378
 3803              	.LVL434:
 3804              	.L611:
 756:Core/Src/printf.c ****       }
 3805              		.loc 1 756 9 is_stmt 0 view .LVU947
 3806              	.LBE219:
 585:Core/Src/printf.c ****   }
 3807              		.loc 1 585 9 view .LVU948
 3808 0352 094B     		ldr	r3, .L644+16
 3809              	.LVL435:
 588:Core/Src/printf.c ****   {
 3810              		.loc 1 588 10 view .LVU949
 3811 0354 2878     		ldrb	r0, [r5]
 3812              	.LVL436:
 585:Core/Src/printf.c ****   }
 3813              		.loc 1 585 9 view .LVU950
 3814 0356 9B46     		mov	fp, r3
 3815              	.LVL437:
 588:Core/Src/printf.c ****   {
 3816              		.loc 1 588 10 is_stmt 1 view .LVU951
 3817 0358 0023     		movs	r3, #0
 3818              	.LVL438:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 99


 588:Core/Src/printf.c ****   {
 3819              		.loc 1 588 10 is_stmt 0 view .LVU952
 3820 035a 9946     		mov	r9, r3
 3821 035c 0028     		cmp	r0, #0
 3822 035e 00D0     		beq	.LCB4023
 3823 0360 64E6     		b	.L623	@long jump
 3824              	.LCB4023:
 3825              	.L588:
 588:Core/Src/printf.c ****   {
 3826              		.loc 1 588 10 view .LVU953
 3827 0362 0024     		movs	r4, #0
 3828 0364 48E7     		b	.L513
 3829              	.L645:
 3830 0366 C046     		.align	2
 3831              	.L644:
 3832 0368 00000000 		.word	.L381
 3833 036c 90000000 		.word	.L413
 3834 0370 44000000 		.word	.L398
 3835 0374 41900000 		.word	36929
 3836 0378 00000000 		.word	_out_null
 3837              	.LVL439:
 3838              	.L410:
 3839              	.LBB220:
 798:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 3840              		.loc 1 798 9 is_stmt 1 view .LVU954
 798:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 3841              		.loc 1 798 21 is_stmt 0 view .LVU955
 3842 037c 0B9B     		ldr	r3, [sp, #44]
 3843              	.LVL440:
 798:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 3844              		.loc 1 798 21 view .LVU956
 3845 037e 02CB     		ldmia	r3!, {r1}
 3846              	.LVL441:
 798:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 3847              		.loc 1 798 21 view .LVU957
 3848 0380 1293     		str	r3, [sp, #72]
 799:Core/Src/printf.c ****         // pre padding
 3849              		.loc 1 799 9 is_stmt 1 view .LVU958
 3850              	.LBB221:
 3851              	.LBB222:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3852              		.loc 1 175 17 is_stmt 0 view .LVU959
 3853 0382 0B78     		ldrb	r3, [r1]
 3854              	.LVL442:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3855              		.loc 1 175 17 view .LVU960
 3856 0384 9C46     		mov	ip, r3
 3857 0386 1800     		movs	r0, r3
 3858              	.LBE222:
 3859              	.LBE221:
 799:Core/Src/printf.c ****         // pre padding
 3860              		.loc 1 799 26 view .LVU961
 3861 0388 5346     		mov	r3, r10
 3862 038a 002B     		cmp	r3, #0
 3863 038c 00D0     		beq	.LCB4070
 3864 038e 9CE0     		b	.L487	@long jump
 3865              	.LCB4070:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 100


 3866              	.LVL443:
 3867              	.LBB225:
 3868              	.LBB223:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3869              		.loc 1 175 20 is_stmt 1 view .LVU962
 3870 0390 0028     		cmp	r0, #0
 3871 0392 12D0     		beq	.L489
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3872              		.loc 1 175 30 is_stmt 0 view .LVU963
 3873 0394 0223     		movs	r3, #2
 3874 0396 5B42     		rsbs	r3, r3, #0
 3875              	.LVL444:
 3876              	.L488:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3877              		.loc 1 175 30 view .LVU964
 3878 0398 0133     		adds	r3, r3, #1
 3879 039a 9946     		mov	r9, r3
 3880 039c 8944     		add	r9, r9, r1
 3881 039e 4A46     		mov	r2, r9
 3882 03a0 0B00     		movs	r3, r1
 3883 03a2 8946     		mov	r9, r1
 3884 03a4 1100     		movs	r1, r2
 3885              	.LVL445:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3886              		.loc 1 175 30 view .LVU965
 3887 03a6 01E0     		b	.L491
 3888              	.LVL446:
 3889              	.L490:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3890              		.loc 1 175 20 view .LVU966
 3891 03a8 8B42     		cmp	r3, r1
 3892 03aa 03D0     		beq	.L605
 3893              	.LVL447:
 3894              	.L491:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3895              		.loc 1 175 34 is_stmt 1 view .LVU967
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3896              		.loc 1 175 20 is_stmt 0 view .LVU968
 3897 03ac 5A78     		ldrb	r2, [r3, #1]
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3898              		.loc 1 175 34 view .LVU969
 3899 03ae 0133     		adds	r3, r3, #1
 3900              	.LVL448:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3901              		.loc 1 175 20 is_stmt 1 view .LVU970
 3902 03b0 002A     		cmp	r2, #0
 3903 03b2 F9D1     		bne	.L490
 3904              	.LVL449:
 3905              	.L605:
 176:Core/Src/printf.c **** }
 3906              		.loc 1 176 27 is_stmt 0 view .LVU971
 3907 03b4 4946     		mov	r1, r9
 3908 03b6 5B1A     		subs	r3, r3, r1
 3909              	.LVL450:
 176:Core/Src/printf.c **** }
 3910              		.loc 1 176 27 view .LVU972
 3911 03b8 0C93     		str	r3, [sp, #48]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 101


 3912              	.LVL451:
 3913              	.L489:
 176:Core/Src/printf.c **** }
 3914              		.loc 1 176 3 is_stmt 1 view .LVU973
 176:Core/Src/printf.c **** }
 3915              		.loc 1 176 3 is_stmt 0 view .LVU974
 3916              	.LBE223:
 3917              	.LBE225:
 801:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 3918              		.loc 1 801 9 is_stmt 1 view .LVU975
 801:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 3919              		.loc 1 801 19 is_stmt 0 view .LVU976
 3920 03ba 8023     		movs	r3, #128
 3921 03bc DB00     		lsls	r3, r3, #3
 3922 03be 9946     		mov	r9, r3
 3923 03c0 0A9A     		ldr	r2, [sp, #40]
 3924 03c2 1340     		ands	r3, r2
 3925 03c4 0B93     		str	r3, [sp, #44]
 801:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 3926              		.loc 1 801 12 view .LVU977
 3927 03c6 4B46     		mov	r3, r9
 3928 03c8 1A42     		tst	r2, r3
 3929 03ca 04D0     		beq	.L492
 802:Core/Src/printf.c ****         }
 3930              		.loc 1 802 11 is_stmt 1 view .LVU978
 802:Core/Src/printf.c ****         }
 3931              		.loc 1 802 13 is_stmt 0 view .LVU979
 3932 03cc 0C9B     		ldr	r3, [sp, #48]
 3933 03ce 5345     		cmp	r3, r10
 3934 03d0 01D9     		bls	.L492
 3935 03d2 5346     		mov	r3, r10
 3936 03d4 0C93     		str	r3, [sp, #48]
 3937              	.LVL452:
 3938              	.L492:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3939              		.loc 1 804 9 is_stmt 1 view .LVU980
 804:Core/Src/printf.c ****           while (l++ < width) {
 3940              		.loc 1 804 21 is_stmt 0 view .LVU981
 3941 03d6 0223     		movs	r3, #2
 3942 03d8 9946     		mov	r9, r3
 3943 03da 0A9A     		ldr	r2, [sp, #40]
 3944 03dc 1340     		ands	r3, r2
 3945 03de 0A93     		str	r3, [sp, #40]
 3946              	.LVL453:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3947              		.loc 1 804 12 view .LVU982
 3948 03e0 4B46     		mov	r3, r9
 3949 03e2 1342     		tst	r3, r2
 3950 03e4 00D1     		bne	.LCB4160
 3951 03e6 B2E1     		b	.L624	@long jump
 3952              	.LCB4160:
 3953              	.LVL454:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3954              		.loc 1 810 26 is_stmt 1 view .LVU983
 3955 03e8 6346     		mov	r3, ip
 3956 03ea 002B     		cmp	r3, #0
 3957 03ec 00D1     		bne	.LCB4168
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 102


 3958 03ee 94E1     		b	.L606	@long jump
 3959              	.LCB4168:
 3960              	.LVL455:
 3961              	.L499:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3962              		.loc 1 810 26 is_stmt 0 view .LVU984
 3963 03f0 0B9B     		ldr	r3, [sp, #44]
 3964 03f2 002B     		cmp	r3, #0
 3965 03f4 00D1     		bne	.LCB4173
 3966 03f6 4CE1     		b	.L534	@long jump
 3967              	.LCB4173:
 3968 03f8 D146     		mov	r9, r10
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3969              		.loc 1 810 17 view .LVU985
 3970 03fa 0B1B     		subs	r3, r1, r4
 3971 03fc 9A46     		mov	r10, r3
 3972 03fe 2B00     		movs	r3, r5
 3973 0400 A144     		add	r9, r9, r4
 3974 0402 4D46     		mov	r5, r9
 3975              	.LVL456:
 806:Core/Src/printf.c ****           }
 3976              		.loc 1 806 13 view .LVU986
 3977 0404 2200     		movs	r2, r4
 3978 0406 B946     		mov	r9, r7
 3979 0408 5F46     		mov	r7, fp
 3980 040a 9B46     		mov	fp, r3
 3981              	.LVL457:
 806:Core/Src/printf.c ****           }
 3982              		.loc 1 806 13 view .LVU987
 3983 040c 09E0     		b	.L503
 3984              	.LVL458:
 3985              	.L626:
 811:Core/Src/printf.c ****         }
 3986              		.loc 1 811 11 is_stmt 1 view .LVU988
 811:Core/Src/printf.c ****         }
 3987              		.loc 1 811 11 is_stmt 0 view .LVU989
 3988 040e 4B46     		mov	r3, r9
 3989 0410 3900     		movs	r1, r7
 3990 0412 541C     		adds	r4, r2, #1
 3991              	.LVL459:
 811:Core/Src/printf.c ****         }
 3992              		.loc 1 811 11 view .LVU990
 3993 0414 B047     		blx	r6
 3994              	.LVL460:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3995              		.loc 1 810 26 is_stmt 1 view .LVU991
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3996              		.loc 1 810 17 is_stmt 0 view .LVU992
 3997 0416 5346     		mov	r3, r10
 3998 0418 185D     		ldrb	r0, [r3, r4]
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3999              		.loc 1 810 26 view .LVU993
 4000 041a 0028     		cmp	r0, #0
 4001 041c 00D1     		bne	.LCB4214
 4002 041e 58E1     		b	.L625	@long jump
 4003              	.LCB4214:
 811:Core/Src/printf.c ****         }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 103


 4004              		.loc 1 811 11 view .LVU994
 4005 0420 2200     		movs	r2, r4
 4006              	.LVL461:
 4007              	.L503:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4008              		.loc 1 810 57 view .LVU995
 4009 0422 9542     		cmp	r5, r2
 4010 0424 F3D1     		bne	.L626
 4011 0426 5B46     		mov	r3, fp
 4012 0428 BB46     		mov	fp, r7
 4013              	.LVL462:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4014              		.loc 1 810 57 view .LVU996
 4015 042a 4F46     		mov	r7, r9
 4016              	.LVL463:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4017              		.loc 1 810 57 view .LVU997
 4018 042c A946     		mov	r9, r5
 4019 042e 1D00     		movs	r5, r3
 4020 0430 4C46     		mov	r4, r9
 4021              	.LVL464:
 4022              	.L498:
 814:Core/Src/printf.c ****           while (l++ < width) {
 4023              		.loc 1 814 9 is_stmt 1 view .LVU998
 814:Core/Src/printf.c ****           while (l++ < width) {
 4024              		.loc 1 814 12 is_stmt 0 view .LVU999
 4025 0432 0A9B     		ldr	r3, [sp, #40]
 4026 0434 002B     		cmp	r3, #0
 4027 0436 00D0     		beq	.LCB4248
 4028 0438 6FE1     		b	.L606	@long jump
 4029              	.LCB4248:
 4030              	.LVL465:
 4031              	.L501:
 819:Core/Src/printf.c ****         break;
 4032              		.loc 1 819 9 is_stmt 1 view .LVU1000
 820:Core/Src/printf.c ****       }
 4033              		.loc 1 820 9 view .LVU1001
 798:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 4034              		.loc 1 798 21 is_stmt 0 view .LVU1002
 4035 043a 129B     		ldr	r3, [sp, #72]
 4036 043c 0B93     		str	r3, [sp, #44]
 820:Core/Src/printf.c ****       }
 4037              		.loc 1 820 9 view .LVU1003
 4038 043e 05E6     		b	.L378
 4039              	.LVL466:
 4040              	.L618:
 820:Core/Src/printf.c ****       }
 4041              		.loc 1 820 9 view .LVU1004
 4042 0440 5546     		mov	r5, r10
 4043 0442 0A9A     		ldr	r2, [sp, #40]
 4044              	.LVL467:
 4045              	.L394:
 820:Core/Src/printf.c ****       }
 4046              		.loc 1 820 9 view .LVU1005
 4047              	.LBE220:
 4048              	.LBB227:
 4049              	.LBB228:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 104


 193:Core/Src/printf.c ****   }
 4050              		.loc 1 193 5 is_stmt 1 view .LVU1006
 193:Core/Src/printf.c ****   }
 4051              		.loc 1 193 11 is_stmt 0 view .LVU1007
 4052 0444 A900     		lsls	r1, r5, #2
 4053 0446 4919     		adds	r1, r1, r5
 4054 0448 4900     		lsls	r1, r1, #1
 193:Core/Src/printf.c ****   }
 4055              		.loc 1 193 42 view .LVU1008
 4056 044a 0133     		adds	r3, r3, #1
 4057              	.LVL468:
 193:Core/Src/printf.c ****   }
 4058              		.loc 1 193 17 view .LVU1009
 4059 044c 0D18     		adds	r5, r1, r0
 4060              	.LVL469:
 192:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 4061              		.loc 1 192 10 view .LVU1010
 4062 044e 1878     		ldrb	r0, [r3]
 193:Core/Src/printf.c ****   }
 4063              		.loc 1 193 7 view .LVU1011
 4064 0450 303D     		subs	r5, r5, #48
 4065              	.LVL470:
 192:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 4066              		.loc 1 192 10 is_stmt 1 view .LVU1012
 4067              	.LBB229:
 4068              	.LBI229:
 182:Core/Src/printf.c **** {
 4069              		.loc 1 182 20 view .LVU1013
 4070              	.LBB230:
 184:Core/Src/printf.c **** }
 4071              		.loc 1 184 3 view .LVU1014
 184:Core/Src/printf.c **** }
 4072              		.loc 1 184 3 is_stmt 0 view .LVU1015
 4073              	.LBE230:
 4074              	.LBE229:
 192:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 4075              		.loc 1 192 10 view .LVU1016
 4076 0452 0100     		movs	r1, r0
 4077 0454 3039     		subs	r1, r1, #48
 4078 0456 0929     		cmp	r1, #9
 4079 0458 F4D9     		bls	.L394
 193:Core/Src/printf.c ****   }
 4080              		.loc 1 193 42 view .LVU1017
 4081 045a AA46     		mov	r10, r5
 4082 045c 0A92     		str	r2, [sp, #40]
 4083              	.LVL471:
 193:Core/Src/printf.c ****   }
 4084              		.loc 1 193 42 view .LVU1018
 4085 045e 1D00     		movs	r5, r3
 4086              	.LVL472:
 193:Core/Src/printf.c ****   }
 4087              		.loc 1 193 42 view .LVU1019
 4088 0460 591C     		adds	r1, r3, #1
 4089 0462 1FE6     		b	.L392
 4090              	.LVL473:
 4091              	.L619:
 193:Core/Src/printf.c ****   }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 105


 4092              		.loc 1 193 42 view .LVU1020
 4093              	.LBE228:
 4094              	.LBE227:
 4095              	.LBB231:
 641:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 4096              		.loc 1 641 9 is_stmt 1 view .LVU1021
 641:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 4097              		.loc 1 641 19 is_stmt 0 view .LVU1022
 4098 0464 0B9B     		ldr	r3, [sp, #44]
 4099              	.LVL474:
 642:Core/Src/printf.c ****         format++;
 4100              		.loc 1 642 9 is_stmt 1 view .LVU1023
 4101              	.LBE231:
 648:Core/Src/printf.c ****       case 'l' :
 4102              		.loc 1 648 13 is_stmt 0 view .LVU1024
 4103 0466 A878     		ldrb	r0, [r5, #2]
 4104              	.LBB232:
 642:Core/Src/printf.c ****         format++;
 4105              		.loc 1 642 51 view .LVU1025
 4106 0468 04CB     		ldmia	r3!, {r2}
 4107              	.LVL475:
 643:Core/Src/printf.c ****       }
 4108              		.loc 1 643 15 view .LVU1026
 4109 046a 0235     		adds	r5, r5, #2
 642:Core/Src/printf.c ****         format++;
 4110              		.loc 1 642 51 view .LVU1027
 4111 046c D143     		mvns	r1, r2
 4112 046e C917     		asrs	r1, r1, #31
 4113 0470 0A40     		ands	r2, r1
 4114 0472 9246     		mov	r10, r2
 4115              	.LVL476:
 643:Core/Src/printf.c ****       }
 4116              		.loc 1 643 9 is_stmt 1 view .LVU1028
 641:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 4117              		.loc 1 641 19 is_stmt 0 view .LVU1029
 4118 0474 0B93     		str	r3, [sp, #44]
 4119              	.LVL477:
 641:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 4120              		.loc 1 641 19 view .LVU1030
 4121 0476 691C     		adds	r1, r5, #1
 4122 0478 14E6     		b	.L392
 4123              	.LVL478:
 4124              	.L506:
 641:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 4125              		.loc 1 641 19 view .LVU1031
 4126              	.LBE232:
 4127              	.LBB233:
 4128              	.LBB205:
 4129              	.LBB202:
 289:Core/Src/printf.c ****   }
 4130              		.loc 1 289 5 is_stmt 1 view .LVU1032
 289:Core/Src/printf.c ****   }
 4131              		.loc 1 289 11 is_stmt 0 view .LVU1033
 4132 047a 0A9B     		ldr	r3, [sp, #40]
 4133 047c 1021     		movs	r1, #16
 4134              	.LVL479:
 289:Core/Src/printf.c ****   }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 106


 4135              		.loc 1 289 11 view .LVU1034
 4136 047e 1A00     		movs	r2, r3
 4137 0480 8A43     		bics	r2, r1
 4138 0482 1000     		movs	r0, r2
 4139 0484 1131     		adds	r1, r1, #17
 4140 0486 0843     		orrs	r0, r1
 4141 0488 8146     		mov	r9, r0
 4142              	.LVL480:
 293:Core/Src/printf.c ****     do {
 4143              		.loc 1 293 3 is_stmt 1 view .LVU1035
 4144 048a 8020     		movs	r0, #128
 4145              	.LVL481:
 293:Core/Src/printf.c ****     do {
 4146              		.loc 1 293 3 is_stmt 0 view .LVU1036
 4147 048c 1A00     		movs	r2, r3
 4148 048e C000     		lsls	r0, r0, #3
 4149 0490 0240     		ands	r2, r0
 4150 0492 1100     		movs	r1, r2
 293:Core/Src/printf.c ****     do {
 4151              		.loc 1 293 6 view .LVU1037
 4152 0494 0342     		tst	r3, r0
 4153 0496 00D1     		bne	.LCB4388
 4154 0498 58E6     		b	.L507	@long jump
 4155              	.LCB4388:
 4156              	.LVL482:
 4157              	.L508:
 301:Core/Src/printf.c **** }
 4158              		.loc 1 301 3 is_stmt 1 view .LVU1038
 301:Core/Src/printf.c **** }
 4159              		.loc 1 301 10 is_stmt 0 view .LVU1039
 4160 049a 4B46     		mov	r3, r9
 4161 049c 0822     		movs	r2, #8
 4162 049e 0693     		str	r3, [sp, #24]
 4163 04a0 5346     		mov	r3, r10
 4164 04a2 0592     		str	r2, [sp, #20]
 4165 04a4 0832     		adds	r2, r2, #8
 4166 04a6 0392     		str	r2, [sp, #12]
 4167 04a8 0022     		movs	r2, #0
 4168 04aa 0493     		str	r3, [sp, #16]
 4169 04ac 0C9B     		ldr	r3, [sp, #48]
 4170 04ae 0292     		str	r2, [sp, #8]
 4171 04b0 0193     		str	r3, [sp, #4]
 4172 04b2 18AB     		add	r3, sp, #96
 4173 04b4 2200     		movs	r2, r4
 4174 04b6 0093     		str	r3, [sp]
 4175 04b8 5946     		mov	r1, fp
 4176 04ba 3B00     		movs	r3, r7
 4177 04bc 3000     		movs	r0, r6
 4178 04be FFF7FEFF 		bl	_ntoa_format
 4179              	.LVL483:
 301:Core/Src/printf.c **** }
 4180              		.loc 1 301 10 view .LVU1040
 4181              	.LBE202:
 4182              	.LBE205:
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4183              		.loc 1 833 81 view .LVU1041
 4184 04c2 4346     		mov	r3, r8
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 107


 4185              	.LBB206:
 4186              	.LBB203:
 301:Core/Src/printf.c **** }
 4187              		.loc 1 301 10 view .LVU1042
 4188 04c4 0400     		movs	r4, r0
 4189              	.LVL484:
 301:Core/Src/printf.c **** }
 4190              		.loc 1 301 10 view .LVU1043
 4191              	.LBE203:
 4192              	.LBE206:
 837:Core/Src/printf.c ****         break;
 4193              		.loc 1 837 9 is_stmt 1 view .LVU1044
 838:Core/Src/printf.c ****       }
 4194              		.loc 1 838 9 view .LVU1045
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4195              		.loc 1 833 81 is_stmt 0 view .LVU1046
 4196 04c6 0B93     		str	r3, [sp, #44]
 838:Core/Src/printf.c ****       }
 4197              		.loc 1 838 9 view .LVU1047
 4198 04c8 C0E5     		b	.L378
 4199              	.LVL485:
 4200              	.L487:
 838:Core/Src/printf.c ****       }
 4201              		.loc 1 838 9 view .LVU1048
 4202              	.LBE233:
 4203              	.LBB234:
 4204              	.LBB226:
 4205              	.LBB224:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 4206              		.loc 1 175 20 is_stmt 1 view .LVU1049
 4207 04ca 0028     		cmp	r0, #0
 4208 04cc 00D1     		bne	.LCB4463
 4209 04ce 74E7     		b	.L489	@long jump
 4210              	.LCB4463:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 4211              		.loc 1 175 30 is_stmt 0 view .LVU1050
 4212 04d0 5346     		mov	r3, r10
 4213 04d2 013B     		subs	r3, r3, #1
 4214              	.LVL486:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 4215              		.loc 1 175 30 view .LVU1051
 4216 04d4 60E7     		b	.L488
 4217              	.LVL487:
 4218              	.L415:
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 4219              		.loc 1 175 30 view .LVU1052
 4220              	.LBE224:
 4221              	.LBE226:
 4222              	.LBE234:
 4223              	.LBB235:
 693:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 4224              		.loc 1 693 9 is_stmt 1 view .LVU1053
 694:Core/Src/printf.c ****           base = 16U;
 4225              		.loc 1 694 9 view .LVU1054
 4226 04d6 6228     		cmp	r0, #98
 4227 04d8 00D1     		bne	.LCB4482
 4228 04da DCE1     		b	.L419	@long jump
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 108


 4229              	.LCB4482:
 4230 04dc 5828     		cmp	r0, #88
 4231 04de 00D1     		bne	.LCB4484
 4232 04e0 E9E1     		b	.L627	@long jump
 4233              	.LCB4484:
 704:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 4234              		.loc 1 704 11 view .LVU1055
 4235              	.LVL488:
 705:Core/Src/printf.c ****         }
 4236              		.loc 1 705 11 view .LVU1056
 708:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 4237              		.loc 1 708 9 view .LVU1057
 713:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 4238              		.loc 1 713 9 view .LVU1058
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 4239              		.loc 1 718 9 view .LVU1059
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 4240              		.loc 1 718 19 is_stmt 0 view .LVU1060
 4241 04e2 0A99     		ldr	r1, [sp, #40]
 4242              	.LVL489:
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 4243              		.loc 1 718 19 view .LVU1061
 4244 04e4 8023     		movs	r3, #128
 4245 04e6 0A00     		movs	r2, r1
 4246 04e8 DB00     		lsls	r3, r3, #3
 4247 04ea 1A40     		ands	r2, r3
 4248 04ec 1000     		movs	r0, r2
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 4249              		.loc 1 718 12 view .LVU1062
 4250 04ee 0A00     		movs	r2, r1
 4251 04f0 1942     		tst	r1, r3
 4252 04f2 00D1     		bne	.LCB4505
 4253 04f4 BAE1     		b	.L628	@long jump
 4254              	.LCB4505:
 4255              	.LVL490:
 4256              	.L604:
 719:Core/Src/printf.c ****         }
 4257              		.loc 1 719 11 is_stmt 1 view .LVU1063
 719:Core/Src/printf.c ****         }
 4258              		.loc 1 719 17 is_stmt 0 view .LVU1064
 4259 04f6 1123     		movs	r3, #17
 4260 04f8 9A43     		bics	r2, r3
 4261 04fa 0C92     		str	r2, [sp, #48]
 4262              	.LVL491:
 723:Core/Src/printf.c ****           // signed
 4263              		.loc 1 723 9 is_stmt 1 view .LVU1065
 4264              	.L425:
 725:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4265              		.loc 1 725 11 view .LVU1066
 725:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4266              		.loc 1 725 21 is_stmt 0 view .LVU1067
 4267 04fc 0C9A     		ldr	r2, [sp, #48]
 4268 04fe 8023     		movs	r3, #128
 4269 0500 1100     		movs	r1, r2
 4270 0502 9B00     		lsls	r3, r3, #2
 4271 0504 1940     		ands	r1, r3
 4272 0506 8C46     		mov	ip, r1
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 109


 725:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4273              		.loc 1 725 14 view .LVU1068
 4274 0508 1A42     		tst	r2, r3
 4275 050a 00D0     		beq	.LCB4525
 4276 050c 43E1     		b	.L629	@long jump
 4277              	.LCB4525:
 731:Core/Src/printf.c ****             const long value = va_arg(va, long);
 4278              		.loc 1 731 16 is_stmt 1 view .LVU1069
 731:Core/Src/printf.c ****             const long value = va_arg(va, long);
 4279              		.loc 1 731 26 is_stmt 0 view .LVU1070
 4280 050e 8023     		movs	r3, #128
 4281 0510 1100     		movs	r1, r2
 4282 0512 5B00     		lsls	r3, r3, #1
 4283 0514 1940     		ands	r1, r3
 4284 0516 8946     		mov	r9, r1
 4285              	.LBB149:
 732:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 4286              		.loc 1 732 24 view .LVU1071
 4287 0518 0B99     		ldr	r1, [sp, #44]
 4288 051a 0431     		adds	r1, r1, #4
 4289 051c 0A91     		str	r1, [sp, #40]
 4290              	.LBE149:
 731:Core/Src/printf.c ****             const long value = va_arg(va, long);
 4291              		.loc 1 731 19 view .LVU1072
 4292 051e 1A42     		tst	r2, r3
 4293 0520 00D0     		beq	.LCB4538
 4294 0522 8CE2     		b	.L630	@long jump
 4295              	.LCB4538:
 4296 0524 1300     		movs	r3, r2
 4297              	.LBB150:
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 4298              		.loc 1 736 13 is_stmt 1 view .LVU1073
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 4299              		.loc 1 736 76 is_stmt 0 view .LVU1074
 4300 0526 5B06     		lsls	r3, r3, #25
 4301 0528 00D5     		bpl	.LCB4545
 4302 052a 9BE1     		b	.L631	@long jump
 4303              	.LCB4545:
 4304 052c 1300     		movs	r3, r2
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 4305              		.loc 1 736 129 discriminator 2 view .LVU1075
 4306 052e 1B06     		lsls	r3, r3, #24
 4307 0530 00D4     		bmi	.LCB4550
 4308 0532 23E3     		b	.L445	@long jump
 4309              	.LCB4550:
 4310              	.LVL492:
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 4311              		.loc 1 736 129 view .LVU1076
 4312 0534 0B9B     		ldr	r3, [sp, #44]
 4313 0536 0022     		movs	r2, #0
 4314 0538 9B5E     		ldrsh	r3, [r3, r2]
 737:Core/Src/printf.c ****           }
 4315              		.loc 1 737 56 view .LVU1077
 4316 053a D917     		asrs	r1, r3, #31
 4317              	.LVL493:
 737:Core/Src/printf.c ****           }
 4318              		.loc 1 737 56 view .LVU1078
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 110


 4319 053c 5A18     		adds	r2, r3, r1
 4320 053e 4A40     		eors	r2, r1
 4321 0540 92B2     		uxth	r2, r2
 4322              	.LVL494:
 4323              	.L444:
 737:Core/Src/printf.c ****           }
 4324              		.loc 1 737 13 is_stmt 1 discriminator 8 view .LVU1079
 737:Core/Src/printf.c ****           }
 4325              		.loc 1 737 19 is_stmt 0 discriminator 8 view .LVU1080
 4326 0542 D90F     		lsrs	r1, r3, #31
 4327 0544 0B91     		str	r1, [sp, #44]
 4328              	.LVL495:
 4329              	.LBB151:
 4330              	.LBI151:
 282:Core/Src/printf.c **** {
 4331              		.loc 1 282 15 is_stmt 1 discriminator 8 view .LVU1081
 4332              	.LBB152:
 284:Core/Src/printf.c ****   size_t len = 0U;
 4333              		.loc 1 284 3 discriminator 8 view .LVU1082
 285:Core/Src/printf.c **** 
 4334              		.loc 1 285 3 discriminator 8 view .LVU1083
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 4335              		.loc 1 288 3 discriminator 8 view .LVU1084
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 4336              		.loc 1 288 6 is_stmt 0 discriminator 8 view .LVU1085
 4337 0546 002B     		cmp	r3, #0
 4338 0548 00D1     		bne	.LCB4588
 4339 054a 74E2     		b	.L446	@long jump
 4340              	.LCB4588:
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 4341              		.loc 1 288 6 discriminator 8 view .LVU1086
 4342              	.LBE152:
 4343              	.LBE151:
 737:Core/Src/printf.c ****           }
 4344              		.loc 1 737 19 view .LVU1087
 4345 054c 1000     		movs	r0, r2
 4346              	.L447:
 4347              	.LVL496:
 737:Core/Src/printf.c ****           }
 4348              		.loc 1 737 19 view .LVU1088
 4349 054e 10AA     		add	r2, sp, #64
 4350              	.LVL497:
 737:Core/Src/printf.c ****           }
 4351              		.loc 1 737 19 view .LVU1089
 4352 0550 9446     		mov	ip, r2
 4353 0552 4246     		mov	r2, r8
 4354 0554 1F23     		movs	r3, #31
 4355              	.LVL498:
 737:Core/Src/printf.c ****           }
 4356              		.loc 1 737 19 view .LVU1090
 4357 0556 1292     		str	r2, [sp, #72]
 4358 0558 5246     		mov	r2, r10
 4359 055a 6344     		add	r3, r3, ip
 4360 055c AA46     		mov	r10, r5
 4361 055e 1494     		str	r4, [sp, #80]
 4362 0560 4D46     		mov	r5, r9
 4363              	.LVL499:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 111


 737:Core/Src/printf.c ****           }
 4364              		.loc 1 737 19 view .LVU1091
 4365 0562 0400     		movs	r4, r0
 4366 0564 B946     		mov	r9, r7
 4367 0566 B046     		mov	r8, r6
 4368              	.LVL500:
 737:Core/Src/printf.c ****           }
 4369              		.loc 1 737 19 view .LVU1092
 4370 0568 1F00     		movs	r7, r3
 4371              	.LVL501:
 737:Core/Src/printf.c ****           }
 4372              		.loc 1 737 19 view .LVU1093
 4373 056a 1392     		str	r2, [sp, #76]
 4374 056c 01E0     		b	.L449
 4375              	.LVL502:
 4376              	.L632:
 4377              	.LBB156:
 4378              	.LBB154:
 298:Core/Src/printf.c ****   }
 4379              		.loc 1 298 20 view .LVU1094
 4380 056e 202D     		cmp	r5, #32
 4381 0570 0FD0     		beq	.L596
 4382              	.LVL503:
 4383              	.L449:
 294:Core/Src/printf.c ****       const char digit = (char)(value % base);
 4384              		.loc 1 294 5 is_stmt 1 view .LVU1095
 4385              	.LBB153:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 4386              		.loc 1 295 7 view .LVU1096
 296:Core/Src/printf.c ****       value /= base;
 4387              		.loc 1 296 7 view .LVU1097
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 4388              		.loc 1 295 39 is_stmt 0 view .LVU1098
 4389 0572 2000     		movs	r0, r4
 4390 0574 0A21     		movs	r1, #10
 4391 0576 FFF7FEFF 		bl	__aeabi_uidivmod
 4392              	.LVL504:
 296:Core/Src/printf.c ****       value /= base;
 4393              		.loc 1 296 14 view .LVU1099
 4394 057a 0135     		adds	r5, r5, #1
 4395              	.LVL505:
 296:Core/Src/printf.c ****       value /= base;
 4396              		.loc 1 296 18 view .LVU1100
 4397 057c 7E19     		adds	r6, r7, r5
 4398 057e 3031     		adds	r1, r1, #48
 4399 0580 3170     		strb	r1, [r6]
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 4400              		.loc 1 297 7 is_stmt 1 view .LVU1101
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 4401              		.loc 1 297 13 is_stmt 0 view .LVU1102
 4402 0582 2000     		movs	r0, r4
 4403 0584 0A21     		movs	r1, #10
 4404 0586 FFF7FEFF 		bl	__aeabi_uidiv
 4405              	.LVL506:
 4406 058a 2600     		movs	r6, r4
 4407 058c 0400     		movs	r4, r0
 4408              	.LVL507:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 112


 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 4409              		.loc 1 297 13 view .LVU1103
 4410              	.LBE153:
 298:Core/Src/printf.c ****   }
 4411              		.loc 1 298 20 is_stmt 1 view .LVU1104
 4412 058e 092E     		cmp	r6, #9
 4413 0590 EDD8     		bhi	.L632
 4414              	.L596:
 4415 0592 129B     		ldr	r3, [sp, #72]
 4416 0594 4646     		mov	r6, r8
 4417              	.LVL508:
 298:Core/Src/printf.c ****   }
 4418              		.loc 1 298 20 is_stmt 0 view .LVU1105
 4419 0596 9846     		mov	r8, r3
 4420              	.LVL509:
 298:Core/Src/printf.c ****   }
 4421              		.loc 1 298 20 view .LVU1106
 4422 0598 139B     		ldr	r3, [sp, #76]
 4423 059a 4F46     		mov	r7, r9
 4424 059c A946     		mov	r9, r5
 4425              	.LVL510:
 298:Core/Src/printf.c ****   }
 4426              		.loc 1 298 20 view .LVU1107
 4427 059e 5546     		mov	r5, r10
 4428              	.LVL511:
 298:Core/Src/printf.c ****   }
 4429              		.loc 1 298 20 view .LVU1108
 4430 05a0 9A46     		mov	r10, r3
 4431              	.LVL512:
 298:Core/Src/printf.c ****   }
 4432              		.loc 1 298 20 view .LVU1109
 4433 05a2 149C     		ldr	r4, [sp, #80]
 4434              	.LVL513:
 4435              	.L448:
 301:Core/Src/printf.c **** }
 4436              		.loc 1 301 3 is_stmt 1 view .LVU1110
 301:Core/Src/printf.c **** }
 4437              		.loc 1 301 10 is_stmt 0 view .LVU1111
 4438 05a4 0C9B     		ldr	r3, [sp, #48]
 4439 05a6 0693     		str	r3, [sp, #24]
 4440 05a8 4346     		mov	r3, r8
 4441 05aa 0593     		str	r3, [sp, #20]
 4442 05ac 5346     		mov	r3, r10
 4443 05ae 0493     		str	r3, [sp, #16]
 4444 05b0 0A23     		movs	r3, #10
 4445 05b2 0393     		str	r3, [sp, #12]
 4446 05b4 0B9B     		ldr	r3, [sp, #44]
 4447 05b6 0293     		str	r3, [sp, #8]
 4448 05b8 4B46     		mov	r3, r9
 4449              	.LVL514:
 4450              	.L609:
 301:Core/Src/printf.c **** }
 4451              		.loc 1 301 10 view .LVU1112
 4452 05ba 0193     		str	r3, [sp, #4]
 4453 05bc 18AB     		add	r3, sp, #96
 4454 05be 2200     		movs	r2, r4
 4455 05c0 0093     		str	r3, [sp]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 113


 4456 05c2 5946     		mov	r1, fp
 4457 05c4 3B00     		movs	r3, r7
 4458 05c6 3000     		movs	r0, r6
 4459 05c8 FFF7FEFF 		bl	_ntoa_format
 4460              	.LVL515:
 301:Core/Src/printf.c **** }
 4461              		.loc 1 301 10 view .LVU1113
 4462 05cc 0A9B     		ldr	r3, [sp, #40]
 4463 05ce 0400     		movs	r4, r0
 301:Core/Src/printf.c **** }
 4464              		.loc 1 301 10 view .LVU1114
 4465 05d0 0B93     		str	r3, [sp, #44]
 4466 05d2 3BE5     		b	.L378
 4467              	.LVL516:
 4468              	.L621:
 301:Core/Src/printf.c **** }
 4469              		.loc 1 301 10 view .LVU1115
 4470              	.LBE154:
 4471              	.LBE156:
 4472              	.LBE150:
 4473              	.LBE235:
 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 4474              		.loc 1 761 29 is_stmt 1 discriminator 1 view .LVU1116
 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 4475              		.loc 1 761 35 is_stmt 0 discriminator 1 view .LVU1117
 4476 05d4 2023     		movs	r3, #32
 4477 05d6 0A9A     		ldr	r2, [sp, #40]
 4478 05d8 1A43     		orrs	r2, r3
 4479 05da 0A92     		str	r2, [sp, #40]
 4480              	.LVL517:
 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 4481              		.loc 1 761 35 discriminator 1 view .LVU1118
 4482 05dc 70E6     		b	.L477
 4483              	.LVL518:
 4484              	.L478:
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 4485              		.loc 1 770 49 is_stmt 1 view .LVU1119
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 4486              		.loc 1 770 55 is_stmt 0 view .LVU1120
 4487 05de 8023     		movs	r3, #128
 4488 05e0 0A9A     		ldr	r2, [sp, #40]
 4489 05e2 1B01     		lsls	r3, r3, #4
 4490 05e4 1A43     		orrs	r2, r3
 4491 05e6 0A92     		str	r2, [sp, #40]
 4492              	.LVL519:
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 4493              		.loc 1 771 9 is_stmt 1 view .LVU1121
 4494 05e8 38E6     		b	.L481
 4495              	.LVL520:
 4496              	.L616:
 4497              	.LBB236:
 693:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 4498              		.loc 1 693 9 view .LVU1122
 694:Core/Src/printf.c ****           base = 16U;
 4499              		.loc 1 694 9 view .LVU1123
 694:Core/Src/printf.c ****           base = 16U;
 4500              		.loc 1 694 12 is_stmt 0 view .LVU1124
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 114


 4501 05ea 7828     		cmp	r0, #120
 4502 05ec 00D0     		beq	.LCB4793
 4503 05ee ACE1     		b	.L633	@long jump
 4504              	.LCB4793:
 4505              	.LVL521:
 714:Core/Src/printf.c ****         }
 4506              		.loc 1 714 11 is_stmt 1 view .LVU1125
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 4507              		.loc 1 718 9 view .LVU1126
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 4508              		.loc 1 718 19 is_stmt 0 view .LVU1127
 4509 05f0 0A98     		ldr	r0, [sp, #40]
 4510 05f2 8023     		movs	r3, #128
 4511 05f4 0200     		movs	r2, r0
 4512 05f6 DB00     		lsls	r3, r3, #3
 4513 05f8 1A40     		ands	r2, r3
 4514 05fa 1100     		movs	r1, r2
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 4515              		.loc 1 718 12 view .LVU1128
 4516 05fc 0200     		movs	r2, r0
 4517 05fe 1842     		tst	r0, r3
 4518 0600 00D1     		bne	.LCB4806
 4519 0602 CDE2     		b	.L516	@long jump
 4520              	.LCB4806:
 719:Core/Src/printf.c ****         }
 4521              		.loc 1 719 11 is_stmt 1 view .LVU1129
 719:Core/Src/printf.c ****         }
 4522              		.loc 1 719 17 is_stmt 0 view .LVU1130
 4523 0604 0D23     		movs	r3, #13
 4524 0606 9A43     		bics	r2, r3
 4525 0608 1000     		movs	r0, r2
 4526              	.LVL522:
 723:Core/Src/printf.c ****           // signed
 4527              		.loc 1 723 9 is_stmt 1 view .LVU1131
 719:Core/Src/printf.c ****         }
 4528              		.loc 1 719 17 is_stmt 0 view .LVU1132
 4529 060a 0333     		adds	r3, r3, #3
 4530 060c 0A93     		str	r3, [sp, #40]
 4531              	.LVL523:
 4532              	.L429:
 742:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4533              		.loc 1 742 11 is_stmt 1 view .LVU1133
 742:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4534              		.loc 1 742 21 is_stmt 0 view .LVU1134
 4535 060e 8023     		movs	r3, #128
 4536 0610 0200     		movs	r2, r0
 4537 0612 9B00     		lsls	r3, r3, #2
 4538 0614 1A40     		ands	r2, r3
 4539 0616 9446     		mov	ip, r2
 742:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4540              		.loc 1 742 14 view .LVU1135
 4541 0618 1842     		tst	r0, r3
 4542 061a 00D0     		beq	.LCB4825
 4543 061c A9E1     		b	.L634	@long jump
 4544              	.LCB4825:
 747:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 4545              		.loc 1 747 16 is_stmt 1 view .LVU1136
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 115


 747:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 4546              		.loc 1 747 26 is_stmt 0 view .LVU1137
 4547 061e 8023     		movs	r3, #128
 4548 0620 0200     		movs	r2, r0
 4549 0622 5B00     		lsls	r3, r3, #1
 4550 0624 1A40     		ands	r2, r3
 4551 0626 9146     		mov	r9, r2
 4552              	.LBB158:
 732:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 4553              		.loc 1 732 24 view .LVU1138
 4554 0628 0B9A     		ldr	r2, [sp, #44]
 4555 062a 0432     		adds	r2, r2, #4
 4556 062c 0C92     		str	r2, [sp, #48]
 4557              	.LBE158:
 747:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 4558              		.loc 1 747 19 view .LVU1139
 4559 062e 1842     		tst	r0, r3
 4560 0630 00D0     		beq	.LCB4838
 4561 0632 47E2     		b	.L635	@long jump
 4562              	.LCB4838:
 4563              	.LBB159:
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 4564              		.loc 1 751 13 is_stmt 1 view .LVU1140
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 4565              		.loc 1 751 103 is_stmt 0 view .LVU1141
 4566 0634 4306     		lsls	r3, r0, #25
 4567 0636 00D4     		bmi	.LCB4844
 4568 0638 90E2     		b	.L467	@long jump
 4569              	.LCB4844:
 4570              	.LVL524:
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 4571              		.loc 1 751 103 view .LVU1142
 4572 063a 0B9B     		ldr	r3, [sp, #44]
 4573 063c 1B78     		ldrb	r3, [r3]
 4574 063e 0893     		str	r3, [sp, #32]
 4575              	.LVL525:
 4576              	.L468:
 752:Core/Src/printf.c ****           }
 4577              		.loc 1 752 13 is_stmt 1 discriminator 8 view .LVU1143
 4578              	.LBB147:
 4579              	.LBI140:
 282:Core/Src/printf.c **** {
 4580              		.loc 1 282 15 discriminator 8 view .LVU1144
 4581              	.LBB145:
 284:Core/Src/printf.c ****   size_t len = 0U;
 4582              		.loc 1 284 3 discriminator 8 view .LVU1145
 285:Core/Src/printf.c **** 
 4583              		.loc 1 285 3 discriminator 8 view .LVU1146
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 4584              		.loc 1 288 3 discriminator 8 view .LVU1147
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 4585              		.loc 1 288 6 is_stmt 0 discriminator 8 view .LVU1148
 4586 0640 002B     		cmp	r3, #0
 4587 0642 00D0     		beq	.LCB4875
 4588 0644 48E1     		b	.L470	@long jump
 4589              	.LCB4875:
 289:Core/Src/printf.c ****   }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 116


 4590              		.loc 1 289 5 is_stmt 1 view .LVU1149
 289:Core/Src/printf.c ****   }
 4591              		.loc 1 289 11 is_stmt 0 view .LVU1150
 4592 0646 1033     		adds	r3, r3, #16
 4593 0648 9843     		bics	r0, r3
 4594              	.LVL526:
 293:Core/Src/printf.c ****     do {
 4595              		.loc 1 293 3 is_stmt 1 view .LVU1151
 293:Core/Src/printf.c ****     do {
 4596              		.loc 1 293 6 is_stmt 0 view .LVU1152
 4597 064a 0029     		cmp	r1, #0
 4598 064c 00D1     		bne	.LCB4885
 4599 064e 43E1     		b	.L470	@long jump
 4600              	.LCB4885:
 285:Core/Src/printf.c **** 
 4601              		.loc 1 285 10 view .LVU1153
 4602 0650 0023     		movs	r3, #0
 4603 0652 9946     		mov	r9, r3
 4604              	.LVL527:
 4605              	.L471:
 301:Core/Src/printf.c **** }
 4606              		.loc 1 301 3 is_stmt 1 view .LVU1154
 301:Core/Src/printf.c **** }
 4607              		.loc 1 301 10 is_stmt 0 view .LVU1155
 4608 0654 4346     		mov	r3, r8
 4609 0656 0593     		str	r3, [sp, #20]
 4610 0658 5346     		mov	r3, r10
 4611 065a 0493     		str	r3, [sp, #16]
 4612 065c 0A9B     		ldr	r3, [sp, #40]
 4613 065e 0690     		str	r0, [sp, #24]
 4614 0660 0393     		str	r3, [sp, #12]
 4615 0662 0023     		movs	r3, #0
 4616 0664 0293     		str	r3, [sp, #8]
 4617 0666 4B46     		mov	r3, r9
 4618              	.LVL528:
 4619              	.L607:
 301:Core/Src/printf.c **** }
 4620              		.loc 1 301 10 view .LVU1156
 4621 0668 0193     		str	r3, [sp, #4]
 4622 066a 18AB     		add	r3, sp, #96
 4623 066c 2200     		movs	r2, r4
 4624 066e 0093     		str	r3, [sp]
 4625 0670 5946     		mov	r1, fp
 4626 0672 3B00     		movs	r3, r7
 4627 0674 3000     		movs	r0, r6
 4628 0676 FFF7FEFF 		bl	_ntoa_format
 4629              	.LVL529:
 301:Core/Src/printf.c **** }
 4630              		.loc 1 301 10 view .LVU1157
 4631 067a 0400     		movs	r4, r0
 4632 067c 66E6     		b	.L608
 4633              	.LVL530:
 4634              	.L479:
 301:Core/Src/printf.c **** }
 4635              		.loc 1 301 10 view .LVU1158
 4636              	.LBE145:
 4637              	.LBE147:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 117


 4638              	.LBE159:
 4639              	.LBE236:
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 4640              		.loc 1 770 49 is_stmt 1 view .LVU1159
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 4641              		.loc 1 770 55 is_stmt 0 view .LVU1160
 4642 067e 8023     		movs	r3, #128
 4643 0680 0A9A     		ldr	r2, [sp, #40]
 4644 0682 1B01     		lsls	r3, r3, #4
 4645 0684 1A43     		orrs	r2, r3
 4646 0686 0A92     		str	r2, [sp, #40]
 4647              	.LVL531:
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 4648              		.loc 1 771 9 is_stmt 1 view .LVU1161
 4649              	.L480:
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 4650              		.loc 1 771 49 discriminator 3 view .LVU1162
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 4651              		.loc 1 771 55 is_stmt 0 discriminator 3 view .LVU1163
 4652 0688 2023     		movs	r3, #32
 4653 068a 0A9A     		ldr	r2, [sp, #40]
 4654 068c 1A43     		orrs	r2, r3
 4655 068e 0A92     		str	r2, [sp, #40]
 4656              	.LVL532:
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 4657              		.loc 1 771 55 discriminator 3 view .LVU1164
 4658 0690 E4E5     		b	.L481
 4659              	.LVL533:
 4660              	.L534:
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 4661              		.loc 1 771 55 discriminator 3 view .LVU1165
 4662 0692 0B1B     		subs	r3, r1, r4
 4663 0694 9A46     		mov	r10, r3
 4664 0696 0C9B     		ldr	r3, [sp, #48]
 4665 0698 9946     		mov	r9, r3
 4666 069a 2B00     		movs	r3, r5
 4667 069c 5D46     		mov	r5, fp
 4668              	.LVL534:
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 4669              		.loc 1 771 55 discriminator 3 view .LVU1166
 4670 069e 9B46     		mov	fp, r3
 4671              	.LVL535:
 4672              	.L502:
 4673              	.LBB237:
 811:Core/Src/printf.c ****         }
 4674              		.loc 1 811 11 is_stmt 1 discriminator 1 view .LVU1167
 811:Core/Src/printf.c ****         }
 4675              		.loc 1 811 11 is_stmt 0 discriminator 1 view .LVU1168
 4676 06a0 2200     		movs	r2, r4
 4677 06a2 3B00     		movs	r3, r7
 4678 06a4 2900     		movs	r1, r5
 4679 06a6 B047     		blx	r6
 4680              	.LVL536:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4681              		.loc 1 810 17 discriminator 1 view .LVU1169
 4682 06a8 5346     		mov	r3, r10
 811:Core/Src/printf.c ****         }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 118


 4683              		.loc 1 811 11 discriminator 1 view .LVU1170
 4684 06aa 0134     		adds	r4, r4, #1
 4685              	.LVL537:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4686              		.loc 1 810 26 is_stmt 1 discriminator 1 view .LVU1171
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4687              		.loc 1 810 17 is_stmt 0 discriminator 1 view .LVU1172
 4688 06ac 185D     		ldrb	r0, [r3, r4]
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4689              		.loc 1 810 26 discriminator 1 view .LVU1173
 4690 06ae 0028     		cmp	r0, #0
 4691 06b0 F6D1     		bne	.L502
 4692 06b2 4B46     		mov	r3, r9
 4693 06b4 0C93     		str	r3, [sp, #48]
 4694 06b6 5B46     		mov	r3, fp
 4695 06b8 AB46     		mov	fp, r5
 4696              	.LVL538:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4697              		.loc 1 810 26 discriminator 1 view .LVU1174
 4698 06ba 1D00     		movs	r5, r3
 4699              	.LVL539:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4700              		.loc 1 810 26 discriminator 1 view .LVU1175
 4701 06bc B9E6     		b	.L498
 4702              	.LVL540:
 4703              	.L402:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4704              		.loc 1 810 26 discriminator 1 view .LVU1176
 4705              	.LBE237:
 653:Core/Src/printf.c ****           format++;
 4706              		.loc 1 653 11 is_stmt 1 view .LVU1177
 653:Core/Src/printf.c ****           format++;
 4707              		.loc 1 653 17 is_stmt 0 view .LVU1178
 4708 06be C023     		movs	r3, #192
 4709 06c0 9B00     		lsls	r3, r3, #2
 4710              	.LVL541:
 4711              	.L602:
 661:Core/Src/printf.c ****           format++;
 4712              		.loc 1 661 17 view .LVU1179
 4713 06c2 0A9A     		ldr	r2, [sp, #40]
 684:Core/Src/printf.c ****       case 'd' :
 4714              		.loc 1 684 13 view .LVU1180
 4715 06c4 A878     		ldrb	r0, [r5, #2]
 661:Core/Src/printf.c ****           format++;
 4716              		.loc 1 661 17 view .LVU1181
 4717 06c6 1A43     		orrs	r2, r3
 4718 06c8 0A92     		str	r2, [sp, #40]
 4719              	.LVL542:
 662:Core/Src/printf.c ****         }
 4720              		.loc 1 662 11 is_stmt 1 view .LVU1182
 662:Core/Src/printf.c ****         }
 4721              		.loc 1 662 11 is_stmt 0 view .LVU1183
 4722 06ca E91C     		adds	r1, r5, #3
 4723 06cc 0EE5     		b	.L396
 4724              	.LVL543:
 4725              	.L403:
 661:Core/Src/printf.c ****           format++;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 119


 4726              		.loc 1 661 11 is_stmt 1 view .LVU1184
 661:Core/Src/printf.c ****           format++;
 4727              		.loc 1 661 17 is_stmt 0 view .LVU1185
 4728 06ce C023     		movs	r3, #192
 4729 06d0 F7E7     		b	.L602
 4730              	.LVL544:
 4731              	.L625:
 661:Core/Src/printf.c ****           format++;
 4732              		.loc 1 661 17 view .LVU1186
 4733 06d2 5D46     		mov	r5, fp
 4734 06d4 BB46     		mov	fp, r7
 4735              	.LVL545:
 661:Core/Src/printf.c ****           format++;
 4736              		.loc 1 661 17 view .LVU1187
 4737 06d6 4F46     		mov	r7, r9
 4738              	.LVL546:
 661:Core/Src/printf.c ****           format++;
 4739              		.loc 1 661 17 view .LVU1188
 4740 06d8 ABE6     		b	.L498
 4741              	.LVL547:
 4742              	.L622:
 4743              	.LBB238:
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4744              		.loc 1 781 22 is_stmt 1 view .LVU1189
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4745              		.loc 1 781 22 is_stmt 0 view .LVU1190
 4746 06da 4346     		mov	r3, r8
 4747 06dc 012B     		cmp	r3, #1
 4748 06de 00D8     		bhi	.LCB5100
 4749 06e0 D1E0     		b	.L483	@long jump
 4750              	.LCB5100:
 4751              	.LVL548:
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4752              		.loc 1 781 22 view .LVU1191
 4753 06e2 631E     		subs	r3, r4, #1
 4754              	.LVL549:
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4755              		.loc 1 781 22 view .LVU1192
 4756 06e4 4344     		add	r3, r3, r8
 4757 06e6 B946     		mov	r9, r7
 4758 06e8 1D00     		movs	r5, r3
 4759 06ea 5F46     		mov	r7, fp
 4760 06ec A246     		mov	r10, r4
 4761 06ee 8B46     		mov	fp, r1
 4762              	.LVL550:
 4763              	.L484:
 782:Core/Src/printf.c ****           }
 4764              		.loc 1 782 13 is_stmt 1 view .LVU1193
 4765 06f0 2200     		movs	r2, r4
 4766 06f2 4B46     		mov	r3, r9
 4767 06f4 0134     		adds	r4, r4, #1
 4768              	.LVL551:
 782:Core/Src/printf.c ****           }
 4769              		.loc 1 782 13 is_stmt 0 view .LVU1194
 4770 06f6 3900     		movs	r1, r7
 4771 06f8 2020     		movs	r0, #32
 4772 06fa B047     		blx	r6
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 120


 4773              	.LVL552:
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4774              		.loc 1 781 22 is_stmt 1 view .LVU1195
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4775              		.loc 1 781 22 is_stmt 0 view .LVU1196
 4776 06fc AC42     		cmp	r4, r5
 4777 06fe F7D1     		bne	.L484
 786:Core/Src/printf.c ****         // post padding
 4778              		.loc 1 786 9 view .LVU1197
 4779 0700 5D46     		mov	r5, fp
 4780 0702 BB46     		mov	fp, r7
 4781              	.LVL553:
 786:Core/Src/printf.c ****         // post padding
 4782              		.loc 1 786 9 view .LVU1198
 4783 0704 4F46     		mov	r7, r9
 4784              	.LVL554:
 786:Core/Src/printf.c ****         // post padding
 4785              		.loc 1 786 9 view .LVU1199
 4786 0706 A146     		mov	r9, r4
 4787 0708 5446     		mov	r4, r10
 4788              	.LVL555:
 786:Core/Src/printf.c ****         // post padding
 4789              		.loc 1 786 9 is_stmt 1 view .LVU1200
 786:Core/Src/printf.c ****         // post padding
 4790              		.loc 1 786 9 is_stmt 0 view .LVU1201
 4791 070a 0B9B     		ldr	r3, [sp, #44]
 4792 070c 4A46     		mov	r2, r9
 4793 070e 1878     		ldrb	r0, [r3]
 4794 0710 5946     		mov	r1, fp
 4795 0712 3B00     		movs	r3, r7
 4796 0714 4444     		add	r4, r4, r8
 4797              	.LVL556:
 786:Core/Src/printf.c ****         // post padding
 4798              		.loc 1 786 9 view .LVU1202
 4799 0716 B047     		blx	r6
 4800              	.LVL557:
 788:Core/Src/printf.c ****           while (l++ < width) {
 4801              		.loc 1 788 9 is_stmt 1 view .LVU1203
 4802 0718 18E6     		b	.L608
 4803              	.LVL558:
 4804              	.L606:
 788:Core/Src/printf.c ****           while (l++ < width) {
 4805              		.loc 1 788 9 is_stmt 0 view .LVU1204
 4806              	.LBE238:
 4807              	.LBB239:
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4808              		.loc 1 815 22 view .LVU1205
 4809 071a 0C9B     		ldr	r3, [sp, #48]
 4810 071c A146     		mov	r9, r4
 4811              	.LVL559:
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4812              		.loc 1 815 22 is_stmt 1 view .LVU1206
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4813              		.loc 1 815 22 is_stmt 0 view .LVU1207
 4814 071e 9845     		cmp	r8, r3
 4815 0720 00D8     		bhi	.LCB5185
 4816 0722 8AE6     		b	.L501	@long jump
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 121


 4817              	.LCB5185:
 4818 0724 4444     		add	r4, r4, r8
 4819              	.LVL560:
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4820              		.loc 1 815 22 view .LVU1208
 4821 0726 E41A     		subs	r4, r4, r3
 4822              	.LVL561:
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4823              		.loc 1 815 22 view .LVU1209
 4824 0728 2B00     		movs	r3, r5
 4825 072a B846     		mov	r8, r7
 4826              	.LVL562:
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4827              		.loc 1 815 22 view .LVU1210
 4828 072c 2500     		movs	r5, r4
 4829              	.LVL563:
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4830              		.loc 1 815 22 view .LVU1211
 4831 072e 5F46     		mov	r7, fp
 4832 0730 4C46     		mov	r4, r9
 4833              	.LVL564:
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4834              		.loc 1 815 22 view .LVU1212
 4835 0732 9946     		mov	r9, r3
 4836              	.LVL565:
 4837              	.L505:
 816:Core/Src/printf.c ****           }
 4838              		.loc 1 816 13 is_stmt 1 view .LVU1213
 4839 0734 2200     		movs	r2, r4
 4840 0736 4346     		mov	r3, r8
 4841 0738 0134     		adds	r4, r4, #1
 4842              	.LVL566:
 816:Core/Src/printf.c ****           }
 4843              		.loc 1 816 13 is_stmt 0 view .LVU1214
 4844 073a 3900     		movs	r1, r7
 4845 073c 2020     		movs	r0, #32
 4846 073e B047     		blx	r6
 4847              	.LVL567:
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4848              		.loc 1 815 22 is_stmt 1 view .LVU1215
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4849              		.loc 1 815 22 is_stmt 0 view .LVU1216
 4850 0740 AC42     		cmp	r4, r5
 4851 0742 F7D1     		bne	.L505
 4852 0744 2C00     		movs	r4, r5
 4853              	.LVL568:
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4854              		.loc 1 815 22 view .LVU1217
 4855 0746 BB46     		mov	fp, r7
 4856 0748 4D46     		mov	r5, r9
 4857 074a 4746     		mov	r7, r8
 4858              	.LVL569:
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4859              		.loc 1 815 22 view .LVU1218
 4860 074c 75E6     		b	.L501
 4861              	.LVL570:
 4862              	.L624:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 122


 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4863              		.loc 1 805 22 is_stmt 1 view .LVU1219
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4864              		.loc 1 805 22 is_stmt 0 view .LVU1220
 4865 074e 0C98     		ldr	r0, [sp, #48]
 4866 0750 8045     		cmp	r8, r0
 4867 0752 00D8     		bhi	.LCB5246
 4868 0754 1CE2     		b	.L495	@long jump
 4869              	.LCB5246:
 4870 0756 4346     		mov	r3, r8
 4871 0758 1A19     		adds	r2, r3, r4
 4872 075a 131A     		subs	r3, r2, r0
 4873 075c 9946     		mov	r9, r3
 4874 075e 2B00     		movs	r3, r5
 4875 0760 4D46     		mov	r5, r9
 4876              	.LVL571:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4877              		.loc 1 805 22 view .LVU1221
 4878 0762 B946     		mov	r9, r7
 4879 0764 5F46     		mov	r7, fp
 4880 0766 9B46     		mov	fp, r3
 4881              	.LVL572:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4882              		.loc 1 805 22 view .LVU1222
 4883 0768 0C91     		str	r1, [sp, #48]
 4884              	.LVL573:
 4885              	.L496:
 806:Core/Src/printf.c ****           }
 4886              		.loc 1 806 13 is_stmt 1 view .LVU1223
 4887 076a 2200     		movs	r2, r4
 4888              	.LVL574:
 806:Core/Src/printf.c ****           }
 4889              		.loc 1 806 13 is_stmt 0 view .LVU1224
 4890 076c 4B46     		mov	r3, r9
 4891 076e 0134     		adds	r4, r4, #1
 4892              	.LVL575:
 806:Core/Src/printf.c ****           }
 4893              		.loc 1 806 13 view .LVU1225
 4894 0770 3900     		movs	r1, r7
 4895 0772 2020     		movs	r0, #32
 4896 0774 B047     		blx	r6
 4897              	.LVL576:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4898              		.loc 1 805 22 is_stmt 1 view .LVU1226
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4899              		.loc 1 805 22 is_stmt 0 view .LVU1227
 4900 0776 AC42     		cmp	r4, r5
 4901 0778 F7D1     		bne	.L496
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4902              		.loc 1 805 19 view .LVU1228
 4903 077a 4346     		mov	r3, r8
 4904 077c 0C99     		ldr	r1, [sp, #48]
 4905 077e 0133     		adds	r3, r3, #1
 4906 0780 0C93     		str	r3, [sp, #48]
 4907 0782 0B78     		ldrb	r3, [r1]
 4908 0784 5D46     		mov	r5, fp
 4909 0786 9C46     		mov	ip, r3
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 123


 4910 0788 BB46     		mov	fp, r7
 4911              	.LVL577:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 4912              		.loc 1 805 19 view .LVU1229
 4913 078a 4F46     		mov	r7, r9
 4914              	.LVL578:
 4915              	.L497:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4916              		.loc 1 810 26 is_stmt 1 view .LVU1230
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4917              		.loc 1 810 17 is_stmt 0 view .LVU1231
 4918 078c 6046     		mov	r0, ip
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4919              		.loc 1 810 26 view .LVU1232
 4920 078e 0028     		cmp	r0, #0
 4921 0790 00D0     		beq	.LCB5310
 4922 0792 2DE6     		b	.L499	@long jump
 4923              	.LCB5310:
 4924 0794 51E6     		b	.L501
 4925              	.LVL579:
 4926              	.L629:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 4927              		.loc 1 810 26 view .LVU1233
 4928              	.LBE239:
 4929              	.LBB240:
 4930              	.LBB160:
 727:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 4931              		.loc 1 727 13 is_stmt 1 view .LVU1234
 727:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 4932              		.loc 1 727 29 is_stmt 0 view .LVU1235
 4933 0796 0722     		movs	r2, #7
 4934 0798 0B9B     		ldr	r3, [sp, #44]
 4935 079a 0733     		adds	r3, r3, #7
 4936 079c 9343     		bics	r3, r2
 4937 079e 0132     		adds	r2, r2, #1
 4938 07a0 9446     		mov	ip, r2
 4939 07a2 9C44     		add	ip, ip, r3
 4940 07a4 6246     		mov	r2, ip
 4941 07a6 0B92     		str	r2, [sp, #44]
 4942              	.LVL580:
 727:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 4943              		.loc 1 727 29 view .LVU1236
 4944 07a8 0CCB     		ldmia	r3, {r2, r3}
 4945              	.LVL581:
 728:Core/Src/printf.c **** #endif
 4946              		.loc 1 728 13 is_stmt 1 view .LVU1237
 728:Core/Src/printf.c **** #endif
 4947              		.loc 1 728 19 is_stmt 0 view .LVU1238
 4948 07aa D90F     		lsrs	r1, r3, #31
 4949 07ac 0A91     		str	r1, [sp, #40]
 4950              	.LVL582:
 4951              	.LBB161:
 4952              	.LBI161:
 307:Core/Src/printf.c **** {
 4953              		.loc 1 307 15 is_stmt 1 view .LVU1239
 4954              	.LBB162:
 309:Core/Src/printf.c ****   size_t len = 0U;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 124


 4955              		.loc 1 309 3 view .LVU1240
 310:Core/Src/printf.c **** 
 4956              		.loc 1 310 3 view .LVU1241
 313:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 4957              		.loc 1 313 3 view .LVU1242
 313:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 4958              		.loc 1 313 6 is_stmt 0 view .LVU1243
 4959 07ae 1100     		movs	r1, r2
 4960 07b0 1943     		orrs	r1, r3
 4961 07b2 5FD0     		beq	.L431
 313:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 4962              		.loc 1 313 6 view .LVU1244
 4963              	.LBE162:
 4964              	.LBE161:
 728:Core/Src/printf.c **** #endif
 4965              		.loc 1 728 61 view .LVU1245
 4966 07b4 D917     		asrs	r1, r3, #31
 4967 07b6 1191     		str	r1, [sp, #68]
 4968 07b8 1091     		str	r1, [sp, #64]
 4969 07ba 5140     		eors	r1, r2
 4970 07bc 0E91     		str	r1, [sp, #56]
 4971 07be 1199     		ldr	r1, [sp, #68]
 4972 07c0 5940     		eors	r1, r3
 4973 07c2 0F91     		str	r1, [sp, #60]
 4974 07c4 0E98     		ldr	r0, [sp, #56]
 4975 07c6 0F99     		ldr	r1, [sp, #60]
 4976 07c8 109A     		ldr	r2, [sp, #64]
 4977 07ca 119B     		ldr	r3, [sp, #68]
 4978              	.LVL583:
 728:Core/Src/printf.c **** #endif
 4979              		.loc 1 728 61 view .LVU1246
 4980 07cc 801A     		subs	r0, r0, r2
 4981 07ce 9941     		sbcs	r1, r1, r3
 4982 07d0 0E90     		str	r0, [sp, #56]
 4983 07d2 0F91     		str	r1, [sp, #60]
 4984              	.L433:
 4985              	.LVL584:
 728:Core/Src/printf.c **** #endif
 4986              		.loc 1 728 61 view .LVU1247
 4987 07d4 10AA     		add	r2, sp, #64
 4988              	.LBB167:
 4989              	.LBB165:
 318:Core/Src/printf.c ****     do {
 4990              		.loc 1 318 6 view .LVU1248
 4991 07d6 0023     		movs	r3, #0
 4992 07d8 9446     		mov	ip, r2
 4993              	.LVL585:
 318:Core/Src/printf.c ****     do {
 4994              		.loc 1 318 6 view .LVU1249
 4995 07da 4246     		mov	r2, r8
 4996 07dc 9946     		mov	r9, r3
 4997 07de 1292     		str	r2, [sp, #72]
 4998 07e0 5246     		mov	r2, r10
 4999 07e2 1F33     		adds	r3, r3, #31
 5000 07e4 6344     		add	r3, r3, ip
 5001 07e6 B046     		mov	r8, r6
 5002              	.LVL586:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 125


 318:Core/Src/printf.c ****     do {
 5003              		.loc 1 318 6 view .LVU1250
 5004 07e8 AA46     		mov	r10, r5
 5005 07ea 4E46     		mov	r6, r9
 5006              	.LVL587:
 318:Core/Src/printf.c ****     do {
 5007              		.loc 1 318 6 view .LVU1251
 5008 07ec 1494     		str	r4, [sp, #80]
 5009 07ee B946     		mov	r9, r7
 5010 07f0 0E9C     		ldr	r4, [sp, #56]
 5011 07f2 0F9D     		ldr	r5, [sp, #60]
 5012 07f4 1F00     		movs	r7, r3
 5013              	.LVL588:
 318:Core/Src/printf.c ****     do {
 5014              		.loc 1 318 6 view .LVU1252
 5015 07f6 1392     		str	r2, [sp, #76]
 5016 07f8 01E0     		b	.L436
 5017              	.LVL589:
 5018              	.L542:
 323:Core/Src/printf.c ****   }
 5019              		.loc 1 323 20 view .LVU1253
 5020 07fa 202E     		cmp	r6, #32
 5021 07fc 10D0     		beq	.L594
 5022              	.LVL590:
 5023              	.L436:
 319:Core/Src/printf.c ****       const char digit = (char)(value % base);
 5024              		.loc 1 319 5 is_stmt 1 view .LVU1254
 5025              	.LBB163:
 320:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 5026              		.loc 1 320 7 view .LVU1255
 5027 07fe 2000     		movs	r0, r4
 5028 0800 2900     		movs	r1, r5
 5029 0802 0A22     		movs	r2, #10
 5030 0804 0023     		movs	r3, #0
 5031 0806 FFF7FEFF 		bl	__aeabi_uldivmod
 5032              	.LVL591:
 321:Core/Src/printf.c ****       value /= base;
 5033              		.loc 1 321 7 view .LVU1256
 321:Core/Src/printf.c ****       value /= base;
 5034              		.loc 1 321 14 is_stmt 0 view .LVU1257
 5035 080a 0136     		adds	r6, r6, #1
 5036              	.LVL592:
 321:Core/Src/printf.c ****       value /= base;
 5037              		.loc 1 321 18 view .LVU1258
 5038 080c 3032     		adds	r2, r2, #48
 5039              	.LVL593:
 321:Core/Src/printf.c ****       value /= base;
 5040              		.loc 1 321 18 view .LVU1259
 5041 080e 2B00     		movs	r3, r5
 5042 0810 BA55     		strb	r2, [r7, r6]
 322:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5043              		.loc 1 322 7 is_stmt 1 view .LVU1260
 322:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5044              		.loc 1 322 13 is_stmt 0 view .LVU1261
 5045 0812 0D00     		movs	r5, r1
 5046              	.LVL594:
 322:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 126


 5047              		.loc 1 322 13 view .LVU1262
 5048              	.LBE163:
 323:Core/Src/printf.c ****   }
 5049              		.loc 1 323 20 is_stmt 1 view .LVU1263
 5050 0814 2200     		movs	r2, r4
 5051              	.LBB164:
 322:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5052              		.loc 1 322 13 is_stmt 0 view .LVU1264
 5053 0816 0400     		movs	r4, r0
 5054              	.LBE164:
 323:Core/Src/printf.c ****   }
 5055              		.loc 1 323 20 view .LVU1265
 5056 0818 002B     		cmp	r3, #0
 5057 081a EED1     		bne	.L542
 5058 081c 092A     		cmp	r2, #9
 5059 081e ECD8     		bhi	.L542
 5060              	.L594:
 5061 0820 129B     		ldr	r3, [sp, #72]
 5062 0822 4F46     		mov	r7, r9
 5063 0824 B146     		mov	r9, r6
 5064              	.LVL595:
 323:Core/Src/printf.c ****   }
 5065              		.loc 1 323 20 view .LVU1266
 5066 0826 4646     		mov	r6, r8
 5067              	.LVL596:
 323:Core/Src/printf.c ****   }
 5068              		.loc 1 323 20 view .LVU1267
 5069 0828 9846     		mov	r8, r3
 5070              	.LVL597:
 323:Core/Src/printf.c ****   }
 5071              		.loc 1 323 20 view .LVU1268
 5072 082a 139B     		ldr	r3, [sp, #76]
 5073 082c 0E94     		str	r4, [sp, #56]
 5074 082e 0F95     		str	r5, [sp, #60]
 5075 0830 5546     		mov	r5, r10
 5076 0832 9A46     		mov	r10, r3
 5077              	.LVL598:
 323:Core/Src/printf.c ****   }
 5078              		.loc 1 323 20 view .LVU1269
 5079 0834 149C     		ldr	r4, [sp, #80]
 5080              	.LVL599:
 5081              	.L434:
 326:Core/Src/printf.c **** }
 5082              		.loc 1 326 3 is_stmt 1 view .LVU1270
 326:Core/Src/printf.c **** }
 5083              		.loc 1 326 10 is_stmt 0 view .LVU1271
 5084 0836 0C9B     		ldr	r3, [sp, #48]
 5085 0838 0693     		str	r3, [sp, #24]
 5086 083a 4346     		mov	r3, r8
 5087 083c 0593     		str	r3, [sp, #20]
 5088 083e 5346     		mov	r3, r10
 5089 0840 0493     		str	r3, [sp, #16]
 5090 0842 0A23     		movs	r3, #10
 5091 0844 0393     		str	r3, [sp, #12]
 5092 0846 0A9B     		ldr	r3, [sp, #40]
 5093              	.LVL600:
 5094              	.L610:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 127


 326:Core/Src/printf.c **** }
 5095              		.loc 1 326 10 view .LVU1272
 5096              	.LBE165:
 5097              	.LBE167:
 5098              	.LBE160:
 5099              	.LBB169:
 5100              	.LBB170:
 5101 0848 0293     		str	r3, [sp, #8]
 5102 084a 4B46     		mov	r3, r9
 5103 084c 0193     		str	r3, [sp, #4]
 5104 084e 18AB     		add	r3, sp, #96
 5105 0850 2200     		movs	r2, r4
 5106 0852 0093     		str	r3, [sp]
 5107 0854 5946     		mov	r1, fp
 5108 0856 3B00     		movs	r3, r7
 5109 0858 3000     		movs	r0, r6
 5110 085a FFF7FEFF 		bl	_ntoa_format
 5111              	.LVL601:
 326:Core/Src/printf.c **** }
 5112              		.loc 1 326 10 view .LVU1273
 5113 085e 0400     		movs	r4, r0
 326:Core/Src/printf.c **** }
 5114              		.loc 1 326 10 view .LVU1274
 5115              	.LBE170:
 5116              	.LBE169:
 5117 0860 FFF7F4FB 		bl	.L378	@ far jump
 5118              	.LVL602:
 5119              	.L631:
 326:Core/Src/printf.c **** }
 5120              		.loc 1 326 10 view .LVU1275
 5121 0864 0B9B     		ldr	r3, [sp, #44]
 5122 0866 1B78     		ldrb	r3, [r3]
 5123              	.LBB178:
 5124 0868 1A00     		movs	r2, r3
 5125 086a 6AE6     		b	.L444
 5126              	.LVL603:
 5127              	.L628:
 326:Core/Src/printf.c **** }
 5128              		.loc 1 326 10 view .LVU1276
 5129              	.LBE178:
 705:Core/Src/printf.c ****         }
 5130              		.loc 1 705 17 view .LVU1277
 5131 086c 1023     		movs	r3, #16
 5132 086e 9A43     		bics	r2, r3
 5133 0870 0C92     		str	r2, [sp, #48]
 5134 0872 43E6     		b	.L425
 5135              	.LVL604:
 5136              	.L431:
 5137              	.LBB179:
 5138              	.LBB168:
 5139              	.LBB166:
 314:Core/Src/printf.c ****   }
 5140              		.loc 1 314 5 is_stmt 1 view .LVU1278
 318:Core/Src/printf.c ****     do {
 5141              		.loc 1 318 3 view .LVU1279
 310:Core/Src/printf.c **** 
 5142              		.loc 1 310 10 is_stmt 0 view .LVU1280
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 128


 5143 0874 0023     		movs	r3, #0
 5144              	.LVL605:
 310:Core/Src/printf.c **** 
 5145              		.loc 1 310 10 view .LVU1281
 5146 0876 9946     		mov	r9, r3
 318:Core/Src/printf.c ****     do {
 5147              		.loc 1 318 6 view .LVU1282
 5148 0878 0028     		cmp	r0, #0
 5149 087a DCD1     		bne	.L434
 5150 087c 0022     		movs	r2, #0
 318:Core/Src/printf.c ****     do {
 5151              		.loc 1 318 6 view .LVU1283
 5152 087e 0023     		movs	r3, #0
 5153 0880 0E92     		str	r2, [sp, #56]
 5154 0882 0F93     		str	r3, [sp, #60]
 5155 0884 A6E7     		b	.L433
 5156              	.LVL606:
 5157              	.L483:
 318:Core/Src/printf.c ****     do {
 5158              		.loc 1 318 6 view .LVU1284
 5159              	.LBE166:
 5160              	.LBE168:
 5161              	.LBE179:
 5162              	.LBE240:
 5163              	.LBB241:
 786:Core/Src/printf.c ****         // post padding
 5164              		.loc 1 786 9 is_stmt 1 view .LVU1285
 786:Core/Src/printf.c ****         // post padding
 5165              		.loc 1 786 9 is_stmt 0 view .LVU1286
 5166 0886 0B9B     		ldr	r3, [sp, #44]
 5167              	.LVL607:
 786:Core/Src/printf.c ****         // post padding
 5168              		.loc 1 786 9 view .LVU1287
 5169 0888 2200     		movs	r2, r4
 5170 088a 1878     		ldrb	r0, [r3]
 5171 088c 5946     		mov	r1, fp
 5172              	.LVL608:
 786:Core/Src/printf.c ****         // post padding
 5173              		.loc 1 786 9 view .LVU1288
 5174 088e 3B00     		movs	r3, r7
 5175 0890 B047     		blx	r6
 5176              	.LVL609:
 788:Core/Src/printf.c ****           while (l++ < width) {
 5177              		.loc 1 788 9 is_stmt 1 view .LVU1289
 5178              	.L517:
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 5179              		.loc 1 781 22 is_stmt 0 view .LVU1290
 5180 0892 4C46     		mov	r4, r9
 5181 0894 5AE5     		b	.L608
 5182              	.LVL610:
 5183              	.L419:
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 5184              		.loc 1 781 22 view .LVU1291
 5185              	.LBE241:
 5186              	.LBB242:
 714:Core/Src/printf.c ****         }
 5187              		.loc 1 714 11 is_stmt 1 view .LVU1292
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 129


 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 5188              		.loc 1 718 9 view .LVU1293
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 5189              		.loc 1 718 19 is_stmt 0 view .LVU1294
 5190 0896 0A98     		ldr	r0, [sp, #40]
 5191 0898 8023     		movs	r3, #128
 5192 089a 0200     		movs	r2, r0
 5193 089c DB00     		lsls	r3, r3, #3
 5194 089e 1A40     		ands	r2, r3
 5195 08a0 1100     		movs	r1, r2
 5196              	.LVL611:
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 5197              		.loc 1 718 12 view .LVU1295
 5198 08a2 1842     		tst	r0, r3
 5199 08a4 00D1     		bne	.LCB5679
 5200 08a6 5FE1     		b	.L636	@long jump
 5201              	.LCB5679:
 5202 08a8 0200     		movs	r2, r0
 719:Core/Src/printf.c ****         }
 5203              		.loc 1 719 11 is_stmt 1 view .LVU1296
 719:Core/Src/printf.c ****         }
 5204              		.loc 1 719 17 is_stmt 0 view .LVU1297
 5205 08aa 0D23     		movs	r3, #13
 5206 08ac 9A43     		bics	r2, r3
 5207 08ae 0B3B     		subs	r3, r3, #11
 5208 08b0 1000     		movs	r0, r2
 5209              	.LVL612:
 723:Core/Src/printf.c ****           // signed
 5210              		.loc 1 723 9 is_stmt 1 view .LVU1298
 719:Core/Src/printf.c ****         }
 5211              		.loc 1 719 17 is_stmt 0 view .LVU1299
 5212 08b2 0A93     		str	r3, [sp, #40]
 5213 08b4 ABE6     		b	.L429
 5214              	.LVL613:
 5215              	.L627:
 708:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 5216              		.loc 1 708 9 is_stmt 1 view .LVU1300
 709:Core/Src/printf.c ****         }
 5217              		.loc 1 709 11 view .LVU1301
 713:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 5218              		.loc 1 713 9 view .LVU1302
 714:Core/Src/printf.c ****         }
 5219              		.loc 1 714 11 view .LVU1303
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 5220              		.loc 1 718 9 view .LVU1304
 5221 08b6 0A98     		ldr	r0, [sp, #40]
 5222 08b8 8023     		movs	r3, #128
 5223 08ba 0200     		movs	r2, r0
 5224 08bc DB00     		lsls	r3, r3, #3
 5225 08be 1A40     		ands	r2, r3
 5226 08c0 1100     		movs	r1, r2
 5227              	.LVL614:
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 5228              		.loc 1 718 12 is_stmt 0 view .LVU1305
 5229 08c2 0200     		movs	r2, r0
 5230 08c4 1842     		tst	r0, r3
 5231 08c6 00D1     		bne	.LCB5715
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 130


 5232 08c8 66E1     		b	.L428	@long jump
 5233              	.LCB5715:
 719:Core/Src/printf.c ****         }
 5234              		.loc 1 719 11 is_stmt 1 view .LVU1306
 5235 08ca 0D23     		movs	r3, #13
 719:Core/Src/printf.c ****         }
 5236              		.loc 1 719 17 is_stmt 0 view .LVU1307
 5237 08cc 2020     		movs	r0, #32
 5238 08ce 9A43     		bics	r2, r3
 5239 08d0 0333     		adds	r3, r3, #3
 5240 08d2 1043     		orrs	r0, r2
 5241              	.LVL615:
 723:Core/Src/printf.c ****           // signed
 5242              		.loc 1 723 9 is_stmt 1 view .LVU1308
 719:Core/Src/printf.c ****         }
 5243              		.loc 1 719 17 is_stmt 0 view .LVU1309
 5244 08d4 0A93     		str	r3, [sp, #40]
 5245 08d6 9AE6     		b	.L429
 5246              	.LVL616:
 5247              	.L470:
 719:Core/Src/printf.c ****         }
 5248              		.loc 1 719 17 view .LVU1310
 5249 08d8 6123     		movs	r3, #97
 5250 08da 8206     		lsls	r2, r0, #26
 5251 08dc 00D5     		bpl	.L473
 5252              	.LVL617:
 719:Core/Src/printf.c ****         }
 5253              		.loc 1 719 17 view .LVU1311
 5254 08de 4123     		movs	r3, #65
 5255              	.L473:
 5256 08e0 DBB2     		uxtb	r3, r3
 5257              	.LBB180:
 5258              	.LBB148:
 5259              	.LBB146:
 5260              	.LBB142:
 296:Core/Src/printf.c ****       value /= base;
 5261              		.loc 1 296 18 view .LVU1312
 5262 08e2 0A3B     		subs	r3, r3, #10
 5263 08e4 0B93     		str	r3, [sp, #44]
 5264 08e6 4346     		mov	r3, r8
 5265 08e8 10A9     		add	r1, sp, #64
 5266 08ea 1F22     		movs	r2, #31
 5267 08ec 8C46     		mov	ip, r1
 5268 08ee 1293     		str	r3, [sp, #72]
 5269 08f0 5346     		mov	r3, r10
 5270 08f2 6244     		add	r2, r2, ip
 5271 08f4 AA46     		mov	r10, r5
 5272 08f6 1494     		str	r4, [sp, #80]
 5273 08f8 1597     		str	r7, [sp, #84]
 5274 08fa 4C46     		mov	r4, r9
 5275 08fc 8046     		mov	r8, r0
 5276              	.LVL618:
 296:Core/Src/printf.c ****       value /= base;
 5277              		.loc 1 296 18 view .LVU1313
 5278 08fe B146     		mov	r9, r6
 5279 0900 1700     		movs	r7, r2
 5280              	.LVL619:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 131


 296:Core/Src/printf.c ****       value /= base;
 5281              		.loc 1 296 18 view .LVU1314
 5282 0902 0A9E     		ldr	r6, [sp, #40]
 5283              	.LVL620:
 296:Core/Src/printf.c ****       value /= base;
 5284              		.loc 1 296 18 view .LVU1315
 5285 0904 089D     		ldr	r5, [sp, #32]
 5286              	.LVL621:
 296:Core/Src/printf.c ****       value /= base;
 5287              		.loc 1 296 18 view .LVU1316
 5288 0906 1393     		str	r3, [sp, #76]
 5289 0908 08E0     		b	.L476
 5290              	.LVL622:
 5291              	.L637:
 296:Core/Src/printf.c ****       value /= base;
 5292              		.loc 1 296 18 view .LVU1317
 5293 090a 3033     		adds	r3, r3, #48
 5294              	.LVL623:
 296:Core/Src/printf.c ****       value /= base;
 5295              		.loc 1 296 18 view .LVU1318
 5296 090c DBB2     		uxtb	r3, r3
 5297              	.LVL624:
 5298              	.L475:
 296:Core/Src/printf.c ****       value /= base;
 5299              		.loc 1 296 14 view .LVU1319
 5300 090e 0134     		adds	r4, r4, #1
 5301              	.LVL625:
 296:Core/Src/printf.c ****       value /= base;
 5302              		.loc 1 296 18 view .LVU1320
 5303 0910 3B55     		strb	r3, [r7, r4]
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5304              		.loc 1 297 7 is_stmt 1 view .LVU1321
 5305              	.LVL626:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5306              		.loc 1 297 7 is_stmt 0 view .LVU1322
 5307              	.LBE142:
 298:Core/Src/printf.c ****   }
 5308              		.loc 1 298 20 is_stmt 1 view .LVU1323
 5309 0912 B542     		cmp	r5, r6
 5310 0914 0ED3     		bcc	.L599
 5311 0916 202C     		cmp	r4, #32
 5312 0918 0CD0     		beq	.L599
 5313              	.LBB143:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5314              		.loc 1 297 13 is_stmt 0 view .LVU1324
 5315 091a 0500     		movs	r5, r0
 5316              	.LVL627:
 5317              	.L476:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5318              		.loc 1 297 13 view .LVU1325
 5319              	.LBE143:
 294:Core/Src/printf.c ****       const char digit = (char)(value % base);
 5320              		.loc 1 294 5 is_stmt 1 view .LVU1326
 5321              	.LBB144:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 5322              		.loc 1 295 7 view .LVU1327
 5323 091c 3100     		movs	r1, r6
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 132


 5324 091e 2800     		movs	r0, r5
 5325 0920 FFF7FEFF 		bl	__aeabi_uidivmod
 5326              	.LVL628:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 5327              		.loc 1 295 18 is_stmt 0 view .LVU1328
 5328 0924 CBB2     		uxtb	r3, r1
 5329              	.LVL629:
 296:Core/Src/printf.c ****       value /= base;
 5330              		.loc 1 296 7 is_stmt 1 view .LVU1329
 296:Core/Src/printf.c ****       value /= base;
 5331              		.loc 1 296 18 is_stmt 0 view .LVU1330
 5332 0926 0929     		cmp	r1, #9
 5333 0928 EFD9     		bls	.L637
 5334 092a 0B9A     		ldr	r2, [sp, #44]
 5335 092c 9446     		mov	ip, r2
 5336 092e 6344     		add	r3, r3, ip
 5337              	.LVL630:
 296:Core/Src/printf.c ****       value /= base;
 5338              		.loc 1 296 18 view .LVU1331
 5339 0930 DBB2     		uxtb	r3, r3
 5340 0932 ECE7     		b	.L475
 5341              	.LVL631:
 5342              	.L599:
 296:Core/Src/printf.c ****       value /= base;
 5343              		.loc 1 296 18 view .LVU1332
 5344 0934 129B     		ldr	r3, [sp, #72]
 5345 0936 4046     		mov	r0, r8
 5346              	.LVL632:
 296:Core/Src/printf.c ****       value /= base;
 5347              		.loc 1 296 18 view .LVU1333
 5348 0938 9846     		mov	r8, r3
 5349 093a 139B     		ldr	r3, [sp, #76]
 5350 093c 4E46     		mov	r6, r9
 5351 093e 5546     		mov	r5, r10
 5352 0940 A146     		mov	r9, r4
 5353              	.LVL633:
 296:Core/Src/printf.c ****       value /= base;
 5354              		.loc 1 296 18 view .LVU1334
 5355 0942 9A46     		mov	r10, r3
 5356              	.LVL634:
 296:Core/Src/printf.c ****       value /= base;
 5357              		.loc 1 296 18 view .LVU1335
 5358 0944 149C     		ldr	r4, [sp, #80]
 5359              	.LVL635:
 296:Core/Src/printf.c ****       value /= base;
 5360              		.loc 1 296 18 view .LVU1336
 5361 0946 159F     		ldr	r7, [sp, #84]
 5362 0948 84E6     		b	.L471
 5363              	.LVL636:
 5364              	.L633:
 296:Core/Src/printf.c ****       value /= base;
 5365              		.loc 1 296 18 view .LVU1337
 5366 094a 6F28     		cmp	r0, #111
 5367 094c 00D0     		beq	.LCB5895
 5368 094e 37E1     		b	.L638	@long jump
 5369              	.LCB5895:
 5370              	.LVL637:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 133


 296:Core/Src/printf.c ****       value /= base;
 5371              		.loc 1 296 18 view .LVU1338
 5372              	.LBE144:
 5373              	.LBE146:
 5374              	.LBE148:
 5375              	.LBE180:
 714:Core/Src/printf.c ****         }
 5376              		.loc 1 714 11 is_stmt 1 view .LVU1339
 714:Core/Src/printf.c ****         }
 5377              		.loc 1 714 17 is_stmt 0 view .LVU1340
 5378 0950 0A99     		ldr	r1, [sp, #40]
 5379 0952 0C23     		movs	r3, #12
 5380 0954 0A00     		movs	r2, r1
 5381 0956 9A43     		bics	r2, r3
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 5382              		.loc 1 718 19 view .LVU1341
 5383 0958 8023     		movs	r3, #128
 714:Core/Src/printf.c ****         }
 5384              		.loc 1 714 17 view .LVU1342
 5385 095a 1000     		movs	r0, r2
 5386              	.LVL638:
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 5387              		.loc 1 718 9 is_stmt 1 view .LVU1343
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 5388              		.loc 1 718 19 is_stmt 0 view .LVU1344
 5389 095c 0A00     		movs	r2, r1
 5390 095e DB00     		lsls	r3, r3, #3
 5391 0960 1A40     		ands	r2, r3
 5392 0962 1100     		movs	r1, r2
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 5393              		.loc 1 718 12 view .LVU1345
 5394 0964 0A9A     		ldr	r2, [sp, #40]
 5395 0966 1A42     		tst	r2, r3
 5396 0968 00D0     		beq	.LCB5916
 5397 096a 21E1     		b	.L540	@long jump
 5398              	.LCB5916:
 5399 096c 0823     		movs	r3, #8
 5400 096e 0A93     		str	r3, [sp, #40]
 5401 0970 4DE6     		b	.L429
 5402              	.LVL639:
 5403              	.L634:
 744:Core/Src/printf.c **** #endif
 5404              		.loc 1 744 13 is_stmt 1 view .LVU1346
 744:Core/Src/printf.c **** #endif
 5405              		.loc 1 744 19 is_stmt 0 view .LVU1347
 5406 0972 0B9A     		ldr	r2, [sp, #44]
 5407 0974 FA3B     		subs	r3, r3, #250
 5408 0976 FF3B     		subs	r3, r3, #255
 5409 0978 0732     		adds	r2, r2, #7
 5410 097a 9A43     		bics	r2, r3
 5411 097c 0133     		adds	r3, r3, #1
 5412 097e 9C46     		mov	ip, r3
 5413 0980 9444     		add	ip, ip, r2
 5414 0982 6346     		mov	r3, ip
 5415 0984 0B93     		str	r3, [sp, #44]
 5416              	.LVL640:
 5417              	.LBB181:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 134


 5418              	.LBI169:
 307:Core/Src/printf.c **** {
 5419              		.loc 1 307 15 is_stmt 1 view .LVU1348
 5420              	.LBB175:
 309:Core/Src/printf.c ****   size_t len = 0U;
 5421              		.loc 1 309 3 view .LVU1349
 310:Core/Src/printf.c **** 
 5422              		.loc 1 310 3 view .LVU1350
 313:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 5423              		.loc 1 313 3 view .LVU1351
 5424              	.LBE175:
 5425              	.LBE181:
 744:Core/Src/printf.c **** #endif
 5426              		.loc 1 744 19 is_stmt 0 view .LVU1352
 5427 0986 1368     		ldr	r3, [r2]
 5428              	.LVL641:
 744:Core/Src/printf.c **** #endif
 5429              		.loc 1 744 19 view .LVU1353
 5430 0988 5268     		ldr	r2, [r2, #4]
 5431 098a 0893     		str	r3, [sp, #32]
 5432              	.LBB182:
 5433              	.LBB176:
 313:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 5434              		.loc 1 313 6 view .LVU1354
 5435 098c 1343     		orrs	r3, r2
 5436              	.LBE176:
 5437              	.LBE182:
 744:Core/Src/printf.c **** #endif
 5438              		.loc 1 744 19 view .LVU1355
 5439 098e 1292     		str	r2, [sp, #72]
 5440              	.LBB183:
 5441              	.LBB177:
 313:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 5442              		.loc 1 313 6 view .LVU1356
 5443 0990 1A1E     		subs	r2, r3, #0
 5444 0992 05D1     		bne	.L451
 314:Core/Src/printf.c ****   }
 5445              		.loc 1 314 5 is_stmt 1 view .LVU1357
 310:Core/Src/printf.c **** 
 5446              		.loc 1 310 10 is_stmt 0 view .LVU1358
 5447 0994 0023     		movs	r3, #0
 314:Core/Src/printf.c ****   }
 5448              		.loc 1 314 11 view .LVU1359
 5449 0996 1032     		adds	r2, r2, #16
 310:Core/Src/printf.c **** 
 5450              		.loc 1 310 10 view .LVU1360
 5451 0998 9946     		mov	r9, r3
 314:Core/Src/printf.c ****   }
 5452              		.loc 1 314 11 view .LVU1361
 5453 099a 9043     		bics	r0, r2
 5454              	.LVL642:
 318:Core/Src/printf.c ****     do {
 5455              		.loc 1 318 3 is_stmt 1 view .LVU1362
 318:Core/Src/printf.c ****     do {
 5456              		.loc 1 318 6 is_stmt 0 view .LVU1363
 5457 099c 0029     		cmp	r1, #0
 5458 099e 41D1     		bne	.L452
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 135


 5459              	.L451:
 5460              	.LVL643:
 318:Core/Src/printf.c ****     do {
 5461              		.loc 1 318 6 view .LVU1364
 5462 09a0 6122     		movs	r2, #97
 5463 09a2 8106     		lsls	r1, r0, #26
 5464 09a4 00D5     		bpl	.L454
 5465 09a6 4122     		movs	r2, #65
 5466              	.L454:
 5467 09a8 D2B2     		uxtb	r2, r2
 5468              	.LBB171:
 321:Core/Src/printf.c ****       value /= base;
 5469              		.loc 1 321 18 view .LVU1365
 5470 09aa 0A3A     		subs	r2, r2, #10
 5471 09ac 0C92     		str	r2, [sp, #48]
 5472 09ae 4246     		mov	r2, r8
 321:Core/Src/printf.c ****       value /= base;
 5473              		.loc 1 321 54 view .LVU1366
 5474 09b0 0023     		movs	r3, #0
 5475 09b2 10A9     		add	r1, sp, #64
 5476 09b4 1392     		str	r2, [sp, #76]
 5477 09b6 5246     		mov	r2, r10
 5478 09b8 8C46     		mov	ip, r1
 5479              	.LVL644:
 321:Core/Src/printf.c ****       value /= base;
 5480              		.loc 1 321 54 view .LVU1367
 5481 09ba 9946     		mov	r9, r3
 5482 09bc 1492     		str	r2, [sp, #80]
 5483 09be 1F33     		adds	r3, r3, #31
 5484 09c0 0A9A     		ldr	r2, [sp, #40]
 5485 09c2 6344     		add	r3, r3, ip
 5486 09c4 AA46     		mov	r10, r5
 5487 09c6 1594     		str	r4, [sp, #84]
 5488 09c8 1796     		str	r6, [sp, #92]
 5489 09ca 4C46     		mov	r4, r9
 5490 09cc 9046     		mov	r8, r2
 5491              	.LVL645:
 321:Core/Src/printf.c ****       value /= base;
 5492              		.loc 1 321 54 view .LVU1368
 5493 09ce B946     		mov	r9, r7
 5494 09d0 089E     		ldr	r6, [sp, #32]
 5495              	.LVL646:
 321:Core/Src/printf.c ****       value /= base;
 5496              		.loc 1 321 54 view .LVU1369
 5497 09d2 1F00     		movs	r7, r3
 5498              	.LVL647:
 321:Core/Src/printf.c ****       value /= base;
 5499              		.loc 1 321 54 view .LVU1370
 5500 09d4 129D     		ldr	r5, [sp, #72]
 5501              	.LVL648:
 321:Core/Src/printf.c ****       value /= base;
 5502              		.loc 1 321 54 view .LVU1371
 5503 09d6 1690     		str	r0, [sp, #88]
 5504 09d8 0AE0     		b	.L458
 5505              	.LVL649:
 5506              	.L640:
 321:Core/Src/printf.c ****       value /= base;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 136


 5507              		.loc 1 321 18 view .LVU1372
 5508 09da 3032     		adds	r2, r2, #48
 5509              	.LVL650:
 321:Core/Src/printf.c ****       value /= base;
 5510              		.loc 1 321 18 view .LVU1373
 5511 09dc D2B2     		uxtb	r2, r2
 5512              	.LVL651:
 5513              	.L456:
 321:Core/Src/printf.c ****       value /= base;
 5514              		.loc 1 321 18 view .LVU1374
 5515              	.LBE171:
 323:Core/Src/printf.c ****   }
 5516              		.loc 1 323 20 view .LVU1375
 5517 09de 0023     		movs	r3, #0
 5518              	.LBB172:
 321:Core/Src/printf.c ****       value /= base;
 5519              		.loc 1 321 14 view .LVU1376
 5520 09e0 0134     		adds	r4, r4, #1
 5521              	.LVL652:
 321:Core/Src/printf.c ****       value /= base;
 5522              		.loc 1 321 18 view .LVU1377
 5523 09e2 3A55     		strb	r2, [r7, r4]
 322:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5524              		.loc 1 322 7 is_stmt 1 view .LVU1378
 5525              	.LVL653:
 322:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5526              		.loc 1 322 7 is_stmt 0 view .LVU1379
 5527              	.LBE172:
 323:Core/Src/printf.c ****   }
 5528              		.loc 1 323 20 is_stmt 1 view .LVU1380
 5529 09e4 AB42     		cmp	r3, r5
 5530 09e6 11D0     		beq	.L639
 5531              	.L543:
 5532 09e8 202C     		cmp	r4, #32
 5533 09ea 11D0     		beq	.L597
 5534              	.LBB173:
 322:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5535              		.loc 1 322 13 is_stmt 0 view .LVU1381
 5536 09ec 0600     		movs	r6, r0
 5537 09ee 0D00     		movs	r5, r1
 5538              	.LVL654:
 5539              	.L458:
 322:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5540              		.loc 1 322 13 view .LVU1382
 5541              	.LBE173:
 319:Core/Src/printf.c ****       const char digit = (char)(value % base);
 5542              		.loc 1 319 5 is_stmt 1 view .LVU1383
 5543              	.LBB174:
 320:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 5544              		.loc 1 320 7 view .LVU1384
 5545 09f0 4246     		mov	r2, r8
 5546 09f2 0023     		movs	r3, #0
 5547 09f4 3000     		movs	r0, r6
 5548 09f6 2900     		movs	r1, r5
 5549 09f8 FFF7FEFF 		bl	__aeabi_uldivmod
 5550              	.LVL655:
 320:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 137


 5551              		.loc 1 320 18 is_stmt 0 view .LVU1385
 5552 09fc D2B2     		uxtb	r2, r2
 5553              	.LVL656:
 321:Core/Src/printf.c ****       value /= base;
 5554              		.loc 1 321 7 is_stmt 1 view .LVU1386
 321:Core/Src/printf.c ****       value /= base;
 5555              		.loc 1 321 18 is_stmt 0 view .LVU1387
 5556 09fe 092A     		cmp	r2, #9
 5557 0a00 EBD9     		bls	.L640
 5558 0a02 0C9B     		ldr	r3, [sp, #48]
 5559 0a04 9C46     		mov	ip, r3
 5560 0a06 6244     		add	r2, r2, ip
 5561              	.LVL657:
 321:Core/Src/printf.c ****       value /= base;
 5562              		.loc 1 321 18 view .LVU1388
 5563 0a08 D2B2     		uxtb	r2, r2
 5564 0a0a E8E7     		b	.L456
 5565              	.LVL658:
 5566              	.L639:
 321:Core/Src/printf.c ****       value /= base;
 5567              		.loc 1 321 18 view .LVU1389
 5568              	.LBE174:
 323:Core/Src/printf.c ****   }
 5569              		.loc 1 323 20 view .LVU1390
 5570 0a0c B045     		cmp	r8, r6
 5571 0a0e EBD9     		bls	.L543
 5572              	.L597:
 5573 0a10 139B     		ldr	r3, [sp, #76]
 5574 0a12 5546     		mov	r5, r10
 5575 0a14 9846     		mov	r8, r3
 5576 0a16 149B     		ldr	r3, [sp, #80]
 5577 0a18 4F46     		mov	r7, r9
 5578 0a1a 9A46     		mov	r10, r3
 5579              	.LVL659:
 323:Core/Src/printf.c ****   }
 5580              		.loc 1 323 20 view .LVU1391
 5581 0a1c A146     		mov	r9, r4
 5582              	.LVL660:
 323:Core/Src/printf.c ****   }
 5583              		.loc 1 323 20 view .LVU1392
 5584 0a1e 1698     		ldr	r0, [sp, #88]
 5585              	.LVL661:
 323:Core/Src/printf.c ****   }
 5586              		.loc 1 323 20 view .LVU1393
 5587 0a20 179E     		ldr	r6, [sp, #92]
 5588 0a22 159C     		ldr	r4, [sp, #84]
 5589              	.LVL662:
 5590              	.L452:
 326:Core/Src/printf.c **** }
 5591              		.loc 1 326 3 is_stmt 1 view .LVU1394
 326:Core/Src/printf.c **** }
 5592              		.loc 1 326 10 is_stmt 0 view .LVU1395
 5593 0a24 4346     		mov	r3, r8
 5594 0a26 0593     		str	r3, [sp, #20]
 5595 0a28 5346     		mov	r3, r10
 5596 0a2a 0493     		str	r3, [sp, #16]
 5597 0a2c 0A9B     		ldr	r3, [sp, #40]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 138


 5598 0a2e 0690     		str	r0, [sp, #24]
 5599 0a30 0393     		str	r3, [sp, #12]
 5600 0a32 0023     		movs	r3, #0
 5601 0a34 08E7     		b	.L610
 5602              	.LVL663:
 5603              	.L446:
 326:Core/Src/printf.c **** }
 5604              		.loc 1 326 10 view .LVU1396
 5605              	.LBE177:
 5606              	.LBE183:
 5607              	.LBB184:
 5608              	.LBB157:
 5609              	.LBB155:
 289:Core/Src/printf.c ****   }
 5610              		.loc 1 289 5 is_stmt 1 view .LVU1397
 293:Core/Src/printf.c ****     do {
 5611              		.loc 1 293 3 view .LVU1398
 293:Core/Src/printf.c ****     do {
 5612              		.loc 1 293 6 is_stmt 0 view .LVU1399
 5613 0a36 0028     		cmp	r0, #0
 5614 0a38 00D0     		beq	.LCB6185
 5615 0a3a B3E5     		b	.L448	@long jump
 5616              	.LCB6185:
 5617 0a3c 87E5     		b	.L447
 5618              	.LVL664:
 5619              	.L630:
 293:Core/Src/printf.c ****     do {
 5620              		.loc 1 293 6 view .LVU1400
 5621              	.LBE155:
 5622              	.LBE157:
 5623              	.LBE184:
 5624              	.LBB185:
 732:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 5625              		.loc 1 732 13 is_stmt 1 view .LVU1401
 732:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 5626              		.loc 1 732 24 is_stmt 0 view .LVU1402
 5627 0a3e 0B9B     		ldr	r3, [sp, #44]
 5628 0a40 1B68     		ldr	r3, [r3]
 733:Core/Src/printf.c ****           }
 5629              		.loc 1 733 13 is_stmt 1 view .LVU1403
 733:Core/Src/printf.c ****           }
 5630              		.loc 1 733 19 is_stmt 0 view .LVU1404
 5631 0a42 DA0F     		lsrs	r2, r3, #31
 5632 0a44 1100     		movs	r1, r2
 5633              	.LVL665:
 5634              	.LBB132:
 5635              	.LBI132:
 282:Core/Src/printf.c **** {
 5636              		.loc 1 282 15 is_stmt 1 view .LVU1405
 5637              	.LBB133:
 284:Core/Src/printf.c ****   size_t len = 0U;
 5638              		.loc 1 284 3 view .LVU1406
 285:Core/Src/printf.c **** 
 5639              		.loc 1 285 3 view .LVU1407
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 5640              		.loc 1 288 3 view .LVU1408
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 139


 5641              		.loc 1 288 6 is_stmt 0 view .LVU1409
 5642 0a46 002B     		cmp	r3, #0
 5643 0a48 00D1     		bne	.LCB6236
 5644 0a4a 94E0     		b	.L439	@long jump
 5645              	.LCB6236:
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 5646              		.loc 1 288 6 view .LVU1410
 5647              	.LBE133:
 5648              	.LBE132:
 733:Core/Src/printf.c ****           }
 5649              		.loc 1 733 56 view .LVU1411
 5650 0a4c DA17     		asrs	r2, r3, #31
 5651 0a4e 9818     		adds	r0, r3, r2
 5652 0a50 5040     		eors	r0, r2
 5653              	.L440:
 5654              	.LVL666:
 733:Core/Src/printf.c ****           }
 5655              		.loc 1 733 56 view .LVU1412
 5656 0a52 10AA     		add	r2, sp, #64
 5657 0a54 9146     		mov	r9, r2
 5658 0a56 4246     		mov	r2, r8
 5659 0a58 1F23     		movs	r3, #31
 5660              	.LVL667:
 733:Core/Src/printf.c ****           }
 5661              		.loc 1 733 56 view .LVU1413
 5662 0a5a 1292     		str	r2, [sp, #72]
 5663 0a5c 5246     		mov	r2, r10
 5664 0a5e 4B44     		add	r3, r3, r9
 5665 0a60 A046     		mov	r8, r4
 5666              	.LVL668:
 733:Core/Src/printf.c ****           }
 5667              		.loc 1 733 56 view .LVU1414
 5668 0a62 AA46     		mov	r10, r5
 5669 0a64 1497     		str	r7, [sp, #80]
 5670 0a66 0400     		movs	r4, r0
 5671 0a68 B146     		mov	r9, r6
 5672 0a6a 6546     		mov	r5, ip
 5673              	.LVL669:
 733:Core/Src/printf.c ****           }
 5674              		.loc 1 733 56 view .LVU1415
 5675 0a6c 1F00     		movs	r7, r3
 5676              	.LVL670:
 733:Core/Src/printf.c ****           }
 5677              		.loc 1 733 56 view .LVU1416
 5678 0a6e 0B91     		str	r1, [sp, #44]
 5679              	.LVL671:
 733:Core/Src/printf.c ****           }
 5680              		.loc 1 733 56 view .LVU1417
 5681 0a70 1392     		str	r2, [sp, #76]
 5682 0a72 01E0     		b	.L442
 5683              	.LVL672:
 5684              	.L641:
 5685              	.LBB137:
 5686              	.LBB135:
 298:Core/Src/printf.c ****   }
 5687              		.loc 1 298 20 view .LVU1418
 5688 0a74 202D     		cmp	r5, #32
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 140


 5689 0a76 0FD0     		beq	.L595
 5690              	.LVL673:
 5691              	.L442:
 294:Core/Src/printf.c ****       const char digit = (char)(value % base);
 5692              		.loc 1 294 5 is_stmt 1 view .LVU1419
 5693              	.LBB134:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 5694              		.loc 1 295 7 view .LVU1420
 296:Core/Src/printf.c ****       value /= base;
 5695              		.loc 1 296 7 view .LVU1421
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 5696              		.loc 1 295 39 is_stmt 0 view .LVU1422
 5697 0a78 2000     		movs	r0, r4
 5698 0a7a 0A21     		movs	r1, #10
 5699 0a7c FFF7FEFF 		bl	__aeabi_uidivmod
 5700              	.LVL674:
 296:Core/Src/printf.c ****       value /= base;
 5701              		.loc 1 296 14 view .LVU1423
 5702 0a80 0135     		adds	r5, r5, #1
 5703              	.LVL675:
 296:Core/Src/printf.c ****       value /= base;
 5704              		.loc 1 296 18 view .LVU1424
 5705 0a82 7E19     		adds	r6, r7, r5
 5706 0a84 3031     		adds	r1, r1, #48
 5707 0a86 3170     		strb	r1, [r6]
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5708              		.loc 1 297 7 is_stmt 1 view .LVU1425
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5709              		.loc 1 297 13 is_stmt 0 view .LVU1426
 5710 0a88 2000     		movs	r0, r4
 5711 0a8a 0A21     		movs	r1, #10
 5712 0a8c FFF7FEFF 		bl	__aeabi_uidiv
 5713              	.LVL676:
 5714 0a90 2600     		movs	r6, r4
 5715 0a92 0400     		movs	r4, r0
 5716              	.LVL677:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5717              		.loc 1 297 13 view .LVU1427
 5718              	.LBE134:
 298:Core/Src/printf.c ****   }
 5719              		.loc 1 298 20 is_stmt 1 view .LVU1428
 5720 0a94 092E     		cmp	r6, #9
 5721 0a96 EDD8     		bhi	.L641
 5722              	.L595:
 5723 0a98 129B     		ldr	r3, [sp, #72]
 5724 0a9a 4446     		mov	r4, r8
 5725 0a9c 9846     		mov	r8, r3
 5726 0a9e 0B9B     		ldr	r3, [sp, #44]
 5727 0aa0 AC46     		mov	ip, r5
 5728 0aa2 1900     		movs	r1, r3
 5729 0aa4 139B     		ldr	r3, [sp, #76]
 5730 0aa6 5546     		mov	r5, r10
 5731              	.LVL678:
 298:Core/Src/printf.c ****   }
 5732              		.loc 1 298 20 is_stmt 0 view .LVU1429
 5733 0aa8 4E46     		mov	r6, r9
 5734              	.LVL679:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 141


 298:Core/Src/printf.c ****   }
 5735              		.loc 1 298 20 view .LVU1430
 5736 0aaa 9A46     		mov	r10, r3
 5737              	.LVL680:
 298:Core/Src/printf.c ****   }
 5738              		.loc 1 298 20 view .LVU1431
 5739 0aac 149F     		ldr	r7, [sp, #80]
 5740              	.LVL681:
 5741              	.L441:
 301:Core/Src/printf.c **** }
 5742              		.loc 1 301 3 is_stmt 1 view .LVU1432
 301:Core/Src/printf.c **** }
 5743              		.loc 1 301 10 is_stmt 0 view .LVU1433
 5744 0aae 0C9B     		ldr	r3, [sp, #48]
 5745 0ab0 0291     		str	r1, [sp, #8]
 5746 0ab2 0693     		str	r3, [sp, #24]
 5747 0ab4 4346     		mov	r3, r8
 5748 0ab6 0593     		str	r3, [sp, #20]
 5749 0ab8 5346     		mov	r3, r10
 5750 0aba 0493     		str	r3, [sp, #16]
 5751 0abc 0A23     		movs	r3, #10
 5752 0abe 0393     		str	r3, [sp, #12]
 5753 0ac0 6346     		mov	r3, ip
 5754 0ac2 7AE5     		b	.L609
 5755              	.LVL682:
 5756              	.L635:
 301:Core/Src/printf.c **** }
 5757              		.loc 1 301 10 view .LVU1434
 5758              	.LBE135:
 5759              	.LBE137:
 5760              	.LBE185:
 748:Core/Src/printf.c ****           }
 5761              		.loc 1 748 13 is_stmt 1 view .LVU1435
 748:Core/Src/printf.c ****           }
 5762              		.loc 1 748 19 is_stmt 0 view .LVU1436
 5763 0ac4 0B9B     		ldr	r3, [sp, #44]
 5764 0ac6 1B68     		ldr	r3, [r3]
 5765 0ac8 0893     		str	r3, [sp, #32]
 5766              	.LVL683:
 5767              	.LBB186:
 5768              	.LBI186:
 282:Core/Src/printf.c **** {
 5769              		.loc 1 282 15 is_stmt 1 view .LVU1437
 5770              	.LBB187:
 284:Core/Src/printf.c ****   size_t len = 0U;
 5771              		.loc 1 284 3 view .LVU1438
 285:Core/Src/printf.c **** 
 5772              		.loc 1 285 3 view .LVU1439
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 5773              		.loc 1 288 3 view .LVU1440
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 5774              		.loc 1 288 6 is_stmt 0 view .LVU1441
 5775 0aca 002B     		cmp	r3, #0
 5776 0acc 03D1     		bne	.L460
 289:Core/Src/printf.c ****   }
 5777              		.loc 1 289 5 is_stmt 1 view .LVU1442
 289:Core/Src/printf.c ****   }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 142


 5778              		.loc 1 289 11 is_stmt 0 view .LVU1443
 5779 0ace 1033     		adds	r3, r3, #16
 5780 0ad0 9843     		bics	r0, r3
 5781              	.LVL684:
 293:Core/Src/printf.c ****     do {
 5782              		.loc 1 293 3 is_stmt 1 view .LVU1444
 293:Core/Src/printf.c ****     do {
 5783              		.loc 1 293 6 is_stmt 0 view .LVU1445
 5784 0ad2 0029     		cmp	r1, #0
 5785 0ad4 37D1     		bne	.L461
 5786              	.L460:
 5787              	.LVL685:
 293:Core/Src/printf.c ****     do {
 5788              		.loc 1 293 6 view .LVU1446
 5789 0ad6 6123     		movs	r3, #97
 5790 0ad8 8206     		lsls	r2, r0, #26
 5791 0ada 00D5     		bpl	.L463
 5792 0adc 4123     		movs	r3, #65
 5793              	.L463:
 5794 0ade DBB2     		uxtb	r3, r3
 5795              	.LBB188:
 296:Core/Src/printf.c ****       value /= base;
 5796              		.loc 1 296 18 view .LVU1447
 5797 0ae0 0A3B     		subs	r3, r3, #10
 5798 0ae2 0B93     		str	r3, [sp, #44]
 5799              	.LVL686:
 296:Core/Src/printf.c ****       value /= base;
 5800              		.loc 1 296 18 view .LVU1448
 5801 0ae4 4346     		mov	r3, r8
 5802 0ae6 10A9     		add	r1, sp, #64
 5803 0ae8 8946     		mov	r9, r1
 5804 0aea 1F22     		movs	r2, #31
 5805 0aec 1293     		str	r3, [sp, #72]
 5806 0aee 5346     		mov	r3, r10
 5807 0af0 4A44     		add	r2, r2, r9
 5808 0af2 AA46     		mov	r10, r5
 5809 0af4 B146     		mov	r9, r6
 5810 0af6 1494     		str	r4, [sp, #80]
 5811 0af8 1597     		str	r7, [sp, #84]
 5812 0afa 6446     		mov	r4, ip
 5813 0afc 8046     		mov	r8, r0
 5814              	.LVL687:
 296:Core/Src/printf.c ****       value /= base;
 5815              		.loc 1 296 18 view .LVU1449
 5816 0afe 1700     		movs	r7, r2
 5817              	.LVL688:
 296:Core/Src/printf.c ****       value /= base;
 5818              		.loc 1 296 18 view .LVU1450
 5819 0b00 089D     		ldr	r5, [sp, #32]
 5820              	.LVL689:
 296:Core/Src/printf.c ****       value /= base;
 5821              		.loc 1 296 18 view .LVU1451
 5822 0b02 0A9E     		ldr	r6, [sp, #40]
 5823              	.LVL690:
 296:Core/Src/printf.c ****       value /= base;
 5824              		.loc 1 296 18 view .LVU1452
 5825 0b04 1393     		str	r3, [sp, #76]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 143


 5826 0b06 08E0     		b	.L466
 5827              	.LVL691:
 5828              	.L642:
 296:Core/Src/printf.c ****       value /= base;
 5829              		.loc 1 296 18 view .LVU1453
 5830 0b08 3033     		adds	r3, r3, #48
 5831              	.LVL692:
 296:Core/Src/printf.c ****       value /= base;
 5832              		.loc 1 296 18 view .LVU1454
 5833 0b0a DBB2     		uxtb	r3, r3
 5834              	.LVL693:
 5835              	.L465:
 296:Core/Src/printf.c ****       value /= base;
 5836              		.loc 1 296 14 view .LVU1455
 5837 0b0c 0134     		adds	r4, r4, #1
 5838              	.LVL694:
 296:Core/Src/printf.c ****       value /= base;
 5839              		.loc 1 296 18 view .LVU1456
 5840 0b0e 3B55     		strb	r3, [r7, r4]
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5841              		.loc 1 297 7 is_stmt 1 view .LVU1457
 5842              	.LVL695:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5843              		.loc 1 297 7 is_stmt 0 view .LVU1458
 5844              	.LBE188:
 298:Core/Src/printf.c ****   }
 5845              		.loc 1 298 20 is_stmt 1 view .LVU1459
 5846 0b10 B542     		cmp	r5, r6
 5847 0b12 0ED3     		bcc	.L598
 5848 0b14 202C     		cmp	r4, #32
 5849 0b16 0CD0     		beq	.L598
 5850              	.LBB189:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5851              		.loc 1 297 13 is_stmt 0 view .LVU1460
 5852 0b18 0500     		movs	r5, r0
 5853              	.LVL696:
 5854              	.L466:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 5855              		.loc 1 297 13 view .LVU1461
 5856              	.LBE189:
 294:Core/Src/printf.c ****       const char digit = (char)(value % base);
 5857              		.loc 1 294 5 is_stmt 1 view .LVU1462
 5858              	.LBB190:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 5859              		.loc 1 295 7 view .LVU1463
 5860 0b1a 3100     		movs	r1, r6
 5861 0b1c 2800     		movs	r0, r5
 5862 0b1e FFF7FEFF 		bl	__aeabi_uidivmod
 5863              	.LVL697:
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 5864              		.loc 1 295 18 is_stmt 0 view .LVU1464
 5865 0b22 CBB2     		uxtb	r3, r1
 5866              	.LVL698:
 296:Core/Src/printf.c ****       value /= base;
 5867              		.loc 1 296 7 is_stmt 1 view .LVU1465
 296:Core/Src/printf.c ****       value /= base;
 5868              		.loc 1 296 18 is_stmt 0 view .LVU1466
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 144


 5869 0b24 0929     		cmp	r1, #9
 5870 0b26 EFD9     		bls	.L642
 5871 0b28 0B9A     		ldr	r2, [sp, #44]
 5872 0b2a 9446     		mov	ip, r2
 5873 0b2c 6344     		add	r3, r3, ip
 5874              	.LVL699:
 296:Core/Src/printf.c ****       value /= base;
 5875              		.loc 1 296 18 view .LVU1467
 5876 0b2e DBB2     		uxtb	r3, r3
 5877 0b30 ECE7     		b	.L465
 5878              	.LVL700:
 5879              	.L598:
 296:Core/Src/printf.c ****       value /= base;
 5880              		.loc 1 296 18 view .LVU1468
 5881 0b32 129B     		ldr	r3, [sp, #72]
 5882 0b34 4046     		mov	r0, r8
 5883              	.LVL701:
 296:Core/Src/printf.c ****       value /= base;
 5884              		.loc 1 296 18 view .LVU1469
 5885 0b36 9846     		mov	r8, r3
 5886 0b38 139B     		ldr	r3, [sp, #76]
 5887 0b3a 5546     		mov	r5, r10
 5888 0b3c 4E46     		mov	r6, r9
 5889 0b3e 9A46     		mov	r10, r3
 5890              	.LVL702:
 296:Core/Src/printf.c ****       value /= base;
 5891              		.loc 1 296 18 view .LVU1470
 5892 0b40 A446     		mov	ip, r4
 5893 0b42 159F     		ldr	r7, [sp, #84]
 5894 0b44 149C     		ldr	r4, [sp, #80]
 5895              	.LVL703:
 5896              	.L461:
 296:Core/Src/printf.c ****       value /= base;
 5897              		.loc 1 296 18 view .LVU1471
 5898              	.LBE190:
 301:Core/Src/printf.c **** }
 5899              		.loc 1 301 3 is_stmt 1 view .LVU1472
 301:Core/Src/printf.c **** }
 5900              		.loc 1 301 10 is_stmt 0 view .LVU1473
 5901 0b46 4346     		mov	r3, r8
 5902 0b48 0593     		str	r3, [sp, #20]
 5903 0b4a 5346     		mov	r3, r10
 5904 0b4c 0493     		str	r3, [sp, #16]
 5905 0b4e 0A9B     		ldr	r3, [sp, #40]
 5906 0b50 0690     		str	r0, [sp, #24]
 5907 0b52 0393     		str	r3, [sp, #12]
 5908 0b54 0023     		movs	r3, #0
 5909 0b56 0293     		str	r3, [sp, #8]
 5910 0b58 6346     		mov	r3, ip
 5911 0b5a 85E5     		b	.L607
 5912              	.LVL704:
 5913              	.L467:
 301:Core/Src/printf.c **** }
 5914              		.loc 1 301 10 view .LVU1474
 5915              	.LBE187:
 5916              	.LBE186:
 5917              	.LBB191:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 145


 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 5918              		.loc 1 751 174 discriminator 2 view .LVU1475
 5919 0b5c 0306     		lsls	r3, r0, #24
 5920 0b5e 13D5     		bpl	.L469
 5921              	.LVL705:
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 5922              		.loc 1 751 174 discriminator 2 view .LVU1476
 5923 0b60 0B9B     		ldr	r3, [sp, #44]
 5924 0b62 1B88     		ldrh	r3, [r3]
 5925 0b64 0893     		str	r3, [sp, #32]
 5926 0b66 6BE5     		b	.L468
 5927              	.LVL706:
 5928              	.L636:
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 5929              		.loc 1 751 174 discriminator 2 view .LVU1477
 5930 0b68 0200     		movs	r2, r0
 5931              	.LBE191:
 714:Core/Src/printf.c ****         }
 5932              		.loc 1 714 17 view .LVU1478
 5933 0b6a 0C23     		movs	r3, #12
 5934 0b6c 9A43     		bics	r2, r3
 5935 0b6e 0A3B     		subs	r3, r3, #10
 5936 0b70 1000     		movs	r0, r2
 5937              	.LVL707:
 714:Core/Src/printf.c ****         }
 5938              		.loc 1 714 17 view .LVU1479
 5939 0b72 0A93     		str	r3, [sp, #40]
 5940              	.LVL708:
 714:Core/Src/printf.c ****         }
 5941              		.loc 1 714 17 view .LVU1480
 5942 0b74 4BE5     		b	.L429
 5943              	.LVL709:
 5944              	.L439:
 5945              	.LBB192:
 5946              	.LBB138:
 5947              	.LBB136:
 289:Core/Src/printf.c ****   }
 5948              		.loc 1 289 5 is_stmt 1 view .LVU1481
 293:Core/Src/printf.c ****     do {
 5949              		.loc 1 293 3 view .LVU1482
 293:Core/Src/printf.c ****     do {
 5950              		.loc 1 293 6 is_stmt 0 view .LVU1483
 5951 0b76 0028     		cmp	r0, #0
 5952 0b78 99D1     		bne	.L441
 5953 0b7a 6AE7     		b	.L440
 5954              	.LVL710:
 5955              	.L445:
 293:Core/Src/printf.c ****     do {
 5956              		.loc 1 293 6 view .LVU1484
 5957              	.LBE136:
 5958              	.LBE138:
 5959              	.LBE192:
 5960              	.LBB193:
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 5961              		.loc 1 736 129 view .LVU1485
 5962 0b7c 0B9B     		ldr	r3, [sp, #44]
 5963 0b7e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 146


 737:Core/Src/printf.c ****           }
 5964              		.loc 1 737 56 view .LVU1486
 5965 0b80 D917     		asrs	r1, r3, #31
 5966 0b82 5A18     		adds	r2, r3, r1
 5967 0b84 4A40     		eors	r2, r1
 5968 0b86 DCE4     		b	.L444
 5969              	.LVL711:
 5970              	.L469:
 737:Core/Src/printf.c ****           }
 5971              		.loc 1 737 56 view .LVU1487
 5972              	.LBE193:
 5973              	.LBB194:
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 5974              		.loc 1 751 174 view .LVU1488
 5975 0b88 0B9B     		ldr	r3, [sp, #44]
 5976 0b8a 1B68     		ldr	r3, [r3]
 5977 0b8c 0893     		str	r3, [sp, #32]
 5978 0b8e 57E5     		b	.L468
 5979              	.LVL712:
 5980              	.L495:
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 5981              		.loc 1 751 174 view .LVU1489
 5982 0b90 0300     		movs	r3, r0
 5983              	.LVL713:
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 5984              		.loc 1 751 174 view .LVU1490
 5985              	.LBE194:
 5986              	.LBE242:
 5987              	.LBB243:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 5988              		.loc 1 805 19 view .LVU1491
 5989 0b92 0133     		adds	r3, r3, #1
 5990 0b94 0C93     		str	r3, [sp, #48]
 5991              	.LVL714:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 5992              		.loc 1 805 19 view .LVU1492
 5993 0b96 F9E5     		b	.L497
 5994              	.LVL715:
 5995              	.L428:
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 5996              		.loc 1 805 19 view .LVU1493
 5997              	.LBE243:
 5998              	.LBB244:
 709:Core/Src/printf.c ****         }
 5999              		.loc 1 709 17 view .LVU1494
 6000 0b98 2023     		movs	r3, #32
 6001 0b9a 0A9A     		ldr	r2, [sp, #40]
 6002 0b9c 1A43     		orrs	r2, r3
 6003 0b9e 0A92     		str	r2, [sp, #40]
 6004              	.LVL716:
 6005              	.L516:
 714:Core/Src/printf.c ****         }
 6006              		.loc 1 714 17 view .LVU1495
 6007 0ba0 0C23     		movs	r3, #12
 6008 0ba2 0A9A     		ldr	r2, [sp, #40]
 6009 0ba4 0021     		movs	r1, #0
 6010 0ba6 9A43     		bics	r2, r3
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 147


 6011 0ba8 0433     		adds	r3, r3, #4
 6012 0baa 1000     		movs	r0, r2
 6013 0bac 0A93     		str	r3, [sp, #40]
 6014 0bae 2EE5     		b	.L429
 6015              	.LVL717:
 6016              	.L540:
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 6017              		.loc 1 718 12 view .LVU1496
 6018 0bb0 0A9B     		ldr	r3, [sp, #40]
 6019 0bb2 0C93     		str	r3, [sp, #48]
 6020 0bb4 0823     		movs	r3, #8
 6021 0bb6 0A93     		str	r3, [sp, #40]
 6022              	.L515:
 719:Core/Src/printf.c ****         }
 6023              		.loc 1 719 11 is_stmt 1 view .LVU1497
 719:Core/Src/printf.c ****         }
 6024              		.loc 1 719 17 is_stmt 0 view .LVU1498
 6025 0bb8 0D23     		movs	r3, #13
 6026 0bba 0C98     		ldr	r0, [sp, #48]
 6027              	.LVL718:
 719:Core/Src/printf.c ****         }
 6028              		.loc 1 719 17 view .LVU1499
 6029 0bbc 9843     		bics	r0, r3
 6030              	.LVL719:
 723:Core/Src/printf.c ****           // signed
 6031              		.loc 1 723 9 is_stmt 1 view .LVU1500
 6032 0bbe 26E5     		b	.L429
 6033              	.LVL720:
 6034              	.L638:
 704:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 6035              		.loc 1 704 11 view .LVU1501
 705:Core/Src/printf.c ****         }
 6036              		.loc 1 705 11 view .LVU1502
 705:Core/Src/printf.c ****         }
 6037              		.loc 1 705 17 is_stmt 0 view .LVU1503
 6038 0bc0 1023     		movs	r3, #16
 6039 0bc2 0A9A     		ldr	r2, [sp, #40]
 6040 0bc4 9A43     		bics	r2, r3
 6041 0bc6 0C92     		str	r2, [sp, #48]
 6042              	.LVL721:
 708:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 6043              		.loc 1 708 9 is_stmt 1 view .LVU1504
 713:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 6044              		.loc 1 713 9 view .LVU1505
 713:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 6045              		.loc 1 713 12 is_stmt 0 view .LVU1506
 6046 0bc8 6928     		cmp	r0, #105
 6047 0bca 0AD1     		bne	.L643
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 6048              		.loc 1 718 9 is_stmt 1 view .LVU1507
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 6049              		.loc 1 718 19 is_stmt 0 view .LVU1508
 6050 0bcc 0A99     		ldr	r1, [sp, #40]
 6051 0bce 8023     		movs	r3, #128
 6052 0bd0 0A00     		movs	r2, r1
 6053              	.LVL722:
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 148


 6054              		.loc 1 718 19 view .LVU1509
 6055 0bd2 DB00     		lsls	r3, r3, #3
 6056 0bd4 1A40     		ands	r2, r3
 6057 0bd6 1000     		movs	r0, r2
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 6058              		.loc 1 718 12 view .LVU1510
 6059 0bd8 0A00     		movs	r2, r1
 6060 0bda 1942     		tst	r1, r3
 6061 0bdc 00D1     		bne	.LCB6772
 6062 0bde 8DE4     		b	.L425	@long jump
 6063              	.LCB6772:
 6064 0be0 89E4     		b	.L604
 6065              	.LVL723:
 6066              	.L643:
 714:Core/Src/printf.c ****         }
 6067              		.loc 1 714 11 is_stmt 1 view .LVU1511
 714:Core/Src/printf.c ****         }
 6068              		.loc 1 714 17 is_stmt 0 view .LVU1512
 6069 0be2 0A99     		ldr	r1, [sp, #40]
 6070 0be4 1C23     		movs	r3, #28
 6071 0be6 0A00     		movs	r2, r1
 6072 0be8 9A43     		bics	r2, r3
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 6073              		.loc 1 718 19 view .LVU1513
 6074 0bea 8023     		movs	r3, #128
 714:Core/Src/printf.c ****         }
 6075              		.loc 1 714 17 view .LVU1514
 6076 0bec 1000     		movs	r0, r2
 6077              	.LVL724:
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 6078              		.loc 1 718 9 is_stmt 1 view .LVU1515
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 6079              		.loc 1 718 19 is_stmt 0 view .LVU1516
 6080 0bee 0A00     		movs	r2, r1
 6081 0bf0 DB00     		lsls	r3, r3, #3
 6082 0bf2 1A40     		ands	r2, r3
 6083 0bf4 1100     		movs	r1, r2
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 6084              		.loc 1 718 12 view .LVU1517
 6085 0bf6 0A9A     		ldr	r2, [sp, #40]
 6086 0bf8 1A42     		tst	r2, r3
 6087 0bfa 02D1     		bne	.L541
 704:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 6088              		.loc 1 704 16 view .LVU1518
 6089 0bfc 0A23     		movs	r3, #10
 6090 0bfe 0A93     		str	r3, [sp, #40]
 6091 0c00 05E5     		b	.L429
 6092              	.L541:
 6093 0c02 0A23     		movs	r3, #10
 6094 0c04 0A93     		str	r3, [sp, #40]
 6095 0c06 D7E7     		b	.L515
 6096              	.LBE244:
 6097              		.cfi_endproc
 6098              	.LFE1438:
 6100              		.section	.text.printf_,"ax",%progbits
 6101              		.align	1
 6102              		.p2align 2,,3
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 149


 6103              		.global	printf_
 6104              		.syntax unified
 6105              		.code	16
 6106              		.thumb_func
 6108              	printf_:
 6109              	.LVL725:
 6110              	.LFB1439:
 864:Core/Src/printf.c ****   va_list va;
 6111              		.loc 1 864 1 is_stmt 1 view -0
 6112              		.cfi_startproc
 6113              		@ args = 4, pretend = 16, frame = 8
 6114              		@ frame_needed = 0, uses_anonymous_args = 1
 865:Core/Src/printf.c ****   va_start(va, format);
 6115              		.loc 1 865 3 view .LVU1520
 866:Core/Src/printf.c ****   char buffer[1];
 6116              		.loc 1 866 3 view .LVU1521
 864:Core/Src/printf.c ****   va_list va;
 6117              		.loc 1 864 1 is_stmt 0 view .LVU1522
 6118 0000 0FB4     		push	{r0, r1, r2, r3}
 6119              	.LCFI15:
 6120              		.cfi_def_cfa_offset 16
 868:Core/Src/printf.c ****   va_end(va);
 6121              		.loc 1 868 19 view .LVU1523
 6122 0002 0122     		movs	r2, #1
 864:Core/Src/printf.c ****   va_list va;
 6123              		.loc 1 864 1 view .LVU1524
 6124 0004 00B5     		push	{lr}
 6125              	.LCFI16:
 6126              		.cfi_def_cfa_offset 20
 6127              		.cfi_offset 14, -20
 6128 0006 85B0     		sub	sp, sp, #20
 6129              	.LCFI17:
 6130              		.cfi_def_cfa_offset 40
 864:Core/Src/printf.c ****   va_list va;
 6131              		.loc 1 864 1 view .LVU1525
 6132 0008 06A9     		add	r1, sp, #24
 6133 000a 08C9     		ldmia	r1!, {r3}
 868:Core/Src/printf.c ****   va_end(va);
 6134              		.loc 1 868 19 view .LVU1526
 6135 000c 5242     		rsbs	r2, r2, #0
 866:Core/Src/printf.c ****   char buffer[1];
 6136              		.loc 1 866 3 view .LVU1527
 6137 000e 0391     		str	r1, [sp, #12]
 867:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 6138              		.loc 1 867 3 is_stmt 1 view .LVU1528
 868:Core/Src/printf.c ****   va_end(va);
 6139              		.loc 1 868 3 view .LVU1529
 868:Core/Src/printf.c ****   va_end(va);
 6140              		.loc 1 868 19 is_stmt 0 view .LVU1530
 6141 0010 0091     		str	r1, [sp]
 6142 0012 0448     		ldr	r0, .L647
 6143 0014 02A9     		add	r1, sp, #8
 6144 0016 FFF7FEFF 		bl	_vsnprintf
 6145              	.LVL726:
 869:Core/Src/printf.c ****   return ret;
 6146              		.loc 1 869 3 is_stmt 1 view .LVU1531
 870:Core/Src/printf.c **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 150


 6147              		.loc 1 870 3 view .LVU1532
 871:Core/Src/printf.c **** 
 6148              		.loc 1 871 1 is_stmt 0 view .LVU1533
 6149 001a 05B0     		add	sp, sp, #20
 6150              		@ sp needed
 6151 001c 08BC     		pop	{r3}
 6152 001e 04B0     		add	sp, sp, #16
 6153 0020 1847     		bx	r3
 6154              	.L648:
 6155 0022 C046     		.align	2
 6156              	.L647:
 6157 0024 00000000 		.word	_out_char
 6158              		.cfi_endproc
 6159              	.LFE1439:
 6161              		.section	.text.sprintf_,"ax",%progbits
 6162              		.align	1
 6163              		.p2align 2,,3
 6164              		.global	sprintf_
 6165              		.syntax unified
 6166              		.code	16
 6167              		.thumb_func
 6169              	sprintf_:
 6170              	.LVL727:
 6171              	.LFB1440:
 875:Core/Src/printf.c ****   va_list va;
 6172              		.loc 1 875 1 is_stmt 1 view -0
 6173              		.cfi_startproc
 6174              		@ args = 4, pretend = 12, frame = 8
 6175              		@ frame_needed = 0, uses_anonymous_args = 1
 876:Core/Src/printf.c ****   va_start(va, format);
 6176              		.loc 1 876 3 view .LVU1535
 877:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
 6177              		.loc 1 877 3 view .LVU1536
 875:Core/Src/printf.c ****   va_list va;
 6178              		.loc 1 875 1 is_stmt 0 view .LVU1537
 6179 0000 0EB4     		push	{r1, r2, r3}
 6180              	.LCFI18:
 6181              		.cfi_def_cfa_offset 12
 878:Core/Src/printf.c ****   va_end(va);
 6182              		.loc 1 878 19 view .LVU1538
 6183 0002 0122     		movs	r2, #1
 875:Core/Src/printf.c ****   va_list va;
 6184              		.loc 1 875 1 view .LVU1539
 6185 0004 30B5     		push	{r4, r5, lr}
 6186              	.LCFI19:
 6187              		.cfi_def_cfa_offset 24
 6188              		.cfi_offset 4, -24
 6189              		.cfi_offset 5, -20
 6190              		.cfi_offset 14, -16
 6191 0006 84B0     		sub	sp, sp, #16
 6192              	.LCFI20:
 6193              		.cfi_def_cfa_offset 40
 875:Core/Src/printf.c ****   va_list va;
 6194              		.loc 1 875 1 view .LVU1540
 6195 0008 07AC     		add	r4, sp, #28
 6196 000a 08CC     		ldmia	r4!, {r3}
 878:Core/Src/printf.c ****   va_end(va);
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 151


 6197              		.loc 1 878 19 view .LVU1541
 6198 000c 064D     		ldr	r5, .L650
 875:Core/Src/printf.c ****   va_list va;
 6199              		.loc 1 875 1 view .LVU1542
 6200 000e 0100     		movs	r1, r0
 878:Core/Src/printf.c ****   va_end(va);
 6201              		.loc 1 878 19 view .LVU1543
 6202 0010 0094     		str	r4, [sp]
 6203 0012 2800     		movs	r0, r5
 6204              	.LVL728:
 878:Core/Src/printf.c ****   va_end(va);
 6205              		.loc 1 878 19 view .LVU1544
 6206 0014 5242     		rsbs	r2, r2, #0
 877:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
 6207              		.loc 1 877 3 view .LVU1545
 6208 0016 0394     		str	r4, [sp, #12]
 878:Core/Src/printf.c ****   va_end(va);
 6209              		.loc 1 878 3 is_stmt 1 view .LVU1546
 878:Core/Src/printf.c ****   va_end(va);
 6210              		.loc 1 878 19 is_stmt 0 view .LVU1547
 6211 0018 FFF7FEFF 		bl	_vsnprintf
 6212              	.LVL729:
 879:Core/Src/printf.c ****   return ret;
 6213              		.loc 1 879 3 is_stmt 1 view .LVU1548
 880:Core/Src/printf.c **** }
 6214              		.loc 1 880 3 view .LVU1549
 881:Core/Src/printf.c **** 
 6215              		.loc 1 881 1 is_stmt 0 view .LVU1550
 6216 001c 04B0     		add	sp, sp, #16
 6217              		@ sp needed
 6218 001e 30BC     		pop	{r4, r5}
 6219 0020 08BC     		pop	{r3}
 6220 0022 03B0     		add	sp, sp, #12
 6221 0024 1847     		bx	r3
 6222              	.L651:
 6223 0026 C046     		.align	2
 6224              	.L650:
 6225 0028 00000000 		.word	_out_buffer
 6226              		.cfi_endproc
 6227              	.LFE1440:
 6229              		.section	.text.snprintf_,"ax",%progbits
 6230              		.align	1
 6231              		.p2align 2,,3
 6232              		.global	snprintf_
 6233              		.syntax unified
 6234              		.code	16
 6235              		.thumb_func
 6237              	snprintf_:
 6238              	.LVL730:
 6239              	.LFB1441:
 885:Core/Src/printf.c ****   va_list va;
 6240              		.loc 1 885 1 is_stmt 1 view -0
 6241              		.cfi_startproc
 6242              		@ args = 4, pretend = 8, frame = 8
 6243              		@ frame_needed = 0, uses_anonymous_args = 1
 886:Core/Src/printf.c ****   va_start(va, format);
 6244              		.loc 1 886 3 view .LVU1552
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 152


 887:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 6245              		.loc 1 887 3 view .LVU1553
 885:Core/Src/printf.c ****   va_list va;
 6246              		.loc 1 885 1 is_stmt 0 view .LVU1554
 6247 0000 0CB4     		push	{r2, r3}
 6248              	.LCFI21:
 6249              		.cfi_def_cfa_offset 8
 6250 0002 30B5     		push	{r4, r5, lr}
 6251              	.LCFI22:
 6252              		.cfi_def_cfa_offset 20
 6253              		.cfi_offset 4, -20
 6254              		.cfi_offset 5, -16
 6255              		.cfi_offset 14, -12
 6256 0004 85B0     		sub	sp, sp, #20
 6257              	.LCFI23:
 6258              		.cfi_def_cfa_offset 40
 885:Core/Src/printf.c ****   va_list va;
 6259              		.loc 1 885 1 view .LVU1555
 6260 0006 08AC     		add	r4, sp, #32
 6261 0008 08CC     		ldmia	r4!, {r3}
 888:Core/Src/printf.c ****   va_end(va);
 6262              		.loc 1 888 19 view .LVU1556
 6263 000a 064D     		ldr	r5, .L653
 885:Core/Src/printf.c ****   va_list va;
 6264              		.loc 1 885 1 view .LVU1557
 6265 000c 0A00     		movs	r2, r1
 888:Core/Src/printf.c ****   va_end(va);
 6266              		.loc 1 888 19 view .LVU1558
 6267 000e 0094     		str	r4, [sp]
 6268 0010 0100     		movs	r1, r0
 6269              	.LVL731:
 888:Core/Src/printf.c ****   va_end(va);
 6270              		.loc 1 888 19 view .LVU1559
 6271 0012 2800     		movs	r0, r5
 6272              	.LVL732:
 887:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 6273              		.loc 1 887 3 view .LVU1560
 6274 0014 0394     		str	r4, [sp, #12]
 888:Core/Src/printf.c ****   va_end(va);
 6275              		.loc 1 888 3 is_stmt 1 view .LVU1561
 888:Core/Src/printf.c ****   va_end(va);
 6276              		.loc 1 888 19 is_stmt 0 view .LVU1562
 6277 0016 FFF7FEFF 		bl	_vsnprintf
 6278              	.LVL733:
 889:Core/Src/printf.c ****   return ret;
 6279              		.loc 1 889 3 is_stmt 1 view .LVU1563
 890:Core/Src/printf.c **** }
 6280              		.loc 1 890 3 view .LVU1564
 891:Core/Src/printf.c **** 
 6281              		.loc 1 891 1 is_stmt 0 view .LVU1565
 6282 001a 05B0     		add	sp, sp, #20
 6283              		@ sp needed
 6284 001c 30BC     		pop	{r4, r5}
 6285 001e 08BC     		pop	{r3}
 6286 0020 02B0     		add	sp, sp, #8
 6287 0022 1847     		bx	r3
 6288              	.L654:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 153


 6289              		.align	2
 6290              	.L653:
 6291 0024 00000000 		.word	_out_buffer
 6292              		.cfi_endproc
 6293              	.LFE1441:
 6295              		.section	.text.vprintf_,"ax",%progbits
 6296              		.align	1
 6297              		.p2align 2,,3
 6298              		.global	vprintf_
 6299              		.syntax unified
 6300              		.code	16
 6301              		.thumb_func
 6303              	vprintf_:
 6304              	.LVL734:
 6305              	.LFB1442:
 895:Core/Src/printf.c ****   char buffer[1];
 6306              		.loc 1 895 1 is_stmt 1 view -0
 6307              		.cfi_startproc
 6308              		@ args = 0, pretend = 0, frame = 8
 6309              		@ frame_needed = 0, uses_anonymous_args = 0
 896:Core/Src/printf.c ****   return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 6310              		.loc 1 896 3 view .LVU1567
 897:Core/Src/printf.c **** }
 6311              		.loc 1 897 3 view .LVU1568
 897:Core/Src/printf.c **** }
 6312              		.loc 1 897 10 is_stmt 0 view .LVU1569
 6313 0000 0122     		movs	r2, #1
 895:Core/Src/printf.c ****   char buffer[1];
 6314              		.loc 1 895 1 view .LVU1570
 6315 0002 10B5     		push	{r4, lr}
 6316              	.LCFI24:
 6317              		.cfi_def_cfa_offset 8
 6318              		.cfi_offset 4, -8
 6319              		.cfi_offset 14, -4
 897:Core/Src/printf.c **** }
 6320              		.loc 1 897 10 view .LVU1571
 6321 0004 054C     		ldr	r4, .L656
 895:Core/Src/printf.c ****   char buffer[1];
 6322              		.loc 1 895 1 view .LVU1572
 6323 0006 84B0     		sub	sp, sp, #16
 6324              	.LCFI25:
 6325              		.cfi_def_cfa_offset 24
 895:Core/Src/printf.c ****   char buffer[1];
 6326              		.loc 1 895 1 view .LVU1573
 6327 0008 0300     		movs	r3, r0
 897:Core/Src/printf.c **** }
 6328              		.loc 1 897 10 view .LVU1574
 6329 000a 0091     		str	r1, [sp]
 6330 000c 2000     		movs	r0, r4
 6331              	.LVL735:
 897:Core/Src/printf.c **** }
 6332              		.loc 1 897 10 view .LVU1575
 6333 000e 5242     		rsbs	r2, r2, #0
 6334 0010 03A9     		add	r1, sp, #12
 6335              	.LVL736:
 897:Core/Src/printf.c **** }
 6336              		.loc 1 897 10 view .LVU1576
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 154


 6337 0012 FFF7FEFF 		bl	_vsnprintf
 6338              	.LVL737:
 898:Core/Src/printf.c **** 
 6339              		.loc 1 898 1 view .LVU1577
 6340 0016 04B0     		add	sp, sp, #16
 6341              		@ sp needed
 6342 0018 10BD     		pop	{r4, pc}
 6343              	.L657:
 6344 001a C046     		.align	2
 6345              	.L656:
 6346 001c 00000000 		.word	_out_char
 6347              		.cfi_endproc
 6348              	.LFE1442:
 6350              		.section	.text.vsnprintf_,"ax",%progbits
 6351              		.align	1
 6352              		.p2align 2,,3
 6353              		.global	vsnprintf_
 6354              		.syntax unified
 6355              		.code	16
 6356              		.thumb_func
 6358              	vsnprintf_:
 6359              	.LVL738:
 6360              	.LFB1443:
 902:Core/Src/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 6361              		.loc 1 902 1 is_stmt 1 view -0
 6362              		.cfi_startproc
 6363              		@ args = 0, pretend = 0, frame = 0
 6364              		@ frame_needed = 0, uses_anonymous_args = 0
 903:Core/Src/printf.c **** }
 6365              		.loc 1 903 3 view .LVU1579
 902:Core/Src/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 6366              		.loc 1 902 1 is_stmt 0 view .LVU1580
 6367 0000 10B5     		push	{r4, lr}
 6368              	.LCFI26:
 6369              		.cfi_def_cfa_offset 8
 6370              		.cfi_offset 4, -8
 6371              		.cfi_offset 14, -4
 903:Core/Src/printf.c **** }
 6372              		.loc 1 903 10 view .LVU1581
 6373 0002 054C     		ldr	r4, .L659
 902:Core/Src/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 6374              		.loc 1 902 1 view .LVU1582
 6375 0004 82B0     		sub	sp, sp, #8
 6376              	.LCFI27:
 6377              		.cfi_def_cfa_offset 16
 903:Core/Src/printf.c **** }
 6378              		.loc 1 903 10 view .LVU1583
 6379 0006 0093     		str	r3, [sp]
 6380 0008 1300     		movs	r3, r2
 6381              	.LVL739:
 903:Core/Src/printf.c **** }
 6382              		.loc 1 903 10 view .LVU1584
 6383 000a 0A00     		movs	r2, r1
 6384              	.LVL740:
 903:Core/Src/printf.c **** }
 6385              		.loc 1 903 10 view .LVU1585
 6386 000c 0100     		movs	r1, r0
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 155


 6387              	.LVL741:
 903:Core/Src/printf.c **** }
 6388              		.loc 1 903 10 view .LVU1586
 6389 000e 2000     		movs	r0, r4
 6390              	.LVL742:
 903:Core/Src/printf.c **** }
 6391              		.loc 1 903 10 view .LVU1587
 6392 0010 FFF7FEFF 		bl	_vsnprintf
 6393              	.LVL743:
 904:Core/Src/printf.c **** 
 6394              		.loc 1 904 1 view .LVU1588
 6395 0014 02B0     		add	sp, sp, #8
 6396              		@ sp needed
 6397 0016 10BD     		pop	{r4, pc}
 6398              	.L660:
 6399              		.align	2
 6400              	.L659:
 6401 0018 00000000 		.word	_out_buffer
 6402              		.cfi_endproc
 6403              	.LFE1443:
 6405              		.section	.text.fctprintf,"ax",%progbits
 6406              		.align	1
 6407              		.p2align 2,,3
 6408              		.global	fctprintf
 6409              		.syntax unified
 6410              		.code	16
 6411              		.thumb_func
 6413              	fctprintf:
 6414              	.LVL744:
 6415              	.LFB1444:
 908:Core/Src/printf.c ****   va_list va;
 6416              		.loc 1 908 1 is_stmt 1 view -0
 6417              		.cfi_startproc
 6418              		@ args = 4, pretend = 8, frame = 16
 6419              		@ frame_needed = 0, uses_anonymous_args = 1
 909:Core/Src/printf.c ****   va_start(va, format);
 6420              		.loc 1 909 3 view .LVU1590
 910:Core/Src/printf.c ****   const out_fct_wrap_type out_fct_wrap = { out, arg };
 6421              		.loc 1 910 3 view .LVU1591
 908:Core/Src/printf.c ****   va_list va;
 6422              		.loc 1 908 1 is_stmt 0 view .LVU1592
 6423 0000 0CB4     		push	{r2, r3}
 6424              	.LCFI28:
 6425              		.cfi_def_cfa_offset 8
 912:Core/Src/printf.c ****   va_end(va);
 6426              		.loc 1 912 19 view .LVU1593
 6427 0002 0122     		movs	r2, #1
 908:Core/Src/printf.c ****   va_list va;
 6428              		.loc 1 908 1 view .LVU1594
 6429 0004 10B5     		push	{r4, lr}
 6430              	.LCFI29:
 6431              		.cfi_def_cfa_offset 16
 6432              		.cfi_offset 4, -16
 6433              		.cfi_offset 14, -12
 6434 0006 86B0     		sub	sp, sp, #24
 6435              	.LCFI30:
 6436              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 156


 908:Core/Src/printf.c ****   va_list va;
 6437              		.loc 1 908 1 view .LVU1595
 6438 0008 08AC     		add	r4, sp, #32
 6439 000a 08CC     		ldmia	r4!, {r3}
 911:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 6440              		.loc 1 911 27 view .LVU1596
 6441 000c 0490     		str	r0, [sp, #16]
 6442 000e 0591     		str	r1, [sp, #20]
 912:Core/Src/printf.c ****   va_end(va);
 6443              		.loc 1 912 19 view .LVU1597
 6444 0010 0094     		str	r4, [sp]
 6445 0012 5242     		rsbs	r2, r2, #0
 6446 0014 04A9     		add	r1, sp, #16
 6447              	.LVL745:
 912:Core/Src/printf.c ****   va_end(va);
 6448              		.loc 1 912 19 view .LVU1598
 6449 0016 0448     		ldr	r0, .L662
 6450              	.LVL746:
 910:Core/Src/printf.c ****   const out_fct_wrap_type out_fct_wrap = { out, arg };
 6451              		.loc 1 910 3 view .LVU1599
 6452 0018 0394     		str	r4, [sp, #12]
 911:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 6453              		.loc 1 911 3 is_stmt 1 view .LVU1600
 912:Core/Src/printf.c ****   va_end(va);
 6454              		.loc 1 912 3 view .LVU1601
 912:Core/Src/printf.c ****   va_end(va);
 6455              		.loc 1 912 19 is_stmt 0 view .LVU1602
 6456 001a FFF7FEFF 		bl	_vsnprintf
 6457              	.LVL747:
 913:Core/Src/printf.c ****   return ret;
 6458              		.loc 1 913 3 is_stmt 1 view .LVU1603
 914:Core/Src/printf.c **** }
 6459              		.loc 1 914 3 view .LVU1604
 915:Core/Src/printf.c **** 
 6460              		.loc 1 915 1 is_stmt 0 view .LVU1605
 6461 001e 06B0     		add	sp, sp, #24
 6462              		@ sp needed
 6463 0020 10BC     		pop	{r4}
 6464 0022 08BC     		pop	{r3}
 6465 0024 02B0     		add	sp, sp, #8
 6466 0026 1847     		bx	r3
 6467              	.L663:
 6468              		.align	2
 6469              	.L662:
 6470 0028 00000000 		.word	_out_fct
 6471              		.cfi_endproc
 6472              	.LFE1444:
 6474              		.section	.text._putchar,"ax",%progbits
 6475              		.align	1
 6476              		.p2align 2,,3
 6477              		.global	_putchar
 6478              		.syntax unified
 6479              		.code	16
 6480              		.thumb_func
 6482              	_putchar:
 6483              	.LVL748:
 6484              	.LFB1445:
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 157


 918:Core/Src/printf.c **** 	/* Place your implementation of fputc here */
 6485              		.loc 1 918 31 is_stmt 1 view -0
 6486              		.cfi_startproc
 6487              		@ args = 0, pretend = 0, frame = 0
 6488              		@ frame_needed = 0, uses_anonymous_args = 0
 6489              		@ link register save eliminated.
 921:Core/Src/printf.c ****       USART2->TDR = character;
 6490              		.loc 1 921 2 view .LVU1607
 921:Core/Src/printf.c ****       USART2->TDR = character;
 6491              		.loc 1 921 24 is_stmt 0 view .LVU1608
 6492 0000 8021     		movs	r1, #128
 921:Core/Src/printf.c ****       USART2->TDR = character;
 6493              		.loc 1 921 18 view .LVU1609
 6494 0002 034A     		ldr	r2, .L668
 6495              	.L665:
 921:Core/Src/printf.c ****       USART2->TDR = character;
 6496              		.loc 1 921 51 is_stmt 1 discriminator 1 view .LVU1610
 921:Core/Src/printf.c ****       USART2->TDR = character;
 6497              		.loc 1 921 9 discriminator 1 view .LVU1611
 921:Core/Src/printf.c ****       USART2->TDR = character;
 6498              		.loc 1 921 18 is_stmt 0 discriminator 1 view .LVU1612
 6499 0004 D369     		ldr	r3, [r2, #28]
 921:Core/Src/printf.c ****       USART2->TDR = character;
 6500              		.loc 1 921 9 discriminator 1 view .LVU1613
 6501 0006 1942     		tst	r1, r3
 6502 0008 FCD0     		beq	.L665
 921:Core/Src/printf.c ****       USART2->TDR = character;
 6503              		.loc 1 921 52 is_stmt 1 discriminator 2 view .LVU1614
 6504              		.loc 1 922 7 discriminator 2 view .LVU1615
 923:Core/Src/printf.c **** 		
 924:Core/Src/printf.c **** }
 6505              		.loc 1 924 1 is_stmt 0 discriminator 2 view .LVU1616
 6506              		@ sp needed
 922:Core/Src/printf.c **** 		
 6507              		.loc 1 922 19 discriminator 2 view .LVU1617
 6508 000a 9062     		str	r0, [r2, #40]
 6509              		.loc 1 924 1 discriminator 2 view .LVU1618
 6510 000c 7047     		bx	lr
 6511              	.L669:
 6512 000e C046     		.align	2
 6513              	.L668:
 6514 0010 00440040 		.word	1073759232
 6515              		.cfi_endproc
 6516              	.LFE1445:
 6518              		.section	.rodata.pow10.0,"a"
 6519              		.align	3
 6522              	pow10.0:
 6523 0000 00000000 		.word	0
 6524 0004 0000F03F 		.word	1072693248
 6525 0008 00000000 		.word	0
 6526 000c 00002440 		.word	1076101120
 6527 0010 00000000 		.word	0
 6528 0014 00005940 		.word	1079574528
 6529 0018 00000000 		.word	0
 6530 001c 00408F40 		.word	1083129856
 6531 0020 00000000 		.word	0
 6532 0024 0088C340 		.word	1086556160
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 158


 6533 0028 00000000 		.word	0
 6534 002c 006AF840 		.word	1090021888
 6535 0030 00000000 		.word	0
 6536 0034 80842E41 		.word	1093567616
 6537 0038 00000000 		.word	0
 6538 003c D0126341 		.word	1097011920
 6539 0040 00000000 		.word	0
 6540 0044 84D79741 		.word	1100470148
 6541 0048 00000000 		.word	0
 6542 004c 65CDCD41 		.word	1104006501
 6543              		.text
 6544              	.Letext0:
 6545              		.file 2 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 6546              		.file 3 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 6547              		.file 4 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/inc
 6548              		.file 5 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/inc
 6549              		.file 6 "Drivers/CMSIS/Device/ST/STM32U0xx/Include/stm32u073xx.h"
 6550              		.file 7 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_dma.h"
 6551              		.file 8 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_usart.h"
 6552              		.file 9 "<built-in>"
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 159


DEFINED SYMBOLS
                            *ABS*:00000000 printf.c
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:19     .text._out_buffer:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:25     .text._out_buffer:00000000 _out_buffer
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:48     .text._out_null:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:54     .text._out_null:00000000 _out_null
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:73     .text._out_rev:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:79     .text._out_rev:00000000 _out_rev
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:242    .text._ntoa_format:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:248    .text._ntoa_format:00000000 _ntoa_format
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:815    .text._out_fct:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:821    .text._out_fct:00000000 _out_fct
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:869    .text._out_char:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:875    .text._out_char:00000000 _out_char
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:923    .text._out_char:00000014 $d
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:942    .text._etoa:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:948    .text._etoa:00000000 _etoa
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:1825   .text._ftoa:00000000 _ftoa
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:1730   .text._etoa:000003a0 $d
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:1760   .text._etoa:00000408 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:1804   .rodata._ftoa.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:1819   .text._ftoa:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:2622   .text._ftoa:00000344 $d
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:2638   .text._ftoa:0000036c $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:2696   .text._ftoa:000003a8 $d
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6522   .rodata.pow10.0:00000000 pow10.0
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:2704   .text._vsnprintf:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:2710   .text._vsnprintf:00000000 _vsnprintf
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:2857   .rodata._vsnprintf:00000000 $d
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:3832   .text._vsnprintf:00000368 $d
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:3842   .text._vsnprintf:0000037c $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6101   .text.printf_:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6108   .text.printf_:00000000 printf_
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6157   .text.printf_:00000024 $d
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6162   .text.sprintf_:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6169   .text.sprintf_:00000000 sprintf_
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6225   .text.sprintf_:00000028 $d
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6230   .text.snprintf_:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6237   .text.snprintf_:00000000 snprintf_
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6291   .text.snprintf_:00000024 $d
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6296   .text.vprintf_:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6303   .text.vprintf_:00000000 vprintf_
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6346   .text.vprintf_:0000001c $d
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6351   .text.vsnprintf_:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6358   .text.vsnprintf_:00000000 vsnprintf_
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6401   .text.vsnprintf_:00000018 $d
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6406   .text.fctprintf:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6413   .text.fctprintf:00000000 fctprintf
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6470   .text.fctprintf:00000028 $d
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6475   .text._putchar:00000000 $t
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6482   .text._putchar:00000000 _putchar
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6514   .text._putchar:00000010 $d
C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s:6519   .rodata.pow10.0:00000000 $d

UNDEFINED SYMBOLS
__aeabi_dcmpeq
__aeabi_dcmpgt
ARM GAS  C:\Users\upo\AppData\Local\Temp\cc9Vhs4l.s 			page 160


__aeabi_dcmplt
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_dsub
__aeabi_d2iz
__aeabi_ddiv
__aeabi_dcmpge
__aeabi_uidivmod
__aeabi_idivmod
__aeabi_uidiv
__aeabi_idiv
__aeabi_d2uiz
__aeabi_ui2d
__aeabi_uldivmod
