ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"AB1815.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/AB1815.c"
  18              		.section	.text.readRegisters,"ax",%progbits
  19              		.align	1
  20              		.global	readRegisters
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	readRegisters:
  26              	.LVL0:
  27              	.LFB428:
   1:Core/Src/AB1815.c **** /* USER CODE BEGIN Header */
   2:Core/Src/AB1815.c **** /**
   3:Core/Src/AB1815.c ****  ******************************************************************************
   4:Core/Src/AB1815.c ****  * @file    AB1815.c
   5:Core/Src/AB1815.c ****  * @brief   AB1815 drivers
   6:Core/Src/AB1815.c ****  ******************************************************************************
   7:Core/Src/AB1815.c ****  * @attention
   8:Core/Src/AB1815.c ****  *
   9:Core/Src/AB1815.c ****  * This software is licensed under terms that can be found in the LICENSE file
  10:Core/Src/AB1815.c ****  * in the root directory of this software component.
  11:Core/Src/AB1815.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  12:Core/Src/AB1815.c ****  *
  13:Core/Src/AB1815.c ****  ******************************************************************************
  14:Core/Src/AB1815.c ****  */
  15:Core/Src/AB1815.c **** 
  16:Core/Src/AB1815.c **** #include "main.h"
  17:Core/Src/AB1815.c **** #include "AB1815.h"
  18:Core/Src/AB1815.c **** #include <stdbool.h>
  19:Core/Src/AB1815.c **** 
  20:Core/Src/AB1815.c **** extern I2C_HandleTypeDef hi2c1;
  21:Core/Src/AB1815.c **** extern SPI_HandleTypeDef hspi1;
  22:Core/Src/AB1815.c **** 
  23:Core/Src/AB1815.c **** static inline uint32_t utils_enter_critical_section(void);
  24:Core/Src/AB1815.c **** static inline void utils_exit_critical_section(uint32_t primask_bit);
  25:Core/Src/AB1815.c **** 
  26:Core/Src/AB1815.c **** /*
  27:Core/Src/AB1815.c ****  * The device is accessed at addresses 0xD2/D3,
  28:Core/Src/AB1815.c ****  * 7-bit address is transmitted MSB first.
  29:Core/Src/AB1815.c ****  * eighth bit indicate a write (RW = 0) or a read (RW = 1)
  30:Core/Src/AB1815.c ****  */
  31:Core/Src/AB1815.c **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 2


  32:Core/Src/AB1815.c **** uint8_t i2cReadAddr = 0xD3;
  33:Core/Src/AB1815.c **** uint8_t i2cWriteAddr = 0xD2;
  34:Core/Src/AB1815.c **** 
  35:Core/Src/AB1815.c **** bool detectChip()
  36:Core/Src/AB1815.c **** {
  37:Core/Src/AB1815.c ****     bool bResult, finalResult = false;
  38:Core/Src/AB1815.c ****     uint8_t value = 0;
  39:Core/Src/AB1815.c **** 
  40:Core/Src/AB1815.c ****     // FOUT/nIRQ  will go HIGH when the chip is ready to respond
  41:Core/Src/AB1815.c **** 
  42:Core/Src/AB1815.c ****         unsigned long start = HAL_GetTick();
  43:Core/Src/AB1815.c ****         bool ready = false;
  44:Core/Src/AB1815.c ****         while (HAL_GetTick() - start < 1000)
  45:Core/Src/AB1815.c ****         {
  46:Core/Src/AB1815.c ****             if (HAL_GPIO_ReadPin(NIRQ_GPIO_Port, NIRQ_Pin) == GPIO_PIN_SET) // B12
  47:Core/Src/AB1815.c ****             {
  48:Core/Src/AB1815.c ****                 ready = true;
  49:Core/Src/AB1815.c ****                 break;
  50:Core/Src/AB1815.c ****             }
  51:Core/Src/AB1815.c ****             if (!ready)
  52:Core/Src/AB1815.c ****             {
  53:Core/Src/AB1815.c ****                 printf("FOUT did not go HIGH\n");
  54:Core/Src/AB1815.c ****                 // May just want to return false here
  55:Core/Src/AB1815.c ****             }
  56:Core/Src/AB1815.c ****         }
  57:Core/Src/AB1815.c **** 
  58:Core/Src/AB1815.c **** 
  59:Core/Src/AB1815.c ****     bResult = readRegister(REG_ID0, value, 1);
  60:Core/Src/AB1815.c ****     if (bResult && value == REG_ID0_AB18XX)
  61:Core/Src/AB1815.c ****     {
  62:Core/Src/AB1815.c ****         bResult = readRegister(REG_ID1, value, 1);
  63:Core/Src/AB1815.c ****         if (bResult && value == REG_ID1_ABXX05)
  64:Core/Src/AB1815.c ****         {
  65:Core/Src/AB1815.c ****             finalResult = true;
  66:Core/Src/AB1815.c ****         }
  67:Core/Src/AB1815.c ****     }
  68:Core/Src/AB1815.c ****     if (!finalResult)
  69:Core/Src/AB1815.c ****     {
  70:Core/Src/AB1815.c ****         printf("not detected\n");
  71:Core/Src/AB1815.c ****     }
  72:Core/Src/AB1815.c **** 
  73:Core/Src/AB1815.c ****     return finalResult;
  74:Core/Src/AB1815.c **** }
  75:Core/Src/AB1815.c **** 
  76:Core/Src/AB1815.c **** bool readRegister(uint8_t regAddr, uint8_t value, bool lock)
  77:Core/Src/AB1815.c **** {
  78:Core/Src/AB1815.c ****     return readRegisters(regAddr, &value, 1, lock);
  79:Core/Src/AB1815.c **** }
  80:Core/Src/AB1815.c **** 
  81:Core/Src/AB1815.c **** bool readRegisters(uint8_t regAddr, uint8_t *array, uint8_t num, bool lock)
  82:Core/Src/AB1815.c **** {
  28              		.loc 1 82 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 82 1 is_stmt 0 view .LVU1
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 3


  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 83B0     		sub	sp, sp, #12
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 32
  44 0004 0D00     		movs	r5, r1
  45 0006 1600     		movs	r6, r2
  46 0008 1C1E     		subs	r4, r3, #0
  47 000a 6B46     		mov	r3, sp
  48              	.LVL1:
  49              		.loc 1 82 1 view .LVU2
  50 000c D871     		strb	r0, [r3, #7]
  83:Core/Src/AB1815.c ****     bool bResult = false;
  51              		.loc 1 83 5 is_stmt 1 view .LVU3
  52              	.LVL2:
  84:Core/Src/AB1815.c ****     uint32_t primask_bit;
  53              		.loc 1 84 5 view .LVU4
  85:Core/Src/AB1815.c **** 
  86:Core/Src/AB1815.c ****     if (lock)
  54              		.loc 1 86 5 view .LVU5
  55              		.loc 1 86 8 is_stmt 0 view .LVU6
  56 000e 02D0     		beq	.L2
  87:Core/Src/AB1815.c ****     {
  88:Core/Src/AB1815.c ****     	 primask_bit = utils_enter_critical_section();
  57              		.loc 1 88 7 is_stmt 1 view .LVU7
  58              	.LBB39:
  59              	.LBI39:
  89:Core/Src/AB1815.c ****     }
  90:Core/Src/AB1815.c **** 
  91:Core/Src/AB1815.c ****     // write(regAddr);
  92:Core/Src/AB1815.c ****     // HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, u
  93:Core/Src/AB1815.c **** 
  94:Core/Src/AB1815.c ****     if (HAL_SPI_Transmit(&hspi1, &regAddr, 1, 1000) != HAL_OK)
  95:Core/Src/AB1815.c ****     {
  96:Core/Src/AB1815.c ****             Error_Handler();
  97:Core/Src/AB1815.c ****     }
  98:Core/Src/AB1815.c **** 
  99:Core/Src/AB1815.c ****     // HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, ui
 100:Core/Src/AB1815.c ****     if (HAL_SPI_Receive(&hspi1, array, num, 3000) != HAL_OK)
 101:Core/Src/AB1815.c ****     {
 102:Core/Src/AB1815.c ****     	Error_Handler();
 103:Core/Src/AB1815.c ****     }
 104:Core/Src/AB1815.c **** 
 105:Core/Src/AB1815.c **** 
 106:Core/Src/AB1815.c ****     bResult = true;
 107:Core/Src/AB1815.c **** 
 108:Core/Src/AB1815.c ****     if (lock)
 109:Core/Src/AB1815.c ****     {
 110:Core/Src/AB1815.c ****     	utils_exit_critical_section(primask_bit);
 111:Core/Src/AB1815.c ****     }
 112:Core/Src/AB1815.c ****     return bResult;
 113:Core/Src/AB1815.c **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 4


 114:Core/Src/AB1815.c **** 
 115:Core/Src/AB1815.c **** uint8_t readRegister_value(uint8_t regAddr, bool lock)
 116:Core/Src/AB1815.c **** {
 117:Core/Src/AB1815.c ****     uint8_t value = 0;
 118:Core/Src/AB1815.c **** 
 119:Core/Src/AB1815.c ****     (void)readRegister(regAddr, value, lock);
 120:Core/Src/AB1815.c **** 
 121:Core/Src/AB1815.c ****     return value;
 122:Core/Src/AB1815.c **** }
 123:Core/Src/AB1815.c **** 
 124:Core/Src/AB1815.c **** bool writeRegister(uint8_t regAddr, uint8_t value, bool lock)
 125:Core/Src/AB1815.c **** {
 126:Core/Src/AB1815.c ****     return writeRegisters(regAddr, &value, 1, lock);
 127:Core/Src/AB1815.c **** }
 128:Core/Src/AB1815.c **** 
 129:Core/Src/AB1815.c **** bool writeRegisters(uint8_t regAddr, uint8_t *array, size_t num, bool lock)
 130:Core/Src/AB1815.c **** {
 131:Core/Src/AB1815.c ****     bool bResult = false;
 132:Core/Src/AB1815.c ****     uint32_t primask_bit;
 133:Core/Src/AB1815.c **** 
 134:Core/Src/AB1815.c ****     if (lock)
 135:Core/Src/AB1815.c ****     {
 136:Core/Src/AB1815.c ****     	primask_bit = utils_enter_critical_section();
 137:Core/Src/AB1815.c ****     }
 138:Core/Src/AB1815.c **** 
 139:Core/Src/AB1815.c ****     /**
 140:Core/Src/AB1815.c ****       * @brief  Transmit an amount of data in blocking mode.
 141:Core/Src/AB1815.c ****       * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 142:Core/Src/AB1815.c ****       *               the configuration information for SPI module.
 143:Core/Src/AB1815.c ****       * @param  pData pointer to data buffer
 144:Core/Src/AB1815.c ****       * @param  Size amount of data to be sent
 145:Core/Src/AB1815.c ****       * @param  Timeout Timeout duration
 146:Core/Src/AB1815.c ****       * @retval HAL status
 147:Core/Src/AB1815.c ****       */
 148:Core/Src/AB1815.c ****     // HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, u
 149:Core/Src/AB1815.c **** 
 150:Core/Src/AB1815.c ****     if(HAL_SPI_Transmit(&hspi1, &regAddr, 1, 3000) != HAL_OK)
 151:Core/Src/AB1815.c ****     {
 152:Core/Src/AB1815.c ****             Error_Handler();
 153:Core/Src/AB1815.c ****     }
 154:Core/Src/AB1815.c **** 
 155:Core/Src/AB1815.c ****     if(HAL_SPI_Transmit(&hspi1, array, num, 3000) != HAL_OK)
 156:Core/Src/AB1815.c ****     {
 157:Core/Src/AB1815.c ****         if (HAL_I2C_GetError(&hi2c1) != HAL_I2C_ERROR_NONE) // HAL_I2C_ERROR_NONE
 158:Core/Src/AB1815.c ****         {
 159:Core/Src/AB1815.c ****             Error_Handler();
 160:Core/Src/AB1815.c ****         }
 161:Core/Src/AB1815.c ****     }
 162:Core/Src/AB1815.c **** 
 163:Core/Src/AB1815.c ****     if (lock)
 164:Core/Src/AB1815.c ****     {
 165:Core/Src/AB1815.c ****     	utils_exit_critical_section(primask_bit);
 166:Core/Src/AB1815.c ****     }
 167:Core/Src/AB1815.c ****     return bResult;
 168:Core/Src/AB1815.c **** }
 169:Core/Src/AB1815.c **** 
 170:Core/Src/AB1815.c **** bool maskRegister(uint8_t regAddr, uint8_t andValue, uint8_t orValue, bool lock)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 5


 171:Core/Src/AB1815.c **** {
 172:Core/Src/AB1815.c ****     bool bResult = false;
 173:Core/Src/AB1815.c ****     uint32_t primask_bit;
 174:Core/Src/AB1815.c ****     if (lock)
 175:Core/Src/AB1815.c ****     {
 176:Core/Src/AB1815.c ****     	primask_bit = utils_enter_critical_section();
 177:Core/Src/AB1815.c ****     }
 178:Core/Src/AB1815.c **** 
 179:Core/Src/AB1815.c ****     uint8_t value = 0;
 180:Core/Src/AB1815.c **** 
 181:Core/Src/AB1815.c ****     bResult = readRegister(regAddr, value, 1);
 182:Core/Src/AB1815.c ****     if (bResult)
 183:Core/Src/AB1815.c ****     {
 184:Core/Src/AB1815.c ****         uint8_t newValue = (value & andValue) | orValue;
 185:Core/Src/AB1815.c **** 
 186:Core/Src/AB1815.c ****         if (newValue != value)
 187:Core/Src/AB1815.c ****         {
 188:Core/Src/AB1815.c ****             bResult = writeRegister(regAddr, newValue, 1);
 189:Core/Src/AB1815.c ****         }
 190:Core/Src/AB1815.c ****     }
 191:Core/Src/AB1815.c **** 
 192:Core/Src/AB1815.c ****     if (lock)
 193:Core/Src/AB1815.c ****     {
 194:Core/Src/AB1815.c ****     	utils_exit_critical_section(primask_bit);
 195:Core/Src/AB1815.c ****     }
 196:Core/Src/AB1815.c ****     return bResult;
 197:Core/Src/AB1815.c **** }
 198:Core/Src/AB1815.c **** 
 199:Core/Src/AB1815.c **** // ************************ critical *****************************************
 200:Core/Src/AB1815.c **** 
 201:Core/Src/AB1815.c **** static inline uint32_t utils_enter_critical_section(void)
  60              		.loc 1 201 24 view .LVU8
  61              	.LBB40:
 202:Core/Src/AB1815.c **** {
 203:Core/Src/AB1815.c ****     uint32_t primask_bit = __get_PRIMASK();
  62              		.loc 1 203 5 view .LVU9
  63              	.LBB41:
  64              	.LBI41:
  65              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 6


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 7


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 8


 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 9


 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 10


 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 11


 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 12


 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 13


 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 14


 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 15


 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 16


 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 17


 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 18


 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 19


 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 20


 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 21


 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 22


 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 966:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 973:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 23


 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 996:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ISB();
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1006:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1009:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1010:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
1011:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
1012:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
1013:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
1015:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ISB();
1018:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1019:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1020:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1027:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
1028:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1029:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
1032:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1033:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1034:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1035:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1036:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
1039:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
1040:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1044:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 24


1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1047:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1051:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
1052:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1061:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1062:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1063:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1064:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
1067:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1071:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1075:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1076:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1077:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1084:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
1085:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1087:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1090:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1091:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1092:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1093:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1095:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
1096:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
1097:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1099:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
1100:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1101:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 25


1102:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1103:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1104:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1105:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1106:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1107:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
1108:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
1109:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
1110:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
1112:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1113:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
1114:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1118:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1119:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
1120:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
1121:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
1122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1123:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
1124:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1125:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1127:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
1128:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1129:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1130:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1132:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1133:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1134:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
1135:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
1136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
1137:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1138:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
1139:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1140:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
1143:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1144:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1145:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1146:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1147:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1148:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
1150:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
1151:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
1152:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1153:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
1154:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1157:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 26


1159:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1160:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1161:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
1162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
1163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
1164:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1165:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
1166:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1167:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
1168:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1169:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1170:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1171:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1172:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1173:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1174:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
1175:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
1176:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
1177:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1178:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
1179:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1180:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1182:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
1183:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1187:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1188:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
1189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
1190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
1191:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1192:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
1193:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1194:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
1195:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1199:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1200:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
1201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
1202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
1203:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
  66              		.loc 2 1204 31 view .LVU10
  67              	.LBB42:
1205:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  68              		.loc 2 1206 3 view .LVU11
1207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1208:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
  69              		.loc 2 1208 3 view .LVU12
  70              		.syntax divided
  71              	@ 1208 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  72 0010 EFF31087 		MRS r7, primask
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 27


  73              	@ 0 "" 2
  74              	.LVL3:
1209:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  75              		.loc 2 1209 3 view .LVU13
  76              		.loc 2 1209 3 is_stmt 0 view .LVU14
  77              		.thumb
  78              		.syntax unified
  79              	.LBE42:
  80              	.LBE41:
 204:Core/Src/AB1815.c ****     __disable_irq();
  81              		.loc 1 204 5 is_stmt 1 view .LVU15
  82              	.LBB43:
  83              	.LBI43:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  84              		.loc 2 960 27 view .LVU16
  85              	.LBB44:
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  86              		.loc 2 962 3 view .LVU17
  87              		.syntax divided
  88              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  89 0014 72B6     		cpsid i
  90              	@ 0 "" 2
  91              		.thumb
  92              		.syntax unified
  93              	.LBE44:
  94              	.LBE43:
 205:Core/Src/AB1815.c ****     return primask_bit;
  95              		.loc 1 205 5 view .LVU18
  96              	.LVL4:
  97              	.L2:
  98              		.loc 1 205 5 is_stmt 0 view .LVU19
  99              	.LBE40:
 100              	.LBE39:
  94:Core/Src/AB1815.c ****     {
 101              		.loc 1 94 5 is_stmt 1 view .LVU20
  94:Core/Src/AB1815.c ****     {
 102              		.loc 1 94 9 is_stmt 0 view .LVU21
 103 0016 FA23     		movs	r3, #250
 104 0018 0E48     		ldr	r0, .L8
 105              	.LVL5:
  94:Core/Src/AB1815.c ****     {
 106              		.loc 1 94 9 view .LVU22
 107 001a 9B00     		lsls	r3, r3, #2
 108 001c 0122     		movs	r2, #1
 109              	.LVL6:
  94:Core/Src/AB1815.c ****     {
 110              		.loc 1 94 9 view .LVU23
 111 001e 6946     		mov	r1, sp
 112              	.LVL7:
  94:Core/Src/AB1815.c ****     {
 113              		.loc 1 94 9 view .LVU24
 114 0020 0731     		adds	r1, r1, #7
 115              	.LVL8:
  94:Core/Src/AB1815.c ****     {
 116              		.loc 1 94 9 view .LVU25
 117 0022 FFF7FEFF 		bl	HAL_SPI_Transmit
 118              	.LVL9:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 28


  94:Core/Src/AB1815.c ****     {
 119              		.loc 1 94 8 view .LVU26
 120 0026 0028     		cmp	r0, #0
 121 0028 0ED1     		bne	.L6
 122              	.L3:
 100:Core/Src/AB1815.c ****     {
 123              		.loc 1 100 5 is_stmt 1 view .LVU27
 100:Core/Src/AB1815.c ****     {
 124              		.loc 1 100 9 is_stmt 0 view .LVU28
 125 002a 0A48     		ldr	r0, .L8
 126 002c 0A4B     		ldr	r3, .L8+4
 127 002e 3200     		movs	r2, r6
 128 0030 2900     		movs	r1, r5
 129 0032 FFF7FEFF 		bl	HAL_SPI_Receive
 130              	.LVL10:
 100:Core/Src/AB1815.c ****     {
 131              		.loc 1 100 8 view .LVU29
 132 0036 0028     		cmp	r0, #0
 133 0038 09D1     		bne	.L7
 134              	.L4:
 106:Core/Src/AB1815.c **** 
 135              		.loc 1 106 5 is_stmt 1 view .LVU30
 136              	.LVL11:
 108:Core/Src/AB1815.c ****     {
 137              		.loc 1 108 5 view .LVU31
 108:Core/Src/AB1815.c ****     {
 138              		.loc 1 108 8 is_stmt 0 view .LVU32
 139 003a 002C     		cmp	r4, #0
 140 003c 01D0     		beq	.L5
 110:Core/Src/AB1815.c ****     }
 141              		.loc 1 110 6 is_stmt 1 view .LVU33
 142              	.LVL12:
 143              	.LBB45:
 144              	.LBI45:
 206:Core/Src/AB1815.c **** }
 207:Core/Src/AB1815.c **** 
 208:Core/Src/AB1815.c **** static inline void utils_exit_critical_section(uint32_t primask_bit)
 145              		.loc 1 208 20 view .LVU34
 146              	.LBB46:
 209:Core/Src/AB1815.c **** {
 210:Core/Src/AB1815.c ****     __set_PRIMASK(primask_bit);
 147              		.loc 1 210 5 view .LVU35
 148              	.LBB47:
 149              	.LBI47:
1210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1213:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
1216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
1217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
1218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
1220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 29


1223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
1224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1226:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1228:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1229:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
1231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
1232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
1233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 150              		.loc 2 1234 27 view .LVU36
 151              	.LBB48:
1235:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1236:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 152              		.loc 2 1236 3 view .LVU37
 153              		.syntax divided
 154              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 155 003e 87F31088 		MSR primask, r7
 156              	@ 0 "" 2
 157              	.LVL13:
 158              		.thumb
 159              		.syntax unified
 160              	.L5:
 161              		.loc 2 1236 3 is_stmt 0 view .LVU38
 162              	.LBE48:
 163              	.LBE47:
 164              	.LBE46:
 165              	.LBE45:
 112:Core/Src/AB1815.c **** }
 166              		.loc 1 112 5 is_stmt 1 view .LVU39
 113:Core/Src/AB1815.c **** 
 167              		.loc 1 113 1 is_stmt 0 view .LVU40
 168 0042 0120     		movs	r0, #1
 169 0044 03B0     		add	sp, sp, #12
 170              		@ sp needed
 171              	.LVL14:
 172              	.LVL15:
 113:Core/Src/AB1815.c **** 
 173              		.loc 1 113 1 view .LVU41
 174 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 175              	.LVL16:
 176              	.L6:
  96:Core/Src/AB1815.c ****     }
 177              		.loc 1 96 13 is_stmt 1 view .LVU42
 178 0048 FFF7FEFF 		bl	Error_Handler
 179              	.LVL17:
 180 004c EDE7     		b	.L3
 181              	.L7:
 102:Core/Src/AB1815.c ****     }
 182              		.loc 1 102 6 view .LVU43
 183 004e FFF7FEFF 		bl	Error_Handler
 184              	.LVL18:
 185 0052 F2E7     		b	.L4
 186              	.L9:
 187              		.align	2
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 30


 188              	.L8:
 189 0054 00000000 		.word	hspi1
 190 0058 B80B0000 		.word	3000
 191              		.cfi_endproc
 192              	.LFE428:
 194              		.section	.text.readRegister,"ax",%progbits
 195              		.align	1
 196              		.global	readRegister
 197              		.syntax unified
 198              		.code	16
 199              		.thumb_func
 201              	readRegister:
 202              	.LVL19:
 203              	.LFB427:
  77:Core/Src/AB1815.c ****     return readRegisters(regAddr, &value, 1, lock);
 204              		.loc 1 77 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 8
 207              		@ frame_needed = 0, uses_anonymous_args = 0
  77:Core/Src/AB1815.c ****     return readRegisters(regAddr, &value, 1, lock);
 208              		.loc 1 77 1 is_stmt 0 view .LVU45
 209 0000 10B5     		push	{r4, lr}
 210              	.LCFI2:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 4, -8
 213              		.cfi_offset 14, -4
 214 0002 82B0     		sub	sp, sp, #8
 215              	.LCFI3:
 216              		.cfi_def_cfa_offset 16
 217 0004 0C00     		movs	r4, r1
 218 0006 1300     		movs	r3, r2
 219 0008 6A46     		mov	r2, sp
 220              	.LVL20:
  77:Core/Src/AB1815.c ****     return readRegisters(regAddr, &value, 1, lock);
 221              		.loc 1 77 1 view .LVU46
 222 000a D11D     		adds	r1, r2, #7
 223              	.LVL21:
  77:Core/Src/AB1815.c ****     return readRegisters(regAddr, &value, 1, lock);
 224              		.loc 1 77 1 view .LVU47
 225 000c 0C70     		strb	r4, [r1]
  78:Core/Src/AB1815.c **** }
 226              		.loc 1 78 5 is_stmt 1 view .LVU48
  78:Core/Src/AB1815.c **** }
 227              		.loc 1 78 12 is_stmt 0 view .LVU49
 228 000e 0122     		movs	r2, #1
 229 0010 FFF7FEFF 		bl	readRegisters
 230              	.LVL22:
  79:Core/Src/AB1815.c **** 
 231              		.loc 1 79 1 view .LVU50
 232 0014 02B0     		add	sp, sp, #8
 233              		@ sp needed
 234 0016 10BD     		pop	{r4, pc}
 235              		.cfi_endproc
 236              	.LFE427:
 238              		.section	.rodata.detectChip.str1.4,"aMS",%progbits,1
 239              		.align	2
 240              	.LC1:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 31


 241 0000 464F5554 		.ascii	"FOUT did not go HIGH\000"
 241      20646964 
 241      206E6F74 
 241      20676F20 
 241      48494748 
 242 0015 000000   		.align	2
 243              	.LC3:
 244 0018 6E6F7420 		.ascii	"not detected\000"
 244      64657465 
 244      63746564 
 244      00
 245              		.section	.text.detectChip,"ax",%progbits
 246              		.align	1
 247              		.global	detectChip
 248              		.syntax unified
 249              		.code	16
 250              		.thumb_func
 252              	detectChip:
 253              	.LFB426:
  36:Core/Src/AB1815.c ****     bool bResult, finalResult = false;
 254              		.loc 1 36 1 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 10B5     		push	{r4, lr}
 259              	.LCFI4:
 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 4, -8
 262              		.cfi_offset 14, -4
  37:Core/Src/AB1815.c ****     uint8_t value = 0;
 263              		.loc 1 37 5 view .LVU52
 264              	.LVL23:
  38:Core/Src/AB1815.c **** 
 265              		.loc 1 38 5 view .LVU53
  42:Core/Src/AB1815.c ****         bool ready = false;
 266              		.loc 1 42 9 view .LVU54
  42:Core/Src/AB1815.c ****         bool ready = false;
 267              		.loc 1 42 31 is_stmt 0 view .LVU55
 268 0002 FFF7FEFF 		bl	HAL_GetTick
 269              	.LVL24:
 270 0006 0400     		movs	r4, r0
 271              	.LVL25:
  43:Core/Src/AB1815.c ****         while (HAL_GetTick() - start < 1000)
 272              		.loc 1 43 9 is_stmt 1 view .LVU56
  44:Core/Src/AB1815.c ****         {
 273              		.loc 1 44 9 view .LVU57
  44:Core/Src/AB1815.c ****         {
 274              		.loc 1 44 15 is_stmt 0 view .LVU58
 275 0008 02E0     		b	.L12
 276              	.LVL26:
 277              	.L15:
  51:Core/Src/AB1815.c ****             {
 278              		.loc 1 51 13 is_stmt 1 view .LVU59
  53:Core/Src/AB1815.c ****                 // May just want to return false here
 279              		.loc 1 53 17 view .LVU60
 280 000a 0D48     		ldr	r0, .L16
 281 000c FFF7FEFF 		bl	puts
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 32


 282              	.LVL27:
 283              	.L12:
  44:Core/Src/AB1815.c ****         {
 284              		.loc 1 44 38 view .LVU61
  44:Core/Src/AB1815.c ****         {
 285              		.loc 1 44 16 is_stmt 0 view .LVU62
 286 0010 FFF7FEFF 		bl	HAL_GetTick
 287              	.LVL28:
  44:Core/Src/AB1815.c ****         {
 288              		.loc 1 44 30 view .LVU63
 289 0014 001B     		subs	r0, r0, r4
  44:Core/Src/AB1815.c ****         {
 290              		.loc 1 44 38 view .LVU64
 291 0016 FA23     		movs	r3, #250
 292 0018 9B00     		lsls	r3, r3, #2
 293 001a 9842     		cmp	r0, r3
 294 001c 06D2     		bcs	.L13
  46:Core/Src/AB1815.c ****             {
 295              		.loc 1 46 13 is_stmt 1 view .LVU65
  46:Core/Src/AB1815.c ****             {
 296              		.loc 1 46 17 is_stmt 0 view .LVU66
 297 001e 8021     		movs	r1, #128
 298 0020 4901     		lsls	r1, r1, #5
 299 0022 0848     		ldr	r0, .L16+4
 300 0024 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 301              	.LVL29:
  46:Core/Src/AB1815.c ****             {
 302              		.loc 1 46 16 view .LVU67
 303 0028 0128     		cmp	r0, #1
 304 002a EED1     		bne	.L15
 305              	.L13:
 306              	.LVL30:
  59:Core/Src/AB1815.c ****     if (bResult && value == REG_ID0_AB18XX)
 307              		.loc 1 59 5 is_stmt 1 view .LVU68
  59:Core/Src/AB1815.c ****     if (bResult && value == REG_ID0_AB18XX)
 308              		.loc 1 59 15 is_stmt 0 view .LVU69
 309 002c 0122     		movs	r2, #1
 310 002e 0021     		movs	r1, #0
 311 0030 2820     		movs	r0, #40
 312 0032 FFF7FEFF 		bl	readRegister
 313              	.LVL31:
  60:Core/Src/AB1815.c ****     {
 314              		.loc 1 60 5 is_stmt 1 view .LVU70
  68:Core/Src/AB1815.c ****     {
 315              		.loc 1 68 5 view .LVU71
  70:Core/Src/AB1815.c ****     }
 316              		.loc 1 70 9 view .LVU72
 317 0036 0448     		ldr	r0, .L16+8
 318 0038 FFF7FEFF 		bl	puts
 319              	.LVL32:
  73:Core/Src/AB1815.c **** }
 320              		.loc 1 73 5 view .LVU73
  74:Core/Src/AB1815.c **** 
 321              		.loc 1 74 1 is_stmt 0 view .LVU74
 322 003c 0020     		movs	r0, #0
 323              		@ sp needed
 324              	.LVL33:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 33


  74:Core/Src/AB1815.c **** 
 325              		.loc 1 74 1 view .LVU75
 326 003e 10BD     		pop	{r4, pc}
 327              	.L17:
 328              		.align	2
 329              	.L16:
 330 0040 00000000 		.word	.LC1
 331 0044 00040050 		.word	1342178304
 332 0048 18000000 		.word	.LC3
 333              		.cfi_endproc
 334              	.LFE426:
 336              		.section	.text.readRegister_value,"ax",%progbits
 337              		.align	1
 338              		.global	readRegister_value
 339              		.syntax unified
 340              		.code	16
 341              		.thumb_func
 343              	readRegister_value:
 344              	.LVL34:
 345              	.LFB429:
 116:Core/Src/AB1815.c ****     uint8_t value = 0;
 346              		.loc 1 116 1 is_stmt 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 116:Core/Src/AB1815.c ****     uint8_t value = 0;
 350              		.loc 1 116 1 is_stmt 0 view .LVU77
 351 0000 10B5     		push	{r4, lr}
 352              	.LCFI5:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 4, -8
 355              		.cfi_offset 14, -4
 356 0002 0A00     		movs	r2, r1
 117:Core/Src/AB1815.c **** 
 357              		.loc 1 117 5 is_stmt 1 view .LVU78
 358              	.LVL35:
 119:Core/Src/AB1815.c **** 
 359              		.loc 1 119 5 view .LVU79
 119:Core/Src/AB1815.c **** 
 360              		.loc 1 119 11 is_stmt 0 view .LVU80
 361 0004 0021     		movs	r1, #0
 362              	.LVL36:
 119:Core/Src/AB1815.c **** 
 363              		.loc 1 119 11 view .LVU81
 364 0006 FFF7FEFF 		bl	readRegister
 365              	.LVL37:
 121:Core/Src/AB1815.c **** }
 366              		.loc 1 121 5 is_stmt 1 view .LVU82
 122:Core/Src/AB1815.c **** 
 367              		.loc 1 122 1 is_stmt 0 view .LVU83
 368 000a 0020     		movs	r0, #0
 369              		@ sp needed
 370 000c 10BD     		pop	{r4, pc}
 371              		.cfi_endproc
 372              	.LFE429:
 374              		.section	.text.writeRegisters,"ax",%progbits
 375              		.align	1
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 34


 376              		.global	writeRegisters
 377              		.syntax unified
 378              		.code	16
 379              		.thumb_func
 381              	writeRegisters:
 382              	.LVL38:
 383              	.LFB431:
 130:Core/Src/AB1815.c ****     bool bResult = false;
 384              		.loc 1 130 1 is_stmt 1 view -0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 8
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 130:Core/Src/AB1815.c ****     bool bResult = false;
 388              		.loc 1 130 1 is_stmt 0 view .LVU85
 389 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 390              	.LCFI6:
 391              		.cfi_def_cfa_offset 20
 392              		.cfi_offset 4, -20
 393              		.cfi_offset 5, -16
 394              		.cfi_offset 6, -12
 395              		.cfi_offset 7, -8
 396              		.cfi_offset 14, -4
 397 0002 83B0     		sub	sp, sp, #12
 398              	.LCFI7:
 399              		.cfi_def_cfa_offset 32
 400 0004 0E00     		movs	r6, r1
 401 0006 1400     		movs	r4, r2
 402 0008 1D1E     		subs	r5, r3, #0
 403 000a 6B46     		mov	r3, sp
 404              	.LVL39:
 130:Core/Src/AB1815.c ****     bool bResult = false;
 405              		.loc 1 130 1 view .LVU86
 406 000c D871     		strb	r0, [r3, #7]
 131:Core/Src/AB1815.c ****     uint32_t primask_bit;
 407              		.loc 1 131 5 is_stmt 1 view .LVU87
 408              	.LVL40:
 132:Core/Src/AB1815.c **** 
 409              		.loc 1 132 5 view .LVU88
 134:Core/Src/AB1815.c ****     {
 410              		.loc 1 134 5 view .LVU89
 134:Core/Src/AB1815.c ****     {
 411              		.loc 1 134 8 is_stmt 0 view .LVU90
 412 000e 02D0     		beq	.L20
 136:Core/Src/AB1815.c ****     }
 413              		.loc 1 136 6 is_stmt 1 view .LVU91
 414              	.LBB49:
 415              	.LBI49:
 201:Core/Src/AB1815.c **** {
 416              		.loc 1 201 24 view .LVU92
 417              	.LBB50:
 203:Core/Src/AB1815.c ****     __disable_irq();
 418              		.loc 1 203 5 view .LVU93
 419              	.LBB51:
 420              	.LBI51:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 421              		.loc 2 1204 31 view .LVU94
 422              	.LBB52:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 35


1206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 423              		.loc 2 1206 3 view .LVU95
1208:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 424              		.loc 2 1208 3 view .LVU96
 425              		.syntax divided
 426              	@ 1208 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 427 0010 EFF31087 		MRS r7, primask
 428              	@ 0 "" 2
 429              	.LVL41:
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430              		.loc 2 1209 3 view .LVU97
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431              		.loc 2 1209 3 is_stmt 0 view .LVU98
 432              		.thumb
 433              		.syntax unified
 434              	.LBE52:
 435              	.LBE51:
 204:Core/Src/AB1815.c ****     return primask_bit;
 436              		.loc 1 204 5 is_stmt 1 view .LVU99
 437              	.LBB53:
 438              	.LBI53:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439              		.loc 2 960 27 view .LVU100
 440              	.LBB54:
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441              		.loc 2 962 3 view .LVU101
 442              		.syntax divided
 443              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 444 0014 72B6     		cpsid i
 445              	@ 0 "" 2
 446              		.thumb
 447              		.syntax unified
 448              	.LBE54:
 449              	.LBE53:
 205:Core/Src/AB1815.c **** }
 450              		.loc 1 205 5 view .LVU102
 451              	.LVL42:
 452              	.L20:
 205:Core/Src/AB1815.c **** }
 453              		.loc 1 205 5 is_stmt 0 view .LVU103
 454              	.LBE50:
 455              	.LBE49:
 150:Core/Src/AB1815.c ****     {
 456              		.loc 1 150 5 is_stmt 1 view .LVU104
 150:Core/Src/AB1815.c ****     {
 457              		.loc 1 150 8 is_stmt 0 view .LVU105
 458 0016 1148     		ldr	r0, .L26
 459              	.LVL43:
 150:Core/Src/AB1815.c ****     {
 460              		.loc 1 150 8 view .LVU106
 461 0018 114B     		ldr	r3, .L26+4
 462              	.LVL44:
 150:Core/Src/AB1815.c ****     {
 463              		.loc 1 150 8 view .LVU107
 464 001a 0122     		movs	r2, #1
 465              	.LVL45:
 150:Core/Src/AB1815.c ****     {
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 36


 466              		.loc 1 150 8 view .LVU108
 467 001c 6946     		mov	r1, sp
 468              	.LVL46:
 150:Core/Src/AB1815.c ****     {
 469              		.loc 1 150 8 view .LVU109
 470 001e 0731     		adds	r1, r1, #7
 471              	.LVL47:
 150:Core/Src/AB1815.c ****     {
 472              		.loc 1 150 8 view .LVU110
 473 0020 FFF7FEFF 		bl	HAL_SPI_Transmit
 474              	.LVL48:
 150:Core/Src/AB1815.c ****     {
 475              		.loc 1 150 7 view .LVU111
 476 0024 0028     		cmp	r0, #0
 477 0026 0ED1     		bne	.L24
 478              	.L21:
 155:Core/Src/AB1815.c ****     {
 479              		.loc 1 155 5 is_stmt 1 view .LVU112
 155:Core/Src/AB1815.c ****     {
 480              		.loc 1 155 8 is_stmt 0 view .LVU113
 481 0028 A2B2     		uxth	r2, r4
 482 002a 0C48     		ldr	r0, .L26
 483 002c 0C4B     		ldr	r3, .L26+4
 484 002e 3100     		movs	r1, r6
 485 0030 FFF7FEFF 		bl	HAL_SPI_Transmit
 486              	.LVL49:
 155:Core/Src/AB1815.c ****     {
 487              		.loc 1 155 7 view .LVU114
 488 0034 0028     		cmp	r0, #0
 489 0036 09D1     		bne	.L25
 490              	.L22:
 163:Core/Src/AB1815.c ****     {
 491              		.loc 1 163 5 is_stmt 1 view .LVU115
 163:Core/Src/AB1815.c ****     {
 492              		.loc 1 163 8 is_stmt 0 view .LVU116
 493 0038 002D     		cmp	r5, #0
 494 003a 01D0     		beq	.L23
 165:Core/Src/AB1815.c ****     }
 495              		.loc 1 165 6 is_stmt 1 view .LVU117
 496              	.LVL50:
 497              	.LBB55:
 498              	.LBI55:
 208:Core/Src/AB1815.c **** {
 499              		.loc 1 208 20 view .LVU118
 500              	.LBB56:
 501              		.loc 1 210 5 view .LVU119
 502              	.LBB57:
 503              	.LBI57:
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 504              		.loc 2 1234 27 view .LVU120
 505              	.LBB58:
 506              		.loc 2 1236 3 view .LVU121
 507              		.syntax divided
 508              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 509 003c 87F31088 		MSR primask, r7
 510              	@ 0 "" 2
 511              	.LVL51:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 37


 512              		.thumb
 513              		.syntax unified
 514              	.L23:
 515              		.loc 2 1236 3 is_stmt 0 view .LVU122
 516              	.LBE58:
 517              	.LBE57:
 518              	.LBE56:
 519              	.LBE55:
 167:Core/Src/AB1815.c **** }
 520              		.loc 1 167 5 is_stmt 1 view .LVU123
 168:Core/Src/AB1815.c **** 
 521              		.loc 1 168 1 is_stmt 0 view .LVU124
 522 0040 0020     		movs	r0, #0
 523 0042 03B0     		add	sp, sp, #12
 524              		@ sp needed
 525              	.LVL52:
 526              	.LVL53:
 527              	.LVL54:
 168:Core/Src/AB1815.c **** 
 528              		.loc 1 168 1 view .LVU125
 529 0044 F0BD     		pop	{r4, r5, r6, r7, pc}
 530              	.LVL55:
 531              	.L24:
 152:Core/Src/AB1815.c ****     }
 532              		.loc 1 152 13 is_stmt 1 view .LVU126
 533 0046 FFF7FEFF 		bl	Error_Handler
 534              	.LVL56:
 535 004a EDE7     		b	.L21
 536              	.L25:
 157:Core/Src/AB1815.c ****         {
 537              		.loc 1 157 9 view .LVU127
 157:Core/Src/AB1815.c ****         {
 538              		.loc 1 157 13 is_stmt 0 view .LVU128
 539 004c 0548     		ldr	r0, .L26+8
 540 004e FFF7FEFF 		bl	HAL_I2C_GetError
 541              	.LVL57:
 157:Core/Src/AB1815.c ****         {
 542              		.loc 1 157 12 view .LVU129
 543 0052 0028     		cmp	r0, #0
 544 0054 F0D0     		beq	.L22
 159:Core/Src/AB1815.c ****         }
 545              		.loc 1 159 13 is_stmt 1 view .LVU130
 546 0056 FFF7FEFF 		bl	Error_Handler
 547              	.LVL58:
 548 005a EDE7     		b	.L22
 549              	.L27:
 550              		.align	2
 551              	.L26:
 552 005c 00000000 		.word	hspi1
 553 0060 B80B0000 		.word	3000
 554 0064 00000000 		.word	hi2c1
 555              		.cfi_endproc
 556              	.LFE431:
 558              		.section	.text.writeRegister,"ax",%progbits
 559              		.align	1
 560              		.global	writeRegister
 561              		.syntax unified
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 38


 562              		.code	16
 563              		.thumb_func
 565              	writeRegister:
 566              	.LVL59:
 567              	.LFB430:
 125:Core/Src/AB1815.c ****     return writeRegisters(regAddr, &value, 1, lock);
 568              		.loc 1 125 1 view -0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 8
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 125:Core/Src/AB1815.c ****     return writeRegisters(regAddr, &value, 1, lock);
 572              		.loc 1 125 1 is_stmt 0 view .LVU132
 573 0000 10B5     		push	{r4, lr}
 574              	.LCFI8:
 575              		.cfi_def_cfa_offset 8
 576              		.cfi_offset 4, -8
 577              		.cfi_offset 14, -4
 578 0002 82B0     		sub	sp, sp, #8
 579              	.LCFI9:
 580              		.cfi_def_cfa_offset 16
 581 0004 0C00     		movs	r4, r1
 582 0006 1300     		movs	r3, r2
 583 0008 6A46     		mov	r2, sp
 584              	.LVL60:
 125:Core/Src/AB1815.c ****     return writeRegisters(regAddr, &value, 1, lock);
 585              		.loc 1 125 1 view .LVU133
 586 000a D11D     		adds	r1, r2, #7
 587              	.LVL61:
 125:Core/Src/AB1815.c ****     return writeRegisters(regAddr, &value, 1, lock);
 588              		.loc 1 125 1 view .LVU134
 589 000c 0C70     		strb	r4, [r1]
 126:Core/Src/AB1815.c **** }
 590              		.loc 1 126 5 is_stmt 1 view .LVU135
 126:Core/Src/AB1815.c **** }
 591              		.loc 1 126 12 is_stmt 0 view .LVU136
 592 000e 0122     		movs	r2, #1
 593 0010 FFF7FEFF 		bl	writeRegisters
 594              	.LVL62:
 127:Core/Src/AB1815.c **** 
 595              		.loc 1 127 1 view .LVU137
 596 0014 02B0     		add	sp, sp, #8
 597              		@ sp needed
 598 0016 10BD     		pop	{r4, pc}
 599              		.cfi_endproc
 600              	.LFE430:
 602              		.section	.text.maskRegister,"ax",%progbits
 603              		.align	1
 604              		.global	maskRegister
 605              		.syntax unified
 606              		.code	16
 607              		.thumb_func
 609              	maskRegister:
 610              	.LVL63:
 611              	.LFB432:
 171:Core/Src/AB1815.c ****     bool bResult = false;
 612              		.loc 1 171 1 is_stmt 1 view -0
 613              		.cfi_startproc
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 39


 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 171:Core/Src/AB1815.c ****     bool bResult = false;
 616              		.loc 1 171 1 is_stmt 0 view .LVU139
 617 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 618              	.LCFI10:
 619              		.cfi_def_cfa_offset 24
 620              		.cfi_offset 3, -24
 621              		.cfi_offset 4, -20
 622              		.cfi_offset 5, -16
 623              		.cfi_offset 6, -12
 624              		.cfi_offset 7, -8
 625              		.cfi_offset 14, -4
 626 0002 0600     		movs	r6, r0
 627 0004 1500     		movs	r5, r2
 628 0006 1C1E     		subs	r4, r3, #0
 172:Core/Src/AB1815.c ****     uint32_t primask_bit;
 629              		.loc 1 172 5 is_stmt 1 view .LVU140
 630              	.LVL64:
 173:Core/Src/AB1815.c ****     if (lock)
 631              		.loc 1 173 5 view .LVU141
 174:Core/Src/AB1815.c ****     {
 632              		.loc 1 174 5 view .LVU142
 174:Core/Src/AB1815.c ****     {
 633              		.loc 1 174 8 is_stmt 0 view .LVU143
 634 0008 02D0     		beq	.L30
 176:Core/Src/AB1815.c ****     }
 635              		.loc 1 176 6 is_stmt 1 view .LVU144
 636              	.LBB59:
 637              	.LBI59:
 201:Core/Src/AB1815.c **** {
 638              		.loc 1 201 24 view .LVU145
 639              	.LBB60:
 203:Core/Src/AB1815.c ****     __disable_irq();
 640              		.loc 1 203 5 view .LVU146
 641              	.LBB61:
 642              	.LBI61:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 643              		.loc 2 1204 31 view .LVU147
 644              	.LBB62:
1206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645              		.loc 2 1206 3 view .LVU148
1208:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 646              		.loc 2 1208 3 view .LVU149
 647              		.syntax divided
 648              	@ 1208 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 649 000a EFF31087 		MRS r7, primask
 650              	@ 0 "" 2
 651              	.LVL65:
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 652              		.loc 2 1209 3 view .LVU150
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 653              		.loc 2 1209 3 is_stmt 0 view .LVU151
 654              		.thumb
 655              		.syntax unified
 656              	.LBE62:
 657              	.LBE61:
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 40


 204:Core/Src/AB1815.c ****     return primask_bit;
 658              		.loc 1 204 5 is_stmt 1 view .LVU152
 659              	.LBB63:
 660              	.LBI63:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661              		.loc 2 960 27 view .LVU153
 662              	.LBB64:
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 663              		.loc 2 962 3 view .LVU154
 664              		.syntax divided
 665              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 666 000e 72B6     		cpsid i
 667              	@ 0 "" 2
 668              		.thumb
 669              		.syntax unified
 670              	.LBE64:
 671              	.LBE63:
 205:Core/Src/AB1815.c **** }
 672              		.loc 1 205 5 view .LVU155
 673              	.LVL66:
 674              	.L30:
 205:Core/Src/AB1815.c **** }
 675              		.loc 1 205 5 is_stmt 0 view .LVU156
 676              	.LBE60:
 677              	.LBE59:
 179:Core/Src/AB1815.c **** 
 678              		.loc 1 179 5 is_stmt 1 view .LVU157
 181:Core/Src/AB1815.c ****     if (bResult)
 679              		.loc 1 181 5 view .LVU158
 181:Core/Src/AB1815.c ****     if (bResult)
 680              		.loc 1 181 15 is_stmt 0 view .LVU159
 681 0010 0122     		movs	r2, #1
 682              	.LVL67:
 181:Core/Src/AB1815.c ****     if (bResult)
 683              		.loc 1 181 15 view .LVU160
 684 0012 0021     		movs	r1, #0
 685              	.LVL68:
 181:Core/Src/AB1815.c ****     if (bResult)
 686              		.loc 1 181 15 view .LVU161
 687 0014 3000     		movs	r0, r6
 688              	.LVL69:
 181:Core/Src/AB1815.c ****     if (bResult)
 689              		.loc 1 181 15 view .LVU162
 690 0016 FFF7FEFF 		bl	readRegister
 691              	.LVL70:
 182:Core/Src/AB1815.c ****     {
 692              		.loc 1 182 5 is_stmt 1 view .LVU163
 182:Core/Src/AB1815.c ****     {
 693              		.loc 1 182 8 is_stmt 0 view .LVU164
 694 001a 0028     		cmp	r0, #0
 695 001c 01D0     		beq	.L31
 696              	.LBB65:
 184:Core/Src/AB1815.c **** 
 697              		.loc 1 184 9 is_stmt 1 view .LVU165
 698              	.LVL71:
 186:Core/Src/AB1815.c ****         {
 699              		.loc 1 186 9 view .LVU166
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 41


 186:Core/Src/AB1815.c ****         {
 700              		.loc 1 186 12 is_stmt 0 view .LVU167
 701 001e 002D     		cmp	r5, #0
 702 0020 04D1     		bne	.L33
 703              	.LVL72:
 704              	.L31:
 186:Core/Src/AB1815.c ****         {
 705              		.loc 1 186 12 view .LVU168
 706              	.LBE65:
 192:Core/Src/AB1815.c ****     {
 707              		.loc 1 192 5 is_stmt 1 view .LVU169
 192:Core/Src/AB1815.c ****     {
 708              		.loc 1 192 8 is_stmt 0 view .LVU170
 709 0022 002C     		cmp	r4, #0
 710 0024 01D0     		beq	.L32
 194:Core/Src/AB1815.c ****     }
 711              		.loc 1 194 6 is_stmt 1 view .LVU171
 712              	.LVL73:
 713              	.LBB66:
 714              	.LBI66:
 208:Core/Src/AB1815.c **** {
 715              		.loc 1 208 20 view .LVU172
 716              	.LBB67:
 717              		.loc 1 210 5 view .LVU173
 718              	.LBB68:
 719              	.LBI68:
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 720              		.loc 2 1234 27 view .LVU174
 721              	.LBB69:
 722              		.loc 2 1236 3 view .LVU175
 723              		.syntax divided
 724              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 725 0026 87F31088 		MSR primask, r7
 726              	@ 0 "" 2
 727              	.LVL74:
 728              		.thumb
 729              		.syntax unified
 730              	.L32:
 731              		.loc 2 1236 3 is_stmt 0 view .LVU176
 732              	.LBE69:
 733              	.LBE68:
 734              	.LBE67:
 735              	.LBE66:
 196:Core/Src/AB1815.c **** }
 736              		.loc 1 196 5 is_stmt 1 view .LVU177
 197:Core/Src/AB1815.c **** 
 737              		.loc 1 197 1 is_stmt 0 view .LVU178
 738              		@ sp needed
 739              	.LVL75:
 197:Core/Src/AB1815.c **** 
 740              		.loc 1 197 1 view .LVU179
 741 002a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 742              	.LVL76:
 743              	.L33:
 744              	.LBB70:
 188:Core/Src/AB1815.c ****         }
 745              		.loc 1 188 13 is_stmt 1 view .LVU180
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 42


 188:Core/Src/AB1815.c ****         }
 746              		.loc 1 188 23 is_stmt 0 view .LVU181
 747 002c 0122     		movs	r2, #1
 748 002e 2900     		movs	r1, r5
 749 0030 3000     		movs	r0, r6
 750              	.LVL77:
 188:Core/Src/AB1815.c ****         }
 751              		.loc 1 188 23 view .LVU182
 752 0032 FFF7FEFF 		bl	writeRegister
 753              	.LVL78:
 188:Core/Src/AB1815.c ****         }
 754              		.loc 1 188 23 view .LVU183
 755 0036 F4E7     		b	.L31
 756              	.LBE70:
 757              		.cfi_endproc
 758              	.LFE432:
 760              		.global	i2cWriteAddr
 761              		.section	.data.i2cWriteAddr,"aw"
 764              	i2cWriteAddr:
 765 0000 D2       		.byte	-46
 766              		.global	i2cReadAddr
 767              		.section	.data.i2cReadAddr,"aw"
 770              	i2cReadAddr:
 771 0000 D3       		.byte	-45
 772              		.text
 773              	.Letext0:
 774              		.file 3 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 775              		.file 4 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 776              		.file 5 "Drivers/CMSIS/Device/ST/STM32U0xx/Include/stm32u073xx.h"
 777              		.file 6 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/inc
 778              		.file 7 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_hal_def.h"
 779              		.file 8 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_hal_gpio.h"
 780              		.file 9 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_hal_dma.h"
 781              		.file 10 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_hal_i2c.h"
 782              		.file 11 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_hal_spi.h"
 783              		.file 12 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_ll_dma.h"
 784              		.file 13 "Core\\Inc/AB1815.h"
 785              		.file 14 "Core\\Inc/main.h"
 786              		.file 15 "Drivers/STM32U0xx_HAL_Driver/Inc/stm32u0xx_hal.h"
 787              		.file 16 "<built-in>"
ARM GAS  C:\Users\upo\AppData\Local\Temp\ccWyQyad.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 AB1815.c
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:19     .text.readRegisters:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:25     .text.readRegisters:00000000 readRegisters
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:189    .text.readRegisters:00000054 $d
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:195    .text.readRegister:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:201    .text.readRegister:00000000 readRegister
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:239    .rodata.detectChip.str1.4:00000000 $d
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:246    .text.detectChip:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:252    .text.detectChip:00000000 detectChip
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:330    .text.detectChip:00000040 $d
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:337    .text.readRegister_value:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:343    .text.readRegister_value:00000000 readRegister_value
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:375    .text.writeRegisters:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:381    .text.writeRegisters:00000000 writeRegisters
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:552    .text.writeRegisters:0000005c $d
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:559    .text.writeRegister:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:565    .text.writeRegister:00000000 writeRegister
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:603    .text.maskRegister:00000000 $t
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:609    .text.maskRegister:00000000 maskRegister
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:764    .data.i2cWriteAddr:00000000 i2cWriteAddr
C:\Users\upo\AppData\Local\Temp\ccWyQyad.s:770    .data.i2cReadAddr:00000000 i2cReadAddr

UNDEFINED SYMBOLS
HAL_SPI_Transmit
HAL_SPI_Receive
Error_Handler
hspi1
HAL_GetTick
puts
HAL_GPIO_ReadPin
HAL_I2C_GetError
hi2c1
